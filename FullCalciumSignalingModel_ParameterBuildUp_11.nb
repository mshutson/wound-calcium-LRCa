(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1804618,      35246]
NotebookOptionsPosition[   1768441,      34696]
NotebookOutlinePosition[   1768841,      34712]
CellTagsIndexPosition[   1768798,      34709]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Full Calcium Signaling Model_Parameter Build Up 10", "Title",
 CellChangeTimes->{{3.8436418249281397`*^9, 3.843641842110201*^9}, {
   3.843642114756903*^9, 3.8436421149963865`*^9}, {3.8453274285887814`*^9, 
   3.845327431783778*^9}, {3.845499846191628*^9, 3.845499846360046*^9}, {
   3.8472235241660757`*^9, 3.8472235243034973`*^9}, {3.8478413122983484`*^9, 
   3.8478413124322824`*^9}, {3.8480986474050617`*^9, 3.848098647851677*^9}, 
   3.8484442626507845`*^9, {3.848653785908039*^9, 3.8486537860295086`*^9}, {
   3.851128157129964*^9, 3.8511281573180523`*^9}, {3.852060450973374*^9, 
   3.8520604512482643`*^9}, {3.8535355979831743`*^9, 
   3.8535355999040227`*^9}},ExpressionUUID->"ceccdab5-7538-449a-a72d-\
c0adffb45833"],

Cell[TextData[{
 "This notebook builds off of the LR Model with Calcium \
Model_Tissue_Full_Simplified_06 notebook and singleCellScaleTest notebook. \
The goal is to build up a parameter set for the model that reproduces \
experimental data. The workflow is outlined in the \
\[OpenCurlyDoubleQuote]Parameter Protocol\[CloseCurlyDoubleQuote] word \
document.\n\nVersion 02 put into each model version running a single-cell \
unwounded model to obtain initial conditions given a parameter set. This way, \
for example, if a parameter set would drain the ER before wounding then this \
is actually what the model would start with rather than starting with a \
\[OpenCurlyDoubleQuote]full\[CloseCurlyDoubleQuote] ER upon wounding.\n\n\
Version 03 tries a bidirectional model of SERCA\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["J", "SERCA"], "=", 
    RowBox[{
     SubscriptBox["\[Eta]", "SERCA"], "*", 
     FractionBox[
      RowBox[{
       SuperscriptBox["c", "2"], "-", 
       RowBox[{
        SuperscriptBox["k1", "2"], 
        SuperscriptBox["k2", "2"], 
        SuperscriptBox["cER", "2"]}]}], 
      RowBox[{
       SuperscriptBox["c", "2"], "+", 
       SuperscriptBox["k1", "2"]}]]}]}], TraditionalForm]],ExpressionUUID->
  "d402e551-31b7-4846-88ab-dff09187f043"],
 "\n\nVersion 04 adds the Hill coefficient for the NCX Hill Function to be \
something other than 1. This is to try and let the NCX cut off at a smaller \
calcium level, thus giving a first expansion that decays more slowly as well \
as less PM interference with the second expansion\n\nVersion 05 adds in the \
high damage region with a longer healing time constant to replicate cells \
with high damage as well as looking at randomizing tissue parameters to break \
up radial symmetry.\nUpdate high damage to be based on nuclear membrane \
damage zone predicted by O\[CloseCurlyQuote]Connor et al using initial \
calcium radius.\nUpdate some damage specifications that were repeated between \
the initialization section and the final model section.\n\nVersion 05_02 \
looks at connection to the ablated region rather than microtears that are \
longer to heal with a high-damage region. Testing will involve putting \
equilibrium calcium being 1-2 cell rings past the ablated region \
post-wounding. Also modify random cell-cell variation to pull from absolute \
value of normal distribution rather than resampling negative values. For \
\[Mu]=1. and \[Sigma]=.5 the latter is not much different from a true normal \
distribution.\n\nVersion 06 adds in wound size scaling. This is just an \
option for the full model for testing / sweeping in ACCRE, not for parameter \
testing on computer. Wound size scaling scales\n1) The variables in the LR \
model that relate to wound size (see O\[CloseCurlyQuote]Connor et. al. for \
more details)\n2) The radius of the ablated region and cavitation bubble\n3) \
The horizontal stretch/compression of the \[Mu]T distribution function \
(should be fixed already from #2 above)\n4) The maximum \[Mu]T conductance \
(?)\n\nVersion 07 adds in initial GBP scaling to mimic starvation \
experiments. Like wound scaling, this should just be an option for ACCRE \
scaling.\n\nVersion 08 changes the ACCRE model so that the random parameter \
variation is pulled from a lognormal distribution whose mean is always 1. \
This is to avoid negative values in the multiplier.\nSeems like for normal \
\[Sigma]=.1 we want for log normal ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{"-", 
     SuperscriptBox[".1", "2"]}]}], TraditionalForm]],ExpressionUUID->
  "0f650692-a093-4aa6-9429-804698b2966d"],
 "/2 and \[Sigma]=.1, and for \[Sigma]=.5 we want ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[".4", "2"]}], "/", "2"}]}], TraditionalForm]],
  ExpressionUUID->"45f0daa7-e706-46c8-8c26-7d647f71049b"],
 " and \[Sigma]=.4\n\nVersion 09 changes the ACCRE model so that random \
parameter variation (except for GCaMP and GapJunctions) is pulled from a \
lognormal distribution whose mean is 1 and whose variance is .225. It also \
implements the ability to vary any parameter across the tissue. This is \
mostly for testing purposes right now, but a permanent set of parameters to \
vary across the tissue could be implemented in the future based on these \
tests.\[LineSeparator]Also add in jump the gap section for James\
\[CloseCurlyQuote]s defense.\n\nVersion 10 saves the final 10 frames of \
finding equilibrium position and then uses them for the frames before \
wounding. This is so we can pick up on any oscillating cells. I have also \
tried lowering the tLong value, since when cells were oscillating it was \
taking up a lot of memory in ACCRE.\n\nVersion 11 looks at a different \
control video to compare the first and second expansion to. Also use a wound \
scaled version of previous notebooks to match (scaled like in O\
\[CloseCurlyQuote]Connor et al 2021, wound scaled down 10%)"
}], "Text",
 CellChangeTimes->CompressedData["
1:eJwdxVkoA2AAB/BhlCMlKcmRo5g0SWqT5MsL0mRzvMyD1bJhiZCHvYiGNW2O
nC/OYXiYW9JqbJKy1GKUeHCMPsqE5Pz+e/j1i5c1iOW+HA4njsFN3Pnc1GlK
voMcIvw0HltYbaTEllBRhmd6f9vW2Z0tNZ14XxUR87dAyZDTzcPaFaU9bZES
RXrMATY4Uo5wnjjsBAfrNS5suV+8wHznbFgle2y2NAJn/kTdtrMPJy1u3Kh8
escFGbEfmHdZnt3BnpJYcrCmWFyGta9S7+eSjDoTe6TrQYWTAwStuMioUWOJ
+0v/y74wcYexc+5YWrJESc+ArBZn9d9v4hBB8xa2t4scWLr248QGnYonYYcP
9nnPexb2YPMr0WF+1bW2hh2Y8ODdI4zu3ma3FfAMmJu/mtRopqT1cyoNuywD
g3hi5nQM6zz2O8EqJaY9wSP2ebOGC9k3y2uR+GVk3Cpn1zYbbVht369TsHv9
r+qx35KKH7hBiexMn4UjE6+GbLuUiO5CR/GBh5ixYqd/A/8DeVoQvA==
  "],ExpressionUUID->"ef3dc2be-b4a2-4249-bd11-ba5aad0ec433"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Initializations", "Title",
 CellChangeTimes->{{3.843658679545898*^9, 3.8436586800505514`*^9}, {
  3.8436638502699375`*^9, 
  3.843663858208504*^9}},ExpressionUUID->"a4f4d801-ae74-4cbd-86cf-\
d0f277098e43"],

Cell["Just some things that are common throughout multiple steps", "Text",
 CellChangeTimes->{{3.843663860769696*^9, 3.8436638710555153`*^9}, {
  3.844372959951873*^9, 
  3.8443729624639893`*^9}},ExpressionUUID->"d6ec8ccd-9be9-49e1-91be-\
39736214dc3f"],

Cell[CellGroupData[{

Cell["Parameters", "Chapter",
 CellChangeTimes->{{3.843663305650479*^9, 
  3.843663307151641*^9}},ExpressionUUID->"b619df39-1f05-4984-be55-\
170077d47a3c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Parameters", " ", "that", " ", "will", " ", "be", " ", "varied"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"extParams", "=", 
    RowBox[{"{", 
     RowBox[{
     "r\[Mu]T", ",", "\[Tau]Heal", ",", "rPMCA", ",", "kPMCA", ",", "rSOC", 
      ",", "\[Eta]NCX", ",", "nNCX", ",", "kNCX", ",", "rlkPM", ",", 
      "\[Alpha]", ",", "\[Alpha]0", ",", "kl", ",", "nl", ",", "Kc", ",", 
      "\[Eta]IPR", ",", "\[Eta]SERCA", ",", "kSERCA1", ",", "kSERCA2", ",", 
      "\[Eta]lkER", ",", "Bx", ",", "\[Eta]GJIP3", ",", "\[Eta]GJc", ",", 
      "connectAblated"}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.843663317731903*^9, 3.8436633742802305`*^9}, {
   3.8436639981190324`*^9, 3.8436640074410744`*^9}, {3.8436641987722273`*^9, 
   3.8436642170173426`*^9}, {3.84376016488025*^9, 3.8437602012359486`*^9}, 
   3.843814784046091*^9, {3.844211723445956*^9, 3.844211730609582*^9}, {
   3.845500658223443*^9, 3.8455006748081627`*^9}, {3.847223686904661*^9, 
   3.847223691157668*^9}, {3.8480546091404867`*^9, 3.8480546095970516`*^9}, {
   3.848098794733715*^9, 3.8480988095348897`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"4afdc97d-8d40-46be-aff2-cef2c7e17188"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Parameters", " ", "that", " ", "will", " ", "not", " ", "be", " ", 
    "varied"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"intParams", "=", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"kdeg", "\[Rule]", "1.25"}], " ", 
       RowBox[{"(*", 
        SuperscriptBox["s", 
         RowBox[{"-", "1"}]], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"\[Delta]", "\[Rule]", 
          RowBox[{"1.234", "*", 
           SuperscriptBox["10", 
            RowBox[{"-", "3"}]]}]}], " ", 
         RowBox[{"(*", 
          RowBox[{"dimensionless", ";", " ", 
           RowBox[{
           "one", " ", "of", " ", "3", " ", "options", " ", "given", " ", 
            "by", " ", "Lemon", " ", 
            RowBox[{"(", 
             RowBox[{"also", " ", "rr"}], ")"}]}]}], "*)"}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"\[Nu]", "\[Rule]", 
        RowBox[{"4.3", "*", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]], "*", "15", "*", 
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]]}]}], " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          SuperscriptBox["dm", "3"], ";", 
          RowBox[{
          "Assumes", " ", "a", " ", "circular", " ", "cell", " ", "surface", 
           " ", "of", " ", "4.3", "*", 
           SuperscriptBox["10", 
            RowBox[{"-", "9"}]], " ", 
           SuperscriptBox["dm", "2"], " ", "cell", " ", "height", " ", "of", 
           " ", "15", " ", "\[Mu]m"}]}], ")"}], "*)"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"a0", "\[Rule]", 
        RowBox[{"4.3", "*", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]]}]}], 
       RowBox[{"(*", 
        SuperscriptBox["dm", "2"], "*)"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Tau]d", "\[Rule]", ".001"}], " ", 
       RowBox[{"(*", 
        RowBox[{"s", ";", " ", 
         RowBox[{"really", " ", "fast"}]}], "*)"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"nPMCA", "\[Rule]", "2."}], " ", 
       RowBox[{"(*", 
        RowBox[{"dimensionless", ";", " ", 
         RowBox[{"chosen", " ", "to", " ", "match", " ", "nSERCA"}]}], "*)"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"kPMCA", "\[Rule]", ".45"}], " ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"\[Mu]M", ";", " ", 
            RowBox[{"matching", " ", "Han", " ", "et", " ", 
             RowBox[{"al", ".", " ", "2017"}]}]}], ",", " ", 
           RowBox[{
           "although", " ", "various", " ", "values", " ", "in", " ", 
            "various", " ", "published", " ", "models"}]}], "*)"}], ","}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"cExt", "\[Rule]", "1000."}], " ", 
       RowBox[{"(*", 
        RowBox[{"\[Mu]M", ";", " ", 
         RowBox[{"1", " ", "mM"}]}], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"nSOC", "\[Rule]", "3.8"}], " ", 
       RowBox[{"(*", 
        RowBox[{"dimensionless", ";", " ", 
         RowBox[{
         "from", " ", 
          "\"\<Recent developments in models of calcium signalling\>\""}]}], 
        "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kSOC", "\[Rule]", "187."}], " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"\[Mu]M", " ", 
          RowBox[{"(", 
           RowBox[{"per", " ", "ER", " ", "Volume"}], ")"}]}], ";", " ", 
         RowBox[{
         "from", " ", 
          "\"\<Recent developments in models of calcium signalling\>\""}]}], 
        "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"\[Eta]lkPM", "\[Rule]", ".0000019"}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            SuperscriptBox["s", 
             RowBox[{"-", "1"}]], ".", " ", "Obtained"}], " ", "from", " ", 
           "constant", " ", "flux", " ", "from", " ", "Han", " ", "et", " ", 
           "al", " ", "2017", " ", "where", " ", "I", " ", "have", " ", 
           "assumed", " ", "1", "mM", " ", "external", " ", "calcium", " ", 
           "concentration"}], "*)"}], ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"nNCX", "\[Rule]", "1."}], " ", 
         RowBox[{"(*", 
          RowBox[{
          "Just", " ", "something", " ", "to", " ", "use", " ", "for", " ", 
           "now"}], "*)"}], ","}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"\[Epsilon]", "\[Rule]", 
        RowBox[{"1.", "/", ".185"}]}], " ", 
       RowBox[{"(*", 
        RowBox[{"Dimensionless", ";", " ", 
         RowBox[{
         "ratio", " ", "between", " ", "cyt", " ", "volume", " ", "and", " ", 
          "ER", " ", "volume"}], ";", " ", 
         RowBox[{
         "various", " ", "values", " ", "used", " ", "in", " ", "published", 
          " ", "models"}]}], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"nSERCA", "\[Rule]", "2."}], " ", 
       RowBox[{"(*", "dimensionless", "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"kSERCA", "\[Rule]", ".1"}], " ", 
         RowBox[{"(*", 
          RowBox[{
          "\[Mu]M", " ", "various", " ", "values", " ", "in", " ", "various", 
           " ", "published", " ", "models"}], "*)"}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"d1", "\[Rule]", ".13"}], " ", 
       RowBox[{"(*", "\[Mu]M", "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"d2", "\[Rule]", "1.05"}], " ", 
       RowBox[{"(*", "\[Mu]M", "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"d3", "\[Rule]", "0.943"}], " ", 
       RowBox[{"(*", "\[Mu]M", "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"d5", "\[Rule]", "0.0823"}], " ", 
       RowBox[{"(*", "\[Mu]M", "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"a2", "\[Rule]", "0.2"}], 
       RowBox[{"(*", 
        RowBox[{
         SuperscriptBox["\[Mu]M", 
          RowBox[{"-", "1"}]], 
         SuperscriptBox["s", 
          RowBox[{"-", "1"}]]}], "*)"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Be", "\[Rule]", "150."}], 
       RowBox[{"(*", "\[Mu]M", "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Ke", "\[Rule]", "10."}], 
       RowBox[{"(*", "\[Mu]M", "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Kx", "\[Rule]", ".167"}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"\[Mu]M", ".", " ", "Taken"}], " ", "from", " ", "Chen", " ",
          "et", " ", "al", ".2014"}], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"nx", "\[Rule]", "2.96"}]}], 
      RowBox[{"(*", 
       RowBox[{"dimensionless", ";", " ", 
        RowBox[{"Taken", " ", "from", " ", "Chen", " ", "et", " ", 
         RowBox[{"al", ".", " ", "2014"}]}]}], "*)"}], "\[IndentingNewLine]", 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"woundSizeScale", "=", "1."}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"OBSOLETE", "!"}], " ", "Keep", " ", "set", " ", "to", " ", 
     "1."}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gbpScale", "=", "1."}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.815838321941248*^9, 3.8158383410537834`*^9}, {
   3.815838427549277*^9, 3.8158385704437685`*^9}, {3.8158390613394756`*^9, 
   3.8158391160332136`*^9}, {3.8158392578041625`*^9, 
   3.8158392821366453`*^9}, {3.8158397080048723`*^9, 
   3.8158398271477976`*^9}, {3.815839882193467*^9, 3.8158398829718304`*^9}, {
   3.815839915180708*^9, 3.8158399992393303`*^9}, {3.8158401929278975`*^9, 
   3.815840267451646*^9}, {3.8158404263094163`*^9, 3.8158405965713224`*^9}, 
   3.8158407597588935`*^9, {3.8158409389904704`*^9, 3.8158411094772525`*^9}, 
   3.8158413398375964`*^9, {3.8158413989329567`*^9, 3.8158415202063575`*^9}, {
   3.8158417320964794`*^9, 3.8158417668409443`*^9}, {3.8158417976478877`*^9, 
   3.8158418238006687`*^9}, {3.8158418861195374`*^9, 3.815841982057111*^9}, {
   3.815842146271126*^9, 3.8158421853777094`*^9}, {3.8158426605873394`*^9, 
   3.815842692385991*^9}, {3.8158428023188133`*^9, 3.8158428144680443`*^9}, {
   3.8158429116017036`*^9, 3.815842969271039*^9}, {3.815843003291646*^9, 
   3.81584300337483*^9}, {3.81584345454688*^9, 3.8158434872999945`*^9}, {
   3.8158435342538805`*^9, 3.815843538743166*^9}, {3.8158454604912972`*^9, 
   3.815845472189234*^9}, {3.8158497403767753`*^9, 3.815849776194762*^9}, {
   3.8159985580912104`*^9, 3.81599856558368*^9}, {3.8159996505872445`*^9, 
   3.8159996582377605`*^9}, {3.8170609616682577`*^9, 
   3.8170609617687426`*^9}, {3.817061848741555*^9, 3.817061848869729*^9}, {
   3.817061894047846*^9, 3.8170618942408924`*^9}, 3.817143687204299*^9, {
   3.817143785622053*^9, 3.817143798074232*^9}, {3.8172311629578133`*^9, 
   3.8172311646243505`*^9}, 3.81723124910639*^9, {3.8189612562866383`*^9, 
   3.8189612566011906`*^9}, {3.8247973293304915`*^9, 
   3.8247973302217054`*^9}, {3.8248047787454395`*^9, 3.8248047946402116`*^9}, 
   3.826580585517172*^9, 3.8265806680636563`*^9, {3.826838013993039*^9, 
   3.8268380836721163`*^9}, 3.8279371104482775`*^9, {3.8279377567840567`*^9, 
   3.827937757999545*^9}, {3.8279394589330125`*^9, 3.8279394590694094`*^9}, {
   3.8280198936124988`*^9, 3.828019893836439*^9}, {3.8280199597489243`*^9, 
   3.828019962788883*^9}, {3.8280495708471427`*^9, 3.828049571125351*^9}, {
   3.8302601825087185`*^9, 3.830260182638632*^9}, 3.8320641088798428`*^9, {
   3.832801391858824*^9, 3.8328014129112587`*^9}, {3.835433943827797*^9, 
   3.8354339542461886`*^9}, {3.8378540953197756`*^9, 3.837854102665301*^9}, {
   3.8378565219348993`*^9, 3.837856526743184*^9}, {3.843664018493205*^9, 
   3.8436641845906134`*^9}, {3.843746239532119*^9, 3.8437462448068056`*^9}, {
   3.8437602102973537`*^9, 3.8437602375804615`*^9}, {3.8437691991507015`*^9, 
   3.843769200178752*^9}, {3.8472236790410566`*^9, 3.8472236818405347`*^9}, {
   3.8480141994113364`*^9, 3.8480142552491775`*^9}, {3.848054597032428*^9, 
   3.8480546000092893`*^9}, {3.8484373412286863`*^9, 3.848437348338566*^9}, 
   3.8484376327699113`*^9, {3.8486539653787403`*^9, 3.848653969676859*^9}, {
   3.8486541602516284`*^9, 3.8486541619393616`*^9}, {3.848698087214907*^9, 
   3.848698087731837*^9}, {3.857591965522294*^9, 3.857591996293687*^9}, {
   3.8575926086455436`*^9, 3.857592622897541*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"614521ff-0585-4e06-97db-bd24d2001fe5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Expressions and Differential Equations", "Chapter",
 CellChangeTimes->{{3.8158515469738092`*^9, 
  3.815851556909524*^9}},ExpressionUUID->"cec926d5-4b04-461e-87a8-\
d432671627d5"],

Cell[CellGroupData[{

Cell["IP3 Production", "Subsection",
 CellChangeTimes->{{3.8152560386973553`*^9, 
  3.81525604368824*^9}},ExpressionUUID->"02f25b1f-2727-4c1c-895e-\
c11ba65b5932"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]r", "=", "lr"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rh", "=", 
    RowBox[{"\[Alpha]", "*", 
     RowBox[{"(", 
      FractionBox[
       RowBox[{"c", "[", "t", "]"}], 
       RowBox[{"Kc", "+", 
        RowBox[{"c", "[", "t", "]"}]}]], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[Rho]r", "nl"], 
        RowBox[{
         SuperscriptBox["kl", "nl"], "+", 
         SuperscriptBox["\[Rho]r", "nl"]}]], "+", "\[Alpha]0"}], ")"}]}]}], 
   ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dip3", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ip3", "'"}], "[", "t", "]"}], "\[Equal]", 
    RowBox[{"rh", "-", 
     RowBox[{"kdeg", "*", 
      RowBox[{"ip3", "[", "t", "]"}]}], "+", "jGJIP3"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8152560550298676`*^9, 3.8152560773768845`*^9}, {
   3.8152561318570786`*^9, 3.815256323029227*^9}, {3.8158349235986624`*^9, 
   3.8158349248642845`*^9}, {3.815839894870201*^9, 3.815839897503185*^9}, {
   3.815999583463865*^9, 3.8159995966352935`*^9}, {3.816000664367223*^9, 
   3.816000672487302*^9}, 3.816001659493643*^9, {3.8207457183405914`*^9, 
   3.8207457506523376`*^9}, {3.827939439876664*^9, 3.827939446488903*^9}, {
   3.8279398024494667`*^9, 3.8279398073089166`*^9}, {3.832801168731532*^9, 
   3.8328012247806487`*^9}, {3.8328015184705915`*^9, 3.832801519336308*^9}, {
   3.836508270531184*^9, 3.836508273139526*^9}, {3.84366492259912*^9, 
   3.843664925791477*^9}, {3.8442039314938602`*^9, 3.8442039349097424`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"b3c477bd-09da-48d0-8e06-c6adb5ea44f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scaled PM Fluxes", "Subsection",
 CellChangeTimes->{{3.8158324467976336`*^9, 3.8158324718587246`*^9}, {
  3.8436597738887076`*^9, 
  3.843659775865407*^9}},ExpressionUUID->"b3e9ef74-0df4-4790-ac1b-\
a27c6f04d0fa"],

Cell["\<\
rPMCA = \[Eta]PMCA/\[Eta]NCX
rlkPM = cExt*\[Eta]lkPM/\[Eta]NCX
r\[Mu]T= cExt*\[Eta]\[Mu]T/\[Eta]NCX
rSOC = \[Eta]SOC/\[Eta]NCX\
\>", "Text",
 CellChangeTimes->{{3.8436599658744864`*^9, 
  3.8436600319198437`*^9}},ExpressionUUID->"f24377fb-83e1-40c2-8239-\
2c9799c599cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Time", " ", "dependence", " ", "of", " ", "\[Mu]T", " ", "damage"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fHeal", "=", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox["t", "\[Tau]Heal"]}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", 
          FractionBox["t", "\[Tau]d"]}], "]"}]}], ")"}], "*", 
      RowBox[{"UnitStep", "[", "t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"PMCA", " ", "Flux"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jPMCA", "=", 
     RowBox[{"rPMCA", "*", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"c", "[", "t", "]"}], "nPMCA"], 
       RowBox[{
        SuperscriptBox["kPMCA", "nPMCA"], "+", 
        SuperscriptBox[
         RowBox[{"c", "[", "t", "]"}], "nPMCA"]}]]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"NCX", " ", "Flux"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jNCX", "=", 
     FractionBox[
      SuperscriptBox[
       RowBox[{"c", "[", "t", "]"}], "nNCX"], 
      RowBox[{
       SuperscriptBox["kNCX", "nNCX"], "+", 
       SuperscriptBox[
        RowBox[{"c", "[", "t", "]"}], "nNCX"]}]]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Leak", " ", "current", " ", "across", " ", "the", " ", 
     RowBox[{"PM", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jlkPM", "=", 
     RowBox[{"rlkPM", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"c", "[", "t", "]"}], "cExt"]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"microtear", " ", "flux", " ", "for", " ", "damaged", " ", 
     RowBox[{"cells", ".", " ", "Add"}], " ", "in", " ", "wound", " ", "size",
      " ", 
     RowBox[{"scale", "?"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"j\[Mu]T", "=", 
     RowBox[{"woundSizeScale", "*", "r\[Mu]T", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox[
         RowBox[{"c", "[", "t", "]"}], "cExt"]}], ")"}], "*", "fHeal"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"SOC", " ", "flux"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jSOC", "=", 
     RowBox[{"rSOC", "*", 
      FractionBox[
       SuperscriptBox["kSOC", "nSOC"], 
       RowBox[{
        SuperscriptBox["kSOC", "nSOC"], "+", 
        SuperscriptBox[
         RowBox[{"cER", "[", "t", "]"}], "nSOC"]}]]}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Full", " ", "PM", " ", "Flux"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jPM", "=", 
     RowBox[{"\[Eta]NCX", "*", 
      RowBox[{"(", 
       RowBox[{
       "j\[Mu]T", "+", "jlkPM", "+", "jSOC", "-", "jPMCA", "-", "jNCX"}], 
       ")"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8158324828313303`*^9, 3.8158324856848764`*^9}, {
   3.815832550734825*^9, 3.8158325658753595`*^9}, 3.8158326011327477`*^9, {
   3.8158349292609973`*^9, 3.8158350025985374`*^9}, {3.815835218518749*^9, 
   3.815835227385503*^9}, {3.815835269306774*^9, 3.815835280744418*^9}, {
   3.8158354170248747`*^9, 3.815835471903367*^9}, {3.815835510810119*^9, 
   3.8158355112531605`*^9}, 3.8158373261931453`*^9, {3.8378497541972594`*^9, 
   3.837849785495906*^9}, {3.8436597887841225`*^9, 3.8436598326282864`*^9}, {
   3.8436600098021126`*^9, 3.843660036740322*^9}, {3.8436601911433525`*^9, 
   3.84366019963948*^9}, {3.8484446368366237`*^9, 3.8484446519907885`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"700b637a-9aa5-4080-930c-ff6038bf2f35"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cytosolic Fluxes", "Subsection",
 CellChangeTimes->{{3.815832604359391*^9, 3.8158326167486825`*^9}, {
  3.8158356541998353`*^9, 
  3.815835657939952*^9}},ExpressionUUID->"899530ac-2504-4a16-a4c3-\
bf81aad7b1e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"IPR", " ", "flux", " ", "terms"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Zeta]", "=", 
     RowBox[{"d2", "*", 
      FractionBox[
       RowBox[{
        RowBox[{"ip3", "[", "t", "]"}], "+", "d1"}], 
       RowBox[{
        RowBox[{"ip3", "[", "t", "]"}], "+", "d3"}]]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Tau]h", "=", 
     FractionBox["1", 
      RowBox[{"a2", "*", 
       RowBox[{"(", 
        RowBox[{"\[Zeta]", "+", 
         RowBox[{"c", "[", "t", "]"}]}], ")"}]}]]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"h\[Infinity]", "=", 
     FractionBox["\[Zeta]", 
      RowBox[{"\[Zeta]", "+", 
       RowBox[{"c", "[", "t", "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m\[Infinity]", "=", 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"ip3", "[", "t", "]"}], 
        RowBox[{"d1", "+", 
         RowBox[{"ip3", "[", "t", "]"}]}]], ")"}], "*", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{"c", "[", "t", "]"}], 
        RowBox[{"d5", "+", 
         RowBox[{"c", "[", "t", "]"}]}]], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dh", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"h", "'"}], "[", "t", "]"}], "\[Equal]", 
      FractionBox[
       RowBox[{"h\[Infinity]", "-", 
        RowBox[{"h", "[", "t", "]"}]}], "\[Tau]h"]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.815835676764573*^9, 3.815835737412215*^9}, {
  3.815835820125958*^9, 3.8158358473930717`*^9}, {3.815836091042704*^9, 
  3.8158360963482227`*^9}, {3.8158373833331056`*^9, 3.815837405261939*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"9d285788-22b2-449d-8c07-901181522b5a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"IPR", " ", "flux"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"jIPR", "=", 
     RowBox[{"\[Eta]IPR", "*", 
      SuperscriptBox["m\[Infinity]", "3"], "*", 
      SuperscriptBox[
       RowBox[{"h", "[", "t", "]"}], "3"], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"cER", "[", "t", "]"}], "-", 
        RowBox[{"c", "[", "t", "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"leak", " ", "flux"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jlkER", "=", 
     RowBox[{"\[Eta]lkER", "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"cER", "[", "t", "]"}], "-", 
        RowBox[{"c", "[", "t", "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"SERCA", " ", "flux"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jSERCA", "=", 
     RowBox[{"\[Eta]SERCA", "*", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"c", "[", "t", "]"}], "nSERCA"], "-", 
        RowBox[{
         SuperscriptBox["kSERCA1", "nSERCA"], "*", 
         SuperscriptBox["kSERCA2", "nSERCA"], "*", 
         SuperscriptBox[
          RowBox[{"cER", "[", "t", "]"}], "nSERCA"]}]}], 
       RowBox[{
        SuperscriptBox["kSERCA1", "nSERCA"], "+", 
        SuperscriptBox[
         RowBox[{"c", "[", "t", "]"}], "nSERCA"]}]]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Total", " ", "ER", " ", "Flux"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jER", "=", 
     RowBox[{"jIPR", "+", "jlkER", "-", "jSERCA"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.815835669259734*^9, 3.8158356716529107`*^9}, {
  3.8158360991798077`*^9, 3.8158362337920303`*^9}, {3.84366024804422*^9, 
  3.8436602702645226`*^9}, {3.845500168876327*^9, 3.845500203384384*^9}, {
  3.845673538661023*^9, 3.8456735429713697`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"9947b9c5-e285-4ccc-8982-e41d59aab8d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calcium DEQs", "Subsection",
 CellChangeTimes->{{3.8158367088827443`*^9, 
  3.81583671151746*^9}},ExpressionUUID->"9d215c54-df61-4f61-92ae-\
50ebfef40602"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Rapid", " ", "Buffer", " ", "Terms"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]", "=", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        FractionBox[
         RowBox[{"Ke", "*", "Be"}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"Ke", "+", 
            RowBox[{"c", "[", "t", "]"}]}], ")"}], "2"]], "+", 
        FractionBox[
         RowBox[{"nx", "*", 
          SuperscriptBox["Kx", "nx"], "*", "Bx", "*", 
          SuperscriptBox[
           RowBox[{"c", "[", "t", "]"}], 
           RowBox[{"nx", "-", "1"}]]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["Kx", "nx"], "+", 
            SuperscriptBox[
             RowBox[{"c", "[", "t", "]"}], "nx"]}], ")"}], "2"]]}], ")"}], 
      RowBox[{"-", "1"}]]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Modified", " ", "to", " ", "account", " ", "for", " ", "Hill", " ", 
     "kinetics", " ", "for", " ", "general", " ", 
     RowBox[{"n", ".", " ", "Derived"}], " ", "by", " ", "me", " ", "with", 
     " ", "cooperative", " ", "binding", " ", "and", " ", "rapid", " ", 
     "buffer", " ", "assumption"}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dc", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"c", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"\[Beta]", "*", 
       RowBox[{"(", 
        RowBox[{"jER", "+", "jPM", "+", "jGJc"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dcER", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"cER", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"\[Epsilon]", "*", 
       RowBox[{"-", "jER"}]}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8158324828313303`*^9, 3.8158324856848764`*^9}, {
   3.815832550734825*^9, 3.8158325658753595`*^9}, 3.8158326011327477`*^9, {
   3.8158349060467634`*^9, 3.8158349061638565`*^9}, {3.815836768731755*^9, 
   3.815836812968828*^9}, {3.81583705624529*^9, 3.815837065491145*^9}, {
   3.8158371035482163`*^9, 3.8158371412719154`*^9}, {3.8158372130518217`*^9, 
   3.815837276301927*^9}, {3.8207457661705923`*^9, 3.8207457724049883`*^9}, {
   3.837854025889569*^9, 3.837854028614565*^9}, {3.843660348116268*^9, 
   3.8436603739324665`*^9}, {3.8436644950627513`*^9, 
   3.8436644970015345`*^9}, {3.8442039791585093`*^9, 
   3.8442039822646465`*^9}, {3.8442044363899183`*^9, 
   3.8442045010971327`*^9}, {3.845725043843261*^9, 3.8457250494704533`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"59740d76-d8b0-42e3-a975-95ef3c00b3eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Just", " ", "values", " ", "to", " ", "start", " ", 
    RowBox[{"with", ".", " ", "When"}], " ", "initial", " ", "values", " ", 
    "are", " ", "actually", " ", "important", " ", "we", " ", "will", " ", 
    "just", " ", "run", " ", "the", " ", "unwounded", " ", "model", " ", 
    "for", " ", "a", " ", "long", " ", 
    RowBox[{"time", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"cEQ", "=", ".1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cEREQ", "=", "200."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ip3EQ", "=", ".01"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hEQ", "=", ".67"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initc", "=", 
     RowBox[{
      RowBox[{"c", "[", "0", "]"}], "\[Equal]", "cEQ"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initcER", "=", 
     RowBox[{
      RowBox[{"cER", "[", "0", "]"}], "\[Equal]", "cEREQ"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initIP3", "=", 
     RowBox[{
      RowBox[{"ip3", "[", "0", "]"}], "\[Equal]", "ip3EQ"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"inith", "=", 
     RowBox[{
      RowBox[{"h", "[", "0", "]"}], "\[Equal]", "hEQ"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8436637908109145`*^9, 3.843663811211635*^9}, {
  3.843664482383164*^9, 3.8436645175736213`*^9}, {3.8442045030526543`*^9, 
  3.8442045264831944`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"f995a5ff-7d75-4422-a398-97e453825557"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deqns", "=", 
   RowBox[{"{", 
    RowBox[{
    "dc", ",", "dcER", ",", "dip3", ",", "dh", ",", "initc", ",", "initcER", 
     ",", "initIP3", ",", "inith"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8436645410688515`*^9, 3.843664579913472*^9}, {
  3.843814860716273*^9, 3.84381486615195*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"fc4aae85-0201-4037-af22-5fefcf8729e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calcium - GCaMP fluorescence conversion", "Chapter",
 CellChangeTimes->{{3.843814793756157*^9, 
  3.8438148026196833`*^9}},ExpressionUUID->"972e10d1-2dc3-44ff-a395-\
b4977dc12a71"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c0", "=", ".1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minInt", "=", "0.09971653246990764`"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxInt", "=", "0.14249861653280668`"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "does", " ", "not", " ", "work", " ", "for", 
    " ", "fluorescence", " ", "values", " ", "larger", " ", "than", " ", 
    "maxInt"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FtoC", "[", "f_", "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"maxInt", "-", "minInt"}], ")"}], "*", 
         SuperscriptBox["c0", "nx"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"f", "-", "minInt"}], ")"}], "*", 
         SuperscriptBox["Kx", "nx"]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"maxInt", "-", "f"}], ")"}]}], ")"}], 
    RowBox[{"1", "/", "nx"}]], "/.", "intParams"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CtoF", "[", "c_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["c", "nx"], "-", 
         SuperscriptBox["c0", "nx"]}], ")"}], "*", "maxInt"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["c0", "nx"], "+", 
         SuperscriptBox["Kx", "nx"]}], ")"}], "*", "minInt"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["c", "nx"], "+", 
      SuperscriptBox["Kx", "nx"]}], ")"}]}], "/.", "intParams"}]}]}], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"93f86f7f-d777-4bdc-a1c1-a365ba0b891e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get new Initial Conditions", "Chapter",
 CellChangeTimes->{{3.8453253361047335`*^9, 
  3.845325340424285*^9}},ExpressionUUID->"4082ea02-b3c5-4c1c-84ac-\
b806833f0696"],

Cell["\<\
Function that gets the new initial conditions for a given parameter set. I \
will just take a single-cell model with no damage and run it for a long time. \
This will be used for each of the below models. In the cases of a \
multiple-cell model, these initial conditions will be applied to every cell. \
This might not be exact based on scaling that could be present, but I think \
it is close enough, and it would be faster than running the entire multi-cell \
model for a long time.\
\>", "Text",
 CellChangeTimes->{{3.8453253422416506`*^9, 3.845325450476407*^9}, {
  3.845325682966709*^9, 
  3.845325694190973*^9}},ExpressionUUID->"32a87f90-3d8e-4fa4-b297-\
6dc07bc94b36"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tLong", "=", "1000."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newInits", "=", "\[IndentingNewLine]", 
   RowBox[{"ParametricNDSolveValue", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"deqns", "/.", "intParams"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"r\[Mu]T", "\[Rule]", "0."}], ",", 
        RowBox[{"lr", "\[Rule]", "0."}], ",", 
        RowBox[{"jGJc", "\[Rule]", "0."}], ",", 
        RowBox[{"jGJIP3", "\[Rule]", "0."}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"x", "[", "tLong", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{"c", ",", "cER", ",", "ip3", ",", "h"}], "}"}]}], "}"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tLong"}], "}"}], ",", 
     "\[IndentingNewLine]", "extParams"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.845325695729767*^9, 3.845325804989468*^9}, {
  3.8453260952774243`*^9, 3.8453261955671973`*^9}, {3.8453263513336964`*^9, 
  3.845326380534356*^9}, {3.845326426948482*^9, 3.8453264353261814`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"597b36dd-86ed-432b-b18d-3622b452b0b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "produces", " ", "a", " ", "set", " ", "of", " ", "rules", " ", "to", " ", 
    "replace", " ", "the", " ", "default", " ", "initial", " ", 
    RowBox[{"conditions", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getNewInits", "[", 
    RowBox[{"params_", "?", "AssociationQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "cER", ",", "ip3", ",", "h"}], "}"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
          "val_"}], ")"}], "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"c", ",", "cER", ",", "ip3", ",", "h"}], "}"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", "0", "]"}], "\[Equal]", 
          RowBox[{"#", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "#"}]}], "}"}]}], "]"}], "&"}], "@", 
    RowBox[{"(", 
     RowBox[{"newInits", "@@", 
      RowBox[{"(", 
       RowBox[{"params", "/@", "extParams"}], ")"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8453266910515957`*^9, 3.8453268200911865`*^9}, {
   3.845327260578536*^9, 3.845327312936417*^9}, {3.8453273465900755`*^9, 
   3.84532735776103*^9}, {3.8453281346972904`*^9, 3.845328254688907*^9}, {
   3.8453287602931137`*^9, 3.845328852691535*^9}, {3.8453288925415025`*^9, 
   3.845328963866908*^9}, {3.8453290491593733`*^9, 3.845329054784297*^9}, {
   3.845329164355159*^9, 3.845329231014386*^9}, {3.845329311580245*^9, 
   3.845329411786257*^9}, 3.8453295339936776`*^9, {3.845329934164631*^9, 
   3.845329947223606*^9}, {3.845330021744728*^9, 3.845330023131112*^9}, {
   3.845330171335147*^9, 3.8453301954096107`*^9}, {3.8453306331587453`*^9, 
   3.8453306580581846`*^9}, 3.8453307693728127`*^9, {3.8453309354284673`*^9, 
   3.8453309538960657`*^9}, {3.845331141936887*^9, 3.8453311502759323`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"2c80ed5d-8ee1-40f5-99a3-6e914c56a768"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Mu]T Distribution", "Chapter",
 CellChangeTimes->{{3.84420371814859*^9, 
  3.844203722363057*^9}},ExpressionUUID->"35db8b23-79f4-4b66-9357-\
9661772ad1f1"],

Cell["\<\
This section will define the \[Mu]T distribution function that will be used \
to determine \[Eta]\[Mu]T for each cell ring depending on its distance from \
the wound center\
\>", "Text",
 CellChangeTimes->{{3.8018544914109125`*^9, 3.8018545336186867`*^9}, 
   3.8018548564671173`*^9},ExpressionUUID->"93df425d-9992-4377-9fa3-\
e53fff1b17bf"],

Cell[CellGroupData[{

Cell["Ring radius finder", "Subsection",
 CellChangeTimes->{{3.8018549788073206`*^9, 
  3.8018549870841765`*^9}},ExpressionUUID->"2a354f94-9672-43ff-824c-\
e8beb7b9a9bc"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"video", "=", 
    RowBox[{
    "Import", "[", 
     "\"\<C:\\\\Users\\\\Greg Stevens\\\\Box\\\\Research Backup\\\\Current \
Work\\\\NewCalciumModel\\\\Full Model\\\\Stevens et \
al\\\\Figs\\\\Other\\\\variousControlVideos\\\\14April19_AG_R3_x_w1118_S5.tif\
\>\"", "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.830383699120612*^9, 3.8303837071954093`*^9}, {
   3.830383752189603*^9, 3.830383756275848*^9}, 3.835437263081662*^9, {
   3.8381104653899016`*^9, 3.838110469749982*^9}, {3.838110585696266*^9, 
   3.8381105883016453`*^9}, {3.844978111078025*^9, 3.84497811324553*^9}, {
   3.8449781728889523`*^9, 3.844978177781469*^9}, {3.844978241188652*^9, 
   3.8449782440828447`*^9}, {3.84740131103119*^9, 3.8474013138500104`*^9}, {
   3.847453069563148*^9, 3.847453073000849*^9}, {3.8479333372339897`*^9, 
   3.847933339547608*^9}, {3.847933493045225*^9, 3.8479334981450815`*^9}, {
   3.848015648589322*^9, 3.848015650731329*^9}, {3.848015916034032*^9, 
   3.8480159184944496`*^9}, {3.8480184104881544`*^9, 
   3.8480184139131527`*^9}, {3.848018611410635*^9, 3.848018613990674*^9}, {
   3.848057623759617*^9, 3.8480576258773537`*^9}, {3.8480951047640815`*^9, 
   3.8480951079842825`*^9}, {3.8484433390939045`*^9, 3.848443341584955*^9}, {
   3.8484441612577877`*^9, 3.8484441639509964`*^9}, {3.8517706372788677`*^9, 
   3.8517706396145296`*^9}, {3.851802423665238*^9, 3.8518024264053526`*^9}, {
   3.8575947546240664`*^9, 3.857594760030809*^9}, {3.8575964049213552`*^9, 
   3.857596404935345*^9}, {3.8575974302304854`*^9, 3.857597430647744*^9}, {
   3.857724100831668*^9, 3.857724103571976*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"3990f7a0-79b2-4fd2-881a-d200d96e9885"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Avg", " ", "cell", " ", "diamater", " ", "in", " ", "\[Mu]m"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[CapitalDelta]x", "=", "7.3"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.801855001906968*^9, 3.8018551946882014`*^9}, {
  3.8018554860417876`*^9, 3.801855505211877*^9}, {3.830352949800171*^9, 
  3.830352949874075*^9}, {3.830383802917716*^9, 3.8303838045017166`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"e3d6fd4e-fd21-438f-ab2b-d5b3e1ec888e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ImageAdjust", "[", 
         RowBox[{
          RowBox[{"video", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"c", ",", "b"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{"{", 
            RowBox[{"Yellow", ",", 
             RowBox[{"Circle", "[", 
              RowBox[{"#", ",", "rad"}], "]"}], ",", "Red", ",", 
             RowBox[{"Point", "[", "#", "]"}]}], "}"}], "]"}], "&"}], "@", 
         RowBox[{"{", 
          RowBox[{"260", ",", "240"}], "}"}]}]}], "\[IndentingNewLine]", 
       "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Pixels\>\"", ",", "\"\<\[Mu]m\>\"", ",", 
            "\"\<cells (rounded)\>\"", ",", "\"\<time (s)\>\""}], "}"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Round", "[", 
             RowBox[{"#", ",", ".01"}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{"rad", ",", 
             RowBox[{"rad", "/", "1.6"}], ",", 
             RowBox[{
              RowBox[{"Round", "[", 
               RowBox[{"rad", "/", 
                RowBox[{"(", 
                 RowBox[{"1.6", "*", "\[CapitalDelta]x"}], ")"}]}], "]"}], 
              "+", "1"}], ",", 
             RowBox[{"2.14", "*", 
              RowBox[{"(", 
               RowBox[{"i", "-", "67"}], ")"}]}]}], "}"}]}]}], "}"}], ",", 
        RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], "\[IndentingNewLine]",
      "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{"Length", "@", "video"}], ",", "1"}], "}"}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "0", ",", "1"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", "1"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rad", ",", "50"}], "}"}], ",", "5", ",", "256"}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.801855196651983*^9, 3.801855292401498*^9}, {
   3.8018553536160555`*^9, 3.8018554092135167`*^9}, {3.801855460836446*^9, 
   3.801855474895712*^9}, {3.801855550502738*^9, 3.80185561086524*^9}, {
   3.8018556611559954`*^9, 3.8018556709349213`*^9}, {3.8020027290805902`*^9, 
   3.80200275496551*^9}, {3.802002860385016*^9, 3.8020028708185368`*^9}, {
   3.83038383828174*^9, 3.830383946702591*^9}, {3.830384091715926*^9, 
   3.830384094827396*^9}, {3.830384137929338*^9, 3.8303842038026853`*^9}, {
   3.830384238474338*^9, 3.830384264990472*^9}, 3.835437268345193*^9, {
   3.838110473537572*^9, 3.8381104761689467`*^9}, {3.8381105908041577`*^9, 
   3.838110593433264*^9}, {3.8449782468783383`*^9, 3.8449782488258734`*^9}, {
   3.8449785822814736`*^9, 3.844978610029911*^9}, {3.844978640912822*^9, 
   3.8449786612254963`*^9}, {3.8449803289777837`*^9, 3.844980331455429*^9}, {
   3.847401318469019*^9, 3.8474013203278656`*^9}, {3.8474530793466444`*^9, 
   3.847453082165636*^9}, {3.847933343113022*^9, 3.8479333450028872`*^9}, {
   3.8479335951918793`*^9, 3.847933599352237*^9}, 3.847933712992439*^9, {
   3.8480156952505913`*^9, 3.848015696804082*^9}, {3.8480159114039516`*^9, 
   3.8480159136239595`*^9}, {3.8480184177084503`*^9, 
   3.8480184193694224`*^9}, {3.8480186059581795`*^9, 
   3.8480186083917418`*^9}, {3.8480576287786827`*^9, 
   3.8480576305473423`*^9}, {3.848095098823052*^9, 3.848095102113905*^9}, {
   3.8484433517989244`*^9, 3.8484433534599085`*^9}, {3.8484441668653164`*^9, 
   3.84844416911477*^9}, {3.8517706446170983`*^9, 3.8517706468017445`*^9}, {
   3.8517708119026504`*^9, 3.851770812431752*^9}, {3.85180241920747*^9, 
   3.851802421340762*^9}, {3.8575975465023727`*^9, 3.857597560355229*^9}, {
   3.8575976213274755`*^9, 3.8575976595625544`*^9}, {3.8577241058435717`*^9, 
   3.85772410842298*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"ce22614a-e8f1-4335-99a5-765ff166ac29"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Ring", " ", "info", " ", "pulled", " ", "from", " ", "Manipuate", " ", 
    "above"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"distanceToRing", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Round", "[", 
      RowBox[{"x", "/", "\[CapitalDelta]x"}], "]"}], "+", "1"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ringToDistance", "[", "r_", "]"}], ":=", 
    RowBox[{"\[CapitalDelta]x", "*", 
     RowBox[{"(", 
      RowBox[{"r", "-", "1"}], ")"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cavRadMicrons", "=", 
     RowBox[{"51.25", "*", "woundSizeScale"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ringsDamaged", "=", 
     RowBox[{"distanceToRing", "[", "cavRadMicrons", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ablatedRadius", "=", 
     RowBox[{"24.5", "*", "woundSizeScale"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ringsAblated", "=", 
     RowBox[{"distanceToRing", "[", "ablatedRadius", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numRingsFirstExp", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numRingsMax", "=", "21"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxRad2ndExp", "=", "111."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxRadFlares", "=", "160."}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Pull", " ", "from", " ", 
     RowBox[{"O", "'"}], "Connor", " ", "et", " ", "al", " ", "Zones", " ", 
     "of", " ", "Damage", " ", 
     RowBox[{"paper", ".", " ", "Assume"}], " ", "\"\<high damage\>\"", " ", 
     "region", " ", "is", " ", "nuclear", " ", "envelope", " ", 
     RowBox[{"breakdown", "?"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zoneEqn", "=", 
     RowBox[{"rPM", "\[Equal]", 
      RowBox[{
       RowBox[{"1.1", "*", "rNM"}], "+", "14"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"radiusHighDamage", "=", 
     RowBox[{"rNM", "/.", 
      RowBox[{"First", "@", 
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"zoneEqn", "/.", 
          RowBox[{"rPM", "\[Rule]", "cavRadMicrons"}]}], ",", "rNM"}], 
        "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ringsHighDamage", "=", 
     RowBox[{
      RowBox[{"Round", "[", 
       RowBox[{"radiusHighDamage", "/", "\[CapitalDelta]x"}], "]"}], "+", 
      "1"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8018548733636217`*^9, 3.8018549355619783`*^9}, {
   3.802002932312334*^9, 3.802002952315906*^9}, {3.802006329018116*^9, 
   3.80200633256991*^9}, {3.830384361679187*^9, 3.8303843626557736`*^9}, {
   3.8304202783302217`*^9, 3.8304202787329054`*^9}, {3.8304203384295883`*^9, 
   3.8304203527739697`*^9}, {3.8304213032185044`*^9, 3.830421306063964*^9}, {
   3.8304214559483547`*^9, 3.830421494392605*^9}, {3.830421958834987*^9, 
   3.8304219602216315`*^9}, {3.830423874705577*^9, 3.830423880002611*^9}, {
   3.8317309288014517`*^9, 3.831730940184588*^9}, {3.831730981837473*^9, 
   3.8317309834116306`*^9}, {3.8321063534920297`*^9, 3.832106361275111*^9}, {
   3.8474023739666805`*^9, 3.8474023741523457`*^9}, {3.8479276657138443`*^9, 
   3.8479277029144144`*^9}, {3.8479278021770477`*^9, 
   3.8479279439298697`*^9}, {3.8479281646768713`*^9, 3.8479281823454294`*^9}, 
   3.8479335151063576`*^9, {3.8480140248524723`*^9, 3.8480140253940773`*^9}, {
   3.8480140972696085`*^9, 3.8480141028615413`*^9}, {3.8480141418161716`*^9, 
   3.848014142871977*^9}, {3.8480158866810617`*^9, 3.8480158868090153`*^9}, {
   3.8484379644036655`*^9, 3.848437966019707*^9}, {3.84844328893736*^9, 
   3.8484433107830644`*^9}, {3.8484434569879923`*^9, 
   3.8484434786355515`*^9}, {3.857597945760662*^9, 3.8575979689738293`*^9}, {
   3.857598009183866*^9, 3.857598029960128*^9}, {3.8575980755633445`*^9, 
   3.8575980772868834`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"e9c97ad8-f772-4c2d-b6da-7f5436860c80"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[Mu]T Distribution from data", "Subsection",
 CellChangeTimes->{{3.8018559143161163`*^9, 
  3.8018559207900934`*^9}},ExpressionUUID->"3623d3be-a3e7-480c-bda5-\
261efa9b2cf1"],

Cell["\<\
Use work by Andrew Pumford to estimate some \[Eta]\[Mu]T Function to use\
\>", "Text",
 CellChangeTimes->{{3.801855928944027*^9, 
  3.8018559521456137`*^9}},ExpressionUUID->"d09cf381-9b92-4b3e-abf1-\
713d30e52665"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]TDistData", "=", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\<C:\\\\Users\\\\Greg Stevens\\\\Box\\\\Research Backup\\\\Current \
Work\\\\NewCalciumModel\\\\microtearDistribution_Andrew_dataPoints.xlsx\>\"", 
     "]"}], "//", "First"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]TDistDataScaled", "=", 
   RowBox[{"MapAt", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Rescale", "[", 
       RowBox[{"#", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "@", "#"}], ",", 
            RowBox[{"Max", "@", "#"}]}], "}"}], "&"}], "@", 
         RowBox[{"\[Mu]TDistData", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", "2"}], "]"}], "]"}]}]}], "]"}], "&"}], ",", 
     "\[Mu]TDistData", ",", 
     RowBox[{"{", 
      RowBox[{";;", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8018559551767282`*^9, 3.8018560099477043`*^9}, {
  3.801915754576841*^9, 3.8019157757197056`*^9}, {3.8019158231045113`*^9, 
  3.8019159623679934`*^9}, {3.8395853750320473`*^9, 3.8395853810135984`*^9}, {
  3.848444436773693*^9, 3.8484444544183083`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"ccff235f-311c-4b5f-bf29-254dab0caf0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Try", " ", "fitting", " ", "the", " ", "part", " ", "after", " ", "the", 
    " ", "initial", " ", "rise", " ", "to", " ", "a", " ", "sigmoid"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"\[Mu]TDistDataScaled", "[", 
        RowBox[{"[", 
         RowBox[{"i", ";;"}], "]"}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "Automatic"}], "}"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "@", "\[Mu]TDistData"}], ",", "1"}], "}"}]}], "]"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.801914803926051*^9, 3.8019148691935043`*^9}, {
  3.801915996994481*^9, 3.8019159976110983`*^9}, {3.832106372771617*^9, 
  3.832106375254637*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"83d256f3-30a8-4086-b8bb-c5ce67f2fb01"],

Cell[BoxData[
 RowBox[{
  RowBox[{"formFrame", "=", "10"}], ";"}]], "Input",
 CellChangeTimes->{{3.802000746945001*^9, 3.8020007509495134`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"3aecf859-e2c9-4a1a-8d93-56d414fdbc4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Mu]TFit", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{
     RowBox[{"\[Mu]TDistDataScaled", "[", 
      RowBox[{"[", 
       RowBox[{"formFrame", ";;"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "*", 
         RowBox[{"Erf", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"x", "-", "x0"}], ")"}]}], "/", "\[Chi]"}], "]"}]}], "+",
         "b"}], ",", 
       RowBox[{"\[Chi]", ">", "0"}], ",", 
       RowBox[{"a", ">", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Chi]", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x0", ",", "46"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", ".5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"b", ",", ".5"}], "}"}]}], "}"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]TDistParams", "=", 
   RowBox[{"\[Mu]TFit", "[", "\"\<BestFitParameters\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8019148920443106`*^9, 3.801914900521042*^9}, {
  3.80191540099051*^9, 3.8019154030472307`*^9}, {3.8019154341179276`*^9, 
  3.801915474241002*^9}, {3.801915507323448*^9, 3.801915520621187*^9}, {
  3.801915620484147*^9, 3.8019156551496134`*^9}, {3.801916000240465*^9, 
  3.8019160008970575`*^9}, {3.80191626670692*^9, 3.801916273201887*^9}, {
  3.8020007536798162`*^9, 3.8020007548311024`*^9}, {3.8020035504193335`*^9, 
  3.802003555358264*^9}, {3.802084261115344*^9, 3.802084312642336*^9}, {
  3.80208952961969*^9, 3.802089530851924*^9}, {3.8378541229125853`*^9, 
  3.8378541231371546`*^9}, {3.8442037494578695`*^9, 3.844203757613749*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"1a97bcdb-f0ad-4a5c-952d-ce98921ab386"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "fitting", " ", "function", " ", "value", " ", "at", " ", 
    "first", " ", "0", " ", "point", " ", "in", " ", 
    RowBox[{"Andrew", "'"}], "s", " ", "data"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"cavRadPixels", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"FirstPosition", "[", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"formFrame", ";;"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
              RowBox[{"y", "<", ".01"}]}]}], "]"}], "+", "formFrame", "-", 
           "1"}], "]"}], "]"}], "&"}], "@", "\[Mu]TDistDataScaled"}], ")"}], 
     "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8020006722953787`*^9, 3.8020007147040305`*^9}, {
   3.802000760859358*^9, 3.802000813842441*^9}, {3.802000893959668*^9, 
   3.8020009448630443`*^9}, {3.8020010276805925`*^9, 3.802001065284233*^9}, {
   3.802001145589342*^9, 3.8020011692236595`*^9}, {3.8020025307188225`*^9, 
   3.8020025482509336`*^9}, 3.8378541318892937`*^9},
 CellLabel->"In[66]:=",ExpressionUUID->"24819d71-aee9-4e32-af89-692a88228cf1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Right", " ", "now", " ", "just", " ", "do", " ", "a", " ", "horizontal", 
    " ", 
    RowBox[{"dilation", " ", "/", " ", "conraction"}], " ", "to", " ", 
    "\"\<convert\>\"", " ", "between", " ", "pixel", " ", "values", " ", 
    "and", " ", 
    RowBox[{"microns", ".", " ", "Use"}], " ", "the", " ", "cavitation", " ", 
    "radius", " ", "from", " ", 
    RowBox[{"Andrew", "'"}], "s", " ", "data", " ", 
    RowBox[{"(", 
     RowBox[{
     "pixel", " ", "distance", " ", "where", " ", "the", " ", "function", " ",
       "falls", " ", "below", " ", "some", " ", "arbitrary", " ", 
      "threshold"}], ")"}], " ", "and", " ", "the", " ", "video", " ", 
    RowBox[{"(", 
     RowBox[{
     "radius", " ", "of", " ", "the", " ", "initial", " ", "calcium", " ", 
      "influx"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Mu]TDist", "[", "x_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", "\[LessEqual]", "cavRadMicrons"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"a", "*", 
          RowBox[{"Erf", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"x", "*", 
                RowBox[{"(", 
                 RowBox[{"cavRadPixels", "/", "cavRadMicrons"}], ")"}]}], "-",
                "x0"}], ")"}]}], "/", "\[Chi]"}], "]"}]}], "+", "b"}], ")"}], 
       "/.", "\[Mu]TDistParams"}], ",", "0."}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8020034783700933`*^9, 3.8020034818719177`*^9}, {
   3.8020035747432203`*^9, 3.802003601760436*^9}, {3.802003658229355*^9, 
   3.802003684998725*^9}, {3.8020037609695263`*^9, 3.802003766327196*^9}, {
   3.8020050505393767`*^9, 3.8020050575390286`*^9}, {3.802005451439315*^9, 
   3.802005528142664*^9}, {3.8020065497979565`*^9, 3.8020065620333557`*^9}, {
   3.8020896323648596`*^9, 3.8020896609391084`*^9}, {3.802089728550106*^9, 
   3.8020897524942274`*^9}, 3.8378541367376866`*^9, {3.8412390068306932`*^9, 
   3.841239049080018*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"5898463f-38b6-4ffd-9c8c-cc7f09f1afd4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get \[Mu]T parameter for each ring", "Subsection",
 CellChangeTimes->{{3.8020056010573654`*^9, 
  3.8020056082249107`*^9}},ExpressionUUID->"fdd216d4-167c-4333-b96a-\
a88018d25791"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numRings", "=", "numRingsMax"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Denote", " ", "ring", " ", "position", " ", "as", " ", "the", " ", 
     "middle", " ", "of", " ", "the", " ", 
     RowBox[{"ring", ".", " ", "Note"}], " ", "that", " ", "the", " ", 
     "first", " ", 
     RowBox[{"ring", "'"}], "s", " ", "width", " ", "is", " ", "only", " ", 
     "half", " ", "a", " ", "cell"}], ",", " ", 
    RowBox[{
    "since", " ", "we", " ", "are", " ", "defining", " ", "the", " ", "first",
      " ", "ring", " ", "to", " ", "be", " ", "a", " ", "single", " ", 
     "cell"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ringPositions", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"0.", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"numRings", "-", "1"}], ")"}], "*", "\[CapitalDelta]x"}], ",",
       "\[CapitalDelta]x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Get", " ", "\[Sigma]\[Mu]T", " ", "for", " ", "each", " ", 
     RowBox[{"cell", ".", " ", "If"}], " ", "ring", " ", "is", " ", "not", 
     " ", "damaged"}], ",", " ", 
    RowBox[{
    "set", " ", "to", " ", "0.", " ", "Ablated", " ", "cells", " ", "will", 
     " ", "be", " ", "taken", " ", "care", " ", "of", " ", "when", " ", 
     "equations", " ", "are", " ", "made"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]\[Mu]TList", "=", 
   RowBox[{"ReplacePart", "[", 
    RowBox[{
     RowBox[{"\[Mu]TDist", "/@", "ringPositions"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"i", "\[Rule]", "0."}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"ringsDamaged", "+", "1"}], ",", "numRings"}], "}"}]}], 
      "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8020056265715137`*^9, 3.802005713134735*^9}, {
   3.8020057577470217`*^9, 3.8020058176228237`*^9}, {3.8020058604092417`*^9, 
   3.802005916349489*^9}, {3.802006008650146*^9, 3.802006133245742*^9}, 
   3.8020061938400974`*^9, {3.802006255215966*^9, 3.8020062770164256`*^9}, {
   3.8020064571695004`*^9, 3.80200646026558*^9}, {3.8020073194897823`*^9, 
   3.802007324922407*^9}, {3.80200739065557*^9, 3.802007393002113*^9}, {
   3.8044279811926823`*^9, 3.8044279901161585`*^9}, {3.830421982359599*^9, 
   3.8304219824879813`*^9}, {3.830422059987055*^9, 3.8304220625100713`*^9}, {
   3.8304221703377905`*^9, 3.8304221729471626`*^9}, {3.8378541466447306`*^9, 
   3.8378541483070326`*^9}, {3.841239096257572*^9, 3.8412390966838217`*^9}, {
   3.8412391268313684`*^9, 3.8412391291044035`*^9}, {3.841239163549553*^9, 
   3.8412391693855357`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"633cb98c-6814-4803-9f91-14c5cb182cad"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get \[Mu]T ratio at cavitation bubble radius", "Subsection",
 CellChangeTimes->{{3.8442449528661118`*^9, 
  3.844244963053158*^9}},ExpressionUUID->"62772997-7485-48b9-9d49-\
306925cda576"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "is", " ", "so", " ", "that", " ", "we", " ", "can", " ", 
     "relate", " ", "the", " ", "\[Mu]T", " ", "parameter", " ", "from", " ", 
     "the", " ", "single"}], "-", 
    RowBox[{
    "cell", " ", "DKO", " ", "model", " ", "to", " ", "the", " ", "actual", 
     " ", "maximum", " ", "parameter", " ", "value"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Interpolation", "[", 
     RowBox[{"\[Mu]TDistData", "/.", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t_", ",", "f_"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"f", "/", 
          RowBox[{"Max", "@", 
           RowBox[{"\[Mu]TDistData", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}]}]}]}], "}"}]}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Mu]TConversion", "=", 
     RowBox[{"%", "[", 
      RowBox[{"cavRadMicrons", "*", ".96"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.844244964139817*^9, 3.8442450120886297`*^9}, {
  3.844787314313675*^9, 3.8447873288556786`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"3912e041-4589-40b5-bff2-617c63f789b1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LR Model", "Chapter",
 CellChangeTimes->{{3.8187718706923046`*^9, 3.8187718793499684`*^9}, {
  3.8194585915458174`*^9, 3.8194585921374054`*^9}, {3.844209385810878*^9, 
  3.8442093887033043`*^9}, {3.844358088708291*^9, 
  3.844358089846429*^9}},ExpressionUUID->"fe5dba73-ed2d-44d1-a811-\
f4a1c1711826"],

Cell[CellGroupData[{

Cell["Equations", "Subsection",
 CellChangeTimes->{{3.818770782979229*^9, 
  3.8187707837590714`*^9}},ExpressionUUID->"1a8cdd0d-693c-4938-b9c2-\
b61fbb6d90ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rd", "=", "10."}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"\[Mu]m", ".", " ", "spatial"}], " ", 
    RowBox[{"scale", "."}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"t0", "=", "47"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"s", ".", " ", "median"}], " ", "time", " ", "for", " ", "2", 
    "nd", " ", "expansion", " ", "signal", " ", "to", " ", "start", " ", 
    "from", " ", 
    RowBox[{"Erica", "'"}], "s", " ", 
    RowBox[{"paper", "."}]}], " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"DL", "=", "260"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Mu]m", "^", "2"}], "/", 
     RowBox[{"s", ".", " ", "Estimated"}]}], " ", "free", " ", "diffusion", 
    " ", "constant", " ", "of", " ", "GBP"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LRth", " ", "=", ".5"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Dimensionless", ".", " ", "Ratio"}], " ", 
    RowBox[{"of", " ", "[", 
     RowBox[{"L", ".", "R"}], "]"}], " ", 
    RowBox[{"Subscript", "[", 
     RowBox[{
      RowBox[{"to", " ", "[", "R", "]"}], ",", " ", "T"}], "]"}], " ", 
    "needed", " ", "for", " ", "signal", " ", "to", " ", "be", " ", 
    "\"\<on\>\""}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dr", "=", ".001"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<small\>\"", " ", "r", " ", "since", " ", "we", " ", "cannot", " ", 
     "use", " ", "the", " ", "origin", " ", "in", " ", "polar", " ", 
     "coordinates"}], ",", " ", "\[Mu]m"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]Far", "=", 
    RowBox[{"1000", "/", "rd"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "r", " ", "that", " ", "is", " ", "\"\<infinity\>\"", " ", "for", " ", 
     "numeric", " ", 
     RowBox[{"solving", ".", " ", "scaled"}]}], "*)"}], ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Differential", " ", "Equations"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{
    RowBox[{"\[Gamma]d", "/", 
     RowBox[{"\[Gamma]w", "^", "2"}]}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r", "-", "dr"}], ")"}], "^", "2"}]}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"\[Gamma]w", "^", "2"}]}], ")"}]}], "-", 
      RowBox[{"\[Gamma]d", "*", "t"}]}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dx", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"r", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Gamma]pL", "*", 
           RowBox[{"yT", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], ")"}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"\[Gamma]P", "*", 
             RowBox[{"x", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], "^", "2"}]}]}], 
       ")"}], "^", 
      RowBox[{"-", "1"}]}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Gamma]DP", "*", 
        RowBox[{"Laplacian", "[", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"r", ",", "t"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", "\"\<Polar\>\""}], 
         "]"}]}], "+", "s", "+", 
       RowBox[{"\[Gamma]c", "*", 
        RowBox[{"\[Gamma]pL", "/", "\[Gamma]P"}], "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Gamma]P", "*", 
             RowBox[{"x", "[", 
              RowBox[{"r", ",", "t"}], "]"}]}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Gamma]P", "*", 
              RowBox[{"x", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}], ")"}], "^", "2"}],
         "*", 
        RowBox[{"yT", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dyT", "=", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"yT", "[", 
       RowBox[{"r", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "\[Gamma]c"}], "*", "\[Gamma]P", "*", 
       RowBox[{"x", "[", 
        RowBox[{"r", ",", "t"}], "]"}], "*", 
       RowBox[{"yT", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"\[Gamma]P", "*", 
        RowBox[{"x", "[", 
         RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"dz", "=", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"r", ",", "t"}], "]"}], ",", "t"}], "]"}], "==", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Gamma]R", "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"\[Gamma]L", "*", 
              RowBox[{"z", "[", 
               RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}], "^", "2"}]}]}], 
        ")"}], "^", 
       RowBox[{"-", "1"}]}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Gamma]DL", "*", 
         RowBox[{"Laplacian", "[", 
          RowBox[{
           RowBox[{"z", "[", 
            RowBox[{"r", ",", "t"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "\[Theta]"}], "}"}], ",", "\"\<Polar\>\""}], 
          "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Gamma]c", "*", "\[Gamma]P", "*", 
           RowBox[{"x", "[", 
            RowBox[{"r", ",", "t"}], "]"}], "*", 
           RowBox[{"yT", "[", 
            RowBox[{"r", ",", "t"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[Gamma]P", "*", 
            RowBox[{"x", "[", 
             RowBox[{"r", ",", "t"}], "]"}]}]}], ")"}]}]}], ")"}]}]}]}], 
   ";"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Initial", " ", "Conditions", " ", "and", " ", "Boundary", " ", 
    "Conditions"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"initx", "=", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"r", ",", "0"}], "]"}], "==", "0."}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Initially", " ", "no", " ", "active", " ", "protease"}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bc1x", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"r", ",", "t"}], "]"}], ",", "r"}], "]"}], "==", "0"}], 
      ")"}], "/.", 
     RowBox[{"r", "->", "dr"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Radially", " ", 
     RowBox[{"symmetric", " ", "--"}]}], ">", " ", 
    RowBox[{"no", " ", "flux", " ", "through", " ", "origin"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bc2x", "=", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"\[Rho]Far", ",", "t"}], "]"}], "==", "0."}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Concentration", " ", "to", " ", "0", " ", "far", " ", "away"}], 
   "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"inityT", "=", 
    RowBox[{
     RowBox[{"yT", "[", 
      RowBox[{"r", ",", "0"}], "]"}], "==", "1."}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "proligand", " ", "initially", " ", "exists", " ", "at", " ", "all", " ", 
    "points", " ", "in", " ", "space"}], "*)"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"initz", "=", 
    RowBox[{
     RowBox[{"z", "[", 
      RowBox[{"r", ",", "0"}], "]"}], "==", "0"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Initially", " ", "no", " ", "ligand"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bc1z", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"r", ",", "t"}], "]"}], ",", "r"}], "]"}], "==", "0"}], 
      ")"}], "/.", 
     RowBox[{"r", "->", "dr"}]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Radially", " ", 
     RowBox[{"symmetric", " ", "--"}]}], ">", " ", 
    RowBox[{"no", " ", "flux", " ", "through", " ", "origin"}]}], 
   "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bc2z", "=", 
    RowBox[{
     RowBox[{"z", "[", 
      RowBox[{"\[Rho]Far", ",", "t"}], "]"}], "==", "0."}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Concentration", " ", "to", " ", "0", " ", "far", " ", "away"}], 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"Put", " ", "it", " ", "all", " ", "together"}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"deqnsXY", "=", 
   RowBox[{"{", 
    RowBox[{
    "dx", ",", "dyT", ",", "initx", ",", "bc1x", ",", "bc2x", ",", "inityT"}],
     "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"deqnsZ", "=", 
   RowBox[{"{", 
    RowBox[{"dz", ",", "initz", ",", "bc1z", ",", "bc2z"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"deqnsLR", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"deqnsXY", ",", "deqnsZ"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.811512836863971*^9, {3.8115128690760856`*^9, 3.8115128806585793`*^9}, {
   3.8443581164901657`*^9, 3.8443581165779867`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"080433d3-db98-4ff3-8445-c7d5315abfca"],

Cell["\<\
Parameters are taken from best fit parameters obtained in work for O\
\[CloseCurlyQuote]Connor et al. 2021 (in review). From notebook \
analysis_AllFits_05.nb
Choose Calcium radius data corresponding to the best fit\
\>", "Text",
 CellChangeTimes->{{3.818771874884163*^9, 3.8187719343245764`*^9}, {
  3.819458598899915*^9, 
  3.819458615365712*^9}},ExpressionUUID->"e6ccbf83-a0cc-466f-a6e7-\
0d2d0449d938"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"lrParams", "=", 
     RowBox[{
     "Import", "[", 
      "\"\<C:\\\\Users\\\\Greg \
Stevens\\\\Dropbox\\\\Research_Backup\\\\CurrentWork\\\\NewCalciumModel\\\\\
Second Expansion\\\\LRParams.m\>\"", "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"lrParams", "=", 
    RowBox[{
    "Import", "[", 
     "\"\<C:\\\\Users\\\\Greg Stevens\\\\Box\\\\Research Backup\\\\Current \
Work\\\\NewCalciumModel\\\\Second Expansion\\\\LRParams_lowthresh.m\>\"", 
     "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.818773375258432*^9, 3.818773396604559*^9}, {
  3.824204885947365*^9, 3.824204899077221*^9}, {3.83958531001031*^9, 
  3.8395853268911695`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"50af261d-dd63-42bb-9f59-a0f187a8f16a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lrParamsChosen", "=", 
   RowBox[{"lrParams", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lrParamsChosenAll1", "=", 
   RowBox[{"lrParams", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8187733989685087`*^9, 3.8187734024519277`*^9}, {
   3.818773493088842*^9, 3.818773499067511*^9}, {3.8187736037772512`*^9, 
   3.818773603796241*^9}, {3.8201654912447653`*^9, 3.8201655237194138`*^9}, {
   3.829300637917736*^9, 3.829300637940717*^9}, {3.82934769319315*^9, 
   3.829347693318698*^9}, 3.84745309141263*^9},
 CellLabel->"In[94]:=",ExpressionUUID->"9a481a21-be5c-414b-9785-10c5443dd220"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LR Solution", "Subsection",
 CellChangeTimes->{{3.8187735022894907`*^9, 
  3.81877350490995*^9}},ExpressionUUID->"b53ab196-19b9-4697-aa2e-\
3251dd77139e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"lrEndTime", "=", 
   RowBox[{"10.", "*", 
    RowBox[{"60.", "/", "t0"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tEnd", "=", 
   RowBox[{"2", "*", "lrEndTime", "*", "t0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ligWoundScale", "=", ".9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ligandSol", "=", 
   RowBox[{"NDSolveValue", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"deqnsLR", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[Gamma]w", "\[Rule]", 
          RowBox[{"\[Gamma]w", "*", "ligWoundScale"}]}], ",", 
         RowBox[{"\[Gamma]P", "\[Rule]", 
          RowBox[{"\[Gamma]P", "*", 
           SuperscriptBox["ligWoundScale", "2"]}]}], ",", 
         RowBox[{"\[Gamma]pL", "\[Rule]", 
          RowBox[{"\[Gamma]pL", "*", "gbpScale"}]}], ",", 
         RowBox[{"\[Gamma]L", "\[Rule]", 
          RowBox[{"\[Gamma]L", "*", "gbpScale"}]}]}], "}"}]}], "/.", 
      "lrParamsChosen"}], ",", "z", ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "dr", ",", "\[Rho]Far"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tEnd"}], "}"}], ",", 
     RowBox[{"Method", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<IndexReduction\>\"", "->", "Automatic"}], ",", 
        RowBox[{"\"\<EquationSimplification\>\"", "->", "\"\<Residual\>\""}], 
        ",", 
        RowBox[{"\"\<PDEDiscretization\>\"", "->", 
         RowBox[{"{", 
          RowBox[{"\"\<MethodOfLines\>\"", ",", 
           RowBox[{"\"\<SpatialDiscretization\>\"", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<TensorProductGrid\>\"", ",", 
              RowBox[{"\"\<MinPoints\>\"", "->", "200"}], ",", 
              RowBox[{"\"\<MaxPoints\>\"", "->", "500"}], ",", 
              RowBox[{"\"\<DifferenceOrder\>\"", "->", "2"}]}], "}"}]}]}], 
          "}"}]}]}], "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8187735077683372`*^9, 3.818773535020946*^9}, {
  3.8187737704647336`*^9, 3.8187737716103153`*^9}, {3.818773821788172*^9, 
  3.81877385165491*^9}, {3.818773887355093*^9, 3.818773887475109*^9}, {
  3.8187892096022744`*^9, 3.818789244138961*^9}, {3.8195477168268623`*^9, 
  3.8195477250240583`*^9}, {3.8201700100907745`*^9, 3.820170012152894*^9}, {
  3.8202344240769835`*^9, 3.820234425513488*^9}, {3.84435837794753*^9, 
  3.8443583780306215`*^9}, {3.848437897077904*^9, 3.848437934346557*^9}, {
  3.848654105864221*^9, 3.8486541469580035`*^9}, {3.857636059783206*^9, 
  3.857636066578405*^9}, {3.857636208648032*^9, 3.8576362200577993`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"86ec9ec5-505e-48ff-9da7-261790db5470"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"0.0033212857569673133`\\\", \\\" \\\", \
\\\"3.6640277196164695`*^-306\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 99, 1, 
   18310412331024361193, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8207456737215843`*^9, 3.820840304291794*^9, 3.8226590579804993`*^9, 
   3.823770286746611*^9, 3.8237892734203095`*^9, {3.824204921586258*^9, 
   3.824204931457944*^9}, 3.82428694501167*^9, 3.824797312592145*^9, 
   3.8260197616841097`*^9, 3.826576377930024*^9, {3.826784540864746*^9, 
   3.826784551012966*^9}, 3.826888366442202*^9, 3.8271794378289175`*^9, 
   3.8272429163797665`*^9, 3.827567758864113*^9, 3.8279370186326327`*^9, 
   3.8285280052800355`*^9, 3.828613388491973*^9, 3.829125719919682*^9, 
   3.829232119781*^9, 3.829300657960112*^9, 3.829347706154316*^9, 
   3.8299931798422947`*^9, 3.830259491138075*^9, 3.8303522426135225`*^9, 
   3.8305083862614527`*^9, 3.830518768235737*^9, 3.8306005585300603`*^9, 
   3.830857514311691*^9, 3.83099146143952*^9, 3.831121094190055*^9, 
   3.8317308072487917`*^9, 3.8320639378526106`*^9, 3.8321061738197885`*^9, 
   3.832322546466784*^9, 3.832370326261247*^9, 3.8324082624971294`*^9, 
   3.83280112947287*^9, 3.8333274101737924`*^9, 3.8335361389671955`*^9, 
   3.833869289400878*^9, 3.833922173586508*^9, 3.835304746503496*^9, 
   3.8354372551794615`*^9, 3.835442386894108*^9, 3.8357023020348597`*^9, 
   3.835952997424967*^9, 3.836432848534502*^9, 3.8364771251333647`*^9, 
   3.836508268377179*^9, 3.836510541717477*^9, 3.836511295209732*^9, 
   3.83690431801083*^9, 3.837035471183729*^9, 3.8378496666322956`*^9, 
   3.8382906397700715`*^9, 3.8390607009248495`*^9, 3.8393307770718613`*^9, 
   3.8395853585433474`*^9, 3.8412217953622627`*^9, 3.8419607152059836`*^9, 
   3.8423641024488344`*^9, 3.8443584116980505`*^9, 3.844510644860375*^9, 
   3.8447873251817303`*^9, 3.844810143010197*^9, 3.8450644980091176`*^9, 
   3.845413384934987*^9, 3.84550075561189*^9, 3.8456736042946296`*^9, 
   3.845729245754474*^9, 3.8460197817310643`*^9, 3.846257192442559*^9, 
   3.8465801982216816`*^9, 3.8472254697331443`*^9, 3.847404956163664*^9, 
   3.8474115930854273`*^9, 3.8474531082836514`*^9, 3.8480142715946445`*^9, 
   3.8480159384206557`*^9, 3.84805717262562*^9, 3.8480951281930285`*^9, 
   3.848098889792613*^9, {3.848099696341543*^9, 3.8480997032055664`*^9}, 
   3.8481441327461696`*^9, 3.848355094581214*^9, 3.8484448591064644`*^9, 
   3.8485303907752237`*^9, 3.848654174925816*^9, 3.8503432696762233`*^9, 
   3.851118784147306*^9, 3.851127497290698*^9, 3.8511279701922383`*^9, 
   3.8516372375194187`*^9, 3.851723079094941*^9, 3.852154266285774*^9, 
   3.852196736681995*^9, 3.8530229107078466`*^9, 3.8535324319436536`*^9, 
   3.8576362474201846`*^9, 3.8577241366055765`*^9, 3.8577266654029765`*^9},
 CellLabel->
  "During evaluation of \
In[96]:=",ExpressionUUID->"face88d5-6399-4f36-abcc-256fbeee4051"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"718.6610957424057`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 99, 2, 
   18310412331024361193, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8207456737215843`*^9, 3.820840304291794*^9, 3.8226590579804993`*^9, 
   3.823770286746611*^9, 3.8237892734203095`*^9, {3.824204921586258*^9, 
   3.824204931457944*^9}, 3.82428694501167*^9, 3.824797312592145*^9, 
   3.8260197616841097`*^9, 3.826576377930024*^9, {3.826784540864746*^9, 
   3.826784551012966*^9}, 3.826888366442202*^9, 3.8271794378289175`*^9, 
   3.8272429163797665`*^9, 3.827567758864113*^9, 3.8279370186326327`*^9, 
   3.8285280052800355`*^9, 3.828613388491973*^9, 3.829125719919682*^9, 
   3.829232119781*^9, 3.829300657960112*^9, 3.829347706154316*^9, 
   3.8299931798422947`*^9, 3.830259491138075*^9, 3.8303522426135225`*^9, 
   3.8305083862614527`*^9, 3.830518768235737*^9, 3.8306005585300603`*^9, 
   3.830857514311691*^9, 3.83099146143952*^9, 3.831121094190055*^9, 
   3.8317308072487917`*^9, 3.8320639378526106`*^9, 3.8321061738197885`*^9, 
   3.832322546466784*^9, 3.832370326261247*^9, 3.8324082624971294`*^9, 
   3.83280112947287*^9, 3.8333274101737924`*^9, 3.8335361389671955`*^9, 
   3.833869289400878*^9, 3.833922173586508*^9, 3.835304746503496*^9, 
   3.8354372551794615`*^9, 3.835442386894108*^9, 3.8357023020348597`*^9, 
   3.835952997424967*^9, 3.836432848534502*^9, 3.8364771251333647`*^9, 
   3.836508268377179*^9, 3.836510541717477*^9, 3.836511295209732*^9, 
   3.83690431801083*^9, 3.837035471183729*^9, 3.8378496666322956`*^9, 
   3.8382906397700715`*^9, 3.8390607009248495`*^9, 3.8393307770718613`*^9, 
   3.8395853585433474`*^9, 3.8412217953622627`*^9, 3.8419607152059836`*^9, 
   3.8423641024488344`*^9, 3.8443584116980505`*^9, 3.844510644860375*^9, 
   3.8447873251817303`*^9, 3.844810143010197*^9, 3.8450644980091176`*^9, 
   3.845413384934987*^9, 3.84550075561189*^9, 3.8456736042946296`*^9, 
   3.845729245754474*^9, 3.8460197817310643`*^9, 3.846257192442559*^9, 
   3.8465801982216816`*^9, 3.8472254697331443`*^9, 3.847404956163664*^9, 
   3.8474115930854273`*^9, 3.8474531082836514`*^9, 3.8480142715946445`*^9, 
   3.8480159384206557`*^9, 3.84805717262562*^9, 3.8480951281930285`*^9, 
   3.848098889792613*^9, {3.848099696341543*^9, 3.8480997032055664`*^9}, 
   3.8481441327461696`*^9, 3.848355094581214*^9, 3.8484448591064644`*^9, 
   3.8485303907752237`*^9, 3.848654174925816*^9, 3.8503432696762233`*^9, 
   3.851118784147306*^9, 3.851127497290698*^9, 3.8511279701922383`*^9, 
   3.8516372375194187`*^9, 3.851723079094941*^9, 3.852154266285774*^9, 
   3.852196736681995*^9, 3.8530229107078466`*^9, 3.8535324319436536`*^9, 
   3.8576362474201846`*^9, 3.8577241366055765`*^9, 3.8577266654679337`*^9},
 CellLabel->
  "During evaluation of \
In[96]:=",ExpressionUUID->"7d0664c1-edcc-4d08-b169-60738fbfa869"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"734.2014324687294`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 99, 3, 
   18310412331024361193, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8207456737215843`*^9, 3.820840304291794*^9, 3.8226590579804993`*^9, 
   3.823770286746611*^9, 3.8237892734203095`*^9, {3.824204921586258*^9, 
   3.824204931457944*^9}, 3.82428694501167*^9, 3.824797312592145*^9, 
   3.8260197616841097`*^9, 3.826576377930024*^9, {3.826784540864746*^9, 
   3.826784551012966*^9}, 3.826888366442202*^9, 3.8271794378289175`*^9, 
   3.8272429163797665`*^9, 3.827567758864113*^9, 3.8279370186326327`*^9, 
   3.8285280052800355`*^9, 3.828613388491973*^9, 3.829125719919682*^9, 
   3.829232119781*^9, 3.829300657960112*^9, 3.829347706154316*^9, 
   3.8299931798422947`*^9, 3.830259491138075*^9, 3.8303522426135225`*^9, 
   3.8305083862614527`*^9, 3.830518768235737*^9, 3.8306005585300603`*^9, 
   3.830857514311691*^9, 3.83099146143952*^9, 3.831121094190055*^9, 
   3.8317308072487917`*^9, 3.8320639378526106`*^9, 3.8321061738197885`*^9, 
   3.832322546466784*^9, 3.832370326261247*^9, 3.8324082624971294`*^9, 
   3.83280112947287*^9, 3.8333274101737924`*^9, 3.8335361389671955`*^9, 
   3.833869289400878*^9, 3.833922173586508*^9, 3.835304746503496*^9, 
   3.8354372551794615`*^9, 3.835442386894108*^9, 3.8357023020348597`*^9, 
   3.835952997424967*^9, 3.836432848534502*^9, 3.8364771251333647`*^9, 
   3.836508268377179*^9, 3.836510541717477*^9, 3.836511295209732*^9, 
   3.83690431801083*^9, 3.837035471183729*^9, 3.8378496666322956`*^9, 
   3.8382906397700715`*^9, 3.8390607009248495`*^9, 3.8393307770718613`*^9, 
   3.8395853585433474`*^9, 3.8412217953622627`*^9, 3.8419607152059836`*^9, 
   3.8423641024488344`*^9, 3.8443584116980505`*^9, 3.844510644860375*^9, 
   3.8447873251817303`*^9, 3.844810143010197*^9, 3.8450644980091176`*^9, 
   3.845413384934987*^9, 3.84550075561189*^9, 3.8456736042946296`*^9, 
   3.845729245754474*^9, 3.8460197817310643`*^9, 3.846257192442559*^9, 
   3.8465801982216816`*^9, 3.8472254697331443`*^9, 3.847404956163664*^9, 
   3.8474115930854273`*^9, 3.8474531082836514`*^9, 3.8480142715946445`*^9, 
   3.8480159384206557`*^9, 3.84805717262562*^9, 3.8480951281930285`*^9, 
   3.848098889792613*^9, {3.848099696341543*^9, 3.8480997032055664`*^9}, 
   3.8481441327461696`*^9, 3.848355094581214*^9, 3.8484448591064644`*^9, 
   3.8485303907752237`*^9, 3.848654174925816*^9, 3.8503432696762233`*^9, 
   3.851118784147306*^9, 3.851127497290698*^9, 3.8511279701922383`*^9, 
   3.8516372375194187`*^9, 3.851723079094941*^9, 3.852154266285774*^9, 
   3.852196736681995*^9, 3.8530229107078466`*^9, 3.8535324319436536`*^9, 
   3.8576362474201846`*^9, 3.8577241366055765`*^9, 3.8577266654849243`*^9},
 CellLabel->
  "During evaluation of \
In[96]:=",ExpressionUUID->"7d609c70-423b-4543-8daf-ed15e62748be"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 99, 4, 18310412331024361193, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.8207456737215843`*^9, 3.820840304291794*^9, 3.8226590579804993`*^9, 
   3.823770286746611*^9, 3.8237892734203095`*^9, {3.824204921586258*^9, 
   3.824204931457944*^9}, 3.82428694501167*^9, 3.824797312592145*^9, 
   3.8260197616841097`*^9, 3.826576377930024*^9, {3.826784540864746*^9, 
   3.826784551012966*^9}, 3.826888366442202*^9, 3.8271794378289175`*^9, 
   3.8272429163797665`*^9, 3.827567758864113*^9, 3.8279370186326327`*^9, 
   3.8285280052800355`*^9, 3.828613388491973*^9, 3.829125719919682*^9, 
   3.829232119781*^9, 3.829300657960112*^9, 3.829347706154316*^9, 
   3.8299931798422947`*^9, 3.830259491138075*^9, 3.8303522426135225`*^9, 
   3.8305083862614527`*^9, 3.830518768235737*^9, 3.8306005585300603`*^9, 
   3.830857514311691*^9, 3.83099146143952*^9, 3.831121094190055*^9, 
   3.8317308072487917`*^9, 3.8320639378526106`*^9, 3.8321061738197885`*^9, 
   3.832322546466784*^9, 3.832370326261247*^9, 3.8324082624971294`*^9, 
   3.83280112947287*^9, 3.8333274101737924`*^9, 3.8335361389671955`*^9, 
   3.833869289400878*^9, 3.833922173586508*^9, 3.835304746503496*^9, 
   3.8354372551794615`*^9, 3.835442386894108*^9, 3.8357023020348597`*^9, 
   3.835952997424967*^9, 3.836432848534502*^9, 3.8364771251333647`*^9, 
   3.836508268377179*^9, 3.836510541717477*^9, 3.836511295209732*^9, 
   3.83690431801083*^9, 3.837035471183729*^9, 3.8378496666322956`*^9, 
   3.8382906397700715`*^9, 3.8390607009248495`*^9, 3.8393307770718613`*^9, 
   3.8395853585433474`*^9, 3.8412217953622627`*^9, 3.8419607152059836`*^9, 
   3.8423641024488344`*^9, 3.8443584116980505`*^9, 3.844510644860375*^9, 
   3.8447873251817303`*^9, 3.844810143010197*^9, 3.8450644980091176`*^9, 
   3.845413384934987*^9, 3.84550075561189*^9, 3.8456736042946296`*^9, 
   3.845729245754474*^9, 3.8460197817310643`*^9, 3.846257192442559*^9, 
   3.8465801982216816`*^9, 3.8472254697331443`*^9, 3.847404956163664*^9, 
   3.8474115930854273`*^9, 3.8474531082836514`*^9, 3.8480142715946445`*^9, 
   3.8480159384206557`*^9, 3.84805717262562*^9, 3.8480951281930285`*^9, 
   3.848098889792613*^9, {3.848099696341543*^9, 3.8480997032055664`*^9}, 
   3.8481441327461696`*^9, 3.848355094581214*^9, 3.8484448591064644`*^9, 
   3.8485303907752237`*^9, 3.848654174925816*^9, 3.8503432696762233`*^9, 
   3.851118784147306*^9, 3.851127497290698*^9, 3.8511279701922383`*^9, 
   3.8516372375194187`*^9, 3.851723079094941*^9, 3.852154266285774*^9, 
   3.852196736681995*^9, 3.8530229107078466`*^9, 3.8535324319436536`*^9, 
   3.8576362474201846`*^9, 3.8577241366055765`*^9, 3.8577266655049114`*^9},
 CellLabel->
  "During evaluation of \
In[96]:=",ExpressionUUID->"73a2e90e-1425-4daa-9b7b-1c2b61b675de"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "LR", " ", "OUTPUT", " ", "TO", " ", "GO", " ", "INTO", " ", "CALCIUM", 
    " ", "MODEL"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"lrSol", "[", 
    RowBox[{
     RowBox[{"r_", "?", "NumericQ"}], ",", 
     RowBox[{"t_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Gamma]L", "*", "gbpScale", "*", 
        RowBox[{"ligandSol", "[", 
         RowBox[{
          RowBox[{"r", "/", "rd"}], ",", 
          RowBox[{"t", "/", "t0"}]}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"\[Gamma]L", "*", "gbpScale", "*", 
         RowBox[{"ligandSol", "[", 
          RowBox[{
           RowBox[{"r", "/", "rd"}], ",", 
           RowBox[{"t", "/", "t0"}]}], "]"}]}]}], ")"}]}], ")"}], "/.", 
    "lrParamsChosen"}]}]}]], "Input",
 CellChangeTimes->{{3.818773829668632*^9, 3.8187738321761484`*^9}, {
  3.8187738951457253`*^9, 3.818773915527135*^9}, {3.8187741061392574`*^9, 
  3.818774182013792*^9}, {3.818788690435363*^9, 3.818788703766034*^9}, {
  3.820165939716338*^9, 3.820165940098274*^9}, {3.8201688463729725`*^9, 
  3.8201688467035995`*^9}, {3.8201689770657797`*^9, 3.820168995249467*^9}, {
  3.8202342870777197`*^9, 3.8202343114907904`*^9}, {3.820745621383863*^9, 
  3.8207456220226607`*^9}, {3.848698072902599*^9, 3.8486980809005504`*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"b5616789-7775-467d-8e2c-25beec9b273c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calcium Radius Data", "Chapter",
 CellChangeTimes->{{3.844209394489501*^9, 
  3.844209400760651*^9}},ExpressionUUID->"73649e17-d029-409d-8113-\
cc62fcd3f6fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"caRadData", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\Greg Stevens\\\\Box\\\\Research Backup\\\\Current \
Work\\\\NewCalciumModel\\\\Full Model\\\\Stevens et \
al\\\\Figs\\\\Other\\\\variousControlVideos\\\\controlCaRadData.m\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8194571918418765`*^9, 3.819457236456868*^9}, 
   3.8194585846330132`*^9, {3.819458624435128*^9, 3.8194586276748776`*^9}, {
   3.8194587556929336`*^9, 3.8194587687505226`*^9}, {3.8395853383386984`*^9, 
   3.839585343921767*^9}, 3.844209910152918*^9, {3.857636676956894*^9, 
   3.8576366955116224`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"18b5395f-1013-4e51-b00b-95e1d2dd2779"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalDelta]t", "=", 
   RowBox[{
    RowBox[{"caRadData", "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", 
    RowBox[{"caRadData", "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8194571918418765`*^9, 3.819457236456868*^9}, 
   3.8194585846330132`*^9, {3.819458624435128*^9, 3.8194586276748776`*^9}, {
   3.8194587556929336`*^9, 3.8194587687505226`*^9}, {3.8395853383386984`*^9, 
   3.839585343921767*^9}, 3.844209910152918*^9, {3.857636676956894*^9, 
   3.857636704500231*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"2d98e54f-ba9c-4a5a-8fc1-5a151927ff2f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"maxFirstExpRad", "=", 
   RowBox[{"Max", "@", 
    RowBox[{"caRadData", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{";;", "29"}], ",", "2"}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8474024117747574`*^9, 3.8474024550330954`*^9}, {
  3.857637044249283*^9, 3.857637044380845*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"8727d3fa-2a13-4f87-961c-7fb070265793"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Misc", "Chapter",
 CellChangeTimes->{{3.8442465623056793`*^9, 3.84424656301367*^9}, {
   3.8443729508350363`*^9, 3.8443729515719066`*^9}, 
   3.8448100871680546`*^9},ExpressionUUID->"a270c86e-e853-4e71-a044-\
45c76f2865df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"connectAblated", "=", "0.015"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "parameter", " ", "to", " ", "connect", " ", "the", " ", "ablated", " ", 
     "region", " ", "to", " ", "the", " ", "rest", " ", "of", " ", "the", " ", 
     RowBox[{"tissue", ".", " ", "The"}], " ", "range", " ", "can", " ", "be",
      " ", "1", " ", 
     RowBox[{"(", 
      RowBox[{"full", " ", "connection"}], ")"}], " ", "to", " ", "0", " ", 
     RowBox[{"(", 
      RowBox[{"no", " ", "connection"}], ")"}]}], "*)"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"connectAblated", "=", "0."}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.844246618969404*^9, 3.844246623773408*^9}, {
   3.8442674553581285`*^9, 3.8442674661578035`*^9}, {3.844267679572589*^9, 
   3.8442676879494143`*^9}, {3.8448067652798457`*^9, 
   3.8448067679550133`*^9}, {3.844807036546357*^9, 3.8448070379141016`*^9}, {
   3.8448100820199327`*^9, 3.8448100924168024`*^9}, {3.848098800495659*^9, 
   3.8480988028839893`*^9}, 3.8480996923300323`*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"1b8fc698-32ec-4267-8398-043facbe57a8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single Cell Double Knockdown", "Title",
 CellChangeTimes->{{3.8436589274442673`*^9, 
  3.843658955348691*^9}},ExpressionUUID->"db74bbc7-3f35-4800-b760-\
7d4d8dc51356"],

Cell["\<\
This section sets up making contours in the 2D parameter space of cExt*\[Eta]\
\[Mu]T/\[Eta]NCX vs \[Tau] Heal (with all other model parameters held \
constant) such that a single cell drops to hald GCaMP fluorescence (\
\[OpenCurlyDoubleQuote]heals\[CloseCurlyDoubleQuote]) in 25 seconds.

I will include the full model, but set \[Alpha] to 0 for a full knockout of \
PLC\[Beta]\
\>", "Text",
 CellChangeTimes->{{3.8436589574368477`*^9, 3.8436590433599005`*^9}, {
  3.843659247923074*^9, 
  3.8436593348826914`*^9}},ExpressionUUID->"675dd1f6-e685-41a3-9b5e-\
8c753971ee89"],

Cell[CellGroupData[{

Cell["Solution (for testing purposes)", "Chapter",
 CellChangeTimes->{{3.843663747209279*^9, 3.843663748082199*^9}, {
  3.84376780246548*^9, 
  3.8437678080641203`*^9}},ExpressionUUID->"f6fc5fc4-c2b9-4f25-9b60-\
9f929f8bdf1a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"singleCellDKOMaxTime", "=", "100."}], ";"}]], "Input",
 CellChangeTimes->{{3.8436774750756063`*^9, 3.8436774840402207`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"c9efc054-a94b-4886-9c8e-32b0c455e1b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"singleCellDKOSolution", "=", 
  RowBox[{"ParametricNDSolveValue", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"deqns", "/.", "intParams"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"jGJIP3", "\[Rule]", "0."}], ",", 
       RowBox[{"jGJc", "\[Rule]", "0."}]}], "}"}]}], ",", 
    RowBox[{"c", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "singleCellDKOMaxTime"}], "}"}], ",", 
    "extParams"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8425672718429*^9, 3.8425673061586933`*^9}, {
  3.842569475057438*^9, 3.8425694765087204`*^9}, {3.8436637546405373`*^9, 
  3.843663766458337*^9}, {3.843663819954199*^9, 3.843663826238448*^9}, {
  3.843663936353361*^9, 3.843663944549956*^9}, {3.843664589051324*^9, 
  3.8436645906590085`*^9}, {3.843677486740576*^9, 3.843677488614418*^9}, {
  3.843746253268936*^9, 3.8437462554958096`*^9}, {3.8437692232484694`*^9, 
  3.8437692244490175`*^9}, {3.8438148104909472`*^9, 3.8438148117653637`*^9}, {
  3.843814877872831*^9, 3.843814878575388*^9}, {3.8442040819525137`*^9, 
  3.8442040906770225`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"025235cc-b596-4fa2-9ccf-983c275aa58b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["ParametricFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{
       Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquarePlusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090884856*^-8}, {
                   0.0874367476365131, 0.08197166587636243}, {
                   0.18222810297558026`, 0.1358255024317191}, {
                   0.27073779576926765`, 0.13315455086535802`}, {
                   0.3575112797365835, 0.08143316377978886}, {
                   0.4516394623155443, -0.007347854733426912}, {
                   0.5394859823491253, -0.08816932746972758}, {
                   0.6346872009943513, -0.13787329990112937`}, {
                   0.7281522108132057, -0.12816574147938434`}, {
                   0.8153355580866803, -0.07001063326902106}, {
                   0.9098736039718, 0.02121659675083076}, {0.9999999090909091,
                    0.10024804094746914`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090880112*^-8}, {
                   0.0874367476365131, 0.08090369567458766}, {
                   0.18222810297558026`, 0.12746559200130417`}, {
                   0.27073779576926765`, 0.1116266937044405}, {
                   0.3575112797365835, 0.046963725126600256`}, {
                   0.4516394623155443, -0.04509050859182233}, {
                   0.5394859823491253, -0.11115559892361665`}, {
                   0.6346872009943513, -0.12642564594664163`}, {
                   0.7281522108132057, -0.07740196037964171}, {
                   0.8153355580866803, 0.004179083230780074}, {
                   0.9098736039718, 0.08937493944143977}, {0.9999999090909091,
                    0.12834702174618903`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090875369*^-8}, {
                   0.0874367476365131, 0.07984396759533968}, {
                   0.18222810297558026`, 0.11939549826670079`}, {
                   0.27073779576926765`, 0.09184904274707059}, {
                   0.3575112797365835, 0.017913117173780694`}, {
                   0.4516394623155443, -0.07109962300031061}, {
                   0.5394859823491253, -0.11717052830989395`}, {
                   0.6346872009943513, -0.09879571259704382}, {
                   0.7281522108132057, -0.022693471356141894`}, {
                   0.8153355580866803, 0.06128703302641453}, {0.9098736039718,
                    0.11605625481609519`}, {0.9999999090909091, 
                   0.10415981267620744`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090870287*^-8}, {
                   0.0874367476365131, 0.07879243663407876}, {
                   0.18222810297558026`, 0.1116081822210312}, {
                   0.27073779576926765`, 0.07372482040530459}, {
                   0.3575112797365835, -0.006267252216927747}, {
                   0.4516394623155443, -0.08743897872291118}, {
                   0.5394859823491253, -0.11109134853087661`}, {
                   0.6346872009943513, -0.06371549528296311}, {
                   0.7281522108132057, 0.02544576624054603}, {
                   0.8153355580866803, 0.09464282937855747}, {0.9098736039718,
                    0.10731931496853601`}, {0.9999999090909091, 
                   0.0516787429232188}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090865543*^-8}, {
                   0.0874367476365131, 0.07774905743802465}, {
                   0.18222810297558026`, 0.10409673959866513`}, {
                   0.27073779576926765`, 0.05716133039337165}, {
                   0.3575112797365835, -0.026084496726167965`}, {
                   0.4516394623155443, -0.09591154799603378}, {
                   0.5394859823491253, -0.09685594593277226}, {
                   0.6346872009943513, -0.02730376120671303}, {
                   0.7281522108132057, 0.061646715198529656`}, {
                   0.8153355580866803, 0.1046634148537508}, {0.9098736039718, 
                   0.07509702498429204}, {
                   0.9999999090909091, -0.006536873471333553}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.0909090908608*^-8}, {
                   0.0874367476365131, 0.07671378556951527}, {
                   0.18222810297558026`, 0.09685439581479163}, {
                   0.27073779576926765`, 0.042069810325321415`}, {
                   0.3575112797365835, -0.042006785469922474`}, {
                   0.4516394623155443, -0.09808544986431629}, {
                   0.5394859823491253, -0.07760167026270944}, {
                   0.6346872009943513, 0.0063643674428021085`}, {
                   0.7281522108132057, 0.08405712128907425}, {
                   0.8153355580866803, 0.09555213349985489}, {0.9098736039718,
                    0.03202960165577907}, {
                   0.9999999090909091, -0.054402034659985464`}}]}}, 
                AspectRatio -> 1, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
                GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
                DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {Automatic, Automatic}, 
                Ticks -> {Automatic, Automatic}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"c", "[", "t", "]"}], HoldForm], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "r\[Mu]T", ",", "\[Tau]Heal", ",", "rPMCA", ",", "kPMCA", 
                    ",", "rSOC", ",", "\[Eta]NCX", ",", "nNCX", ",", "kNCX", 
                    ",", "rlkPM", ",", "\[Alpha]", ",", "\[Alpha]0", ",", 
                    "kl", ",", "nl", ",", "Kc", ",", "\[Eta]IPR", ",", 
                    "\[Eta]SERCA", ",", "kSERCA1", ",", "kSERCA2", ",", 
                    "\[Eta]lkER", ",", "Bx", ",", "\[Eta]GJIP3", ",", 
                    "\[Eta]GJc", ",", "connectAblated"}], "}"}], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SquareMinusIconMedium"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               GraphicsBox[{{}, {}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090884856*^-8}, {
                   0.0874367476365131, 0.08197166587636243}, {
                   0.18222810297558026`, 0.1358255024317191}, {
                   0.27073779576926765`, 0.13315455086535802`}, {
                   0.3575112797365835, 0.08143316377978886}, {
                   0.4516394623155443, -0.007347854733426912}, {
                   0.5394859823491253, -0.08816932746972758}, {
                   0.6346872009943513, -0.13787329990112937`}, {
                   0.7281522108132057, -0.12816574147938434`}, {
                   0.8153355580866803, -0.07001063326902106}, {
                   0.9098736039718, 0.02121659675083076}, {0.9999999090909091,
                    0.10024804094746914`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090880112*^-8}, {
                   0.0874367476365131, 0.08090369567458766}, {
                   0.18222810297558026`, 0.12746559200130417`}, {
                   0.27073779576926765`, 0.1116266937044405}, {
                   0.3575112797365835, 0.046963725126600256`}, {
                   0.4516394623155443, -0.04509050859182233}, {
                   0.5394859823491253, -0.11115559892361665`}, {
                   0.6346872009943513, -0.12642564594664163`}, {
                   0.7281522108132057, -0.07740196037964171}, {
                   0.8153355580866803, 0.004179083230780074}, {
                   0.9098736039718, 0.08937493944143977}, {0.9999999090909091,
                    0.12834702174618903`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090875369*^-8}, {
                   0.0874367476365131, 0.07984396759533968}, {
                   0.18222810297558026`, 0.11939549826670079`}, {
                   0.27073779576926765`, 0.09184904274707059}, {
                   0.3575112797365835, 0.017913117173780694`}, {
                   0.4516394623155443, -0.07109962300031061}, {
                   0.5394859823491253, -0.11717052830989395`}, {
                   0.6346872009943513, -0.09879571259704382}, {
                   0.7281522108132057, -0.022693471356141894`}, {
                   0.8153355580866803, 0.06128703302641453}, {0.9098736039718,
                    0.11605625481609519`}, {0.9999999090909091, 
                   0.10415981267620744`}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090870287*^-8}, {
                   0.0874367476365131, 0.07879243663407876}, {
                   0.18222810297558026`, 0.1116081822210312}, {
                   0.27073779576926765`, 0.07372482040530459}, {
                   0.3575112797365835, -0.006267252216927747}, {
                   0.4516394623155443, -0.08743897872291118}, {
                   0.5394859823491253, -0.11109134853087661`}, {
                   0.6346872009943513, -0.06371549528296311}, {
                   0.7281522108132057, 0.02544576624054603}, {
                   0.8153355580866803, 0.09464282937855747}, {0.9098736039718,
                    0.10731931496853601`}, {0.9999999090909091, 
                   0.0516787429232188}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.090909090865543*^-8}, {
                   0.0874367476365131, 0.07774905743802465}, {
                   0.18222810297558026`, 0.10409673959866513`}, {
                   0.27073779576926765`, 0.05716133039337165}, {
                   0.3575112797365835, -0.026084496726167965`}, {
                   0.4516394623155443, -0.09591154799603378}, {
                   0.5394859823491253, -0.09685594593277226}, {
                   0.6346872009943513, -0.02730376120671303}, {
                   0.7281522108132057, 0.061646715198529656`}, {
                   0.8153355580866803, 0.1046634148537508}, {0.9098736039718, 
                   0.07509702498429204}, {
                   0.9999999090909091, -0.006536873471333553}}]}, {
                  GrayLevel[0.55], 
                  AbsoluteThickness[1.5], 
                  Opacity[1.], 
                  
                  LineBox[{{9.09090909090909*^-8, 9.0909090908608*^-8}, {
                   0.0874367476365131, 0.07671378556951527}, {
                   0.18222810297558026`, 0.09685439581479163}, {
                   0.27073779576926765`, 0.042069810325321415`}, {
                   0.3575112797365835, -0.042006785469922474`}, {
                   0.4516394623155443, -0.09808544986431629}, {
                   0.5394859823491253, -0.07760167026270944}, {
                   0.6346872009943513, 0.0063643674428021085`}, {
                   0.7281522108132057, 0.08405712128907425}, {
                   0.8153355580866803, 0.09555213349985489}, {0.9098736039718,
                    0.03202960165577907}, {
                   0.9999999090909091, -0.054402034659985464`}}]}}, 
                AspectRatio -> 1, Axes -> {False, False}, 
                AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, Background -> 
                GrayLevel[0.93], BaseStyle -> {FontFamily -> "Arial"}, 
                DisplayFunction -> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Thickness[Tiny], 
                  GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}},
                 GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                LabelStyle -> {FontFamily -> "Arial"}, 
                Method -> {"ScalingFunctions" -> None}, 
                PlotRange -> {All, All}, PlotRangeClipping -> True, 
                PlotRangePadding -> {Automatic, Automatic}, 
                Ticks -> {Automatic, Automatic}], 
               GridBox[{{
                  RowBox[{
                    TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    RowBox[{"c", "[", "t", "]"}], HoldForm], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "r\[Mu]T", ",", "\[Tau]Heal", ",", "rPMCA", ",", "kPMCA", 
                    ",", "rSOC", ",", "\[Eta]NCX", ",", "nNCX", ",", "kNCX", 
                    ",", "rlkPM", ",", "\[Alpha]", ",", "\[Alpha]0", ",", 
                    "kl", ",", "nl", ",", "Kc", ",", "\[Eta]IPR", ",", 
                    "\[Eta]SERCA", ",", "kSERCA1", ",", "kSERCA2", ",", 
                    "\[Eta]lkER", ",", "Bx", ",", "\[Eta]GJIP3", ",", 
                    "\[Eta]GJc", ",", "connectAblated"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Generator: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["ParametricNDSolveValue", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Dependent variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"c", ",", "cER", ",", "h", ",", "ip3"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox[
                    "\"Independent variables: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "t", "}"}], "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]}, "SummaryPanel"], 
       DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("ParametricFunction[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.842567308152492*^9, 3.84256752310343*^9, 3.842567655929242*^9, 
   3.842569477392415*^9, 3.8425695122793083`*^9, 3.8436639495897837`*^9, 
   3.8436643028992968`*^9, 3.843664592951673*^9, 3.843664939594846*^9, 
   3.84367748956233*^9, 3.843746256275056*^9, {3.8437602217064395`*^9, 
   3.8437602413802667`*^9}, 3.8437692255928516`*^9, 3.8438148124623375`*^9, {
   3.8438148788684454`*^9, 3.843814886246526*^9}, 3.8438152050919724`*^9, 
   3.844204095302926*^9, 3.844212087842021*^9, 3.84421251258879*^9, 
   3.8447873346139956`*^9, 3.844810143606223*^9, 3.8450645019312305`*^9, 
   3.8454133889683475`*^9, 3.845500853546318*^9, 3.8456736050359945`*^9, 
   3.8457292464872074`*^9, 3.8460200821366816`*^9, 3.846257193646576*^9, 
   3.846580198847996*^9, 3.847225471692027*^9, 3.84722552035352*^9, 
   3.847404964197807*^9, 3.847453109185091*^9, 3.8480159390190806`*^9, 
   3.8480571730353394`*^9, 3.848095141310581*^9, 3.848098905473604*^9, 
   3.848099707233348*^9, 3.8481441334261236`*^9, 3.8483550964067745`*^9, 
   3.848530395179775*^9, 3.8503432712216835`*^9, 3.8511187854392004`*^9, 
   3.851127497701769*^9, 3.851127970599598*^9, 3.853022913231496*^9, 
   3.857637497314946*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"2ebf7475-1e5d-4e70-8a31-6f80b8044652"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"singleCellDKOEparamsAssociation", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r\[Mu]T", "\[Rule]", 
        RowBox[{"1000.", "*", 
         RowBox[{".25", "/", "50."}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Tau]Heal", "\[Rule]", "10."}], ",", "\[IndentingNewLine]", 
       RowBox[{"rPMCA", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kPMCA", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rSOC", "\[Rule]", 
        RowBox[{"5.2565", "/", "50."}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]NCX", "\[Rule]", "20."}], ",", "\[IndentingNewLine]", 
       RowBox[{"nNCX", "\[Rule]", "1."}], ",", "\[IndentingNewLine]", 
       RowBox[{"kNCX", "\[Rule]", "8."}], ",", "\[IndentingNewLine]", 
       RowBox[{"rlkPM", "\[Rule]", 
        RowBox[{"1000", "*", 
         RowBox[{".002", "/", "50."}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "\[Rule]", "0."}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]0", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kl", "\[Rule]", ".05"}], ",", "\[IndentingNewLine]", 
       RowBox[{"nl", "\[Rule]", "3."}], ",", "\[IndentingNewLine]", 
       RowBox[{"Kc", "\[Rule]", ".4"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]IPR", "\[Rule]", "24.1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]SERCA", "\[Rule]", "20.1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kSERCA1", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kSERCA2", "\[Rule]", "0."}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]lkER", "\[Rule]", ".03"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Bx", "\[Rule]", "5."}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]GJIP3", "\[Rule]", ".5"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]GJc", "\[Rule]", "10."}], ",", "\[IndentingNewLine]", 
       RowBox[{"connectAblated", "\[Rule]", "0."}]}], "\[IndentingNewLine]", 
      "}"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"singleCellDKOEparams", "=", 
   RowBox[{"singleCellDKOEparamsAssociation", "/@", "extParams"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8437667630850368`*^9, 3.843766778121128*^9}, {
  3.8437668650523443`*^9, 3.8437669908804984`*^9}, {3.843767093677447*^9, 
  3.843767095972363*^9}, {3.84376720240291*^9, 3.843767203544833*^9}, {
  3.8437672991581497`*^9, 3.8437673006675253`*^9}, {3.843767455527978*^9, 
  3.8437674760843525`*^9}, {3.8438152163527765`*^9, 3.8438152175366297`*^9}, {
  3.844212090592847*^9, 3.8442121046040077`*^9}, {3.844215280831952*^9, 
  3.844215280951113*^9}, {3.8455008595352955`*^9, 3.8455008651282883`*^9}, {
  3.845500950794324*^9, 3.8455009552758775`*^9}, {3.84722550562536*^9, 
  3.8472255109290214`*^9}, {3.848056990997245*^9, 3.848056994921542*^9}, {
  3.8480988950576982`*^9, 3.8480989004435043`*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"86af3290-d57d-468e-b256-f272467e5502"],

Cell[BoxData[
 RowBox[{
  RowBox[{"singleCellDKOGCaMP", "=", 
   RowBox[{"CtoF", "@", 
    RowBox[{"(", 
     RowBox[{"singleCellDKOSolution", "@@", "singleCellDKOEparams"}], 
     ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8436765351332808`*^9, 3.8436765656557684`*^9}, 
   3.8436766080405703`*^9, {3.8436778114144297`*^9, 3.843677822894812*^9}, {
   3.8437673106087217`*^9, 3.843767318897608*^9}, {3.8437674806814003`*^9, 
   3.8437674867286167`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"a3df5ebc-81ea-4057-8967-df4aca04f4bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{"singleCellDKOGCaMP", ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "singleCellDKOMaxTime"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{".9", "*", "minInt"}], ",", 
      RowBox[{"1.1", "*", "maxInt"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.843676568791851*^9, 3.843676590012907*^9}, {
  3.8436774929856615`*^9, 3.8436774947956643`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"2f465c7a-fe7c-4586-992e-4cc34fb9d3d9"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$74405#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.08974487922291688},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 99.99999795918367}, {0.08974487922291688, 
   0.15674847818608736`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8436765904637136`*^9, 3.8436766097011833`*^9}, 
   3.8436774951557198`*^9, 3.843677825164068*^9, 3.843746259120153*^9, 
   3.843767321702074*^9, 3.8437674890875006`*^9, 3.8437692323218126`*^9, 
   3.843814826655506*^9, 3.843814886577959*^9, {3.8438152117163687`*^9, 
   3.8438152217215657`*^9}, 3.844204101799348*^9, 3.8442121090806084`*^9, 
   3.8442125169828286`*^9, 3.8442152866966057`*^9, 3.844787335374523*^9, 
   3.844810144022507*^9, 3.845064502463114*^9, 3.8454133894760838`*^9, 
   3.845500961967645*^9, 3.845673605540533*^9, 3.8457292470474625`*^9, 
   3.8460200825852504`*^9, 3.8462571942798643`*^9, 3.8465801993886437`*^9, 
   3.8472254720068693`*^9, 3.847225520690643*^9, 3.8474049648216496`*^9, 
   3.8474531097957144`*^9, 3.8480159395572824`*^9, 3.848057173362054*^9, 
   3.8480951418341694`*^9, 3.848098906092964*^9, 3.848099707604123*^9, 
   3.848144133860424*^9, 3.8483550970484858`*^9, 3.8485303954677773`*^9, 
   3.850343271747115*^9, 3.8511187858456554`*^9, 3.851127497970497*^9, 
   3.8511279708575115`*^9, 3.8530229137896123`*^9, 3.8576374976118126`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"90b82bd6-f896-417e-bbf2-c1054350276f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get 25 s contour (for testing purposes)", "Chapter",
 CellChangeTimes->{{3.843676687567177*^9, 3.8436766987795267`*^9}, {
  3.843767811474802*^9, 
  3.843767814608819*^9}},ExpressionUUID->"74ed7a8c-d2a8-437c-833e-\
d8ce4ec18459"],

Cell[BoxData[
 RowBox[{
  RowBox[{"getHealTime", "[", "sol_", "]"}], ":=", 
  RowBox[{"Check", "[", 
   RowBox[{
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{"sol", "\[Equal]", 
       FractionBox[
        RowBox[{"minInt", "+", "maxInt"}], "2"]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1", ",", "singleCellDKOMaxTime"}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"t", "\[Rule]", "\"\<fail\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8436774677617054`*^9, 3.843677467880494*^9}, {
  3.843677498182471*^9, 3.8436775003454046`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"dc07ddbc-9d1a-4056-9e5f-4b07bfd4b758"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Tau]ScaleMin", "=", ".1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]ScaleMax", "=", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]ScaleStep", "=", ".05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r\[Mu]TScaleMin", "=", "1."}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r\[Mu]TScaleMax", "=", "2.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"r\[Mu]TScaleStep", "=", ".5"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8437455068179297`*^9, 3.843745560236419*^9}, {
  3.843745591346925*^9, 3.8437456171445513`*^9}, {3.8442153838924537`*^9, 
  3.844215406537526*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"75f158c5-da26-4109-b6fa-b72eaae62b70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"contourPoints", "=", 
   RowBox[{"Quiet", "@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "*", "scale\[Tau]"}], ",", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "*", "scale\[Mu]"}], ",", 
            RowBox[{"t", "/.", 
             RowBox[{"getHealTime", "[", 
              RowBox[{"CtoF", "[", 
               RowBox[{"singleCellDKOSolution", "@@", 
                RowBox[{"ReplacePart", "[", 
                 RowBox[{"#", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"2", "\[Rule]", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", "scale\[Tau]"}]}], 
                    ",", 
                    RowBox[{"1", "\[Rule]", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "*", "scale\[Mu]"}]}]}], 
                   "}"}]}], "]"}]}], "]"}], "]"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "scale\[Tau]", ",", "\[Tau]ScaleMin", ",", "\[Tau]ScaleMax", ",", 
            "\[Tau]ScaleStep"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "scale\[Mu]", ",", "r\[Mu]TScaleMin", ",", "r\[Mu]TScaleMax", ",", 
            "r\[Mu]TScaleStep"}], "}"}]}], "]"}], "&"}], "@", 
       "singleCellDKOEparams"}], ",", "1"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8423859781005144`*^9, 3.8423859846725707`*^9}, {
   3.842391592568311*^9, 3.842391594403468*^9}, {3.8423922492187815`*^9, 
   3.8423922656002026`*^9}, {3.842392354053788*^9, 3.842392380498839*^9}, {
   3.842392483635064*^9, 3.8423925272212543`*^9}, {3.8423925600168357`*^9, 
   3.842392563260614*^9}, {3.8423925993405905`*^9, 3.8423927193978434`*^9}, {
   3.8423927666581683`*^9, 3.8423927913272038`*^9}, {3.8423928711905575`*^9, 
   3.8423928861477427`*^9}, {3.842392945536621*^9, 3.8423929525144434`*^9}, {
   3.84239299178681*^9, 3.842393008145537*^9}, 3.842393052940242*^9, {
   3.8426087788282804`*^9, 3.842608838353921*^9}, {3.842608870607019*^9, 
   3.842608899771015*^9}, {3.8426107481005435`*^9, 3.8426107521163363`*^9}, {
   3.842610833957407*^9, 3.842610840724599*^9}, {3.8430767162911386`*^9, 
   3.8430767197271013`*^9}, {3.843076884343102*^9, 3.843076886743298*^9}, {
   3.843678796405207*^9, 3.8436788750847855`*^9}, {3.8436789259939003`*^9, 
   3.8436789266652794`*^9}, {3.8436792951663303`*^9, 3.843679295513142*^9}, {
   3.843679439933113*^9, 3.8436794406362686`*^9}, 3.843679504449009*^9, {
   3.8436821374150286`*^9, 3.8436821376920166`*^9}, {3.84374559970897*^9, 
   3.843745646081077*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"d49eec73-7800-4799-8cd5-c1d2e2968380"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{"contourPoints", ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Tau]Heal\>\"", ",", "\"\<r\[Mu]T\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8426089048158245`*^9, 3.842608945373322*^9}, {
  3.842609328993815*^9, 3.842609333389614*^9}, {3.8426127548840137`*^9, 
  3.8426127717831287`*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"789526f2-8272-4da0-a9fa-9d47565c9ea0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJx11AtQVFUYB/AVlBYlXPcFy66X3csBdmE2DfARpvsxgFIhCiS+iVYFQ5FC
wAYmCmJxBlLwERCgUKYE4YN2ADMbzUETRxRxRBTQAiIGyUB0QnQgS8/Z4aOY
2Tnz273/+517uPPXGOPDNlkJBILyZ59/1ud/A4bnqxTGm0MmyDqY9O86zPLj
zSETZN2L+wlg/HxqDpkg0/xklKfmkAky3b+Q5cebQybIdL4dmk/NIRNkmheh
PDWHTJDp/sVo/9QcMkHWsdx/rxwyQaZ5OfqemkMmyDTviPLUHDJBpnknlKfm
kAkyPT8Vy483h0yQdey68fO5/1kJMs2rUV6NrqMmyDSvQXlqDpkg0zyP8tQc
MkGmeReUp+aQCbIOfY/fM3xueNXBEc8LS79sfDChryK7/rxUmyRnHpt/gl9R
oYHC7kHl9l2DrK8K5Dsm/ZL5cEI/QaJoQVGAHMTr+/ZECEcm9NmVoPAdTVvV
sETUZppxYMBwXbbS7sYB7Yt5k6Gx8bOnpi43+Ij3VRmWWfrygaPmhyXiETa/
J/jMlRU2o6hfBZBxzHvo5BEHyJ523xQSbI3OQwBl15JsDxbxwM0316d1Dhvu
P51+/v0ELQwFPtnfabD067J1izrS1FPAV9Hdcu4VJeigpqxXbIXOezLkVw5e
9Gui77UdVMZUBh97WQteXxtLUxLo9Tro+q4tcWuuDfs/0D5UdRWXx6scmCtP
Ob1RauahwWjqWPTNVMgKUGypPkrfWxF4pzZ43y8mUHWm5WjVrqlsP6tHU0d7
hib2p3vjQr490Bl8xDUbkoXT2H6055ZGZtvPgNfnpGqD6xzZ/bMXq21zq50g
va6j9lqMPZTejm17bdSVzfmp4e343ZnuMPUrf9/fN1r6lfZjU13ExvY7cuaB
Tf6dLtY89M929ciLlYB5yqH8giT6PHLInz48I+oOAdG+p7cfn5CwOctDVH5X
L07s059rPU/nFDpDkHHtPathSx/bbXsk4fbK4dwtn5L3XJXs/gmJcVfznihh
xM5LGOIng9y7GfdOt9PncQJNoCl6904t3Dzqsy4rRgGXi4a9okbk8G1OXJ7a
jPvXEdIu5XgM9jsyr4oc2td+kodN1Yc8/BodIbM+WtYxqmF95/tJSWNygBub
Z7dZ9WmFk5zZ+5beZ2anGiTbVYqyXiUcPvtBxt1ES//5Hv/DRSIjUPZ9rTG0
SMGeN+lyyprWfPqcUujbYzrppZ/Yv0U77j7a9RYHxjZ/4dhKJ8heG7HFimih
pSA8ovAwB83CyOU29Zbeb9m7sUudp4To4g8PigdnQkZq8/ZQV0v/2YoSDvcn
amFDr/WrueVqcO5vlW1OdABZUBTfIsG9o4az0rN9C20UzItl+sD4OB7MIRXv
XHj2HnycXK1Rm2mv8rB4rKCqLN4N0iv0Pxb/pYHHUfNK+sIt/dywJ9SGL5Qz
h809Nqv0phqOy/bNXNOnAb27X2tKq6U/o/UD+UFbCTi0lpxfdRr3Pw8VDw/9
9oVBCu9mpfsOzObZOdDfu+cJrxs/5+BSz6nrL83SgH3a6o5WqRZcszML5hhc
YHdRs7R3pxLikoPLq5Q0b+nzGn2W5w25CurXB1wWtfPg6VlpVWUmsGB/7FqX
ubjfCby5VBL2a4OCuWnbtAOCZh7+BgaE3BU=
     "], {{{
        EdgeForm[], 
        RGBColor[0.148, 0.33, 0.54], 
        GraphicsGroupBox[{
          PolygonBox[{{78, 1, 80}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.24449029559595087`, 0.38360571977552826`, 0.6303639276216048], 
        GraphicsGroupBox[{
          PolygonBox[{{82, 5, 88}, {79, 2, 77}}], 
          PolygonBox[{{77, 2, 5, 82}, {80, 5, 2, 78}}]}]}, {
        EdgeForm[], 
        RGBColor[0.4126856397618812, 0.4487393622166356, 0.5764723395649005], 
        GraphicsGroupBox[{
          PolygonBox[{{82, 6, 77}, {84, 6, 83}, {90, 9, 96}, {87, 4, 85}}], 
          
          PolygonBox[{{83, 6, 9, 90}, {77, 6, 3, 79}, {81, 3, 6, 84}, {85, 4, 
           3, 81}, {88, 9, 6, 82}}]}]}, {
        EdgeForm[], 
        RGBColor[0.5880242060256171, 0.5103599446096418, 0.473397910834781], 
        GraphicsGroupBox[{
          
          PolygonBox[{{90, 10, 83}, {84, 7, 81}, {92, 10, 91}, {81, 7, 85}, {
           94, 8, 93}, {95, 17, 101}, {101, 17, 105}}], 
          
          PolygonBox[{{85, 7, 8, 87}, {89, 7, 10, 92}, {93, 8, 7, 89}, {96, 
           13, 10, 90}, {97, 13, 17, 95}, {83, 10, 7, 84}, {91, 10, 13, 
           97}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.7633627722893532, 0.5719805270026481, 0.37032348210466143`], 
        GraphicsGroupBox[{
          
          PolygonBox[{{18, 21, 22}, {15, 14, 18}, {103, 22, 107}, {12, 11, 
           15}, {15, 11, 14}, {22, 21, 25}, {97, 14, 91}, {114, 29, 118}, {86,
            15, 100}, {89, 11, 93}, {109, 29, 114}, {92, 11, 89}, {95, 14, 
           97}, {107, 22, 106}}], 
          
          PolygonBox[{{93, 11, 12, 94}, {91, 14, 11, 92}, {105, 21, 18, 
           101}, {106, 22, 25, 110}, {99, 12, 15, 86}, {110, 25, 29, 109}, {
           100, 15, 18, 102}, {102, 18, 22, 103}, {101, 18, 14, 95}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9061823224525701, 0.6354558061314254, 0.3091651996029674], 
        GraphicsGroupBox[{
          
          PolygonBox[{{104, 27, 113}, {34, 33, 37}, {122, 41, 128}, {120, 34, 
           119}, {116, 34, 120}, {86, 16, 99}, {16, 19, 20}, {110, 26, 106}, {
           20, 19, 23}, {111, 27, 104}, {27, 23, 26}, {30, 33, 34}, {27, 26, 
           30}, {132, 45, 137}, {109, 26, 110}, {102, 19, 100}, {126, 45, 
           132}, {103, 19, 102}}], 
          
          PolygonBox[{{100, 19, 16, 86}, {107, 23, 19, 103}, {98, 23, 27, 
           111}, {106, 26, 23, 107}, {118, 33, 30, 114}, {114, 30, 26, 109}, {
           123, 37, 41, 122}, {113, 27, 30, 115}, {108, 20, 23, 98}, {128, 41,
            45, 126}, {115, 30, 34, 116}, {119, 34, 37, 123}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9341916780857548, 0.705479195214387, 0.39599420206583974`], 
        GraphicsGroupBox[{
          
          PolygonBox[{{126, 42, 128}, {134, 50, 139}, {117, 39, 127}, {123, 
           38, 119}, {139, 50, 138}, {39, 35, 38}, {145, 61, 152}, {157, 65, 
           162}, {130, 46, 133}, {50, 49, 53}, {46, 49, 50}, {141, 57, 147}, {
           32, 31, 35}, {151, 65, 157}, {124, 39, 117}, {115, 31, 113}, {122, 
           38, 123}, {116, 31, 115}, {111, 24, 98}, {28, 31, 32}, {39, 38, 
           42}, {98, 24, 108}}], 
          
          PolygonBox[{{120, 35, 31, 116}, {128, 42, 38, 122}, {137, 49, 46, 
           132}, {133, 46, 50, 134}, {113, 31, 28, 104}, {127, 39, 42, 129}, {
           138, 50, 53, 142}, {119, 38, 35, 120}, {129, 42, 46, 130}, {132, 
           46, 42, 126}, {147, 57, 61, 145}, {142, 53, 57, 141}, {152, 61, 65,
            151}, {121, 32, 35, 112}, {112, 35, 39, 124}, {104, 28, 24, 
           111}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9622010337189394, 0.7755025842973485, 0.4828232045287122], 
        GraphicsGroupBox[{
          
          PolygonBox[{{151, 62, 152}, {149, 62, 153}, {154, 66, 159}, {44, 43,
            47}, {159, 66, 158}, {143, 55, 135}, {40, 43, 44}, {112, 36, 
           121}, {55, 54, 58}, {161, 73, 166}, {135, 55, 146}, {140, 51, 
           131}, {142, 54, 138}, {55, 51, 54}, {130, 43, 129}, {145, 58, 
           147}, {134, 47, 133}, {141, 54, 142}, {124, 36, 112}, {129, 43, 
           127}}], 
          
          PolygonBox[{{158, 66, 69, 163}, {138, 54, 51, 139}, {147, 58, 54, 
           141}, {139, 51, 47, 134}, {152, 62, 58, 145}, {157, 66, 62, 151}, {
           131, 51, 55, 143}, {146, 55, 58, 148}, {153, 62, 66, 154}, {136, 
           44, 47, 125}, {133, 47, 43, 130}, {117, 40, 36, 124}, {162, 69, 66,
            157}, {127, 43, 40, 117}, {125, 47, 51, 140}, {148, 58, 62, 
           149}, {163, 69, 73, 161}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9902103893521241, 0.8455259733803102, 0.5696522069915846], 
        GraphicsGroupBox[{
          
          PolygonBox[{{149, 59, 148}, {143, 52, 131}, {71, 70, 74}, {164, 71, 
           155}, {160, 67, 150}, {71, 67, 70}, {155, 71, 165}, {163, 70, 
           158}, {56, 59, 60}, {161, 70, 163}, {140, 48, 125}, {60, 59, 63}, {
           125, 48, 136}, {154, 63, 153}, {148, 59, 146}}], 
          
          PolygonBox[{{166, 74, 70, 161}, {144, 63, 67, 160}, {146, 59, 56, 
           135}, {153, 63, 59, 149}, {165, 71, 74, 167}, {150, 67, 71, 164}, {
           131, 52, 48, 140}, {159, 67, 63, 154}, {135, 56, 52, 143}, {158, 
           70, 67, 159}, {156, 60, 63, 144}}]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.95, 0.75], 
        GraphicsGroupBox[{
          
          PolygonBox[{{160, 64, 144}, {144, 64, 156}, {167, 75, 165}, {164, 
           68, 150}, {72, 75, 76}}], 
          
          PolygonBox[{{155, 72, 68, 164}, {150, 68, 64, 160}, {165, 75, 72, 
           155}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{156, 144, 160, 150, 164, 155, 165, 167}]}, "90"], 
        Annotation[#, 90, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{136, 125, 140, 131, 143, 135, 146, 148, 149, 153, 154, 159,
            158, 163, 161, 166}]}, "80"], Annotation[#, 80, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{121, 112, 124, 117, 127, 129, 130, 133, 134, 139, 138, 142,
            141, 147, 145, 152, 151, 157, 162}]}, "70"], 
        Annotation[#, 70, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{108, 98, 111, 104, 113, 115, 116, 120, 119, 123, 122, 128, 
           126, 132, 137}]}, "60"], Annotation[#, 60, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{99, 86, 100, 102, 103, 107, 106, 110, 109, 114, 118}]}, 
         "50"], Annotation[#, 50, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{94, 93, 89, 92, 91, 97, 95, 101, 105}]}, "40"], 
        Annotation[#, 40, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{87, 85, 81, 84, 83, 90, 96}]}, "30"], 
        Annotation[#, 30, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{79, 77, 82, 88}]}, "20"], Annotation[#, 20, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{80, 78}]}, "10"], 
        Annotation[#, 10, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox["\"r\[Mu]T\"", TraditionalForm], None}, {
        FormBox["\"\[Tau]Heal\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {{1., 10.}, {5., 12.5}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.148, 0.33, 0.54}}, {{0.24449029559595087`, 
              0.38360571977552826`, 0.6303639276216048}}, {{
              0.4126856397618812, 0.4487393622166356, 0.5764723395649005}}, {{
              0.5880242060256171, 0.5103599446096418, 0.473397910834781}}, {{
              0.7633627722893532, 0.5719805270026481, 
              0.37032348210466143`}}, {{0.9061823224525701, 
              0.6354558061314254, 0.3091651996029674}}, {{0.9341916780857548, 
              0.705479195214387, 0.39599420206583985`}}, {{0.9622010337189395,
               0.7755025842973485, 0.4828232045287122}}, {{0.9902103893521241,
               0.8455259733803102, 0.5696522069915847}}, {{1., 0.95, 
              0.75}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -90.}, {
                    Rational[15, 2], -90.}}, {{-7.5, -90.}, {7.5, -90.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -67.50000000000001}, {
                    Rational[
                    15, 2], -67.50000000000001}}, {{-7.5, \
-67.50000000000001}, {7.5, -67.50000000000001}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -45.000000000000014`}, {
                    Rational[
                    15, 2], -45.000000000000014`}}, {{-7.5, \
-45.000000000000014`}, {7.5, -45.000000000000014`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -22.5}, {
                    Rational[15, 2], -22.5}}, {{-7.5, -22.5}, {
                  7.5, -22.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 22.5}, {
                    Rational[15, 2], 22.5}}, {{-7.5, 22.5}, {7.5, 22.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 45.}, {
                    Rational[15, 2], 45.}}, {{-7.5, 45.}, {7.5, 45.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 67.5}, {
                    Rational[15, 2], 67.5}}, {{-7.5, 67.5}, {7.5, 67.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 89.99999999999997}, {
                    Rational[15, 2], 89.99999999999997}}, {{-7.5, 
                  89.99999999999997}, {7.5, 89.99999999999997}}]]}}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                
                LineBox[{{7.499999999999999, -112.5}, {7.499999999999999, 
                 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.499999999999999, -90.}, 
                    Offset[{4., 0}, {7.499999999999999, -90.}]}, {{
                    7.499999999999999, -67.50000000000001}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -67.50000000000001}]}, {{
                    7.499999999999999, -45.000000000000014`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -45.000000000000014`}]}, {{
                    7.499999999999999, -22.499999999999996`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -22.499999999999996`}]}, {{
                    7.499999999999999, 0.}, 
                    Offset[{4., 0}, {7.499999999999999, 0.}]}, {{
                    7.499999999999999, 22.499999999999996`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    22.499999999999996`}]}, {{7.499999999999999, 
                    45.000000000000014`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    45.000000000000014`}]}, {{7.499999999999999, 
                    67.50000000000001}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    67.50000000000001}]}, {{7.499999999999999, 
                    89.99999999999999}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    89.99999999999999}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999999, -90.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999999, -67.50000000000001}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["30", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -45.000000000000014`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["40", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -22.499999999999996`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999999, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["60", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    22.499999999999996`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["70", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    45.000000000000014`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["80", TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999999, 67.50000000000001}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["90", TraditionalForm], 
                    Offset[{7., 0.}, {7.499999999999999, 89.99999999999999}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"8.1648195800873`", ",", "97.42071081658808`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"10.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"20.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"30.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"40.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"50.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"60.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"70.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"80.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"90.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.843678912968877*^9, 3.8436789340291615`*^9}, 
   3.843679302345666*^9, 3.8436795102733603`*^9, 3.8436821458791656`*^9, 
   3.8437456514195457`*^9, 3.843767523813187*^9, 3.844204142496081*^9, 
   3.844212559725711*^9, 3.8442153329469805`*^9, 3.8442154193221064`*^9, 
   3.844787346821473*^9, 3.8448101552894135`*^9, 3.845064513359108*^9, 
   3.8454134009455457`*^9, 3.845501019551203*^9, 3.845673617953357*^9, 
   3.84572926099756*^9, 3.8460200945612984`*^9, 3.846257206133638*^9, 
   3.8465802118018627`*^9, 3.8472254724203825`*^9, 3.8472255334508553`*^9, 
   3.8474049771742315`*^9, 3.8474531268161545`*^9, 3.848015952291743*^9, 
   3.848057185388262*^9, 3.8480951542885013`*^9, 3.848098919177072*^9, 
   3.8480997200048227`*^9, 3.8481441460343547`*^9, 3.848355113125389*^9, 
   3.848530408207917*^9, 3.850343283840973*^9, 3.851118798592602*^9, 
   3.8511275168149786`*^9, 3.851127982319104*^9, 3.8530229255812373`*^9, 
   3.857637509645568*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"ff8e76f5-efa2-4d19-95a8-74408134602b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"healTimeInterpolation", "=", 
  RowBox[{"Interpolation", "@", "contourPoints"}]}]], "Input",
 CellChangeTimes->{{3.843679409777706*^9, 3.8436794246821165`*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"bb68d865-c391-4bbd-81e6-6967cc953bd1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               GrayLevel[0.6], 
               AbsolutePointSize[5], 
               PointBox[{1, 1}], 
               PointBox[{2, 4}], 
               PointBox[{3, 2}], 
               PointBox[{4, 3}]}, {{}, {}, {
                AbsoluteThickness[1], 
                Opacity[1.], 
                LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                 "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
             GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
               GrayLevel[0.7], 
               Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             PlotRange -> {{0, 5}, {0, 5}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "10.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "12.5`"}], "}"}]}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{
               GrayLevel[0.6], 
               AbsolutePointSize[5], 
               PointBox[{1, 1}], 
               PointBox[{2, 4}], 
               PointBox[{3, 2}], 
               PointBox[{4, 3}]}, {{}, {}, {
                AbsoluteThickness[1], 
                Opacity[1.], 
                LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                 "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
             GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
               GrayLevel[0.7], 
               Thickness[Tiny]], FrameTicks -> None, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}], 
             PlotRange -> {{0, 5}, {0, 5}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "10.`"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"5.`", ",", "12.5`"}], "}"}]}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"3", ",", "3"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{1., 10.}, {5., 12.5}}, {
   5, 7, 0, {19, 4}, {4, 4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
    1.5000000000000002`, 2., 2.5, 3.0000000000000004`, 3.5, 4., 
    4.500000000000001, 5., 5.5, 6., 6.5, 7.000000000000001, 7.5, 8., 8.5, 9., 
    9.5, 10.}, {5., 7.5, 10., 12.5}}, {
   Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
    14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
    32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
    50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 
    68, 69, 70, 71, 72, 73, 74, 75, 76}, CompressedData["
1:eJwBbQKS/SFib1JlAQAAAEwAAABKbmQ7Y1QgQDdFZZs6QC9AOzfn6gLYN0Av
sJTRKZs9QN8Q3lgJnzFAJWl/GBYcPECcucYw+15BQG7wjROQ5ENA4Et9guvO
OkACVhmQXMZBQE5s8Van3ERAlP6v7iFUR0AnoulpcHtAQDgKh1w8eURAcAb/
mISMR0AnrZfgfg9KQJCUFGnqykJAMWuUT2msRkB5kVL75tBJQMOkgz6SaExA
9Ziz7RqvRECv0cv/bpZIQBZDrBvH00tA7FVbk+OBTkAIGFT0dlRGQNbyT9Gk
UUpAS+UZAOipTUB4ambTUDZQQBMVEXim0kdAY4z/r3LsS0C/wsOrwl5PQIO1
O1tYGVFAj72IGwA3SUBck+2GbW9NQDPthuuqfFBApU8dnETtUUDJCB3udIlK
QGFc31oK4E5A0LMkMCY/UUChuRrPbrRSQHVxFAH/zktAdeD5IfsgUEAbUpc2
g/hRQEh+W3atcFNAzx7Sn+IKTUAghOj85ctQQM3I+TcQqlJAR1jTY4QjVEC8
NVh2Wj9OQGmTA8y9cVFAalSH8NxUU0DHCzIePs5UQAKvOoj5bU9AVuU/8UIT
UkBsfTJ0zvlTQOdifmf6cVVAfFOUWvJLUEBgano/ELFSQAZzEhKrmVRAPZi7
87YPVkD9F0l6+95QQDwuTyumS1NAhqWZ4yA1VUAzNY0UVahWQJbrahBscFFA
hJIk03HjU0CnWOXnysxVQHGB5PSdPFdA/BlhIoYAUkAgnefW0XhUQACLPGoz
YVZAwLGSpUXNV0Bb1MXufo9SQKeISIcZDFVAM+V/1NbyVkBvlA/t7FpYQCum
EKE=
    "]}, {Automatic, Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8436794257442675`*^9, 3.843679446832649*^9}, 
   3.843682151336664*^9, 3.843745956980138*^9, 3.8437717834725833`*^9, 
   3.844204142693265*^9, 3.844212578773116*^9, 3.8442153357636395`*^9, 
   3.8447873469353733`*^9, 3.844810155336212*^9, 3.84506451340308*^9, 
   3.8454134010035105`*^9, 3.8455010197102165`*^9, 3.8456736179992085`*^9, 
   3.8457292610539355`*^9, 3.8460200946192617`*^9, 3.8462572061745825`*^9, 
   3.846580211854337*^9, 3.847225472464336*^9, 3.8472255335752153`*^9, 
   3.847404977221202*^9, 3.847453127228898*^9, 3.8480159523437767`*^9, 
   3.848057185509267*^9, 3.848095154345466*^9, 3.848098919268749*^9, 
   3.848099720119001*^9, 3.8481441464123263`*^9, 3.8483551131840763`*^9, 
   3.8485304082878675`*^9, 3.8503432838863306`*^9, 3.851118798638655*^9, 
   3.8511275168680468`*^9, 3.851127982363015*^9, 3.8530229256300774`*^9, 
   3.857637509708066*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"2ee4c43e-90a9-44f4-8f8e-0bf94eac370e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"healTimeContour", "=", 
  RowBox[{"Interpolation", "@", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Check", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "*", "scale\[Tau]"}], ",", 
            RowBox[{"\[Mu]", "/.", 
             RowBox[{"FindRoot", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"healTimeInterpolation", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "*", "scale\[Tau]"}], ",",
                   "\[Mu]"}], "]"}], "\[Equal]", "25"}], ",", 
               RowBox[{"{", 
                RowBox[{"\[Mu]", ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "*", "r\[Mu]TScaleMin"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "*", "r\[Mu]TScaleMax"}]}],
                 "}"}]}], "]"}]}]}], "}"}], ",", "Nothing"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "scale\[Tau]", ",", "\[Tau]ScaleMin", ",", "\[Tau]ScaleMax", ",", 
          "\[Tau]ScaleStep"}], "}"}]}], "]"}], "&"}], "@", 
     "singleCellDKOEparams"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.8426145623108826`*^9, 3.842614581991639*^9}, {
   3.8429832813765*^9, 3.84298342606847*^9}, {3.842983620392959*^9, 
   3.842983669033077*^9}, {3.842983742798854*^9, 3.842983765137494*^9}, {
   3.8429841824264493`*^9, 3.842984182784*^9}, {3.8430768414510946`*^9, 
   3.843076849231571*^9}, {3.8436796783445587`*^9, 3.8436797151871057`*^9}, {
   3.843679762996256*^9, 3.8436797638697643`*^9}, 3.843679833297865*^9, 
   3.8436821670933514`*^9, {3.843682369072461*^9, 3.843682369398434*^9}, {
   3.8436824242441125`*^9, 3.843682435982582*^9}, {3.843745893279778*^9, 
   3.8437459504361*^9}, {3.843745985972086*^9, 3.8437459860906725`*^9}},
 CellLabel->
  "In[167]:=",ExpressionUUID->"000d161a-2226-4039-97f4-39901d6a8f0f"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"2.`\\\", \\\",\\\", \
\\\"4.316736099303694`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 167, 30, 
   18308412945679580016, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843679769916403*^9, 3.843679834332509*^9, {3.8436821531893826`*^9, 
   3.843682171062749*^9}, 3.8436823714197793`*^9, {3.843682426800962*^9, 
   3.8436824365666895`*^9}, {3.843745926903716*^9, 3.843745986619997*^9}, 
   3.843771791265189*^9, 3.84420414288647*^9, 3.844212579537286*^9, 
   3.8442153386192493`*^9, 3.8447873470123262`*^9, 3.8448101553891797`*^9, 
   3.845064513449053*^9, 3.8454134010654745`*^9, 3.845501019848641*^9, 
   3.845673618049178*^9, 3.8457292611069*^9, 3.8460200946782265`*^9, 
   3.84625720620961*^9, 3.8465802119023094`*^9, 3.847225472506709*^9, 
   3.8472255336591654`*^9, 3.8474049772531843`*^9, 3.847453127305849*^9, 
   3.8480159524036636`*^9, 3.848057185619605*^9, 3.848095154406429*^9, 
   3.8480989193347054`*^9, 3.8480997202139416`*^9, 3.8481441464662952`*^9, 
   3.8483551132540283`*^9, 3.84853040836382*^9, 3.850343283939297*^9, 
   3.8511187986856337`*^9, 3.851127516924282*^9, 3.851127982400993*^9, 
   3.853022925685043*^9, 3.857637509754941*^9},
 CellLabel->
  "During evaluation of \
In[167]:=",ExpressionUUID->"8ef94a3e-2fca-4f2f-9b73-6ba09c2d9eca"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"2.`\\\", \\\",\\\", \
\\\"4.316736171097999`\\\"}], \\\"}\\\"}]\\) lies outside the range of data \
in the interpolating function. Extrapolation will be used.\"", 2, 167, 31, 
   18308412945679580016, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843679769916403*^9, 3.843679834332509*^9, {3.8436821531893826`*^9, 
   3.843682171062749*^9}, 3.8436823714197793`*^9, {3.843682426800962*^9, 
   3.8436824365666895`*^9}, {3.843745926903716*^9, 3.843745986619997*^9}, 
   3.843771791265189*^9, 3.84420414288647*^9, 3.844212579537286*^9, 
   3.8442153386192493`*^9, 3.8447873470123262`*^9, 3.8448101553891797`*^9, 
   3.845064513449053*^9, 3.8454134010654745`*^9, 3.845501019848641*^9, 
   3.845673618049178*^9, 3.8457292611069*^9, 3.8460200946782265`*^9, 
   3.84625720620961*^9, 3.8465802119023094`*^9, 3.847225472506709*^9, 
   3.8472255336591654`*^9, 3.8474049772531843`*^9, 3.847453127305849*^9, 
   3.8480159524036636`*^9, 3.848057185619605*^9, 3.848095154406429*^9, 
   3.8480989193347054`*^9, 3.8480997202139416`*^9, 3.8481441464662952`*^9, 
   3.8483551132540283`*^9, 3.84853040836382*^9, 3.850343283939297*^9, 
   3.8511187986856337`*^9, 3.851127516924282*^9, 3.851127982400993*^9, 
   3.853022925685043*^9, 3.857637509770569*^9},
 CellLabel->
  "During evaluation of \
In[167]:=",ExpressionUUID->"e557af94-d21e-4069-a28e-012ff3b5c5ba"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction", "dmval", 
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"2.`\\\", \\\",\\\", \
\\\"4.58961796429959`\\\"}], \\\"}\\\"}]\\) lies outside the range of data in \
the interpolating function. Extrapolation will be used.\"", 2, 167, 32, 
   18308412945679580016, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843679769916403*^9, 3.843679834332509*^9, {3.8436821531893826`*^9, 
   3.843682171062749*^9}, 3.8436823714197793`*^9, {3.843682426800962*^9, 
   3.8436824365666895`*^9}, {3.843745926903716*^9, 3.843745986619997*^9}, 
   3.843771791265189*^9, 3.84420414288647*^9, 3.844212579537286*^9, 
   3.8442153386192493`*^9, 3.8447873470123262`*^9, 3.8448101553891797`*^9, 
   3.845064513449053*^9, 3.8454134010654745`*^9, 3.845501019848641*^9, 
   3.845673618049178*^9, 3.8457292611069*^9, 3.8460200946782265`*^9, 
   3.84625720620961*^9, 3.8465802119023094`*^9, 3.847225472506709*^9, 
   3.8472255336591654`*^9, 3.8474049772531843`*^9, 3.847453127305849*^9, 
   3.8480159524036636`*^9, 3.848057185619605*^9, 3.848095154406429*^9, 
   3.8480989193347054`*^9, 3.8480997202139416`*^9, 3.8481441464662952`*^9, 
   3.8483551132540283`*^9, 3.84853040836382*^9, 3.850343283939297*^9, 
   3.8511187986856337`*^9, 3.851127516924282*^9, 3.851127982400993*^9, 
   3.853022925685043*^9, 3.857637509770569*^9},
 CellLabel->
  "During evaluation of \
In[167]:=",ExpressionUUID->"1554fe83-5fdc-4929-803e-712590f9b667"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 167, 33, 18308412945679580016, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843679769916403*^9, 3.843679834332509*^9, {3.8436821531893826`*^9, 
   3.843682171062749*^9}, 3.8436823714197793`*^9, {3.843682426800962*^9, 
   3.8436824365666895`*^9}, {3.843745926903716*^9, 3.843745986619997*^9}, 
   3.843771791265189*^9, 3.84420414288647*^9, 3.844212579537286*^9, 
   3.8442153386192493`*^9, 3.8447873470123262`*^9, 3.8448101553891797`*^9, 
   3.845064513449053*^9, 3.8454134010654745`*^9, 3.845501019848641*^9, 
   3.845673618049178*^9, 3.8457292611069*^9, 3.8460200946782265`*^9, 
   3.84625720620961*^9, 3.8465802119023094`*^9, 3.847225472506709*^9, 
   3.8472255336591654`*^9, 3.8474049772531843`*^9, 3.847453127305849*^9, 
   3.8480159524036636`*^9, 3.848057185619605*^9, 3.848095154406429*^9, 
   3.8480989193347054`*^9, 3.8480997202139416`*^9, 3.8481441464662952`*^9, 
   3.8483551132540283`*^9, 3.84853040836382*^9, 3.850343283939297*^9, 
   3.8511187986856337`*^9, 3.851127516924282*^9, 3.851127982400993*^9, 
   3.853022925685043*^9, 3.857637509786191*^9},
 CellLabel->
  "During evaluation of \
In[167]:=",ExpressionUUID->"c5d2600d-7017-4d29-93c6-98402765dabc"],

Cell[BoxData[
 TemplateBox[{
  "Interpolation", "inhr", 
   "\"Requested order is too high; order has been reduced to \
\\!\\(\\*RowBox[{\\\"{\\\", \\\"1\\\", \\\"}\\\"}]\\).\"", 2, 167, 34, 
   18308412945679580016, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.843679769916403*^9, 3.843679834332509*^9, {3.8436821531893826`*^9, 
   3.843682171062749*^9}, 3.8436823714197793`*^9, {3.843682426800962*^9, 
   3.8436824365666895`*^9}, {3.843745926903716*^9, 3.843745986619997*^9}, 
   3.843771791265189*^9, 3.84420414288647*^9, 3.844212579537286*^9, 
   3.8442153386192493`*^9, 3.8447873470123262`*^9, 3.8448101553891797`*^9, 
   3.845064513449053*^9, 3.8454134010654745`*^9, 3.845501019848641*^9, 
   3.845673618049178*^9, 3.8457292611069*^9, 3.8460200946782265`*^9, 
   3.84625720620961*^9, 3.8465802119023094`*^9, 3.847225472506709*^9, 
   3.8472255336591654`*^9, 3.8474049772531843`*^9, 3.847453127305849*^9, 
   3.8480159524036636`*^9, 3.848057185619605*^9, 3.848095154406429*^9, 
   3.8480989193347054`*^9, 3.8480997202139416`*^9, 3.8481441464662952`*^9, 
   3.8483551132540283`*^9, 3.84853040836382*^9, 3.850343283939297*^9, 
   3.8511187986856337`*^9, 3.851127516924282*^9, 3.851127982400993*^9, 
   3.853022925685043*^9, 3.857637509801817*^9},
 CellLabel->
  "During evaluation of \
In[167]:=",ExpressionUUID->"94126c06-d79c-466d-847b-4e73b14a7735"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAU15GAgAA8D/dRCWWN8okQFQCdtJi
IfA/6AtP7sOqJEA2tAqMlEXwP97eeAOriCRAbmqBP2Bn8D/i7PqL1GgkQH99
sDyCiPA/6dC39Z1JJEBxnkQjc6zwP9nAdBzCJyRAucO6A/7N8D/Y64m2KAgk
QOL2lc1X8vA/wSKfDerlI0DlhinhBxbxP6wv70VLxCNAPRuf7lE38T+md5fx
7qQjQHe9eeVqW/E/ics/Wu2CI0AGZDbWHX3xP3xaQDYuYyNAb2erECee8T9w
v3vzDkQjQLl4hTT/wfE/TjC3bUoiI0BYjkFScePxPzzcSlvIAiNA2bFiWbIH
8j8SlN4FoeAiQDMyPKpJK/I/6yGtkRm/IkDjtvf0ekzyP9Pq05DUnyJAdEkY
KXtw8j+lv/pM6n0iQFrgGlcVkvI/hs95fEJeIkAihYJufrbyP1Dr+Gj1OyJA
w4aizz3a8j8c3bI2SBoiQLqMpCqX+/I/+AnFd936IUCSoAtvvx/zP7xC13XN
2CFAwLhUrYFB8z+QtkHn/7ghQMctVjWaYvM/ZgDnOdKZIUCvsLymgYbzPyZW
jEn/dyFA7TcFEgOo8z/15onMblghQAzNsmZTzPM/rYOHDDk2IUAEvxgF+u/z
P2j2vy2jFCFAUrVgnToR9D8ypFDCT/UgQIG5DR9KNfQ/5l3hE1fTIEAGwpya
81b0P6hSytigsyBAZCfkX/N39D9tHe5+ipQgQKSakA7Cm/Q/GvQR4s5yIEA5
Eh+3Kr30P9gFjrhVUyBAr5cSSWLh9D9+IwpMNzEgQHsh6NQzA/U/NHzeUlsR
IEAgCHaqWyT1P9hV23U+5B9Ap/xoaVJI9T8ay/m/e6AfQIP1PSLjafU/fLbI
8D1hH0BA/HfEQo71P7C5l5u1HB9A119qsPix9T/paNwIbdkeQMPHPpZI0/U/
QI7RXKmaHkCRPXhlZ/f1P2nLxiqbVh5AtLeTLiAZ9j+xfmzfERceQLGOZ0Ev
OvY//d2HVsjYHUCPc6A9DV72PxxVo0c0lR1Aw1y7M4V/9j9YQm8fJVYdQNhT
OxPMo/Y/aEc7ccsRHUDGp3M8acf2P374fIWxzhxACgCOX6Do9j+wH2+AHJAc
QC9mDWymDPc/t15h9TxMHECq0G5yRi73P9oTBFHiDBxABkk1YrVS9z/Q4KYm
PcgbQDsetJt6dvc/zVm/vteEG0DG9xTP2Zf3P+ZIiD33RRtAMt/a6we89z/T
T1E2zAEbQPTKggLQ3fc/3czKFSbCGkCuobn9///3P/6C4TW8gRpAQ2nLxA==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$74867#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {1., 6.626694528473989}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {1., 6.626694528473989}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{1., 1.5000000000000002`}, {6.626694528473989, 
               10.39495534138626}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "1.5000000000000002`"}], "}"}], "}"}],
                   "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAU15GAgAA8D/dRCWWN8okQFQCdtJi
IfA/6AtP7sOqJEA2tAqMlEXwP97eeAOriCRAbmqBP2Bn8D/i7PqL1GgkQH99
sDyCiPA/6dC39Z1JJEBxnkQjc6zwP9nAdBzCJyRAucO6A/7N8D/Y64m2KAgk
QOL2lc1X8vA/wSKfDerlI0DlhinhBxbxP6wv70VLxCNAPRuf7lE38T+md5fx
7qQjQHe9eeVqW/E/ics/Wu2CI0AGZDbWHX3xP3xaQDYuYyNAb2erECee8T9w
v3vzDkQjQLl4hTT/wfE/TjC3bUoiI0BYjkFScePxPzzcSlvIAiNA2bFiWbIH
8j8SlN4FoeAiQDMyPKpJK/I/6yGtkRm/IkDjtvf0ekzyP9Pq05DUnyJAdEkY
KXtw8j+lv/pM6n0iQFrgGlcVkvI/hs95fEJeIkAihYJufrbyP1Dr+Gj1OyJA
w4aizz3a8j8c3bI2SBoiQLqMpCqX+/I/+AnFd936IUCSoAtvvx/zP7xC13XN
2CFAwLhUrYFB8z+QtkHn/7ghQMctVjWaYvM/ZgDnOdKZIUCvsLymgYbzPyZW
jEn/dyFA7TcFEgOo8z/15onMblghQAzNsmZTzPM/rYOHDDk2IUAEvxgF+u/z
P2j2vy2jFCFAUrVgnToR9D8ypFDCT/UgQIG5DR9KNfQ/5l3hE1fTIEAGwpya
81b0P6hSytigsyBAZCfkX/N39D9tHe5+ipQgQKSakA7Cm/Q/GvQR4s5yIEA5
Eh+3Kr30P9gFjrhVUyBAr5cSSWLh9D9+IwpMNzEgQHsh6NQzA/U/NHzeUlsR
IEAgCHaqWyT1P9hV23U+5B9Ap/xoaVJI9T8ay/m/e6AfQIP1PSLjafU/fLbI
8D1hH0BA/HfEQo71P7C5l5u1HB9A119qsPix9T/paNwIbdkeQMPHPpZI0/U/
QI7RXKmaHkCRPXhlZ/f1P2nLxiqbVh5AtLeTLiAZ9j+xfmzfERceQLGOZ0Ev
OvY//d2HVsjYHUCPc6A9DV72PxxVo0c0lR1Aw1y7M4V/9j9YQm8fJVYdQNhT
OxPMo/Y/aEc7ccsRHUDGp3M8acf2P374fIWxzhxACgCOX6Do9j+wH2+AHJAc
QC9mDWymDPc/t15h9TxMHECq0G5yRi73P9oTBFHiDBxABkk1YrVS9z/Q4KYm
PcgbQDsetJt6dvc/zVm/vteEG0DG9xTP2Zf3P+ZIiD33RRtAMt/a6we89z/T
T1E2zAEbQPTKggLQ3fc/3czKFSbCGkCuobn9///3P/6C4TW8gRpAQ2nLxA==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$74867#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {1., 6.626694528473989}, 
              FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {1., 6.626694528473989}, DisplayFunction :> 
              Identity, Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{1., 1.5000000000000002`}, {6.626694528473989, 
               10.39495534138626}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"1.`", ",", "1.5000000000000002`"}], "}"}], "}"}],
                   "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{1., 1.5000000000000002`}}, {
   5, 7, 0, {2}, {2}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{1., 
   1.5000000000000002`}}, {
   Developer`PackedArrayForm, {0, 1, 2}, {10.39495540525509, 
    6.626694464605158}}, {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.843682436701602*^9, {3.843745927052622*^9, 3.843745986775901*^9}, 
   3.843771791328149*^9, 3.84420414294843*^9, 3.8442125795982494`*^9, 
   3.844215338743171*^9, 3.844787347080922*^9, 3.8448101554511385`*^9, 
   3.845064513513012*^9, 3.845413401130434*^9, 3.8455010199185934`*^9, 
   3.8456736181206484`*^9, 3.8457292611778564`*^9, 3.846020094743183*^9, 
   3.84625720627857*^9, 3.8465802119682665`*^9, 3.8472254726616154`*^9, 
   3.8472255337321196`*^9, 3.847404977318141*^9, 3.8474531274097843`*^9, 
   3.8480159524686227`*^9, 3.848057185690581*^9, 3.8480951544733872`*^9, 
   3.8480989194006643`*^9, 3.848099720291106*^9, 3.8481441465402474`*^9, 
   3.8483551133289804`*^9, 3.8485304084617577`*^9, 3.850343284012252*^9, 
   3.8511187987515907`*^9, 3.8511275169822464`*^9, 3.8511279824547367`*^9, 
   3.8530229257510004`*^9, 3.857637509817442*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"bc218b41-8f8c-4e38-b47a-9704bc5dab63"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "@", "healTimeContour"}]], "Input",
 CellChangeTimes->{{3.843679869304534*^9, 3.843679873602068*^9}, {
  3.8436823833043933`*^9, 3.843682383569679*^9}},
 CellLabel->
  "In[168]:=",ExpressionUUID->"b5ae8530-88e4-4e32-8023-d5cd1fd8601a"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[{{1., 10.39495540525509}, {1.5000000000000002`, 
       6.626694464605158}}]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.9895833333333336, 6.417346634569051},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0.9895833333333336, 1.5000000000000002`}, {6.417346634569051, 
   10.39495540525509}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.84367987390569*^9, 3.8436823528034735`*^9, 3.8436823840689087`*^9, 
   3.843746040156404*^9, {3.843771776035349*^9, 3.8437717924701977`*^9}, 
   3.84420414325156*^9, 3.844212583522889*^9, 3.84421534882768*^9, 
   3.8447873473631134`*^9, 3.8448101556371217`*^9, 3.8450645138219247`*^9, 
   3.8454134014833145`*^9, 3.8455010229978547`*^9, 3.8456736184589176`*^9, 
   3.845729261446529*^9, 3.846020095018034*^9, 3.846257206467308*^9, 
   3.8465802123116727`*^9, 3.847225472872957*^9, 3.8472255338867273`*^9, 
   3.8474049776316586`*^9, 3.8474531277645655`*^9, 3.8480159527816124`*^9, 
   3.848057185815402*^9, 3.848095154732806*^9, 3.848098919620673*^9, 
   3.848099720438688*^9, 3.8481441468038044`*^9, 3.8483551136115003`*^9, 
   3.8485304090244093`*^9, 3.8503432843386035`*^9, 3.8511187990196433`*^9, 
   3.8511275170621953`*^9, 3.8511279825316916`*^9, 3.853022926047847*^9, 
   3.8576375099111857`*^9},
 CellLabel->
  "Out[168]=",ExpressionUUID->"fb97e224-050c-4db3-8083-8b41545ae630"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions to get final contour (real deal)", "Chapter",
 CellChangeTimes->{{3.8437461742511063`*^9, 3.8437461868434315`*^9}, {
   3.843759125374918*^9, 3.843759126228305*^9}, 3.8437677644702463`*^9, {
   3.8437678190319147`*^9, 
   3.8437678211669974`*^9}},ExpressionUUID->"916b9414-4bbc-43ad-bfdb-\
9f1c81ce6842"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"paramPosition", "[", "param_", "]"}], ":=", 
    RowBox[{"First", "@", 
     RowBox[{"First", "@", 
      RowBox[{"Position", "[", 
       RowBox[{"extParams", ",", "param"}], "]"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"getHealContour", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getHealContour", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramAssociation_", "?", "AssociationQ"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"maxTime_", "?", "NumberQ"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
     "\[Tau]HealMin_", ",", "\[Tau]HealMax_", ",", "\[Tau]HealStep_"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"r\[Mu]TMin_", ",", "r\[Mu]TMax_", ",", "r\[Mu]TStep_"}], 
     "}"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"params", "=", 
       RowBox[{"paramAssociation", "/@", "extParams"}]}], ",", 
      "\[IndentingNewLine]", "contoursPoints", ",", "\[IndentingNewLine]", 
      "contoursPlot", ",", "\[IndentingNewLine]", "initRules", ",", 
      "\[IndentingNewLine]", "singleCellDKOSolution", ",", 
      "\[IndentingNewLine]", "interpolation", ",", "\[IndentingNewLine]", 
      "healTimeContour"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"initial", " ", "stuff"}], "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"initRules", "=", 
      RowBox[{"getNewInits", "[", "paramAssociation", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"singleCellDKOSolution", "=", 
      RowBox[{"ParametricNDSolveValue", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"deqns", "/.", "intParams"}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"jGJIP3", "\[Rule]", "0."}], ",", 
            RowBox[{"jGJc", "\[Rule]", "0."}]}], "}"}]}], "/.", "initRules"}],
         ",", 
        RowBox[{"c", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", "extParams"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"getHealTime", "[", "sol_", "]"}], ":=", 
      RowBox[{"Check", "[", 
       RowBox[{
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{"sol", "\[Equal]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"minInt", "+", "maxInt"}], ")"}], "/", "2"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "1", ",", "maxTime"}], "}"}]}], "]"}], ",", 
        RowBox[{"t", "\[Rule]", "\"\<fail\>\""}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "get", " ", "heal", " ", "time", " ", "for", " ", "each", " ", "point", 
       " ", "in", " ", "the", " ", "2", "D", " ", "parameter", " ", "space"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"contoursPoints", "=", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Tau]", ",", "r\[Mu]", ",", 
             RowBox[{"t", "/.", 
              RowBox[{"getHealTime", "[", 
               RowBox[{"CtoF", "[", 
                RowBox[{"singleCellDKOSolution", "@@", 
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"params", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"paramPosition", "[", "\[Tau]Heal", "]"}], 
                    "\[Rule]", "\[Tau]"}], ",", 
                    RowBox[{
                    RowBox[{"paramPosition", "[", "r\[Mu]T", "]"}], "\[Rule]",
                     "r\[Mu]"}]}], "}"}]}], "]"}]}], "]"}], "]"}]}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
            "\[Tau]", ",", "\[Tau]HealMin", ",", "\[Tau]HealMax", ",", 
             "\[Tau]HealStep"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
            "r\[Mu]", ",", "r\[Mu]TMin", ",", "r\[Mu]TMax", ",", 
             "r\[Mu]TStep"}], "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
         "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"contoursPlot", "=", 
      RowBox[{"ListContourPlot", "[", 
       RowBox[{"contoursPoints", ",", 
        RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\[Mu]-tear healing time (s)\>\"", ",", 
           "\"\<maximum  flux  ratio\>\""}], "}"}]}], ",", 
        RowBox[{"FrameStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Black", ",", "16"}], "]"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "get", " ", "points", " ", "from", " ", "25", " ", "second", " ", 
       "heal", " ", "time"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"interpolation", "=", 
      RowBox[{"Interpolation", "@", "contoursPoints"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"healTimeContour", "=", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Interpolation", "@", 
        RowBox[{"(", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Check", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Tau]", ",", 
               RowBox[{"r\[Mu]", "/.", 
                RowBox[{"FindRoot", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"interpolation", "[", 
                    RowBox[{"\[Tau]", ",", "r\[Mu]"}], "]"}], "\[Equal]", 
                   "25"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"r\[Mu]", ",", "r\[Mu]TMin", ",", "r\[Mu]TMax"}], 
                   "}"}]}], "]"}]}]}], "}"}], ",", "Nothing"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\[Tau]", ",", "\[Tau]HealMin", ",", "\[Tau]HealMax", ",", 
             "\[Tau]HealStep"}], "}"}]}], "]"}], ")"}]}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "healTimeContour", ",", "\[IndentingNewLine]", "contoursPlot", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListLinePlot", "[", 
         RowBox[{"healTimeContour", ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"Frame", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<\[Mu]-tear healing time (s)\>\"", ",", 
             "\"\<maximum  flux  ratio\>\""}], "}"}]}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"Thick", ",", " ", "Dashed", ",", "Black"}], "}"}], 
            "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.843769094267501*^9, 3.8437691110861692`*^9}, 
   3.8438148356828613`*^9, 3.8438181707168913`*^9, {3.843824239395362*^9, 
   3.843824239871467*^9}, {3.8438243469051867`*^9, 3.8438243638945837`*^9}, {
   3.844120565240511*^9, 3.8441205693604507`*^9}, {3.844204151601036*^9, 
   3.8442041598028336`*^9}, {3.844242857504846*^9, 3.84424286529803*^9}, 
   3.8442435091553783`*^9, {3.8447880041205215`*^9, 3.844788004410285*^9}, {
   3.845327191503714*^9, 3.8453272286023817`*^9}, {3.8453273671374006`*^9, 
   3.8453273941582823`*^9}, {3.8530240939086895`*^9, 3.853024106111658*^9}, {
   3.8530241444308014`*^9, 3.8530241571317377`*^9}, {3.853024230094516*^9, 
   3.853024236040735*^9}, {3.853024288458652*^9, 3.853024295255025*^9}, {
   3.8530244065524936`*^9, 3.853024408035922*^9}, {3.853024463509695*^9, 
   3.8530245075217185`*^9}, {3.8530245383154263`*^9, 
   3.8530245588031693`*^9}, {3.853024844771026*^9, 3.853024903572341*^9}, {
   3.8530250192795334`*^9, 3.8530250353831544`*^9}, {3.8530251346826677`*^9, 
   3.8530251476650457`*^9}, {3.853025200834345*^9, 3.853025208319582*^9}, {
   3.853104305580965*^9, 3.8531043112427363`*^9}, {3.8531045625344777`*^9, 
   3.853104571865775*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"74b709e4-36b5-495e-afce-43f97d1f583f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test", "Chapter",
 CellChangeTimes->{{3.8438181603335395`*^9, 
  3.8438181625237465`*^9}},ExpressionUUID->"2768d34a-3861-446d-bd88-\
31d0312c4fd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Test", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"getHealContour", "[", 
   RowBox[{"singleCellDKOEparamsAssociation", ",", "100.", ",", 
    RowBox[{"{", 
     RowBox[{"4.5", ",", "10.", ",", ".5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{".5", ",", "2.5", ",", ".5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8437695178054323`*^9, 3.843769566894192*^9}, {
  3.843769791903223*^9, 3.843769814202129*^9}, {3.8437699805582247`*^9, 
  3.843770023930751*^9}, {3.8437701686392756`*^9, 3.8437701700758567`*^9}, {
  3.8437703907364926`*^9, 3.8437703922604494`*^9}, {3.843770460055624*^9, 
  3.8437704745969653`*^9}, {3.843770602849638*^9, 3.8437706081806183`*^9}, {
  3.843770663022939*^9, 3.843770665426047*^9}, {3.8437711329235272`*^9, 
  3.843771138755371*^9}, {3.843771216916207*^9, 3.8437712187514324`*^9}, {
  3.8437718748900046`*^9, 3.8437718757148504`*^9}, {3.8437719823160334`*^9, 
  3.843771982478486*^9}, {3.843772464687496*^9, 3.843772475416853*^9}, {
  3.84381755256415*^9, 3.8438175558299103`*^9}, {3.8441209864836245`*^9, 
  3.8441209930381355`*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"77eaf18a-6a63-4ea3-89e0-97d6ae448cb8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["InterpolatingFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{{}, {}, 
                  TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAfI1pAwAAFkDz69IvYlDsP30DsTsU
MhZAsCPpB9r06z9QDhDSXmgWQHaqcGQglus/pB9CXxCbFkCPQkvtt0HrPz68
CFvDzBZAWmbS3JLy6j+q7ea0rAIXQEiwzAmPoOo/liWYBf00F0DIlQqgblfq
P1TyYLSDaxdABFLIz7EL6j9YSr7RC6EXQNShdpKtxOk/3Kju5frSF0DVt4ol
OoXpPzKcNlggCRhAtCBLVUND6T8JllHBrDsYQGB0i2AoCOk/JhsBmTptGEBr
tYeHW9DoPxU1yM7+ohhAT0b/nAOW6D+EVWL7KdUYQL7fORJ0Yeg/xQoUhosL
GUB2kKd2USroP0xLWn/uQBlAx0LZGdf15z9TknNvuHIZQNXw08Auxuc/LG6k
vbioGUCxDB4/sJPnP4ZQqAIg2xlAtvrv631l5z+yx8OlvREaQLqpOkVRM+c/
JMpzt1xHGkDt3eXB1wDnPxbT9r9ieRpAhJ6+91DS5j/acJEmn68aQGte6xV0
oOY/HhX/g0LiGkDJXHCManLmP6hEAVDnExtAStw08b1F5j8ECRt6wkkbQBP2
PePCFeY/4dMHmwR8G0BnoK2qaenlP5AzDBp9shtAeWZICci55T+FHqUH9+cb
QCcYZW5ti+U/+g8R7NcZHECHALU8Y2DlP0GWlC7vTxxABpG/tuox5T8II+tn
bYIcQKEancPZBuU/FTvWD+2zHECDgjGH6tzkP/Tn2BWj6RxAsvbOCriv5D9U
m64SwBsdQI+H5VPTheQ/huObbRNSHUDjvy4fs1jkPzgyXL/NhB1AD1Q3mNIu
5D8wDLF/ibYdQFE2ofn/BeQ/+nodnnvsHUAEwGkT+NnjP0TwXLPUHh5Ak5OX
+Q2x4z9g+rMmZFUeQPzCIc7rhOM/wo+fCPWKHkBYDqM10lnjP6UrXuHsvB5A
S5CvW9Ax4z9aXDQYG/MeQKj4KH2kBuM/j5PdRbAlH0A4Xu3nht7iPwpWG+JG
Vx9AeFkl9l634j9XrXDcE40fQIhz5rESjeI/JAuZzUe/H0CnewcjxWXiP8P9
2Byy9R9AKGwE4Vc74j/UvVbtjhUgQPXuQz/cEeI/B4CqR3guIEBQAIOjUOvh
P6MMCtF8SSBA9Ci0DanB4T9/HNPVtGIgQHYzqrbpmuE/xPanCQh+IECc9HFV
EXHhP60Wx/TbmCBAE182vB1I4T/WuU9b47EgQJX+opwFIuE/aCfk8AXNIEAn
JmMN1vjgPzoY4gFc5iBAIx2zKHvS4D9COUv+//8gQKaxHdfBq+A/JhzA0A==

                    "]]}, 
                   Annotation[#, "Charting`Private`Tag$75428#1"]& ]}}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {5.5, 0.5209664536937921}, 
                FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None},
                 DisplayFunction -> Identity, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {5.5, 0.5209664536937921}, DisplayFunction :> 
                Identity, Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultMeshStyle" -> AbsolutePointSize[6], 
                  "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{5.5, 8.5}, {0.5209664536937921, 
                 0.8848124441204831}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "8.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{{{}, {}, 
                  TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAfI1pAwAAFkDz69IvYlDsP30DsTsU
MhZAsCPpB9r06z9QDhDSXmgWQHaqcGQglus/pB9CXxCbFkCPQkvtt0HrPz68
CFvDzBZAWmbS3JLy6j+q7ea0rAIXQEiwzAmPoOo/liWYBf00F0DIlQqgblfq
P1TyYLSDaxdABFLIz7EL6j9YSr7RC6EXQNShdpKtxOk/3Kju5frSF0DVt4ol
OoXpPzKcNlggCRhAtCBLVUND6T8JllHBrDsYQGB0i2AoCOk/JhsBmTptGEBr
tYeHW9DoPxU1yM7+ohhAT0b/nAOW6D+EVWL7KdUYQL7fORJ0Yeg/xQoUhosL
GUB2kKd2USroP0xLWn/uQBlAx0LZGdf15z9TknNvuHIZQNXw08Auxuc/LG6k
vbioGUCxDB4/sJPnP4ZQqAIg2xlAtvrv631l5z+yx8OlvREaQLqpOkVRM+c/
JMpzt1xHGkDt3eXB1wDnPxbT9r9ieRpAhJ6+91DS5j/acJEmn68aQGte6xV0
oOY/HhX/g0LiGkDJXHCManLmP6hEAVDnExtAStw08b1F5j8ECRt6wkkbQBP2
PePCFeY/4dMHmwR8G0BnoK2qaenlP5AzDBp9shtAeWZICci55T+FHqUH9+cb
QCcYZW5ti+U/+g8R7NcZHECHALU8Y2DlP0GWlC7vTxxABpG/tuox5T8II+tn
bYIcQKEancPZBuU/FTvWD+2zHECDgjGH6tzkP/Tn2BWj6RxAsvbOCriv5D9U
m64SwBsdQI+H5VPTheQ/huObbRNSHUDjvy4fs1jkPzgyXL/NhB1AD1Q3mNIu
5D8wDLF/ibYdQFE2ofn/BeQ/+nodnnvsHUAEwGkT+NnjP0TwXLPUHh5Ak5OX
+Q2x4z9g+rMmZFUeQPzCIc7rhOM/wo+fCPWKHkBYDqM10lnjP6UrXuHsvB5A
S5CvW9Ax4z9aXDQYG/MeQKj4KH2kBuM/j5PdRbAlH0A4Xu3nht7iPwpWG+JG
Vx9AeFkl9l634j9XrXDcE40fQIhz5rESjeI/JAuZzUe/H0CnewcjxWXiP8P9
2Byy9R9AKGwE4Vc74j/UvVbtjhUgQPXuQz/cEeI/B4CqR3guIEBQAIOjUOvh
P6MMCtF8SSBA9Ci0DanB4T9/HNPVtGIgQHYzqrbpmuE/xPanCQh+IECc9HFV
EXHhP60Wx/TbmCBAE182vB1I4T/WuU9b47EgQJX+opwFIuE/aCfk8AXNIEAn
JmMN1vjgPzoY4gFc5iBAIx2zKHvS4D9COUv+//8gQKaxHdfBq+A/JhzA0A==

                    "]]}, 
                   Annotation[#, "Charting`Private`Tag$75428#1"]& ]}}, {}}, {
               DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {5.5, 0.5209664536937921}, 
                FrameTicks -> {{{}, {}}, {{}, {}}}, GridLines -> {None, None},
                 DisplayFunction -> Identity, PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {5.5, 0.5209664536937921}, DisplayFunction :> 
                Identity, Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 3.5 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultMeshStyle" -> AbsolutePointSize[6], 
                  "ScalingFunctions" -> None, 
                  "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                PlotRange -> {{5.5, 8.5}, {0.5209664536937921, 
                 0.8848124441204831}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"5.5`", ",", "8.5`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    InterpolatingFunction[{{5.5, 8.5}}, {
     5, 7, 0, {7}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, {{5.5, 6., 6.5,
      7., 7.5, 8., 8.5}}, {
     Developer`PackedArrayForm, {0, 1, 2, 3, 4, 5, 6, 7}, {0.8848124559983849,
       0.7907938645035331, 0.7270702606849727, 0.6707417908673435, 
      0.6184204855016416, 0.5687657414158522, 0.5209664488996969}}, {
     Automatic}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   TemplateBox[{
     GraphicsBox[
      GraphicsComplexBox[CompressedData["
1:eJxl1HtQVFUcwPENECGNAnmzu+wuSGASCSuBM3Z+FKLxEAT/AMVAAlcGQkWB
YhgEzEgCQmgwwCCQl2IQojwmS14SjYkGhBE2s0vLLmzLchViL6+oRs9hPO7M
zpnP3L3fOXP3np8w6lhwjA6Hw8n57/v/+uRjAk9WBj1rljIHnrXe09WUuh+b
pcyhfo/vN3+6StGzZiizlHEPG/csqR42Q5mljHvYuGdN9bAZyixl3MPGPS7V
w2Yos5RxDxv3+FQPm6HMUsY9bNwTUD1shjJLGfewcU9I9bAZyixl3MPGPRHV
w2Yos5RxDxv37KgeNkOZpYx72LhnT/WwGcosZdzD1gO1IHLM+C0T2Jt2urB9
vRYNj/tYMNtNofGUvAo5KlH3za2xcR4mwG4MOBjMnyHndecfTa8XJWnJ+Zua
VeWH7JtDzoWS5Y4KM/BvO2xkmfkI5facrZLrbaL2bwqC+lqBRKwDL/Lv667+
aAHNL5+Wre+UofYaZ4X2N3N4Z7BwADym0HnPuo7Wt80g2a3P1Vc1gZLERgZb
jptCWHj+raZ0NTmvvw7bBCzYThC7nkgaDhlSodEHhjy3/OfPe9hK2qnzDING
uoyuSHeaUc/HHDzOFD3I0v8HWccmhDgKrcClLTf6+3kFsujyi9K+aQm7tJXT
3qAh59u8bPXiwzMyYv1+SNm9pCSen8vcdy1RgwaaThQ/jLeAfvCszfNfJNfb
G8rK9R6wyABNJXy3f21+uMtcRMZxNuA/n6FJrpOjbbpF8jvp1pCikIx9bahG
edVLvJRGK+p9sIbkT10CckQKYqfA0hf08tXE2b3l/J15f6PuusXAvnU2oI00
61RMzqL60LmKn9p50LnjEKfFcxz5ZTVk5PRyoXb60mLD2BSZF2Kj3aP77OXE
4zXNtxJaVai55cqHSRd41PPmQuJHsQVBaY9RRkTBK8qjNtT7wIUx3XC/ixt0
gRvcerJpgy3wjwVEfVylRO+vrLr0beTDlCknY6BkhsyXwcjuXSsrMuJ4ns7t
LUOTxPq/e3mH1s+gik+yT17X4P2szaMSc/sG7cgqqv7mtuzGFQF0bK75s3L/
BFpQ3S3kbRZAYpBwyKFxGl0ul7/K7bSlnq8Azqp0VtLHFMSl2b5Koa4G7eFx
+j635IMsZ1XZ+dUqub74xbtHY9yWkFQd4bx0fW2+mbj3e2//RQij5WktDepx
dK+3dGTWWwibWkKKu7/9i8wr41TDifo7cuKrxe0mlXvVxOfkrjWXXtOiVJB6
BDsJ4Y3lFY+EG/NkntybiG4u7dEBh7Bcq8wFEZR8sEOikUjRtjz3VK8jIpjc
eiF8sgz/vyKIz/IR/Vw5Tpxs7/dZ0lkVsaTYveXke3NIMeL7w1SzCAb3XH7p
2vHHZN445pwQiPU5YOcW0yc+Zwf3714taYlXkv0YtJkHpR9am4dHJJq2sepJ
NCc4sC7zy+fnozQ6yiux9BGK6+9isgpE5P1JPqzvYOlEz1d74EUc8HncoCC+
uSx2MQ6dQYEesZKlRTvo4R+MMjHlwL+6ef9s
       "], {{{
          EdgeForm[], 
          RGBColor[0.148, 0.33, 0.54], 
          GraphicsGroupBox[{
            
            PolygonBox[{{60, 9, 69}, {67, 14, 79}, {69, 9, 71}, {79, 14, 
             87}}], 
            PolygonBox[{{71, 9, 14, 67}}]}]}, {
          EdgeForm[], 
          RGBColor[
          0.47155723126203003`, 0.4694290589099786, 0.5418641196414904], 
          GraphicsGroupBox[{
            
            PolygonBox[{{92, 29, 102}, {102, 29, 109}, {85, 24, 94}, {77, 19, 
             88}}], 
            
            PolygonBox[{{68, 67, 79, 80}, {88, 19, 24, 85}, {61, 60, 69, 
             70}, {94, 24, 29, 92}, {72, 71, 67, 68}, {70, 69, 71, 72}}], 
            PolygonBox[{{80, 79, 87, 19, 77}}]}]}, {
          EdgeForm[], 
          RGBColor[
          0.7246341745246485, 0.5583698376923685, 0.3930904533145836], 
          GraphicsGroupBox[{
            
            PolygonBox[{{115, 44, 124}, {68, 10, 72}, {59, 5, 63}, {64, 10, 
             74}, {130, 49, 135}, {107, 39, 117}, {122, 49, 130}, {74, 10, 
             73}, {100, 34, 110}}], 
            
            PolygonBox[{{81, 80, 77, 78}, {86, 85, 94, 95}, {89, 88, 85, 
             86}, {95, 94, 92, 93}, {117, 39, 44, 115}, {78, 77, 88, 89}, {
             110, 34, 39, 107}, {63, 5, 10, 64}, {62, 1, 5, 59}, {124, 44, 49,
              122}, {93, 92, 102, 103}, {72, 10, 5, 70}, {70, 5, 1, 61}}], 
            PolygonBox[{{103, 102, 109, 34, 100}, {73, 10, 68, 80, 81}}]}]}, {
          EdgeForm[], 
          RGBColor[
          0.9124139165794356, 0.6510347914485891, 0.32848314139625046`], 
          GraphicsGroupBox[{
            
            PolygonBox[{{93, 25, 95}, {15, 20, 16}, {7, 6, 11}, {81, 15, 
             73}, {66, 7, 75}, {64, 6, 63}, {91, 25, 97}, {4, 3, 7}, {59, 2, 
             62}, {3, 2, 6}, {82, 16, 83}, {11, 15, 16}, {86, 20, 89}, {7, 3, 
             6}, {129, 54, 136}, {78, 15, 81}, {97, 25, 96}, {83, 16, 84}}], 
            
            PolygonBox[{{118, 117, 115, 116}, {123, 122, 130, 131}, {89, 20, 
             15, 78}, {108, 107, 117, 118}, {116, 115, 124, 125}, {111, 110, 
             107, 108}, {84, 16, 20, 90}, {74, 11, 6, 64}, {73, 15, 11, 74}, {
             125, 124, 122, 123}, {95, 25, 20, 86}, {76, 11, 16, 82}, {65, 4, 
             7, 66}, {75, 7, 11, 76}, {63, 6, 2, 59}, {104, 103, 100, 101}, {
             90, 20, 25, 91}, {101, 100, 110, 111}}], 
            
            PolygonBox[{{131, 130, 135, 54, 129}, {96, 25, 93, 103, 
             104}}]}]}, {
          EdgeForm[], 
          RGBColor[
          0.9528415432987037, 0.7521038582467594, 0.4538087842259817], 
          GraphicsGroupBox[{
            
            PolygonBox[{{91, 21, 90}, {35, 40, 36}, {116, 40, 118}, {127, 50, 
             133}, {112, 36, 113}, {30, 35, 31}, {129, 50, 131}, {21, 26, 
             22}, {18, 17, 22}, {113, 36, 114}, {133, 50, 132}, {26, 31, 
             27}, {123, 45, 125}, {36, 31, 35}, {26, 30, 31}, {23, 22, 27}, {
             27, 22, 26}, {108, 35, 111}, {120, 45, 126}, {99, 27, 105}, {76, 
             12, 75}, {90, 21, 84}, {22, 17, 21}, {13, 12, 17}, {17, 18, 
             13}, {22, 23, 18}, {66, 8, 65}, {12, 13, 8}, {104, 30, 96}, {82, 
             12, 76}, {101, 30, 104}}], 
            
            PolygonBox[{{98, 23, 27, 99}, {105, 27, 31, 106}, {97, 26, 21, 
             91}, {114, 36, 40, 119}, {111, 35, 30, 101}, {118, 40, 35, 
             108}, {84, 21, 17, 83}, {75, 12, 8, 66}, {83, 17, 12, 82}, {119, 
             40, 45, 120}, {106, 31, 36, 112}, {125, 45, 40, 116}, {126, 45, 
             50, 127}, {96, 30, 26, 97}, {131, 50, 45, 123}}], 
            PolygonBox[{{132, 50, 129, 136, 137}}]}]}, {
          EdgeForm[], 
          RGBColor[
          0.9932691700179719, 0.8531729250449298, 0.5791344270557128], 
          GraphicsGroupBox[{
            
            PolygonBox[{{137, 55, 132}, {106, 32, 105}, {47, 42, 46}, {33, 32,
              37}, {28, 32, 33}, {37, 38, 33}, {99, 28, 98}, {43, 42, 47}, {
             57, 52, 56}, {43, 47, 48}, {51, 56, 52}, {51, 55, 56}, {127, 46, 
             126}, {48, 47, 52}, {46, 51, 47}, {112, 32, 106}, {41, 46, 42}, {
             119, 41, 114}, {138, 57, 128}, {120, 41, 119}, {52, 47, 51}, {38,
              42, 43}, {42, 37, 41}, {38, 37, 42}}], 
            
            PolygonBox[{{133, 51, 46, 127}, {113, 37, 32, 112}, {105, 32, 28, 
             99}, {126, 46, 41, 120}, {121, 52, 57, 138}, {132, 55, 51, 
             133}, {114, 41, 37, 113}, {134, 48, 52, 121}}]}]}, {
          EdgeForm[], 
          RGBColor[1., 0.95, 0.75], 
          GraphicsGroupBox[{
            PolygonBox[{{138, 53, 121}, {121, 53, 134}}], 
            PolygonBox[{{128, 58, 53, 138}}]}]}}, {{}, 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            LineBox[{128, 138, 121, 134}]}, "60"], 
          Annotation[#, 60, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            
            LineBox[{98, 99, 105, 106, 112, 113, 114, 119, 120, 126, 127, 133,
              132, 137}]}, "50"], Annotation[#, 50, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            
            LineBox[{65, 66, 75, 76, 82, 83, 84, 90, 91, 97, 96, 104, 101, 
             111, 108, 118, 116, 125, 123, 131, 129, 136}]}, "40"], 
          Annotation[#, 40, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            
            LineBox[{62, 59, 63, 64, 74, 73, 81, 78, 89, 86, 95, 93, 103, 100,
              110, 107, 117, 115, 124, 122, 130, 135}]}, "30"], 
          Annotation[#, 30, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            LineBox[{61, 70, 72, 68, 80, 77, 88, 85, 94, 92, 102, 109}]}, 
           "20"], Annotation[#, 20, "Tooltip"]& ], 
         TagBox[
          TooltipBox[{
            Directive[
             GrayLevel[0], 
             Opacity[0.5], 
             CapForm["Butt"]], 
            LineBox[{87, 79, 67, 71, 69, 60}]}, "10"], 
          Annotation[#, 10, "Tooltip"]& ], {}, {}}}], {
      DisplayFunction -> Identity, AspectRatio -> 1, 
       AxesOrigin -> {Automatic, Automatic}, DisplayFunction :> Identity, 
       Frame -> True, FrameLabel -> {{
          FormBox["\"maximum  flux  ratio\"", TraditionalForm], None}, {
          FormBox["\"\[Mu]-tear healing time (s)\"", TraditionalForm], None}},
        FrameStyle -> Directive[
         GrayLevel[0], 16], 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, 
         "DefaultGraphicsInteraction" -> {
          "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
           "Effects" -> {
            "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2},
              "Droplines" -> {
              "freeformCursorMode" -> True, 
               "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
         "GridLinesInFront" -> True}, PlotRange -> {{4.5, 10.}, {0.5, 2.5}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     FormBox[
      FormBox[
       TemplateBox[{
         FormBox[
          StyleBox[
           StyleBox[
            PaneBox[
             GraphicsBox[{
               
               RasterBox[{{{0.148, 0.33, 0.54}}, {{0.47155723126203, 
                0.4694290589099786, 0.5418641196414904}}, {{
                0.7246341745246485, 0.5583698376923685, 
                0.3930904533145836}}, {{0.9124139165794356, 
                0.6510347914485891, 0.32848314139625046`}}, {{
                0.9528415432987037, 0.7521038582467594, 
                0.4538087842259817}}, {{0.9932691700179719, 
                0.8531729250449298, 0.5791344270557127}}, {{1., 0.95, 
                0.75}}}, {{
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}}], {Antialiasing -> False, 
                AbsoluteThickness[0.1], 
                Directive[
                 Opacity[0.3], 
                 GrayLevel[0]], 
                LineBox[
                 NCache[{{
                    Rational[15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[-225, 2]}, {
                    Rational[-15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[225, 2]}, {
                    Rational[15, 2], 
                    Rational[-225, 2]}}, {{
                  7.5, -112.5}, {-7.5, -112.5}, {-7.5, 112.5}, {7.5, 112.5}, {
                  7.5, -112.5}}]]}, {
                CapForm[None], {{
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5], 
                   CapForm["Butt"]], 
                  CapForm["Butt"], 
                  LineBox[
                   NCache[{{
                    Rational[-15, 2], -80.35714285714286}, {
                    Rational[
                    15, 2], -80.35714285714286}}, {{-7.5, \
-80.35714285714286}, {7.5, -80.35714285714286}}]]}, {
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5], 
                   CapForm["Butt"]], 
                  CapForm["Butt"], 
                  LineBox[
                   NCache[{{
                    Rational[-15, 2], -48.21428571428572}, {
                    Rational[
                    15, 2], -48.21428571428572}}, {{-7.5, \
-48.21428571428572}, {7.5, -48.21428571428572}}]]}, {
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5], 
                   CapForm["Butt"]], 
                  CapForm["Butt"], 
                  LineBox[
                   NCache[{{
                    Rational[-15, 2], -16.071428571428584`}, {
                    Rational[
                    15, 2], -16.071428571428584`}}, {{-7.5, \
-16.071428571428584`}, {7.5, -16.071428571428584`}}]]}, {
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5], 
                   CapForm["Butt"]], 
                  CapForm["Butt"], 
                  LineBox[
                   NCache[{{
                    Rational[-15, 2], 16.071428571428584`}, {
                    Rational[15, 2], 16.071428571428584`}}, {{-7.5, 
                    16.071428571428584`}, {7.5, 16.071428571428584`}}]]}, {
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5], 
                   CapForm["Butt"]], 
                  CapForm["Butt"], 
                  LineBox[
                   NCache[{{
                    Rational[-15, 2], 48.21428571428572}, {
                    Rational[15, 2], 48.21428571428572}}, {{-7.5, 
                    48.21428571428572}, {7.5, 48.21428571428572}}]]}, {
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.5], 
                   CapForm["Butt"]], 
                  CapForm["Butt"], 
                  LineBox[
                   NCache[{{
                    Rational[-15, 2], 80.35714285714286}, {
                    Rational[15, 2], 80.35714285714286}}, {{-7.5, 
                    80.35714285714286}, {7.5, 80.35714285714286}}]]}}}, 
               StyleBox[{Antialiasing -> False, 
                 StyleBox[
                  LineBox[{{7.5, -112.49999999999999`}, {7.5, 112.5}}], {
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -80.35714285714285}, 
                    Offset[{4., 0}, {7.5, -80.35714285714285}]}, {{
                    7.5, -48.21428571428571}, 
                    Offset[{4., 0}, {7.5, -48.21428571428571}]}, {{
                    7.5, -16.07142857142857}, 
                    Offset[{4., 0}, {7.5, -16.07142857142857}]}, {{7.5, 
                    16.071428571428584`}, 
                    Offset[{4., 0}, {7.5, 16.071428571428584`}]}, {{7.5, 
                    48.21428571428572}, 
                    Offset[{4., 0}, {7.5, 48.21428571428572}]}, {{7.5, 
                    80.35714285714286}, 
                    Offset[{4., 0}, {7.5, 80.35714285714286}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -80.35714285714285}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["20", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -48.21428571428571}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["30", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -16.07142857142857}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["40", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 16.071428571428584`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["50", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 48.21428571428572}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["60", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 80.35714285714286}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                    StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                   False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}}, StripOnInput -> False]}, {
                "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
              Scaled[0.02], PlotRange -> All, Frame -> True, 
              FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
              Opacity[0], FrameTicksStyle -> Opacity[0], 
              ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
             Left, AppearanceElements -> None, 
             ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
             "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
           FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
           False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ), 
        InterpretationFunction :> (RowBox[{"BarLegend", "[", 
           RowBox[{
             RowBox[{"{", 
               RowBox[{
                 RowBox[{
                   RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"1.0098977529286826`", ",", "62.8487985956655`"}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"10.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"20.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"30.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"40.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"50.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"60.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                   "}"}]}], "}"}], ",", 
             RowBox[{"LabelStyle", "\[Rule]", 
               RowBox[{"{", "}"}]}], ",", 
             RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
             RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
             RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
             RowBox[{"ScalingFunctions", "\[Rule]", 
               RowBox[{"{", 
                 RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
             RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
             RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )],
        TraditionalForm], TraditionalForm]},
    "Legended",
    DisplayFunction->(GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}]& ),
    Editable->True,
    InterpretationFunction->(RowBox[{"Legended", "[", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], ",", 
   GraphicsBox[{{}, {{{}, {}, 
       {GrayLevel[0], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
        Dashing[{Small, Small}], 
        LineBox[{{5.5, 0.8848124559983849}, {6., 0.7907938645035331}, {6.5, 
         0.7270702606849727}, {7., 0.6707417908673435}, {7.5, 
         0.6184204855016416}, {8., 0.5687657414158522}, {8.5, 
         0.5209664488996969}}]}}, 
      {GrayLevel[0], PointSize[
        NCache[
         Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
       Dashing[{Small, Small}]}, {
       {GrayLevel[0], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
        Dashing[{Small, Small}]}, {}}, {
       {GrayLevel[0], PointSize[
         NCache[
          Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
        Dashing[{Small, Small}]}, {}}}, {{}, {}}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{5.4375, 0.5007527818386589},
    DisplayFunction->Identity,
    Frame->{{True, False}, {True, False}},
    FrameLabel->{{
       FormBox["\"maximum  flux  ratio\"", TraditionalForm], None}, {
       FormBox["\"\[Mu]-tear healing time (s)\"", TraditionalForm], None}},
    FrameStyle->Directive[
      GrayLevel[0], 16],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    Method->{
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Identity[
           Part[#, 1]], 
          Identity[
           Part[#, 2]]}& )}},
    PlotRange->{{5.4375, 8.5}, {0.5007527818386589, 0.8848124559983849}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{3.8438149595556602`*^9, 3.8438152662527075`*^9, 
  3.84381779583928*^9, 3.8438182863914366`*^9, 3.8441209664521875`*^9, 
  3.844120999872797*^9, 3.8442041759099264`*^9, 3.844212598042929*^9, 
  3.844787353167345*^9, 3.8448101615532336`*^9, 3.845064518912834*^9, 
  3.8454134069444385`*^9, 3.8455011195108557`*^9, 3.84567362429981*^9, 
  3.8457292679831333`*^9, 3.8460201004306064`*^9, 3.846257212939412*^9, 
  3.8465802180131097`*^9, 3.847225473236426*^9, 3.847225539627554*^9, 
  3.8474049835251617`*^9, 3.8474531367372637`*^9, 3.848015958393828*^9, 
  3.8480571919519944`*^9, 3.8480951605942755`*^9, 3.84809892595833*^9, 
  3.8480997266248503`*^9, 3.8481441557952704`*^9, 3.848355119586796*^9, 
  3.848530417018364*^9, 3.850343290051012*^9, 3.8511188049523735`*^9, 
  3.8511275254903245`*^9, 3.851127988075649*^9, 3.8530229317646246`*^9, 
  3.8576375155128784`*^9},
 CellLabel->
  "Out[172]=",ExpressionUUID->"af734ff3-ed83-4258-b899-04458762b263"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Radial Cell Line", "Title",
 CellChangeTimes->{{3.8438153033765993`*^9, 
  3.843815305895936*^9}},ExpressionUUID->"c0f1d461-8e5b-4acd-9098-\
26089fc2424d"],

Cell["\<\
This section uses a 1D version of the model by assuming radial symmetry. This \
model is used to look at the first expansion in a control tissue. This part \
\[OpenCurlyDoubleQuote]works\[CloseCurlyDoubleQuote] closely with the \
previous section, since for a given parameter set we can pick out the 25 s \
heal time contour and determine parameter values for r\[Mu]T and \[Tau]Heal \
accordingly\
\>", "Text",
 CellChangeTimes->{{3.84381531676432*^9, 
  3.8438154757441945`*^9}},ExpressionUUID->"0185ba58-0642-4d15-93e2-\
4990ca76a0c2"],

Cell[CellGroupData[{

Cell["GJ Fluxes", "Chapter",
 CellChangeTimes->{{3.8237898295581965`*^9, 
  3.8237898319476123`*^9}},ExpressionUUID->"803d9f78-81cf-4192-a8e7-\
ba5dcf30463d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"volumeScale", "[", "ring_", "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ring", "\[NotEqual]", "1"}], ",", 
     RowBox[{
      RowBox[{"8.", "*", "ring"}], "-", "8."}], ",", "1."}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"areaScale", "[", "ring_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"ring", "\[NotEqual]", "1"}], ",", 
      RowBox[{
       RowBox[{"8.", "*", "ring"}], "-", "8."}], ",", "1."}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"perimeterScale", "[", "ring_", "]"}], ":=", 
  RowBox[{
   RowBox[{"2", "*", "ring"}], "-", "1"}]}]}], "Input",
 CellLabel->
  "In[173]:=",ExpressionUUID->"328d97c5-0dbc-4540-aad3-2cc876cca331"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fluxGJCaTerms1D", "=", "\[IndentingNewLine]", 
    RowBox[{"\[Eta]GJc", "*", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["c", "2"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["c", "1"], "[", "t", "]"}]}], ")"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", "ringsAblated"}], ",", 
              "connectAblated", ",", "1."}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"perimeterScale", "[", "i", "]"}], "/", 
              RowBox[{"volumeScale", "[", "i", "]"}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["c", 
                RowBox[{"i", "+", "1"}]], "[", "t", "]"}], "-", 
              RowBox[{
               SubscriptBox["c", "i"], "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "\[Equal]", 
               RowBox[{"ringsAblated", "+", "1"}]}], ",", "connectAblated", 
              ",", "1."}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"perimeterScale", "[", 
               RowBox[{"i", "-", "1"}], "]"}], "/", 
              RowBox[{"volumeScale", "[", "i", "]"}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["c", 
                RowBox[{"i", "-", "1"}]], "[", "t", "]"}], "-", 
              RowBox[{
               SubscriptBox["c", "i"], "[", "t", "]"}]}], ")"}]}]}], ")"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"numRings", "-", "1"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"perimeterScale", "[", 
            RowBox[{"numRings", "-", "1"}], "]"}], "/", 
           RowBox[{"volumeScale", "[", "numRings", "]"}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["c", 
             RowBox[{"numRings", "-", "1"}]], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["c", "numRings"], "[", "t", "]"}]}], ")"}]}], 
        "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fluxGJIP3Terms1D", "=", 
   RowBox[{"\[Eta]GJIP3", "*", 
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["ip3", "2"], "[", "t", "]"}], "-", 
         RowBox[{
          SubscriptBox["ip3", "1"], "[", "t", "]"}]}], ")"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", "ringsAblated"}], ",", "connectAblated",
              ",", "1."}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"perimeterScale", "[", "i", "]"}], "/", 
             RowBox[{"volumeScale", "[", "i", "]"}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["ip3", 
               RowBox[{"i", "+", "1"}]], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["ip3", "i"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"i", "\[Equal]", 
              RowBox[{"ringsAblated", "+", "1"}]}], ",", "connectAblated", 
             ",", "1."}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"perimeterScale", "[", 
              RowBox[{"i", "-", "1"}], "]"}], "/", 
             RowBox[{"volumeScale", "[", "i", "]"}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["ip3", 
               RowBox[{"i", "-", "1"}]], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["ip3", "i"], "[", "t", "]"}]}], ")"}]}]}], ")"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", 
          RowBox[{"numRings", "-", "1"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"perimeterScale", "[", 
           RowBox[{"numRings", "-", "1"}], "]"}], "/", 
          RowBox[{"volumeScale", "[", "numRings", "]"}]}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["ip3", 
            RowBox[{"numRings", "-", "1"}]], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["ip3", "numRings"], "[", "t", "]"}]}], ")"}]}], 
       "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8304227693637195`*^9, 3.8304227992846093`*^9}, {
  3.830422993914117*^9, 3.830423009032098*^9}, {3.8304230507118134`*^9, 
  3.830423090370804*^9}, {3.8304231232635245`*^9, 3.8304231353287926`*^9}, {
  3.830509046483431*^9, 3.830509106960044*^9}, {3.8317317165512404`*^9, 
  3.831731748744982*^9}, {3.831731822806636*^9, 3.831731897685385*^9}, {
  3.848100280078678*^9, 3.848100290003995*^9}, {3.848103144580112*^9, 
  3.8481031495694313`*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"3648496b-ee6c-47c8-b657-24fd9d792a2c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"fluxGJCaTermsUW1D", "=", "\[IndentingNewLine]", 
    RowBox[{"\[Eta]GJc", "*", 
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["c", "2"], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["c", "1"], "[", "t", "]"}]}], ")"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"perimeterScale", "[", "i", "]"}], "/", 
              RowBox[{"volumeScale", "[", "i", "]"}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["c", 
                RowBox[{"i", "+", "1"}]], "[", "t", "]"}], "-", 
              RowBox[{
               SubscriptBox["c", "i"], "[", "t", "]"}]}], ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"perimeterScale", "[", 
               RowBox[{"i", "-", "1"}], "]"}], "/", 
              RowBox[{"volumeScale", "[", "i", "]"}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SubscriptBox["c", 
                RowBox[{"i", "-", "1"}]], "[", "t", "]"}], "-", 
              RowBox[{
               SubscriptBox["c", "i"], "[", "t", "]"}]}], ")"}]}]}], ")"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", 
           RowBox[{"numRings", "-", "1"}]}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"perimeterScale", "[", 
            RowBox[{"numRings", "-", "1"}], "]"}], "/", 
           RowBox[{"volumeScale", "[", "numRings", "]"}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["c", 
             RowBox[{"numRings", "-", "1"}]], "[", "t", "]"}], "-", 
           RowBox[{
            SubscriptBox["c", "numRings"], "[", "t", "]"}]}], ")"}]}], 
        "}"}]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fluxGJIP3TermsUW1D", "=", 
   RowBox[{"\[Eta]GJIP3", "*", 
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SubscriptBox["ip3", "2"], "[", "t", "]"}], "-", 
         RowBox[{
          SubscriptBox["ip3", "1"], "[", "t", "]"}]}], ")"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"perimeterScale", "[", "i", "]"}], "/", 
             RowBox[{"volumeScale", "[", "i", "]"}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["ip3", 
               RowBox[{"i", "+", "1"}]], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["ip3", "i"], "[", "t", "]"}]}], ")"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"perimeterScale", "[", 
              RowBox[{"i", "-", "1"}], "]"}], "/", 
             RowBox[{"volumeScale", "[", "i", "]"}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SubscriptBox["ip3", 
               RowBox[{"i", "-", "1"}]], "[", "t", "]"}], "-", 
             RowBox[{
              SubscriptBox["ip3", "i"], "[", "t", "]"}]}], ")"}]}]}], ")"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "2", ",", 
          RowBox[{"numRings", "-", "1"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"perimeterScale", "[", 
           RowBox[{"numRings", "-", "1"}], "]"}], "/", 
          RowBox[{"volumeScale", "[", "numRings", "]"}]}], ")"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["ip3", 
            RowBox[{"numRings", "-", "1"}]], "[", "t", "]"}], "-", 
          RowBox[{
           SubscriptBox["ip3", "numRings"], "[", "t", "]"}]}], ")"}]}], 
       "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.833881985211263*^9, 3.8338819879524117`*^9}, {
  3.8338820284131823`*^9, 3.8338820593430862`*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"e98a2f3e-46dc-4220-b37d-0f3bee2108dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equations", "Chapter",
 CellChangeTimes->{{3.8442068219335947`*^9, 
  3.8442068228336325`*^9}},ExpressionUUID->"3bdc1734-917c-47ae-8876-\
35044b90a72c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Single", "-", 
    RowBox[{"cell", " ", "equations"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"modelEqns1D", "=", 
    RowBox[{"deqns", "/.", 
     RowBox[{"lr", "\[Rule]", "0."}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.815837355368222*^9, 3.8158373712013297`*^9}, {
   3.815837409793428*^9, 3.815837416449075*^9}, {3.8158503505520525`*^9, 
   3.8158503755201917`*^9}, {3.815850572918476*^9, 3.815850632644327*^9}, {
   3.8158507251941013`*^9, 3.8158507268747587`*^9}, {3.8158508092591686`*^9, 
   3.815850928292734*^9}, {3.8158511808681717`*^9, 3.815851217106206*^9}, {
   3.8158522542658677`*^9, 3.8158522603136187`*^9}, {3.815999668775794*^9, 
   3.8159996711020823`*^9}, {3.816000725021626*^9, 3.816000725374091*^9}, {
   3.816001672709465*^9, 3.8160016734619303`*^9}, {3.8171437386305275`*^9, 
   3.8171437391810026`*^9}, {3.8171438653103867`*^9, 
   3.8171438664446845`*^9}, {3.8172315327303925`*^9, 3.817231534041114*^9}, {
   3.818788932845103*^9, 3.8187889411816435`*^9}, {3.8187890515438766`*^9, 
   3.818789059444517*^9}, {3.8187891734017124`*^9, 3.8187891747360764`*^9}, {
   3.818789363545744*^9, 3.818789363661745*^9}, 3.818789451116909*^9, {
   3.818789484137412*^9, 3.8187894857306566`*^9}, {3.8189613581868153`*^9, 
   3.8189613589611473`*^9}, {3.819046395910932*^9, 3.819046457994269*^9}, {
   3.820746109312973*^9, 3.8207461115829306`*^9}, 3.820746454802818*^9, {
   3.8207465572111053`*^9, 3.8207465684314547`*^9}, {3.820746948110322*^9, 
   3.820746949333087*^9}, 3.826035776555591*^9, {3.826840360575862*^9, 
   3.826840368956185*^9}, {3.826889180520573*^9, 3.826889184925074*^9}, {
   3.827226873777075*^9, 3.827226874919515*^9}, {3.8272327021763687`*^9, 
   3.8272327164641423`*^9}, {3.8272370165369787`*^9, 3.827237024259626*^9}, 
   3.8272378016118298`*^9, 3.8272380459290466`*^9, 3.8272381057221365`*^9, {
   3.8272405932363963`*^9, 3.827240630844635*^9}, {3.8272420212104354`*^9, 
   3.8272420240788965`*^9}, 3.827242103337795*^9, {3.8304293784944305`*^9, 
   3.8304294278529997`*^9}, {3.8305132152361097`*^9, 
   3.8305132202662706`*^9}, {3.8320711580903826`*^9, 3.832071162110819*^9}, {
   3.8379481272927046`*^9, 3.837948154391329*^9}, {3.837948307600374*^9, 
   3.83794831302236*^9}, {3.8442068567394285`*^9, 3.8442069021951213`*^9}, {
   3.8442070316429234`*^9, 3.844207038059089*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"4fb65e06-d901-4fe2-8f12-b03555106ce7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Variable", " ", "replacements", " ", "for", " ", "multiple", " ", 
    "cells"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"depVars1D", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["spec", "i"], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numRings"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"spec", ",", 
         RowBox[{"{", 
          RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"variableReplacements1D", "=", 
     RowBox[{"Flatten", "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"spec", "[", "t", "]"}], "\[Rule]", 
           RowBox[{
            SubscriptBox["spec", "i"], "[", "t", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"spec", "'"}], "[", "t", "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{
             SubscriptBox["spec", "i"], "'"}], "[", "t", "]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numRings"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"spec", ",", 
          RowBox[{"{", 
           RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initReplacement1D", "=", 
     RowBox[{"Flatten", "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"spec", "[", "0", "]"}], "\[Rule]", 
          RowBox[{
           SubscriptBox["spec", "i"], "[", "0", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numRings"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"spec", ",", 
          RowBox[{"{", 
           RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
       "]"}]}]}], ";"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Making", " ", "ablated", " ", "cells", " ", "have", " ", "constant", " ",
      "calcium"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ablatedChanges", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"i", "\[LessEqual]", "ringsAblated"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "x_"}], "\[Rule]", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "0"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", "x_"}], 
             "\[Rule]", 
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", 
              "cExt"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "x_"}], "\[Rule]", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "x"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", "x_"}], 
             "\[Rule]", 
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", "x"}]}]}],
            "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numRings"}], "}"}]}], "]"}]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.820747224103917*^9, 3.8207472311048346`*^9}, {
   3.8207474308598533`*^9, 3.8207474948806467`*^9}, {3.820747698463586*^9, 
   3.8207477648570366`*^9}, {3.820747802189887*^9, 3.8207478804553957`*^9}, {
   3.820747942575816*^9, 3.8207479873316555`*^9}, {3.820748035702648*^9, 
   3.82074808982291*^9}, {3.8207623903471117`*^9, 3.820762393413571*^9}, {
   3.8207625517150917`*^9, 3.8207625546851096`*^9}, {3.8208342046355934`*^9, 
   3.820834212795676*^9}, {3.820834886293056*^9, 3.8208348982387247`*^9}, {
   3.8208351469046545`*^9, 3.8208351709717007`*^9}, {3.820835230285244*^9, 
   3.8208352313220005`*^9}, {3.8237918695543504`*^9, 
   3.8237918739636917`*^9}, {3.8237924219831505`*^9, 
   3.8237924263911705`*^9}, {3.826026428324896*^9, 3.826026429577958*^9}, {
   3.8260265203454*^9, 3.82602655383492*^9}, {3.826026658570833*^9, 
   3.826026697987548*^9}, {3.82602673009805*^9, 3.8260268011551275`*^9}, {
   3.8260268335109267`*^9, 3.82602693437117*^9}, {3.8260270712028856`*^9, 
   3.82602708384276*^9}, {3.8260271744144025`*^9, 3.826027271597234*^9}, {
   3.8260273051018515`*^9, 3.8260273092207675`*^9}, {3.826028021041113*^9, 
   3.826028052598837*^9}, {3.8260316358451405`*^9, 3.8260316946834407`*^9}, {
   3.8260317842832813`*^9, 3.8260318350401487`*^9}, {3.826031892402111*^9, 
   3.8260319072241793`*^9}, {3.827230113697481*^9, 3.827230118606576*^9}, {
   3.827238310329437*^9, 3.827238332233631*^9}, {3.8272386201186695`*^9, 
   3.827238764613989*^9}, {3.8272388302756424`*^9, 3.827238830607122*^9}, {
   3.827239197479381*^9, 3.827239246199875*^9}, {3.8272401735327015`*^9, 
   3.827240213869233*^9}, {3.827242505544941*^9, 3.827242505739997*^9}, {
   3.8272426046867704`*^9, 3.8272426095372567`*^9}, {3.830429433951027*^9, 
   3.83042950321951*^9}, {3.831733487545526*^9, 3.8317335019752927`*^9}, {
   3.8317337112272277`*^9, 3.8317337312449756`*^9}, {3.831733870998537*^9, 
   3.831733946656089*^9}, {3.831734013955842*^9, 3.8317340235769844`*^9}, 
   3.8317340949006834`*^9, {3.831734458825548*^9, 3.831734475866969*^9}, {
   3.831734561602969*^9, 3.8317345680596604`*^9}, {3.8317346556336007`*^9, 
   3.8317346961748724`*^9}, {3.8317347342832365`*^9, 
   3.8317347521730757`*^9}, {3.8317349097788296`*^9, 3.831734910188684*^9}, {
   3.8317349412008743`*^9, 3.8317349426151423`*^9}, {3.831735046060458*^9, 
   3.831735048282489*^9}, {3.837948164014059*^9, 3.8379481741100645`*^9}},
 CellLabel->
  "In[181]:=",ExpressionUUID->"2cbad710-7cb1-409d-a3f9-b45c95b93e9a"],

Cell[CellGroupData[{

Cell["Putting it all together", "Subsection",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, {3.826056084745327*^9, 
   3.8260560939701853`*^9}},ExpressionUUID->"ae966d95-11e5-4a14-9eb6-\
2e0ca8e54273"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Comapred", " ", "to", " ", "the", " ", "equilibrium", " ", "tissue"}], 
    ",", " ", 
    RowBox[{
    "we", " ", "add", " ", "in", " ", "the", " ", "new", " ", "resting", " ", 
     "levels", " ", "from", " ", "the", " ", "previous", " ", "section"}], 
    ",", " ", 
    RowBox[{
    "and", " ", "we", " ", "take", " ", "out", " ", "the", " ", "initial", 
     " ", "condition", " ", "scaling", " ", 
     RowBox[{"(", 
      RowBox[{
      "since", " ", "we", " ", "already", " ", "have", " ", "the", " ", 
       "initial", " ", "conditions", " ", "for", " ", "each", " ", "cell"}], 
      ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"multiCellReplacements1D", "=", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"newEQs1D", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ","}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"variableReplacements1D", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"initReplacement1D", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"jGJIP3", "\[Rule]", 
           RowBox[{"fluxGJIP3Terms1D", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"jGJc", "\[Rule]", 
           RowBox[{"fluxGJCaTerms1D", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"r\[Mu]T", "\[Rule]", 
          RowBox[{"r\[Mu]T", "*", 
           RowBox[{"\[Mu]TDist", "[", 
            RowBox[{"ringPositions", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"r", "\[Rule]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "\[Equal]", "1"}], ",", 
            RowBox[{"dr", "*", "rd"}], ",", 
            RowBox[{"\[CapitalDelta]x", "*", 
             RowBox[{"(", 
              RowBox[{"i", "-", ".5"}], ")"}]}]}], "]"}]}], "}"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "numRings"}], "}"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, 3.826056084745327*^9, {
   3.827226893672307*^9, 3.8272269581060147`*^9}, {3.8272270028815317`*^9, 
   3.8272270142125435`*^9}, {3.827238363167718*^9, 3.8272383721227846`*^9}, {
   3.8272385091869297`*^9, 3.827238515491295*^9}, {3.827238564773803*^9, 
   3.8272385869548006`*^9}, {3.8272388441271563`*^9, 3.827238848641945*^9}, {
   3.827239830029871*^9, 3.8272398475545716`*^9}, 3.8272399319750137`*^9, {
   3.8272421646889706`*^9, 3.8272421708258486`*^9}, {3.8272425104004507`*^9, 
   3.827242546519987*^9}, {3.8304295133071485`*^9, 3.830429564443736*^9}, {
   3.8317344334161453`*^9, 3.8317344399926033`*^9}, {3.8317350678330874`*^9, 
   3.8317350708055515`*^9}, {3.8379482411061444`*^9, 3.837948241500643*^9}, {
   3.841239394705125*^9, 3.8412394171442327`*^9}, {3.8412401920461116`*^9, 
   3.8412402067596817`*^9}, {3.8423642347737417`*^9, 
   3.8423642349221373`*^9}, {3.8442073476212263`*^9, 
   3.8442073512584696`*^9}, {3.844209050401597*^9, 3.84420905210715*^9}, {
   3.848014312857027*^9, 3.848014355490594*^9}, {3.848100723520164*^9, 
   3.848100728597175*^9}},
 CellLabel->
  "In[185]:=",ExpressionUUID->"4a1b5379-7e77-4f20-9554-d40823b072ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tissueModelEquations1D", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"modelEqns1D", "/.", "multiCellReplacements1D"}], "]"}], "/.", 
     "ablatedChanges"}], "/.", "intParams"}]}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQvTr509a28jeO/df6doBoAw2rAyD6/L0lYPobX84t
EL2K5/IdEO0zTfUviO7oeMvQDuKvL4sE0cGKetEguu693ZZOIG1x5eYOEP1J
7saylUD6wtawtSB6020TsVVA+jPjWjB9xo3tqW/tG8fwH39fgujVgQmifkDa
yOuVGIh2W/TBFETPfvALTC98fnP95MY3jiWXr28E0VtmdqhOAdIsFy+D6Tjn
yWunAulXMdzrQfTbj4oND5vfOC7pXN0Iom/pZH341vnGsXam4ycQ3bM/M6mk
B6j+7VwwPae0PgtET7ivlw2i6z75aPvNAPpzr4EOiAYApl2omA==
  "],
 CellLabel->
  "In[186]:=",ExpressionUUID->"69b1280d-3479-427e-a4e4-0f64600ae685"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tissueModelSol1D", "=", "\[IndentingNewLine]", 
    RowBox[{"ParametricNDSolveValue", "[", "\[IndentingNewLine]", 
     RowBox[{"tissueModelEquations1D", ",", "\[IndentingNewLine]", 
      RowBox[{"depVars1D", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "3"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "400."}], "}"}], ",", 
      "\[IndentingNewLine]", "extParams", ",", "\[IndentingNewLine]", 
      RowBox[{"DependentVariables", "\[Rule]", 
       RowBox[{"Flatten", "@", "depVars1D"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Method\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<EquationSimplification\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"\"\<TimeConstraint\>\"", "\[Rule]", "100"}]}], "}"}]}], 
        "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.815850935510934*^9, 3.8158509460012465`*^9}, {
   3.8158509986653643`*^9, 3.8158510166096992`*^9}, {3.815851066479927*^9, 
   3.8158511479676313`*^9}, {3.8158512195440855`*^9, 
   3.8158512207495766`*^9}, {3.8158522658868513`*^9, 3.81585226666661*^9}, {
   3.81600032865289*^9, 3.816000360666057*^9}, {3.81878934590421*^9, 
   3.818789351796474*^9}, {3.8187895705395308`*^9, 3.8187895788954916`*^9}, {
   3.8188565544822245`*^9, 3.8188565748234215`*^9}, {3.8190464720907354`*^9, 
   3.819046479157522*^9}, {3.8190480772271214`*^9, 3.8190480780182157`*^9}, {
   3.819372300088422*^9, 3.819372300241935*^9}, {3.8195477083814197`*^9, 
   3.819547709395692*^9}, {3.820835105121843*^9, 3.8208351212771935`*^9}, {
   3.8208351840177712`*^9, 3.820835277606222*^9}, {3.82083531359741*^9, 
   3.820835316680043*^9}, {3.8208408226491494`*^9, 3.8208408250844173`*^9}, {
   3.823792407850629*^9, 3.823792416120907*^9}, {3.8237924585713205`*^9, 
   3.8237924658182554`*^9}, 3.8238557989759893`*^9, {3.8238566471965246`*^9, 
   3.8238566662893934`*^9}, {3.8238567131383*^9, 3.8238567154320154`*^9}, 
   3.8243015214546595`*^9, {3.8268893937794204`*^9, 3.8268894179500875`*^9}, {
   3.826889475424861*^9, 3.8268894789280543`*^9}, 3.8268895966063337`*^9, {
   3.8272423242838273`*^9, 3.8272423469827924`*^9}, {3.830429689992796*^9, 
   3.8304297082125816`*^9}, {3.8379482811619787`*^9, 3.837948281280424*^9}, {
   3.848100070940167*^9, 3.8481001082680473`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"d5d53fab-c114-4e45-a8c5-1d61f1d52e59"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"association1D", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r\[Mu]T", "\[Rule]", 
        RowBox[{"1000.", "*", 
         RowBox[{".25", "/", "50."}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Tau]Heal", "\[Rule]", "10."}], ",", "\[IndentingNewLine]", 
       RowBox[{"rPMCA", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kPMCA", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rSOC", "\[Rule]", 
        RowBox[{"5.2565", "/", "50."}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]NCX", "\[Rule]", "50."}], ",", "\[IndentingNewLine]", 
       RowBox[{"nNCX", "\[Rule]", "1."}], ",", "\[IndentingNewLine]", 
       RowBox[{"kNCX", "\[Rule]", "8."}], ",", "\[IndentingNewLine]", 
       RowBox[{"rlkPM", "\[Rule]", 
        RowBox[{"1000", "*", 
         RowBox[{".002", "/", "50."}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "\[Rule]", "0."}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]0", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kl", "\[Rule]", ".05"}], ",", "\[IndentingNewLine]", 
       RowBox[{"nl", "\[Rule]", "3."}], ",", "\[IndentingNewLine]", 
       RowBox[{"Kc", "\[Rule]", ".4"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]IPR", "\[Rule]", "24.1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]SERCA", "\[Rule]", "20.1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kSERCA1", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kSERCA2", "\[Rule]", "0."}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]lkER", "\[Rule]", ".03"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Bx", "\[Rule]", "5."}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]GJIP3", "\[Rule]", ".5"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]GJc", "\[Rule]", "10."}], ",", "\[IndentingNewLine]", 
       RowBox[{"connectAblated", "\[Rule]", "0."}]}], "\[IndentingNewLine]", 
      "}"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params1D", "=", 
   RowBox[{"association1D", "/@", "extParams"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8437667630850368`*^9, 3.843766778121128*^9}, {
   3.8437668650523443`*^9, 3.8437669908804984`*^9}, {3.843767093677447*^9, 
   3.843767095972363*^9}, {3.84376720240291*^9, 3.843767203544833*^9}, {
   3.8437672991581497`*^9, 3.8437673006675253`*^9}, {3.843767455527978*^9, 
   3.8437674760843525`*^9}, {3.8438152163527765`*^9, 
   3.8438152175366297`*^9}, {3.844212090592847*^9, 3.8442121046040077`*^9}, {
   3.8442129303470836`*^9, 3.8442129316946554`*^9}, {3.844213053622817*^9, 
   3.8442130597976756`*^9}, {3.8455011465819325`*^9, 3.845501152567361*^9}, {
   3.847225553701414*^9, 3.8472255573745627`*^9}, {3.8480570147137365`*^9, 
   3.848057016946386*^9}, {3.8480989283716793`*^9, 3.8480989350200195`*^9}, 
   3.848099030263666*^9},
 CellLabel->
  "In[188]:=",ExpressionUUID->"1a965c29-85bb-44ce-ba8c-371ed69e4fba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"tissueModelSol1D", "@@", "params1D"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8208353300834208`*^9, 3.820835334856078*^9}, {
   3.820835519795843*^9, 3.8208355902402844`*^9}, 3.820841280676635*^9, {
   3.820841389141342*^9, 3.820841389269723*^9}, {3.820841469548337*^9, 
   3.820841470340723*^9}, {3.8208415292324915`*^9, 3.8208415418677173`*^9}, {
   3.8208417023802767`*^9, 3.8208417027177057`*^9}, {3.820848483946121*^9, 
   3.82084848418559*^9}, {3.820848726382415*^9, 3.8208487265182843`*^9}, {
   3.820849827466297*^9, 3.8208498276031013`*^9}, {3.820849871664625*^9, 
   3.8208498717851133`*^9}, {3.823792483509634*^9, 3.8237924841185675`*^9}, 
   3.824301666114005*^9, {3.8243165917439127`*^9, 3.8243165947033243`*^9}, {
   3.824316655536581*^9, 3.8243166556971283`*^9}, {3.8243167501994925`*^9, 
   3.8243167514636164`*^9}, {3.824378616563017*^9, 3.8243786186499143`*^9}, {
   3.8260562048505993`*^9, 3.8260562162512856`*^9}, {3.8260562613445663`*^9, 
   3.826056268245102*^9}, {3.8260564090317717`*^9, 3.8260564142465906`*^9}, {
   3.82689122563451*^9, 3.8268912273206663`*^9}, {3.8271811985015483`*^9, 
   3.827181200673194*^9}, {3.8271816453311453`*^9, 3.8271816466495657`*^9}, {
   3.8271819662911997`*^9, 3.827181967112*^9}, {3.82724239535752*^9, 
   3.8272424027645364`*^9}, {3.8286152053602123`*^9, 
   3.8286152082844744`*^9}, {3.830429719162512*^9, 3.83042973687158*^9}, {
   3.8304298311843896`*^9, 3.830429831326765*^9}, {3.8304305712896614`*^9, 
   3.830430571570943*^9}, {3.83051558828054*^9, 3.830515589527224*^9}, {
   3.837948290090562*^9, 3.837948301161957*^9}, {3.8442075954628496`*^9, 
   3.8442076527305355`*^9}, {3.8442077839886713`*^9, 3.844207800238525*^9}, {
   3.8442078341326437`*^9, 3.8442078348639584`*^9}, {3.8442078897299814`*^9, 
   3.8442078964285245`*^9}, {3.8442079875566273`*^9, 
   3.8442079881540375`*^9}, {3.844208041417806*^9, 3.8442080424872665`*^9}, {
   3.8442084653832784`*^9, 3.844208472927781*^9}, 3.844208517682387*^9, {
   3.8442085588793836`*^9, 3.8442085943275285`*^9}, {3.8442131139044456`*^9, 
   3.8442131151058617`*^9}, {3.8442131788103533`*^9, 3.8442131805579386`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"f1ab2f96-e844-49f8-bc42-2c2f116d88f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testG", "=", 
   RowBox[{"CtoF", "/@", "test"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8208356270472713`*^9, 3.8208356563281317`*^9}, 
   3.8208413418107004`*^9},
 CellLabel->
  "In[191]:=",ExpressionUUID->"8d891801-e5df-49c3-904a-646ccf0b6707"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "for", " ", "getting", " ", "Ca", " ", "Rad", " ", "vs", 
    " ", "time"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"getCaRad1D", "[", "sol_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"time", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Block", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"grData", "=", 
            RowBox[{"Transpose", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"rng", "\[Equal]", "1"}], ",", 
                   RowBox[{"dr", "*", "rd"}], ",", 
                   RowBox[{"\[CapitalDelta]x", "*", 
                    RowBox[{"(", 
                    RowBox[{"rng", "-", "1"}], ")"}]}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"rng", ",", "numRings"}], "}"}]}], "]"}], ",", 
               RowBox[{"sol", "/.", 
                RowBox[{"t", "\[Rule]", "time"}]}]}], "}"}]}]}], ",", 
           RowBox[{"fCurrent", "=", "maxInt"}], ",", 
           RowBox[{"rng", "=", "1"}], ",", "r1", ",", "r2", ",", "gLine"}], 
          "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"fCurrent", ">", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"minInt", "+", "maxInt"}], ")"}], "/", "2"}]}], "&&", 
             RowBox[{"rng", "<", "numRings"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"rng", "+=", "1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"fCurrent", "=", 
              RowBox[{"grData", "[", 
               RowBox[{"[", 
                RowBox[{"rng", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"r1", "=", 
              RowBox[{"rng", "-", "1"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"r2", "=", "rng"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"grData", "[", 
                    RowBox[{"[", 
                    RowBox[{"r2", ",", "2"}], "]"}], "]"}], "-", 
                   RowBox[{"grData", "[", 
                    RowBox[{"[", 
                    RowBox[{"r1", ",", "2"}], "]"}], "]"}]}], ")"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"r1", "-", ".5"}], ")"}]}], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"minInt", "+", "maxInt"}], ")"}], "/", "2"}], "-", 
                RowBox[{"grData", "[", 
                 RowBox[{"[", 
                  RowBox[{"r1", ",", "2"}], "]"}], "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"grData", "[", 
                 RowBox[{"[", 
                  RowBox[{"r2", ",", "2"}], "]"}], "]"}], "-", 
                RowBox[{"grData", "[", 
                 RowBox[{"[", 
                  RowBox[{"r1", ",", "2"}], "]"}], "]"}]}], ")"}]}], "-", 
             ".5"}], ")"}], "*", "\[CapitalDelta]x"}]}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"time", ",", "\[CapitalDelta]t", ",", 
       RowBox[{"41", "+", "\[CapitalDelta]t"}], ",", "\[CapitalDelta]t"}], 
      "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8383795941701455`*^9, 3.8383796176691327`*^9}, {
  3.839664116317954*^9, 3.8396641164214582`*^9}, {3.8396644069294834`*^9, 
  3.8396644088762593`*^9}, {3.8396677516026554`*^9, 3.8396677527924943`*^9}, {
  3.841240591656895*^9, 3.841240591917122*^9}, {3.841315852853633*^9, 
  3.841315855927229*^9}, {3.845505506153407*^9, 3.8455055140689287`*^9}, {
  3.8455056326583633`*^9, 3.845505633504344*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"68d562a4-359c-44cb-8e6e-4316fc013333"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getCaRad1D", "[", "testG", "]"}]], "Input",
 CellChangeTimes->{{3.8442092800602117`*^9, 3.844209285439357*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"ddf5eca5-f5d8-4b27-83ef-ad9b5e30d3b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.1400000000000006`", ",", "51.14834027579178`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.280000000000001`", ",", "54.89030214850287`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.420000000000002`", ",", "56.22111332191097`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.560000000000002`", ",", "56.91323981650841`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.700000000000003`", ",", "56.44104052408833`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.840000000000003`", ",", "55.84292846475699`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.980000000000004`", ",", "55.41146514474511`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.120000000000005`", ",", "55.02193371787949`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19.260000000000005`", ",", "54.431786460937005`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21.400000000000006`", ",", "53.559564748229654`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23.540000000000006`", ",", "52.42009656203939`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25.680000000000007`", ",", "50.99159815274845`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27.820000000000007`", ",", "49.72477123952874`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"29.960000000000008`", ",", "48.65641676521326`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32.10000000000001`", ",", "47.52960429044033`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"34.24000000000001`", ",", "46.21943217333637`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36.38000000000001`", ",", "44.66667892437132`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"38.52000000000001`", ",", "43.03122192121623`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40.66000000000001`", ",", "41.594431084481364`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"42.80000000000001`", ",", "40.128563547805896`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.844209287374225*^9, 3.8442099160992208`*^9, 3.8442099581104355`*^9, 
   3.844213257271427*^9, 3.8442442106608973`*^9, 3.8442973340530424`*^9, 
   3.844510764007291*^9, 3.8447873599586716`*^9, 3.844810162622573*^9, 
   3.8450645197984557`*^9, 3.8454134077956715`*^9, 3.8455011599766026`*^9, 
   3.84567362525741*^9, 3.8457292689745145`*^9, 3.8460201013767447`*^9, 
   3.846257214247456*^9, 3.8465802189992237`*^9, 3.8472255942020946`*^9, 
   3.8474049844235044`*^9, 3.847453138322282*^9, 3.8480143813909073`*^9, 
   3.8480159592559137`*^9, 3.8480571947557664`*^9, 3.8480951618151517`*^9, 
   3.8480989383506236`*^9, 3.8480990424946795`*^9, {3.848100190291855*^9, 
   3.848100194085248*^9}, 3.848100738359936*^9, 3.848103062095331*^9, 
   3.848103154406104*^9, 3.8481441574648004`*^9, 3.8483551205273714`*^9, 
   3.848530417899508*^9, 3.850343290985362*^9, 3.851118805865441*^9, 
   3.8511275265237284`*^9, 3.8511279890100684`*^9, 3.853022933045699*^9, 
   3.857637517269451*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"b3f6ca77-7680-4834-b8ae-a1de835c9566"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"getCaRad1D", "[", "testG", "]"}], "/.", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t_", ",", "r_"}], "}"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"r", "/", "\[CapitalDelta]x"}]}], "}"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"caRadData", "[", 
       RowBox[{"[", 
        RowBox[{";;", 
         RowBox[{"IntegerPart", "@", 
          RowBox[{"(", 
           RowBox[{"42", "/", "\[CapitalDelta]t"}], ")"}]}]}], "]"}], "]"}], "/.", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t_", ",", "r_"}], "}"}], "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"r", "/", "\[CapitalDelta]x"}]}], "}"}]}], ")"}]}]}], "}"}],
    ",", 
   RowBox[{"Joined", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.844209918534835*^9, 3.844209925612504*^9}, {
  3.8442099608967457`*^9, 3.844209987384697*^9}, {3.8474040963032184`*^9, 
  3.84740411220815*^9}, {3.8474044358553715`*^9, 3.8474044382257032`*^9}, {
  3.8474045230748076`*^9, 3.8474045281851315`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"30f78542-699c-4a1f-87aa-03a774e156c5"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKOD7L5Xz4+zyThA+IIOhyZ/dVknLOew
wf1hlcg6SQf9suaH0efkoPKKDvuFvtsU6cs7ZKSBgKqD1VWjetO3MPWaDgqz
/pj6z5Rz+KER03/oq65Dm+cF35MxMP2GDoyXgnVV1eQcjnwFKnAydjhj2Pgi
5rIs1DxTh5WPZvoxR8o68FxfXGDbZe4wz0f/ps5OGaj5lg5agVFupz9IO4Ts
kGt9fdHa4WDJyQhxe2mofbYOn9vip1utlHI4dwYIeBwcqktvztTiloLa7+iw
Yg+nSlKwpEORLdf1xQZODt+fCPdPqpSAusfZYe+Ol0KaU8QdxNYBLQxxcQiU
v7Z97ikxqPtcHRx/nTH790fUAQAQ3Yjp
       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBmIQnZ4GAqoHGKBAvvV14A45RTh/nfvDKpF1kmjygmh8
RjgfBjL5pM6KLRNygMo77JwsZ/51igSUL+jwoPBtx88kaQeo+Q5xTadNbu+U
gcorOtzneP3322dZB6j7HPQM3gTFcMtD1Ws6XJjPkWK6UN7hm0ZM/6Gvug4N
Sm/KPt+Uh+o3dOBlW74ymUnB4fBXoAInY4dEk4Kf65QUoOaZOngH3tbYIKbg
wH19cYFtl7lD3vKC67/5FaDmWzrEecXWs2+TdwjaIdf6+qK1w5V1U3Ocpss7
AABDCm3L
       "]]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       NCache[
        Rational[7, 360], 0.019444444444444445`]], AbsoluteThickness[
      1.6]}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-10.700000000000001`, 42.80000000000001}, {
    0, 8.067741198489047}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8442099262136416`*^9, {3.8442099678414545`*^9, 3.8442099878063197`*^9}, 
   3.844213258244364*^9, 3.8442442107418466`*^9, 3.84429733423184*^9, 
   3.844510764090293*^9, 3.8447873600925865`*^9, 3.844810162691129*^9, 
   3.8450645198584175`*^9, 3.845413407885766*^9, 3.8455011608552504`*^9, 
   3.8456736253303623`*^9, 3.8457292690513363`*^9, 3.8460201014550233`*^9, 
   3.8462572143165755`*^9, 3.8465802190734324`*^9, 3.8472255943060303`*^9, 
   3.8474044397356462`*^9, 3.847404528816043*^9, 3.8474049844714756`*^9, 
   3.8474531384182205`*^9, 3.8480143816342506`*^9, 3.848015959323871*^9, 
   3.848057194905673*^9, 3.848095161911254*^9, 3.8480989385624933`*^9, 
   3.848099042853779*^9, 3.848100738461338*^9, 3.8481030622291374`*^9, 
   3.8481031545440197`*^9, 3.84814415754875*^9, 3.8483551206073217`*^9, 
   3.8485304179713783`*^9, 3.8503432910543213`*^9, 3.851118805932399*^9, 
   3.8511275266288004`*^9, 3.85112798907403*^9, 3.8530229331646233`*^9, 
   3.857637517357398*^9},
 CellLabel->
  "Out[194]=",ExpressionUUID->"4b37fd43-1c20-4f29-a267-c5c9e787cba9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"caRadData", "[", 
  RowBox[{"[", 
   RowBox[{";;", 
    RowBox[{"IntegerPart", "@", 
     RowBox[{"(", 
      RowBox[{"42", "/", "\[CapitalDelta]t"}], ")"}]}]}], "]"}], 
  "]"}]], "Input",
 CellLabel->
  "In[195]:=",ExpressionUUID->"e8abb5d2-c8fd-4596-82a1-996331a2d225"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "10.700000000000001`"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8.56`"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "6.42`"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "4.28`"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.14`"}], ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "34.03403338854032`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.14`", ",", "44.86190670686847`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.28`", ",", "49.98058168248665`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.42`", ",", "52.424951955723664`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.56`", ",", "54.664202272924186`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.700000000000001`", ",", "56.65598893962881`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12.84`", ",", "57.72424069413433`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14.98`", ",", "58.12875248392717`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"17.12`", ",", "58.43406629749487`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"19.26`", ",", "58.89451074897004`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"21.400000000000002`", ",", "58.72348300975493`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23.540000000000003`", ",", "58.62789339758157`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"25.68`", ",", "57.87266972303744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"27.82`", ",", "57.65331457657072`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8474044563773813`*^9, 3.8474049844844685`*^9, 
  3.8474531384741898`*^9, 3.8480143817347045`*^9, 3.8480159593738422`*^9, 
  3.8480571949386487`*^9, 3.848095161926244*^9, 3.8480989386049814`*^9, 
  3.848099042950988*^9, 3.8481007385451784`*^9, 3.848103062371049*^9, 
  3.8481031545817895`*^9, 3.8481441575657372`*^9, 3.848355120655293*^9, 
  3.848530418010355*^9, 3.850343291071167*^9, 3.851118805966379*^9, 
  3.851127526662779*^9, 3.8511279891010113`*^9, 3.853022933186699*^9, 
  3.857637517412363*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"f8445ff3-51cb-44b3-a0b0-43b6ab24c24e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sweeps", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ReplacePart", "[", 
      RowBox[{"association1D", ",", 
       RowBox[{
        RowBox[{"Key", "@", "\[Eta]SERCA"}], "\[Rule]", 
        RowBox[{
         RowBox[{"association1D", "[", "\[Eta]SERCA", "]"}], "*", 
         "scale"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"scale", ",", ".5", ",", "1.5", ",", ".1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"sweepParams", "=", 
   RowBox[{"extParams", "/.", "sweeps"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sweepSols", "=", 
   RowBox[{"tissueModelSol1D", "@@@", "sweepParams"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sweepSolsG", "=", 
   RowBox[{"CtoF", "/@", "sweepSols"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sweepRads", "=", 
   RowBox[{"getCaRad1D", "/@", "sweepSolsG"}]}], ";"}], "\n", 
 RowBox[{"colors", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RGBColor", "[", 
     RowBox[{"r", ",", "0", ",", 
      RowBox[{"1", "-", "r"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1", ",", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Length", "@", "sweeps"}], ")"}], "-", "1"}], ")"}]}]}], 
     "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"sweepRads", ",", 
   RowBox[{"PlotStyle", "\[Rule]", "colors"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8454556806632137`*^9, 3.845455707617114*^9}, {
   3.8454575147987733`*^9, 3.8454575179400234`*^9}, {3.845457642769353*^9, 
   3.845457669633603*^9}, {3.845458146496891*^9, 3.8454581822966676`*^9}, 
   3.845459086332327*^9},
 CellLabel->
  "In[196]:=",ExpressionUUID->"8a6b20da-1f93-4df7-a770-e464c37c9853"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0., 0., 0.6666666666666666],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0, 0, 1],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[1, 10], 0, 
          Rational[9, 10]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.06666666666666667, 0., 0.6],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
           FractionBox["1", "10"], ",", "0", ",", 
           FractionBox["9", "10"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[1, 10], 0, 
           Rational[9, 10]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[1, 10], 0, 
     Rational[9, 10]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[1, 5], 0, 
          Rational[4, 5]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.13333333333333333`, 0., 0.5333333333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
           FractionBox["1", "5"], ",", "0", ",", 
           FractionBox["4", "5"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[1, 5], 0, 
           Rational[4, 5]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[1, 5], 0, 
     Rational[4, 5]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[3, 10], 0, 
          Rational[7, 10]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.2, 0., 0.4666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
           FractionBox["3", "10"], ",", "0", ",", 
           FractionBox["7", "10"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[3, 10], 0, 
           Rational[7, 10]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[3, 10], 0, 
     Rational[7, 10]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[2, 5], 0, 
          Rational[3, 5]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.26666666666666666`, 0., 0.4],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
           FractionBox["2", "5"], ",", "0", ",", 
           FractionBox["3", "5"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[2, 5], 0, 
           Rational[3, 5]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[2, 5], 0, 
     Rational[3, 5]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[1, 2], 0, 
          Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.3333333333333333, 0., 0.3333333333333333],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
           FractionBox["1", "2"], ",", "0", ",", 
           FractionBox["1", "2"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[1, 2], 0, 
           Rational[1, 2]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[1, 2], 0, 
     Rational[1, 2]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[3, 5], 0, 
          Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.4, 0., 0.26666666666666666`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
           FractionBox["3", "5"], ",", "0", ",", 
           FractionBox["2", "5"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[3, 5], 0, 
           Rational[2, 5]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[3, 5], 0, 
     Rational[2, 5]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[7, 10], 0, 
          Rational[3, 10]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.4666666666666667, 0., 0.2],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
           FractionBox["7", "10"], ",", "0", ",", 
           FractionBox["3", "10"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[7, 10], 0, 
           Rational[3, 10]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[7, 10], 0, 
     Rational[3, 10]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[4, 5], 0, 
          Rational[1, 5]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.5333333333333333, 0., 0.13333333333333333`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
           FractionBox["4", "5"], ",", "0", ",", 
           FractionBox["1", "5"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[4, 5], 0, 
           Rational[1, 5]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[4, 5], 0, 
     Rational[1, 5]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
          Rational[9, 10], 0, 
          Rational[1, 10]], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6, 0., 0.06666666666666667],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
           FractionBox["9", "10"], ",", "0", ",", 
           FractionBox["1", "10"]}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
           Rational[9, 10], 0, 
           Rational[1, 10]]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[
     Rational[9, 10], 0, 
     Rational[1, 10]],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1, 0, 0],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8454583044804597`*^9, 3.845458456990904*^9, {3.8454585177568684`*^9, 
   3.8454585445812235`*^9}, 3.845501191684733*^9, 3.8456736288740897`*^9, 
   3.84572927341765*^9, 3.8460201048908887`*^9, 3.8462572179553165`*^9, 
   3.8465802230257998`*^9, 3.8472255983924956`*^9, 3.8474049879901466`*^9, 
   3.8474531439927635`*^9, 3.848014385428028*^9, 3.848015962872672*^9, 
   3.848057199327783*^9, 3.848095166242471*^9, 3.848098940149025*^9, 
   3.8480990444340677`*^9, 3.8481007419822955`*^9, 3.848103066256642*^9, 
   3.8481031589220953`*^9, 3.8481441631563725`*^9, 3.8483551240871544`*^9, 
   3.8485304213300233`*^9, 3.8503432946938734`*^9, 3.8511188097087097`*^9, 
   3.8511275302375646`*^9, 3.8511279924839168`*^9, 3.8530229374625497`*^9, 
   3.857637521319477*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"b4a454ca-386d-463a-b33d-e168e20060dc"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKNDVvRP7x9XvB0gfEEHl30dzsy8/g4b
3B9WiayTdJCsalKwPOEPlVd0cC57PzmXK8AhIw0EVB0mT37BKvUDpl7T4eIl
+xfLlvg7/NCI6T/0VddhY/h1t/viMP2GDr4nzgnwCvg5HPkKVOBk7OD0IH7F
yyM+UPNMHQ4kbbyjLOLjwHN9cYFtl7lD1083S6lQb6j5lg68DipPYj28HEJ2
yLW+vmjtsCjxZfh6A0+ofbYOHBNOhLXM9XA4dwYIeBwcPE64vX4l4AG139Fh
h+dJk9Mp7g5FtlzXFxs4OTzgKBMvrXODusfZwfTn8Y1be10dxNYBLQxxcTgR
zjjzySMXqPtcHXiSp99L0XdxAAC0DYsp
       "]]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[9, 10], 0.9]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKPD9a57FfKV3g4QvqCDYdf2wC8ffR02
uD+sElkn6VBQ/3iHpJ0/VF7RIZT3zn73BH+HjDQQUHXYelQ++bKnP1S9poPK
WoPJdz/7OfzQiOk/9FXXoVB0f7qzoR9Uv6HDpH3N342++Tgc+QpU4GTskKmi
/m+KpQ/UPFMH7pPeHwXneDvwXF9cYNtl7jCVw85u53kvqPmWDlxbFl14ss7T
IWSHXOvri9YOfh6f5PY/8oDaZ+twqWZDTH+Qh8O5M0DA4+DQI++/XnWXO9R+
R4eNOZtdPvxycyiy5bq+2MDJYcWrszqKDG5Q9zg7xHuLLrE2dXUQWwe0MMTF
4bh0wzGnJheo+1wdshVC4zP3OzsAAJaVi9I=
       "]]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[4, 5], 0.8]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKND+qyiKDttbwcIX9Bhpe7aoBezfBw2
uD+sElkn6fDusHtw6yU/qLyiA8OTNwnH/vg5ZKSBgKrDJZFpXh+A8hD1mg6W
8yM1Srz8HH5oxPQf+qrrsErB8kKiqy9Uv6HDmlorofB0H4cjX4EKnIwdymy/
cPk+9oaaZ+pQdkHx9utAbwee64sLbLvMHfa/SRWe1uMFNd/SoWG+6vm/jZ4O
ITvkWl9ftHa4qK8Q+PWMB9Q+WwcOmRlXQmw9HM6dAQIeB4dOHqO7fovcofY7
Olh/OzLx7CM3hyJbruuLDZwcvL2eX0l+7wp1j7PDnM0JDpoarg5i64AWhrg4
nA1JOryv0AXqPleH0vbFa66vcXYAADEWjio=
       "]]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[7, 10], 0.7]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKPDioD8EI/TXg4QvqCDdtTeeaFfvB02
uD+sElkn6fDmjtyapyp+UHlFh+cPXETF6/wcMtJAQNUhKOqh8WddP6h6TYfH
bif0psf5OvzQiOk/9FXXIWJfsOLzKh+ofkOH7akdy32YfByOfAUqcDJ2eCQg
uJJjnjfUPFOHeTfnrDGQ9Hbgub64wLbL3EH5baLlhBQvqPmWDtt5VgmXVHo6
hOyQa3190dohULk17dFpD6h9tg5HYo/Eb7X1cDh3Bgh4HBwqb1/y27jEHWq/
o8M87cPf1712cyiy5bq+2MDJ4cT376e/sblB3ePs0Pqcl7XTytVBbB3QwhAX
h5S0lJX8zS5Q97k6fIjz/zjpgLMDAIs5jZc=
       "]]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[3, 5], 0.6]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKPD9Z3Cz6a6eTlA+IIOFu1cZt8XeDts
cH9YJbJO0qFhTRjD1h8+UHlFhxOzrt/4OdvXISMNBFQdDBdZPX8q6wtVr+nw
u3nRbPZsH4cfGjH9h77qOizl/m/pywDTb+gglXbbNXCHt8ORr0AFTsYON6/v
vfgqxRtqnqnDbJFJ7EtfeznwXF9cYNtl7nAl/d6VAk8vqPmWDnPurMmYXOXp
ELJDrvX1RWuHa9/lpz+95AG1z9ZhXpqxuJS7h8O5M0DA4+DAYfv8ksgmd6j9
jg6HI4XfTWV0dyiy5bq+2MDJIe2nnkOUjhvUPc4O+tsdoqZGuzqIrQNaGOLi
wMP90OvaYheo+1wdtGL1f1x+4uwAACjijfQ=
       "]]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[1, 2], 0.5]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKODx6ycC38meTpA+IIOeRt2Zn8t9HbY
4P6wSmSdpMNSjd8FvjI+UHlFh6blV7ielvg4ZKSBgKrD0amCLCUWPlD1mg7X
68tEnr72dvihEdN/6KuuwxP+c49XbfGG6jd0yKuJ2XmuydvhyFegAidjBzuv
mOMu5t5Q80wd2C8FXZx/3MuB5/riAtsuc4eW/sSdR029oOZbOghkGW14U+fp
ELJDrvX1RWuHvbkXfY/e8YDaZ+vQPfFtGWuIh8O5M0DA4+Awa+FJoVOH3aH2
OzocEK2JEpNxdyiy5bq+2MDJYXevxp7QUDeoe5wdElxLRf43uzqIrQNaGOLi
kHgyMlDsjAvUfa4OMUtMjpYIuDgAAODCjRs=
       "]]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[2, 5], 0.4]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKPDEu2MPzNueDhA+IIOvh1qIrKh3g4b
3B9WiayTdOAvfMt7aos3VF7RwazkxrOHj7wdMtJAQNWhK+HyP8ZTMPWaDvtf
el6vXeLt8EMjpv/QV12H6tdXFlxohuk3dJg4MWby4yhvhyNfgQqcjB1esTN8
nCMEM8/U4ekpXq8Tq7wceK4vLrDtMneo7HngmqrmBTXf0uGoquGdwmZPh5Ad
cq2vL1o7OKyL+fDxmQfUPluHTRsvz9yf6OFw7gwQ8Dg43FxYoTznmjvUfkcH
6zPH7qSZuzsU2XJdX2zg5MD6TvnE4Vo3qHucHe4c93ziuMHVQWwd0MIQF4cT
flNTeX64QN3n6lDibhsXZu/iAAB4aZG7
       "]]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[3, 10], 0.3]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKND1KUDcWFZHg4QvqDDrIdORgJO3g4b
3B9WiayTdHAyLk++WeMNlVd0+G2stCBshrdDRhoIqDrMLTE18eqFqdd0qMsS
3buvwtvhh0ZM/6Gvug6TGiftUEqC6Td04HNO7PSw9nY48hWowMnY4Wbm1unO
X7yg5pk6mAuLLT40ycuB5/riAtsuc4eJnyL4TSS9oOZbOkwJ+daa2ubpELJD
rvX1RWsHZ7mAae/ee0Dts3X4vu3SrT15Hg7nzgABj4PDCUfey5dfuEPtd3Tw
dXluuC7Q3aHIluv6YgMnhwXx7X8fLHaDusfZYeHkz+9a77k6iK0DWhji4pCf
bzjvvKor1H2uDl568rJ1+S4OAJBJizg=
       "]]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[1, 5], 0.2]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKPDL6FZj/pUPBwgfEEH347n7E4m3g4b
3B9WiayTdNi4/0RKX7Q3VF7RQVv0jk1DrrdDRhoIqDoknmd/WJgBU6/pYHPx
TvE1oPofGjH9h77qOtzbVTCT2ROm39BhtRb39nIFb4cjX4EKnIwdrry5s5T1
lhfUPFMHloJ8kTm1Xg481xcX2HaZO0Q9nDB1C48X1HxLh6eLX1+a3ubpELJD
rvX1RWsHrmytkM3fPKD22TrkuCza9LXSw+HcGSDgcXDYefZ+cPJPd6j9jg4X
TFMPvch0dyiy5bq+2MDJweWhx9P7x9yg7nF2mBx1ovw+n5uD2DqghSEuDjes
ZLeFhLhC3efqwBMjOfXlfBcHAFDsjpo=
       "]]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[1, 10], 0.1]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKOD5g6FN2++ujtA+IIO5T+vLojQ8HbY
4P6wSmSdpMOlxxv2OLh5Q+UVHb50SXdtCPJ2yEgDAVWHWA/vdwEBMPWaDtN4
DnN4uns7/NCI6T/0VdeB8XPG1XATmH5Dh+smfjWyHN4OR74CFTgZO2jz9BlL
HfKCmmfqoBMoJrIt08uB5/riAtsuc4c1f3h0N/z3hJpv6XBgmUoCZ7OnQ8gO
udbXF60dtkplvY7/5QG1z9bhSxvX1ylNHg7nzgABj4MD56SqaY3sHlD7HR0m
fpPXyqp3dyiy5bq+2MDJwSXhzunAZ25Q9zg7zDr6av1nKzcHsXVAC0NcHN4X
vK350+QKdZ+rQ2ICowP3BRcHAHyXisk=
       "]]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQrdD6OnCHHKPDS33z7JKr7g4QvqDD8c7UbcJS3g4b
3B9WiayTdIjPtFmxw9wbKq/oYLU3q3q3g7dDRhoIqDowqvqEp9vD1Gs67Lt/
T8AHqP6HRkz/oa+6DvueXT2tqwjTb+jQbu/woPuDl8ORr0AFTsYOC5KYPj5e
5QU1z9ThFdOt8p5QLwee64sLbLvMHXQFZh1/+8ETar6lQ9Bc0aUbqjwdQnbI
tb6+aO2gM4vxKdcvD6h9tg5Kj5r7j7Z7OJw7AwQ8Dg4fChx3FAp5QO13dMic
KBkze6K7Q5Et1/XFBk4OF9a7T7nH6A51j7ND4dEbK8SS3BzE1gEtDHFx4MoP
VorZ6Ap1n6vDMpHTGT3/XRwAdN2LBQ==
       "]]}}, {
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[9, 10], 0.9]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[4, 5], 0.8]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[7, 10], 0.7]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[3, 5], 0.6]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[1, 2], 0.5]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[2, 5], 0.4]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[3, 10], 0.3]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[1, 5], 0.2]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[1, 10], 0.1]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}}, {
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[9, 10], 0.9]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[4, 5], 0.8]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[7, 10], 0.7]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[3, 5], 0.6]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[1, 2], 0.5]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[2, 5], 0.4]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[3, 10], 0.3]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[1, 5], 0.2]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[1, 10], 0.1]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {
     {RGBColor[0, 0, 1], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[1, 10], 0.1], 0, 
       NCache[
        Rational[9, 10], 0.9]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[1, 5], 0.2], 0, 
       NCache[
        Rational[4, 5], 0.8]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[3, 10], 0.3], 0, 
       NCache[
        Rational[7, 10], 0.7]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[2, 5], 0.4], 0, 
       NCache[
        Rational[3, 5], 0.6]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[1, 2], 0.5], 0, 
       NCache[
        Rational[1, 2], 0.5]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[3, 5], 0.6], 0, 
       NCache[
        Rational[2, 5], 0.4]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[7, 10], 0.7], 0, 
       NCache[
        Rational[3, 10], 0.3]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[4, 5], 0.8], 0, 
       NCache[
        Rational[1, 5], 0.2]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[
       NCache[
        Rational[9, 10], 0.9], 0, 
       NCache[
        Rational[1, 10], 0.1]], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[1.6]}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 72], 0.013888888888888888`]], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 37.97185373482526},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 42.80000000000001}, {37.97185373482526, 64.1629381025787}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8454583044804597`*^9, 3.845458456990904*^9, {3.8454585177568684`*^9, 
   3.8454585445812235`*^9}, 3.845501191684733*^9, 3.8456736288740897`*^9, 
   3.84572927341765*^9, 3.8460201048908887`*^9, 3.8462572179553165`*^9, 
   3.8465802230257998`*^9, 3.8472255983924956`*^9, 3.8474049879901466`*^9, 
   3.8474531439927635`*^9, 3.848014385428028*^9, 3.848015962872672*^9, 
   3.848057199327783*^9, 3.848095166242471*^9, 3.848098940149025*^9, 
   3.8480990444340677`*^9, 3.8481007419822955`*^9, 3.848103066256642*^9, 
   3.8481031589220953`*^9, 3.8481441631563725`*^9, 3.8483551240871544`*^9, 
   3.8485304213300233`*^9, 3.8503432946938734`*^9, 3.8511188097087097`*^9, 
   3.8511275302375646`*^9, 3.8511279924839168`*^9, 3.8530229374625497`*^9, 
   3.8576375214472294`*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"50092b6e-a0c7-40c6-ae4d-6edea782e96c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final Function", "Chapter",
 CellChangeTimes->{{3.8442103579929485`*^9, 
  3.8442103600806437`*^9}},ExpressionUUID->"2a0ee346-7068-4d3c-b1f8-\
be412619c84a"],

Cell[BoxData[{
 RowBox[{"get1DSol", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"get1DSol", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramAssociation_", "?", "AssociationQ"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"maxTime_", "?", "NumberQ"}], ",", "\[IndentingNewLine]", 
    "sweepParam_", ",", "\[IndentingNewLine]", "startRing_", ",", 
    "\[IndentingNewLine]", "endRing_", ",", "\[IndentingNewLine]", 
    RowBox[{"longTime_", "?", "BooleanQ"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"params", "=", 
       RowBox[{"paramAssociation", "/@", "extParams"}]}], ",", 
      "\[IndentingNewLine]", "eqns", ",", "\[IndentingNewLine]", "initRules", 
      ",", "\[IndentingNewLine]", "solution1D", ",", "\[IndentingNewLine]", 
      "solution1DLong", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "sols", ",", "\[IndentingNewLine]", "cSols", ",", "\[IndentingNewLine]",
       "cERSols", ",", "\[IndentingNewLine]", "gcampSol1D", ",", 
      "\[IndentingNewLine]", "caRad1D", ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "solsLong", ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "sweepSols", ",", "sweepRads", ",", "sweepPlot", 
      ",", "colors", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "longPlot"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"initRules", "=", 
      RowBox[{"getNewInits", "@", "paramAssociation"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eqns", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"modelEqns1D", "/.", "initRules"}], ")"}], "/.", 
          "multiCellReplacements1D"}], "]"}], "/.", "ablatedChanges"}], "/.", 
       "intParams"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"testing", "=", "eqns"}], ";", "\[IndentingNewLine]", 
     RowBox[{"solution1D", "=", "\[IndentingNewLine]", 
      RowBox[{"ParametricNDSolveValue", "[", "\[IndentingNewLine]", 
       RowBox[{"eqns", ",", "\[IndentingNewLine]", 
        RowBox[{"depVars1D", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", 
           RowBox[{"{", 
            RowBox[{"3", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
        "\[IndentingNewLine]", "extParams", ",", "\[IndentingNewLine]", 
        RowBox[{"DependentVariables", "\[Rule]", 
         RowBox[{"Flatten", "@", "depVars1D"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<Method\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<EquationSimplification\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"\"\<TimeConstraint\>\"", "\[Rule]", "100"}]}], "}"}]}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"solution1DLong", "=", "\[IndentingNewLine]", 
      RowBox[{"ParametricNDSolveValue", "[", "\[IndentingNewLine]", 
       RowBox[{"eqns", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"CtoF", "/@", 
           RowBox[{"depVars1D", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "3"}], "]"}], "]"}]}], ")"}], "/.", 
         RowBox[{"t", "\[Rule]", "1000."}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "1000."}], "}"}], ",", 
        "\[IndentingNewLine]", "extParams", ",", "\[IndentingNewLine]", 
        RowBox[{"DependentVariables", "\[Rule]", 
         RowBox[{"Flatten", "@", "depVars1D"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<Method\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<EquationSimplification\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"\"\<TimeConstraint\>\"", "\[Rule]", "100"}]}], "}"}]}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"sols", "=", 
      RowBox[{"solution1D", "@@", "params"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cSols", "=", 
      RowBox[{"sols", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cERSols", "=", 
      RowBox[{"sols", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"gcampSol1D", "=", 
      RowBox[{"CtoF", "/@", "cSols"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"caRad1D", "=", 
      RowBox[{"getCaRad1D", "[", "gcampSol1D", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "If", " ", "you", " ", "want", " ", "to", " ", "sweep", " ", "a", " ", 
       "parameter"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"sweepParam", "===", "\"\<None\>\""}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sweepSols", "=", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"sweepParam", "===", "\"\<True \[Eta]NCX\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"solution1D", "@@@", 
            RowBox[{"(", 
             RowBox[{"extParams", "/.", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ReplacePart", "[", 
                 RowBox[{"paramAssociation", ",", 
                  RowBox[{"Append", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Key", "@", "#"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"paramAssociation", "[", "#", "]"}], "/", 
                    "scale"}]}], ")"}], "&"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "r\[Mu]T", ",", "rPMCA", ",", "rSOC", ",", "rlkPM"}], 
                    "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"Key", "@", "\[Eta]NCX"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"paramAssociation", "[", "\[Eta]NCX", "]"}], "*", 
                    "scale"}]}]}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"scale", ",", ".5", ",", "1.5", ",", ".1"}], "}"}]}],
                "]"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"solution1D", "@@@", 
            RowBox[{"(", 
             RowBox[{"extParams", "/.", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ReplacePart", "[", 
                 RowBox[{"paramAssociation", ",", 
                  RowBox[{
                   RowBox[{"Key", "@", "sweepParam"}], "\[Rule]", 
                   RowBox[{
                    RowBox[{"paramAssociation", "[", "sweepParam", "]"}], "*",
                     "scale"}]}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"scale", ",", ".5", ",", "1.5", ",", ".1"}], "}"}]}],
                "]"}]}], ")"}]}]}], "\[IndentingNewLine]", "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"sweepRads", "=", 
         RowBox[{"getCaRad1D", "/@", 
          RowBox[{"(", 
           RowBox[{"CtoF", "/@", 
            RowBox[{"(", 
             RowBox[{"sweepSols", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", ";;", ",", "1"}], "]"}], "]"}], ")"}]}], 
           ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"colors", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{"r", ",", "0", ",", 
             RowBox[{"1", "-", "r"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "0", ",", "1", ",", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Length", "@", "sweepRads"}], ")"}], "-", "1"}], 
               ")"}]}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"sweepPlot", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"ListLinePlot", "[", 
            RowBox[{"sweepRads", ",", 
             RowBox[{"PlotStyle", "\[Rule]", "colors"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Min", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}], "*", 
                 ".9"}], ",", 
                RowBox[{
                 RowBox[{"Max", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}], "*", 
                 "1.1"}]}], "}"}]}], ",", 
             RowBox[{"AxesLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<t (s)\>\"", ",", 
                "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) rad \
(\[Mu]m)\>\""}], "}"}]}], ",", 
             RowBox[{"PlotLabel", "\[Rule]", 
              RowBox[{"ToString", "@", "sweepParam"}]}]}], "]"}], "&"}], "@", 
          RowBox[{"caRadData", "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"IntegerPart", "@", 
              RowBox[{"(", 
               RowBox[{"42", "/", "\[CapitalDelta]t"}], ")"}]}]}], "]"}], 
           "]"}]}]}], ";"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sweepPlot", "=", "\"\<Plot was not generated\>\""}], ";"}]}],
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "If", " ", "you", " ", "want", " ", "to", " ", "look", " ", "at", " ", 
       "long", " ", "time", " ", "solution"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"longTime", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"solsLong", "=", 
         RowBox[{"solution1DLong", "@@", "params"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"longPlot", "=", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{"solsLong", ",", "\[IndentingNewLine]", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<distance from wound center (# cells)\>\"", ",", 
              "\"\<resting GCaMP Fl.\>\""}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Epilog", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Gray", ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"5", ",", 
                   RowBox[{"minInt", "*", ".5"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"5", ",", 
                   RowBox[{"maxInt", "*", "1.5"}]}], "}"}]}], "}"}], "]"}]}], 
             "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"minInt", "*", ".9"}], ",", 
              RowBox[{"maxInt", "*", "1.1"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"longPlot", "=", "\"\<Plot at long time not generated\>\""}]}],
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{".9", "*", "minInt"}], ",", 
               RowBox[{"1.1", "*", "maxInt"}]}], "}"}]}]}], "]"}], "&"}], "/@",
          "gcampSol1D"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"caRad1D", "/.", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"t_", ",", "r_"}], "}"}], "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", 
                   RowBox[{"r", "/", "\[CapitalDelta]x"}]}], "}"}]}], ")"}]}],
               ",", 
              RowBox[{"#", "/.", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"t_", ",", "r_"}], "}"}], "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"t", ",", 
                   RowBox[{"r", "/", "\[CapitalDelta]x"}]}], "}"}]}], 
                ")"}]}]}], "}"}], ",", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}]}], ",", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<Model\>\"", ",", "\"\<Data\>\""}], "}"}]}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "40"}], "}"}], ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}], "*", 
                   ".9"}], ",", 
                  RowBox[{
                   RowBox[{"Max", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}], "*", 
                   "1.1"}]}], "}"}], "/", "\[CapitalDelta]x"}]}], "}"}]}], 
            ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
              "\"\<t (s)\>\"", ",", 
               "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) Radius (# \
cells)\>\""}], "}"}]}], ",", 
            RowBox[{"FrameStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{"Black", ",", "16"}], "]"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Automatic"}], "}"}]}]}], "]"}], "&"}], 
         "@", 
         RowBox[{"caRadData", "[", 
          RowBox[{"[", 
           RowBox[{";;", 
            RowBox[{"IntegerPart", "@", 
             RowBox[{"(", 
              RowBox[{"42", "/", "\[CapitalDelta]t"}], ")"}]}]}], "]"}], 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{"sweepParam", "===", "\"\<None\>\""}], ")"}]}], ",", 
          RowBox[{"Show", "[", 
           RowBox[{"sweepPlot", ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"caRadData", "[", 
               RowBox[{"[", 
                RowBox[{";;", 
                 RowBox[{"IntegerPart", "@", 
                  RowBox[{"(", 
                   RowBox[{"42", "/", "\[CapitalDelta]t"}], ")"}]}]}], "]"}], 
               "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Black", ",", 
                 RowBox[{"PointSize", "@", "Medium"}]}], "}"}]}]}], "]"}]}], 
           "]"}], ",", "sweepPlot"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{"#", ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
            RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "&"}], "/@", 
         "cSols"}], ",", "\[IndentingNewLine]", 
        RowBox[{"LogPlot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"cSols", "[", 
            RowBox[{"[", 
             RowBox[{"startRing", ";;", "endRing"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"Range", "[", 
            RowBox[{"startRing", ",", "endRing"}], "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", "longPlot", ",", "\[IndentingNewLine]", 
        "gcampSol1D"}], "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
      "]"}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.843769094267501*^9, 3.8437691110861692`*^9}, 
   3.8438148356828613`*^9, 3.8438181707168913`*^9, {3.843824239395362*^9, 
   3.843824239871467*^9}, {3.8438243469051867`*^9, 3.8438243638945837`*^9}, {
   3.844120565240511*^9, 3.8441205693604507`*^9}, {3.844204151601036*^9, 
   3.8442041598028336`*^9}, 3.8442106985342283`*^9, {3.844210757822525*^9, 
   3.844210773425356*^9}, {3.8442133005351896`*^9, 3.8442133126529484`*^9}, {
   3.8442134379950757`*^9, 3.8442135958664956`*^9}, {3.844213658905744*^9, 
   3.8442136901905775`*^9}, {3.8442137551270456`*^9, 
   3.8442137605483203`*^9}, {3.8442138887809916`*^9, 3.844213939854982*^9}, {
   3.844213970453663*^9, 3.8442139717293854`*^9}, {3.844511269333426*^9, 
   3.8445113176241074`*^9}, {3.84532808660795*^9, 3.8453281164129615`*^9}, {
   3.8453310623914056`*^9, 3.8453311289947834`*^9}, {3.845331348431369*^9, 
   3.845331348554484*^9}, {3.845331382983985*^9, 3.84533138342445*^9}, {
   3.8454556131267543`*^9, 3.845455618274513*^9}, {3.8454587825814548`*^9, 
   3.845458862100913*^9}, {3.845458932288188*^9, 3.845458986322427*^9}, {
   3.8454590915836287`*^9, 3.84545928508829*^9}, {3.845459412278656*^9, 
   3.8454594572681246`*^9}, {3.8454597542047715`*^9, 3.845459782743617*^9}, {
   3.8454600001822777`*^9, 3.8454600130053873`*^9}, {3.8454603876526504`*^9, 
   3.845460416714419*^9}, {3.84546045186778*^9, 3.8454605336608853`*^9}, {
   3.8454605650424013`*^9, 3.8454605838100967`*^9}, {3.8455017312828183`*^9, 
   3.8455017442167063`*^9}, {3.8455032432711654`*^9, 3.845503260232248*^9}, {
   3.845593121193791*^9, 3.8455931237750053`*^9}, {3.8455931573807487`*^9, 
   3.8455931633963194`*^9}, {3.845593248166744*^9, 3.845593278028363*^9}, {
   3.845593365202319*^9, 3.84559336583272*^9}, {3.8455934715671196`*^9, 
   3.8455935139518332`*^9}, {3.8455935449546595`*^9, 
   3.8455935910644016`*^9}, {3.845593621618701*^9, 3.845593634423354*^9}, {
   3.847227602386088*^9, 3.8472276025065594`*^9}, {3.8472277809718885`*^9, 
   3.8472278623928547`*^9}, {3.847228424708872*^9, 3.8472284407230635`*^9}, {
   3.84722847108525*^9, 3.8472284713779855`*^9}, {3.8474046772719493`*^9, 
   3.847404685877672*^9}, {3.8474050553204956`*^9, 3.8474050812514567`*^9}, {
   3.8474051387209234`*^9, 3.8474051405391617`*^9}, {3.8474069091782665`*^9, 
   3.8474069760567164`*^9}, 3.847407065452034*^9, {3.847407199173514*^9, 
   3.8474073264081936`*^9}, {3.848101022164205*^9, 3.8481010487617383`*^9}, {
   3.8481010844049225`*^9, 3.8481012640525465`*^9}, {3.8481014406265373`*^9, 
   3.8481014696178637`*^9}, {3.848101527333971*^9, 3.848101535501706*^9}, {
   3.848101683142521*^9, 3.8481017258108044`*^9}, {3.848101781748786*^9, 
   3.848101875183883*^9}, {3.848102194738211*^9, 3.8481022016353455`*^9}, {
   3.84810286338842*^9, 3.8481028681092196`*^9}, {3.853081721445233*^9, 
   3.853081753355065*^9}, {3.8530817952643394`*^9, 3.8530818052327447`*^9}, {
   3.8530820506179852`*^9, 3.8530821204638042`*^9}, {3.8530822588840947`*^9, 
   3.8530822591131134`*^9}, {3.8531042510127172`*^9, 
   3.8531042589394817`*^9}, {3.853109912277623*^9, 3.853109916478827*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"b744059c-dd15-4f95-ae30-820064799caf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IP3 Spike Model", "Title",
 CellChangeTimes->{{3.8438154843885894`*^9, 
  3.8438154863122005`*^9}},ExpressionUUID->"657835b3-1a6c-4e20-8f59-\
689493d7d6c9"],

Cell["\<\
This second uses a \[OpenCurlyDoubleQuote]zoomed in\[CloseCurlyDoubleQuote] \
tissue to test for wave propagation capabilities in the model. The model has \
no damage, but it starts with an initial IP3 Spike in the center cell of the \
tissue. The goal is to obtain a propagative wave from this spike, and to \
(potentially) alter model parameters to obtain a wave that propagates at a \
speed and \[OpenCurlyDoubleQuote]width\[CloseCurlyDoubleQuote] similar to \
that in the data\
\>", "Text",
 CellChangeTimes->{{3.843815488457371*^9, 
  3.843815573202856*^9}},ExpressionUUID->"acba057a-ff33-401c-8484-\
a1f9d1f52570"],

Cell[CellGroupData[{

Cell["Tissue Model Setup", "Chapter",
 CellChangeTimes->{{3.822659867871378*^9, 3.8226598710969934`*^9}, {
  3.8365106841554284`*^9, 
  3.8365106855333323`*^9}},ExpressionUUID->"b71711b6-4a47-459e-ae7f-\
04fc9a2ad05d"],

Cell[" Using \[OpenCurlyDoubleQuote]zoomed in\[CloseCurlyDoubleQuote] tissue \
for testing IP3 spike model", "Text",
 CellChangeTimes->{{3.8442454640496035`*^9, 
  3.844245483055751*^9}},ExpressionUUID->"9f5c0065-c1d6-4b6c-b4a7-\
fffb9c8a5411"],

Cell[CellGroupData[{

Cell["Mesh", "Subsection",
 CellChangeTimes->{{3.8226599075851936`*^9, 
  3.822659908096011*^9}},ExpressionUUID->"352f458d-8faf-4b7f-95b7-\
4cf00ddb0f26"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"mesh", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
       "Import", "[", 
        "\"\<C:\\\\Users\\\\Greg Stevens\\\\Box\\\\Research Backup\\\\Current \
Work\\\\Older Calcium Modeling and Misc\\\\mesh_4826cells_450x450.m\>\"", 
        "]"}], "\[IndentingNewLine]", "meshRatio"}], "=", "1."}]}], ";"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"mesh", "=", 
    RowBox[{
    "Import", "[", 
     "\"\<C:\\\\Users\\\\Greg Stevens\\\\Box\\\\Research Backup\\\\Current \
Work\\\\Older Calcium Modeling and Misc\\\\mesh_100cells_450x450.m\>\"", 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meshRatio", "=", ".143"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Just", " ", "for", " ", "testing", " ", 
     RowBox[{"purposes", ".", " ", "This"}], " ", "ratio", " ", "takes", " ", 
     "the", " ", "100", " ", "cell", " ", "mesh", " ", "and", " ", "changes", 
     " ", "the", " ", "lengths", " ", "to", " ", "be", " ", "comparable", " ",
      "to", " ", "the", " ", "4826", " ", "cell", " ", "mesh"}], "*)"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.739621047277499*^9, 3.7396210862113266`*^9}, {
   3.739621516171378*^9, 3.7396215270716095`*^9}, {3.7396231420362487`*^9, 
   3.7396231423380613`*^9}, {3.7396232577494*^9, 3.7396232581221695`*^9}, {
   3.7397866816720877`*^9, 3.739786681931926*^9}, {3.740309095596455*^9, 
   3.7403090975832243`*^9}, {3.740309219624446*^9, 3.7403092205148926`*^9}, {
   3.7439230049245567`*^9, 3.743923011719336*^9}, 3.7439255061219854`*^9, {
   3.7559450748103423`*^9, 3.755945085796426*^9}, {3.755948700588379*^9, 
   3.755948708343642*^9}, {3.7559505913784027`*^9, 3.755950591663229*^9}, {
   3.7560486657395988`*^9, 3.756048672687342*^9}, {3.756051392365344*^9, 
   3.7560514022025604`*^9}, {3.7577606527660847`*^9, 
   3.7577606598556967`*^9}, {3.757766371201997*^9, 3.7577663772242656`*^9}, {
   3.758019174596737*^9, 3.7580191760618305`*^9}, {3.7580279944598103`*^9, 
   3.75802799730205*^9}, {3.8226599213418117`*^9, 3.822659988677163*^9}, {
   3.8237895408722878`*^9, 3.8237895628648596`*^9}, {3.823855663719519*^9, 
   3.823855686675416*^9}, {3.8238560323876524`*^9, 3.823856033821536*^9}, {
   3.82385654983352*^9, 3.8238565574427624`*^9}, {3.823860538172841*^9, 
   3.8238605394794726`*^9}, {3.824294012447626*^9, 3.824294045164238*^9}, {
   3.824378002009613*^9, 3.824378003332076*^9}, {3.824804554918685*^9, 
   3.8248045569903536`*^9}, {3.8260560007012205`*^9, 
   3.8260560075649085`*^9}, {3.8284377333566713`*^9, 3.828437741542472*^9}, {
   3.8284391859843435`*^9, 3.8284391922832336`*^9}, {3.828613779586338*^9, 
   3.8286137865115166`*^9}, {3.8286138447492485`*^9, 3.828613852637532*^9}, {
   3.830600810807991*^9, 3.8306008148577113`*^9}, {3.8306009324260116`*^9, 
   3.8306009395545816`*^9}, {3.8306015427194953`*^9, 3.830601549937025*^9}, {
   3.830857585537733*^9, 3.830857594929878*^9}, {3.8318050775196266`*^9, 
   3.8318050849720135`*^9}, {3.8320756251669416`*^9, 
   3.8320756317040014`*^9}, {3.8364339933477573`*^9, 
   3.8364340019488487`*^9}, {3.8364737380145025`*^9, 3.836473819039795*^9}, {
   3.836474040374346*^9, 3.8364740616391273`*^9}, {3.8365106591927795`*^9, 
   3.836510662145822*^9}, {3.837035493527646*^9, 3.837035499411827*^9}, {
   3.841394232553795*^9, 3.841394266297035*^9}, {3.8417780814656057`*^9, 
   3.8417780853734446`*^9}, {3.841864980717204*^9, 3.841864989595215*^9}, {
   3.847842471893647*^9, 3.8478424928273735`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"4bf1b657-0657-4320-966a-305c4d1070b2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     MeshRegion[CompressedData["
1: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
6pP3NalP8qT+PwGEwO0=
      "], {
       Polygon[{{159, 57, 150, 175}, {169, 111, 60, 167}, {188, 43, 1, 184}, {
        200, 172, 90, 190}, {170, 45, 41, 166}, {201, 171, 96, 178}, {193, 
        132, 30, 179}, {180, 44, 27, 185}, {192, 97, 75, 191}, {195, 138, 168,
         199}, {189, 110, 147, 197}, {198, 42, 174, 202}}], 
       Polygon[{{181, 17, 156, 29, 194}, {187, 35, 152, 53, 182}, {190, 90, 
        79, 80, 177}, {163, 2, 76, 96, 171}, {162, 18, 21, 142, 161}, {179, 
        30, 133, 139, 196}, {185, 27, 88, 110, 189}, {165, 77, 125, 2, 163}, {
        25, 94, 37, 65, 51}, {86, 38, 16, 87, 89}, {166, 41, 33, 74, 160}, {
        130, 141, 28, 47, 145}, {155, 100, 120, 6, 54}, {182, 53, 114, 3, 
        186}, {183, 154, 11, 44, 180}, {131, 46, 72, 23, 140}, {186, 3, 101, 
        17, 181}, {78, 125, 77, 8, 34}, {83, 157, 20, 68, 84}, {148, 149, 122,
         9, 137}, {85, 115, 71, 118, 73}, {134, 56, 99, 69, 136}, {13, 156, 
        17, 101, 82}, {21, 18, 105, 5, 61}, {144, 95, 107, 106, 103}, {194, 
        29, 108, 132, 193}, {59, 144, 103, 93, 116}, {135, 9, 122, 117, 14}, {
        196, 139, 50, 138, 195}, {175, 150, 123, 146, 176}, {151, 114, 53, 
        152, 4}, {157, 83, 81, 158, 119}, {164, 39, 8, 77, 165}, {176, 146, 
        135, 14, 173}, {191, 75, 15, 35, 187}, {177, 80, 63, 43, 188}}], 
       Polygon[{{161, 142, 55, 12, 57, 159}, {24, 124, 67, 15, 75, 97}, {167, 
        60, 112, 105, 18, 162}, {100, 13, 82, 113, 66, 120}, {160, 74, 140, 
        23, 39, 164}, {70, 58, 106, 107, 7, 31}, {153, 62, 91, 98, 136, 69}, {
        4, 152, 35, 15, 67, 40}, {184, 1, 91, 62, 154, 183}, {50, 139, 133, 
        19, 64, 49}, {126, 143, 127, 26, 102, 32}, {115, 59, 116, 37, 94, 
        71}, {129, 104, 5, 105, 112, 48}, {121, 128, 51, 65, 26, 127}, {70, 
        153, 69, 99, 92, 58}, {178, 96, 76, 24, 97, 192}, {63, 80, 79, 117, 
        122, 149}, {168, 138, 50, 49, 111, 169}, {119, 158, 36, 66, 113, 
        22}, {93, 102, 26, 65, 37, 116}, {86, 147, 110, 88, 109, 38}, {49, 64,
         48, 112, 60, 111}, {173, 14, 117, 79, 90, 172}, {24, 76, 2, 125, 78, 
        124}, {143, 61, 5, 104, 121, 127}, {128, 121, 104, 129, 54, 6}, {130, 
        85, 73, 46, 131, 141}, {52, 19, 133, 30, 132, 108}, {123, 10, 137, 9, 
        135, 146}, {98, 148, 137, 10, 134, 136}, {33, 28, 141, 131, 140, 
        74}, {142, 21, 61, 143, 126, 55}, {153, 70, 31, 11, 154, 62}, {174, 
        42, 89, 87, 45, 170}, {197, 147, 86, 89, 42, 198}}], 
       Polygon[{{31, 7, 109, 88, 27, 44, 11}, {28, 33, 41, 45, 87, 16, 47}, {
        55, 126, 32, 92, 99, 56, 12}, {157, 119, 22, 151, 4, 40, 20}, {52, 
        155, 54, 129, 48, 64, 19}, {8, 39, 23, 72, 84, 68, 34}, {123, 150, 57,
         12, 56, 134, 10}, {78, 34, 68, 20, 40, 67, 124}, {83, 84, 72, 46, 73,
         118, 81}, {93, 103, 106, 58, 92, 32, 102}, {114, 151, 22, 113, 82, 
        101, 3}, {158, 81, 118, 71, 94, 25, 36}, {128, 6, 120, 66, 36, 25, 
        51}, {85, 130, 145, 95, 144, 59, 115}, {43, 63, 149, 148, 98, 91, 
        1}, {155, 52, 108, 29, 156, 13, 100}}], 
       Polygon[{{95, 145, 47, 16, 38, 109, 7, 107}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, "BoundaryNesting" -> 
        Automatic, "SeparateBoundaries" -> Automatic, "TJunction" -> 
        Automatic, "PropagateMarkers" -> True, "ZeroTest" -> Automatic, 
        "Hash" -> 6785631028306987912}]]}, 
    TagBox[GraphicsComplexBox[CompressedData["
1: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
6pP3NalP8qT+PwGEwO0=
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        PolygonBox[{{159, 57, 150, 175}, {169, 111, 60, 167}, {188, 43, 1, 
         184}, {200, 172, 90, 190}, {170, 45, 41, 166}, {201, 171, 96, 178}, {
         193, 132, 30, 179}, {180, 44, 27, 185}, {192, 97, 75, 191}, {195, 
         138, 168, 199}, {189, 110, 147, 197}, {198, 42, 174, 202}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[
        PolygonBox[{{181, 17, 156, 29, 194}, {187, 35, 152, 53, 182}, {190, 
         90, 79, 80, 177}, {163, 2, 76, 96, 171}, {162, 18, 21, 142, 161}, {
         179, 30, 133, 139, 196}, {185, 27, 88, 110, 189}, {165, 77, 125, 2, 
         163}, {25, 94, 37, 65, 51}, {86, 38, 16, 87, 89}, {166, 41, 33, 74, 
         160}, {130, 141, 28, 47, 145}, {155, 100, 120, 6, 54}, {182, 53, 114,
          3, 186}, {183, 154, 11, 44, 180}, {131, 46, 72, 23, 140}, {186, 3, 
         101, 17, 181}, {78, 125, 77, 8, 34}, {83, 157, 20, 68, 84}, {148, 
         149, 122, 9, 137}, {85, 115, 71, 118, 73}, {134, 56, 99, 69, 136}, {
         13, 156, 17, 101, 82}, {21, 18, 105, 5, 61}, {144, 95, 107, 106, 
         103}, {194, 29, 108, 132, 193}, {59, 144, 103, 93, 116}, {135, 9, 
         122, 117, 14}, {196, 139, 50, 138, 195}, {175, 150, 123, 146, 176}, {
         151, 114, 53, 152, 4}, {157, 83, 81, 158, 119}, {164, 39, 8, 77, 
         165}, {176, 146, 135, 14, 173}, {191, 75, 15, 35, 187}, {177, 80, 63,
          43, 188}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[
        PolygonBox[{{161, 142, 55, 12, 57, 159}, {24, 124, 67, 15, 75, 97}, {
         167, 60, 112, 105, 18, 162}, {100, 13, 82, 113, 66, 120}, {160, 74, 
         140, 23, 39, 164}, {70, 58, 106, 107, 7, 31}, {153, 62, 91, 98, 136, 
         69}, {4, 152, 35, 15, 67, 40}, {184, 1, 91, 62, 154, 183}, {50, 139, 
         133, 19, 64, 49}, {126, 143, 127, 26, 102, 32}, {115, 59, 116, 37, 
         94, 71}, {129, 104, 5, 105, 112, 48}, {121, 128, 51, 65, 26, 127}, {
         70, 153, 69, 99, 92, 58}, {178, 96, 76, 24, 97, 192}, {63, 80, 79, 
         117, 122, 149}, {168, 138, 50, 49, 111, 169}, {119, 158, 36, 66, 113,
          22}, {93, 102, 26, 65, 37, 116}, {86, 147, 110, 88, 109, 38}, {49, 
         64, 48, 112, 60, 111}, {173, 14, 117, 79, 90, 172}, {24, 76, 2, 125, 
         78, 124}, {143, 61, 5, 104, 121, 127}, {128, 121, 104, 129, 54, 6}, {
         130, 85, 73, 46, 131, 141}, {52, 19, 133, 30, 132, 108}, {123, 10, 
         137, 9, 135, 146}, {98, 148, 137, 10, 134, 136}, {33, 28, 141, 131, 
         140, 74}, {142, 21, 61, 143, 126, 55}, {153, 70, 31, 11, 154, 62}, {
         174, 42, 89, 87, 45, 170}, {197, 147, 86, 89, 42, 198}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[
        PolygonBox[{{31, 7, 109, 88, 27, 44, 11}, {28, 33, 41, 45, 87, 16, 
         47}, {55, 126, 32, 92, 99, 56, 12}, {157, 119, 22, 151, 4, 40, 20}, {
         52, 155, 54, 129, 48, 64, 19}, {8, 39, 23, 72, 84, 68, 34}, {123, 
         150, 57, 12, 56, 134, 10}, {78, 34, 68, 20, 40, 67, 124}, {83, 84, 
         72, 46, 73, 118, 81}, {93, 103, 106, 58, 92, 32, 102}, {114, 151, 22,
          113, 82, 101, 3}, {158, 81, 118, 71, 94, 25, 36}, {128, 6, 120, 66, 
         36, 25, 51}, {85, 130, 145, 95, 144, 59, 115}, {43, 63, 149, 148, 98,
          91, 1}, {155, 52, 108, 29, 156, 13, 100}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[PolygonBox[{{95, 145, 47, 16, 38, 109, 7, 107}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{{3.823856034463242*^9, 3.8238560370876565`*^9}, {
   3.8238565584104004`*^9, 3.8238565616344185`*^9}, {3.823860542229067*^9, 
   3.823860567923577*^9}, 3.824294016619959*^9, 3.8243015290698023`*^9, 
   3.8243780047901716`*^9, 3.824804560037943*^9, 3.8260205691109676`*^9, {
   3.826056008485368*^9, 3.8260560121955914`*^9}, 3.826840175718664*^9, 
   3.826888410090477*^9, 3.827179451706884*^9, 3.827242944698306*^9, 
   3.8284377430493712`*^9, 3.828439195601423*^9, 3.828528092518047*^9, 
   3.8286134257903366`*^9, 3.8286137871903324`*^9, {3.828613853118516*^9, 
   3.8286138566401787`*^9}, 3.828615349168194*^9, 3.8286155318629556`*^9, 
   3.8293452631076307`*^9, 3.8293477223557267`*^9, 3.8306006286125984`*^9, 
   3.830600815640318*^9, {3.8306009401265464`*^9, 3.830600948526572*^9}, {
   3.830601552509945*^9, 3.830601555194383*^9}, 3.8306084638724403`*^9, {
   3.8308575833648663`*^9, 3.8308575994884005`*^9}, {3.830991522347923*^9, 
   3.83099152731546*^9}, {3.8311211357899323`*^9, 3.8311211393759413`*^9}, 
   3.8318014395212445`*^9, {3.8318050861791863`*^9, 3.8318051044141226`*^9}, {
   3.8318051590823927`*^9, 3.8318051631827517`*^9}, 3.8318109604157705`*^9, 
   3.832072668885855*^9, 3.832075632430786*^9, 3.832322593593811*^9, 
   3.832370354575927*^9, 3.8324082824664836`*^9, 3.832888579208638*^9, 
   3.8333274511596413`*^9, {3.833536164687995*^9, 3.833536168748991*^9}, 
   3.8358065968078566`*^9, {3.8358636587006435`*^9, 3.835863681889943*^9}, 
   3.8358643936209106`*^9, {3.83643288592087*^9, 3.836432898597249*^9}, {
   3.8364340026863966`*^9, 3.836434006919263*^9}, 3.8364737463951235`*^9, 
   3.836473821722616*^9, 3.8364740644869347`*^9, 3.836478434327814*^9, 
   3.8365106823599577`*^9, 3.8365113099920397`*^9, 3.8365639843835096`*^9, 
   3.8369043344854336`*^9, 3.8370355033148546`*^9, 3.839368655256663*^9, 
   3.8413942197043037`*^9, 3.8413942587467484`*^9, 3.841778097379689*^9, 
   3.841864994295637*^9, {3.8419612256671185`*^9, 3.841961236798929*^9}, 
   3.8442464948425584`*^9, 3.8442673231130686`*^9, 3.844510765779428*^9, 
   3.8447873631464453`*^9, 3.844810162903545*^9, 3.8450645201350255`*^9, 
   3.8454134219054995`*^9, 3.8455012356268983`*^9, 3.84567362933187*^9, 
   3.845729273885023*^9, 3.846020105418562*^9, 3.846257218363575*^9, 
   3.846580223469218*^9, 3.847225654129925*^9, 3.847404988390073*^9, 
   3.847453144617375*^9, 3.8478424940411077`*^9, 3.848016065695051*^9, 
   3.8480572052371655`*^9, 3.848095169657592*^9, 3.8480952057881765`*^9, 
   3.8480953477985363`*^9, {3.8481019058949747`*^9, 3.8481019304781933`*^9}, 
   3.848144163533148*^9, 3.848355125592168*^9, 3.8485304217931695`*^9, 
   3.8503432964703627`*^9, 3.8511188108032*^9, 3.8511275305695887`*^9, 
   3.8511279927930107`*^9, 3.8530229387595463`*^9, 3.8576375227908735`*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"0d9ce871-7390-44d0-96d3-743ae933b6ab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "information", " ", "about", " ", "each", " ", "cell"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"range", "=", "450."}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"From", " ", "mesh", " ", "file", " ", "name", " ", 
     RowBox[{"(", 
      RowBox[{
      "side", " ", "length", " ", "of", " ", "grid", " ", "in", " ", 
       "\[Mu]m"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Get", " ", "distances", " ", "from", " ", "center", " ", "of", " ", 
     "mesh", " ", "to", " ", "each", " ", "cell", " ", "centroid"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distances", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"range", "/", "2"}]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{"range", "/", "2"}]}], ")"}], "2"]}], "]"}], "&"}], "/@", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
        "]"}]}], "*", "meshRatio"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"positions", "=", 
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Get", " ", "number", " ", "of", " ", "cells"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numCells2D", "=", 
     RowBox[{"Length", "@", "distances"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0VtI02EABfApNIMQBbELhpeh7iWKVHKTmn5KXooSjQWbYqTpw9BNKx9k
aOF80NGDCIoMHIK0/mSgaBdCwnlZm2vW0lQczi5egr6/Bnkb+gf7zvdw+L0c
zstJqjSVVofLZLIUFvjj27Ti+TIljjuX0mG8RZUPS9ytN2AotqAESqKHm6b0
NkLBtvmE93VNHfC+IdwKG7LT7Q5m29JVrlyXqT4foMRjTtJAwetyu5ivitI8
8Mvba37YnnAlAJv9GgkO3d7m5lZYx33Mwt0IJ7xb3+WFkxc88/C6c6j4MzPH
4tNDRd+HN4fM1WD3e1iTMfB9coUSp7lyA2bsHt/7w5Q0p6pg/t+lh7BQyHoE
Nc2v6ctflKROPd6Dwk7kETQMS2GDTHnV8gm47+iJhLXRyYaDdUoaQ2ruxE1x
JMQ07kWMQvl0nmnmiBL3rKoennQFrFClffEMznlrgnBMb+bajLmnPzFbjbe4
F4P+zg1mWXCeG1i9rP3NjF4s5vreadUUe5YKbv+aMvWsxH5Yy+Zan35tOse0
yda52q2ZmPJjSuy6f9zFna7QlEUkCx29hzBsa7OspVsktX115XBwVvkAmsbm
uHFRitifdpEkFpRy20Y/xkPhzD73P/sNYpU=
  "],
 CellLabel->
  "In[207]:=",ExpressionUUID->"d1999ddb-7063-447d-89d9-5072410d98f3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interiorCells", "=", 
   RowBox[{
    RowBox[{"MeshCellIndex", "[", 
     RowBox[{"mesh", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "\"\<Interior\>\""}], "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7558908747022257`*^9, 3.7558908808270917`*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"9aac8da6-b8a0-4b00-9423-5632337af5ce"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"areas", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Area", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"MeshPrimitives", "[", 
       RowBox[{"mesh", ",", "2"}], "]"}]}], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]], ")"}], "2"], "*", 
     SuperscriptBox["meshRatio", "2"]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Convert", " ", "from", " ", 
    SuperscriptBox["\[Mu]m", "2"], " ", "to", " ", 
    SuperscriptBox["dm", "2"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"avgArea", "=", 
  RowBox[{"Mean", "[", 
   RowBox[{"areas", "[", 
    RowBox[{"[", "interiorCells", "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.755887726310289*^9, 3.755887726466544*^9}, {
  3.7558877664658737`*^9, 3.755887772450096*^9}, {3.755888329946452*^9, 
  3.755888370520642*^9}, {3.75589089204731*^9, 3.7558908985641966`*^9}, {
  3.7559580555226*^9, 3.75595808229624*^9}, {3.826027365839105*^9, 
  3.8260273932734795`*^9}, {3.8364741105188494`*^9, 3.8364741396201873`*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"04530322-0052-4f42-aa44-1ca6a3a85345"],

Cell[BoxData["4.2404265304103346`*^-9"], "Output",
 CellChangeTimes->{
  3.7558883725310054`*^9, 3.755890901183191*^9, 3.7559451134824414`*^9, 
   3.755946880370726*^9, 3.755948722023282*^9, 3.7559506050190673`*^9, {
   3.755958064494118*^9, 3.755958088344545*^9}, 3.7560447159954424`*^9, 
   3.756048698075013*^9, 3.756051415278822*^9, 3.757760693284995*^9, 
   3.757762011583556*^9, 3.757762066043827*^9, 3.7577621217713127`*^9, 
   3.757762468030019*^9, 3.757762535607805*^9, 3.7577626372577734`*^9, 
   3.757763088189148*^9, 3.7577631588728504`*^9, 3.7577635773289475`*^9, 
   3.757766538460413*^9, 3.757847015612184*^9, 3.758019237462802*^9, {
   3.758019510423751*^9, 3.7580195391539574`*^9}, 3.7580198833941994`*^9, 
   3.758023194992599*^9, 3.758028021671957*^9, 3.75855709347791*^9, 
   3.7621704704357843`*^9, 3.762524810301947*^9, 3.8226600593502235`*^9, 
   3.823789570882305*^9, {3.823855681552498*^9, 3.823855694493847*^9}, 
   3.8238560372495565`*^9, 3.8238565649170313`*^9, {3.8238605424726095`*^9, 
   3.823860568099468*^9}, 3.8243015382766457`*^9, 3.8243780157864213`*^9, 
   3.8248045705654306`*^9, 3.8260207851218014`*^9, 3.826027401375219*^9, 
   3.826056012358491*^9, 3.826840175981502*^9, 3.8268884103144307`*^9, 
   3.8271794936588397`*^9, 3.8272429448841887`*^9, 3.828437845956258*^9, 
   3.828528102027875*^9, 3.8286134308007345`*^9, 3.8286137939001007`*^9, 
   3.828613856817067*^9, 3.8286153493320937`*^9, 3.8286155320108647`*^9, 
   3.8293452688549814`*^9, 3.829347722522621*^9, 3.830600634864567*^9, 
   3.8306008235890393`*^9, 3.830600948757429*^9, 3.830601558508974*^9, 
   3.8306084689815187`*^9, 3.830857599779458*^9, 3.8309915276027746`*^9, 
   3.831121139584814*^9, 3.831801445199151*^9, 3.831805107634011*^9, 
   3.831805166589657*^9, 3.8318109638116207`*^9, 3.832072677009069*^9, 
   3.8323233411766977`*^9, 3.8323703548133125`*^9, 3.8324082826903667`*^9, 
   3.832888583965498*^9, 3.8333274514298477`*^9, 3.833536169019724*^9, 
   3.835806602438629*^9, {3.835863658928502*^9, 3.835863682111804*^9}, 
   3.8358643938357787`*^9, 3.8364328988846836`*^9, 3.8364340101844063`*^9, {
   3.8364741192149825`*^9, 3.836474156435117*^9}, 3.836478434583666*^9, 
   3.836510685414406*^9, 3.8365113135792313`*^9, 3.83656398885502*^9, 
   3.836904337974594*^9, 3.837035526750871*^9, 3.8393686645017724`*^9, 
   3.841394781842395*^9, 3.8413949388567505`*^9, 3.8417781005490575`*^9, 
   3.8419612371064825`*^9, 3.8442465004683013`*^9, 3.8442673268222203`*^9, 
   3.8445107659843016`*^9, 3.8447873633844986`*^9, 3.8448101630244694`*^9, 
   3.8450645203281803`*^9, 3.8454134221655006`*^9, 3.8455012358733606`*^9, 
   3.8456736295157566`*^9, 3.845729274094974*^9, 3.8460201056666145`*^9, 
   3.8462572184865*^9, 3.846580223661005*^9, 3.847225654424613*^9, 
   3.8474049885562377`*^9, 3.847453144819253*^9, 3.848016065922884*^9, 
   3.8480572054260483`*^9, 3.848095169895494*^9, 3.8480952059770594`*^9, 
   3.848095347991417*^9, {3.848101906215083*^9, 3.8481019306880636`*^9}, 
   3.8481441636470757`*^9, 3.8483551257990417`*^9, 3.848530421991951*^9, 
   3.850343296706938*^9, 3.8511188110056133`*^9, 3.8511275307144995`*^9, 
   3.8511279929179306`*^9, 3.85302293900939*^9, 3.857637523042692*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"c685d337-8fb7-4653-aeb8-412fbe5d4ad0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalDelta]x", "=", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"avgArea", "*", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         SuperscriptBox["10", "5"], ")"}], "2"], "/", "\[Pi]"}]}], "]"}], 
    "]"}], "*", "2", " ", 
   RowBox[{"(*", 
    RowBox[{"Should", " ", "be", " ", "around", " ", "7.4"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.75589125299144*^9, 3.7558912665241327`*^9}, {
  3.755951466395742*^9, 3.7559514710918713`*^9}, {3.7559527986297684`*^9, 
  3.755952803457818*^9}, {3.8260274493686585`*^9, 3.8260274539423246`*^9}, {
  3.830600882988806*^9, 3.8306008832846584`*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"08631b8f-7286-4c4a-91b7-f6dce83be48c"],

Cell[BoxData["7.347842367023507`"], "Output",
 CellChangeTimes->{
  3.7558912668209767`*^9, 3.755945126818388*^9, 3.7559487318902545`*^9, 
   3.755950616674947*^9, 3.755951472096257*^9, 3.7560447225914125`*^9, 
   3.756048703371742*^9, 3.756051419731818*^9, 3.757760703893427*^9, 
   3.7577620116834917`*^9, 3.757762066131769*^9, 3.757762121866252*^9, 
   3.7577624681919155`*^9, 3.757762535710742*^9, 3.7577626373507166`*^9, 
   3.757763088286088*^9, 3.757763158961794*^9, 3.757763577414893*^9, 
   3.7577665387502337`*^9, 3.757847015889013*^9, 3.7580192435150537`*^9, 
   3.758019510520692*^9, 3.7580195435652266`*^9, 3.758019883508127*^9, 
   3.7580231993219194`*^9, 3.7580280219897594`*^9, 3.7585570937947116`*^9, 
   3.7621704705187316`*^9, 3.762524810542799*^9, 3.8226600991226397`*^9, 
   3.8237896108722286`*^9, {3.823855681773115*^9, 3.8238556947819633`*^9}, 
   3.8238560373924665`*^9, 3.823856565139434*^9, {3.823860542780546*^9, 
   3.8238605682673645`*^9}, 3.8243015407056804`*^9, 3.8243780203189354`*^9, 
   3.82480458722289*^9, 3.8260207866363883`*^9, 3.826027455306507*^9, 
   3.8260560125210533`*^9, 3.8268401761463995`*^9, 3.8268884105179176`*^9, 
   3.827179498181224*^9, 3.827242945075303*^9, 3.828437846292948*^9, 
   3.828528105604158*^9, 3.828613433838151*^9, 3.8286137945244846`*^9, 
   3.8286138569265137`*^9, 3.8286153494967065`*^9, 3.828615532138131*^9, 
   3.8293452722703753`*^9, 3.829347722714053*^9, 3.8306006376392326`*^9, 
   3.8306008241049356`*^9, 3.8306008837837305`*^9, 3.830600948921632*^9, 
   3.830601558829321*^9, 3.8306084699949512`*^9, 3.8308575999509697`*^9, 
   3.830991527779464*^9, 3.831121139749787*^9, 3.831805107860814*^9, 
   3.831805166854032*^9, 3.831810964229719*^9, 3.832072677231933*^9, 
   3.832370354989481*^9, 3.832408282828844*^9, 3.8333274516191883`*^9, 
   3.83353616920712*^9, 3.835806609776256*^9, {3.835863658979966*^9, 
   3.835863682168227*^9}, 3.83586439388175*^9, 3.836432898929656*^9, 
   3.8364340102933755`*^9, 3.836474163003868*^9, 3.8364784346316338`*^9, 
   3.836510685484363*^9, 3.836511313716146*^9, 3.83656398968139*^9, 
   3.836904338107771*^9, 3.837035527723818*^9, 3.839368665414141*^9, 
   3.841394782857769*^9, 3.841394940690753*^9, 3.841778100712332*^9, 
   3.841961237158941*^9, 3.844246502643364*^9, 3.844267327469821*^9, 
   3.8445107660372696`*^9, 3.84478736342148*^9, 3.8448101630534525`*^9, 
   3.8450645203621607`*^9, 3.845413422241338*^9, 3.8455012359163322`*^9, 
   3.8456736295447364`*^9, 3.845729274135957*^9, 3.846020105735571*^9, 
   3.846257218522476*^9, 3.8465802237006903`*^9, 3.847225654476983*^9, 
   3.847404988567233*^9, 3.8474531448662214`*^9, 3.848016065953865*^9, 
   3.848057205464024*^9, 3.848095169941473*^9, 3.8480952060230365`*^9, 
   3.848095348038389*^9, {3.8481019062670503`*^9, 3.8481019307470284`*^9}, 
   3.8481441636910496`*^9, 3.848355125842014*^9, 3.848530422028937*^9, 
   3.8503432967797794`*^9, 3.8511188110635786`*^9, 3.8511275307544794`*^9, 
   3.851127992955906*^9, 3.8530229390533633`*^9, 3.857637523105193*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"27a2a0fc-0eee-4423-a7f3-3a9fbb6bc9f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HighlightMesh", "[", 
  RowBox[{"mesh", ",", 
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      RowBox[{
       RowBox[{"MeshCellIndex", "[", 
        RowBox[{"mesh", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "\"\<Interior\>\""}], "}"}]}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7558904204849653`*^9, 3.7558904448400135`*^9}, {
  3.7558905404109287`*^9, 3.7558905506620584`*^9}, {3.7558906185592546`*^9, 
  3.7558906436733975`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"d9dde92a-5c8a-4c8c-a7cb-e60d91624195"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     MeshRegion[CompressedData["
1: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
6pP3NalP8qT+PwGEwO0=
      "], {
       Polygon[{{159, 57, 150, 175}, {169, 111, 60, 167}, {188, 43, 1, 184}, {
        200, 172, 90, 190}, {170, 45, 41, 166}, {201, 171, 96, 178}, {193, 
        132, 30, 179}, {180, 44, 27, 185}, {192, 97, 75, 191}, {195, 138, 168,
         199}, {189, 110, 147, 197}, {198, 42, 174, 202}}], 
       Polygon[{{181, 17, 156, 29, 194}, {187, 35, 152, 53, 182}, {190, 90, 
        79, 80, 177}, {163, 2, 76, 96, 171}, {162, 18, 21, 142, 161}, {179, 
        30, 133, 139, 196}, {185, 27, 88, 110, 189}, {165, 77, 125, 2, 163}, {
        25, 94, 37, 65, 51}, {86, 38, 16, 87, 89}, {166, 41, 33, 74, 160}, {
        130, 141, 28, 47, 145}, {155, 100, 120, 6, 54}, {182, 53, 114, 3, 
        186}, {183, 154, 11, 44, 180}, {131, 46, 72, 23, 140}, {186, 3, 101, 
        17, 181}, {78, 125, 77, 8, 34}, {83, 157, 20, 68, 84}, {148, 149, 122,
         9, 137}, {85, 115, 71, 118, 73}, {134, 56, 99, 69, 136}, {13, 156, 
        17, 101, 82}, {21, 18, 105, 5, 61}, {144, 95, 107, 106, 103}, {194, 
        29, 108, 132, 193}, {59, 144, 103, 93, 116}, {135, 9, 122, 117, 14}, {
        196, 139, 50, 138, 195}, {175, 150, 123, 146, 176}, {151, 114, 53, 
        152, 4}, {157, 83, 81, 158, 119}, {164, 39, 8, 77, 165}, {176, 146, 
        135, 14, 173}, {191, 75, 15, 35, 187}, {177, 80, 63, 43, 188}}], 
       Polygon[{{161, 142, 55, 12, 57, 159}, {24, 124, 67, 15, 75, 97}, {167, 
        60, 112, 105, 18, 162}, {100, 13, 82, 113, 66, 120}, {160, 74, 140, 
        23, 39, 164}, {70, 58, 106, 107, 7, 31}, {153, 62, 91, 98, 136, 69}, {
        4, 152, 35, 15, 67, 40}, {184, 1, 91, 62, 154, 183}, {50, 139, 133, 
        19, 64, 49}, {126, 143, 127, 26, 102, 32}, {115, 59, 116, 37, 94, 
        71}, {129, 104, 5, 105, 112, 48}, {121, 128, 51, 65, 26, 127}, {70, 
        153, 69, 99, 92, 58}, {178, 96, 76, 24, 97, 192}, {63, 80, 79, 117, 
        122, 149}, {168, 138, 50, 49, 111, 169}, {119, 158, 36, 66, 113, 
        22}, {93, 102, 26, 65, 37, 116}, {86, 147, 110, 88, 109, 38}, {49, 64,
         48, 112, 60, 111}, {173, 14, 117, 79, 90, 172}, {24, 76, 2, 125, 78, 
        124}, {143, 61, 5, 104, 121, 127}, {128, 121, 104, 129, 54, 6}, {130, 
        85, 73, 46, 131, 141}, {52, 19, 133, 30, 132, 108}, {123, 10, 137, 9, 
        135, 146}, {98, 148, 137, 10, 134, 136}, {33, 28, 141, 131, 140, 
        74}, {142, 21, 61, 143, 126, 55}, {153, 70, 31, 11, 154, 62}, {174, 
        42, 89, 87, 45, 170}, {197, 147, 86, 89, 42, 198}}], 
       Polygon[{{31, 7, 109, 88, 27, 44, 11}, {28, 33, 41, 45, 87, 16, 47}, {
        55, 126, 32, 92, 99, 56, 12}, {157, 119, 22, 151, 4, 40, 20}, {52, 
        155, 54, 129, 48, 64, 19}, {8, 39, 23, 72, 84, 68, 34}, {123, 150, 57,
         12, 56, 134, 10}, {78, 34, 68, 20, 40, 67, 124}, {83, 84, 72, 46, 73,
         118, 81}, {93, 103, 106, 58, 92, 32, 102}, {114, 151, 22, 113, 82, 
        101, 3}, {158, 81, 118, 71, 94, 25, 36}, {128, 6, 120, 66, 36, 25, 
        51}, {85, 130, 145, 95, 144, 59, 115}, {43, 63, 149, 148, 98, 91, 
        1}, {155, 52, 108, 29, 156, 13, 100}}], 
       Polygon[{{95, 145, 47, 16, 38, 109, 7, 107}}]}, 
      Properties -> {{2, 21} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 22} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 24} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 25} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 28} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 30} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 31} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 32} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 33} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 34} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 35} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 36} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 37} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 39} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 40} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 43} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 44} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 50} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 52} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 54} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 55} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 56} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 58} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 59} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 60} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 61} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 62} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 63} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 65} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 67} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 68} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 69} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 70} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 72} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 73} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 74} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 75} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 76} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 77} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 78} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 79} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 80} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 81} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 84} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 85} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 86} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 87} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 88} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 89} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 90} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 91} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 92} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 93} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 94} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 95} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 96} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 97} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 98} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 99} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, 100} -> (MeshCellHighlight -> 
         Hue[0.125, 0.5, 0.95]), {2, Default} -> (MeshCellHighlight -> 
         Automatic)}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, "BoundaryNesting" -> 
        Automatic, "SeparateBoundaries" -> Automatic, "TJunction" -> 
        Automatic, "PropagateMarkers" -> True, "ZeroTest" -> Automatic, 
        "Hash" -> 6785631028306987912}]]}, 
    TagBox[GraphicsComplexBox[CompressedData["
1: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
6pP3NalP8qT+PwGEwO0=
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        PolygonBox[{{159, 57, 150, 175}, {169, 111, 60, 167}, {188, 43, 1, 
         184}, {200, 172, 90, 190}, {170, 45, 41, 166}, {201, 171, 96, 178}, {
         193, 132, 30, 179}, {180, 44, 27, 185}, {192, 97, 75, 191}, {195, 
         138, 168, 199}, {189, 110, 147, 197}, {198, 42, 174, 202}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[
        PolygonBox[{{181, 17, 156, 29, 194}, {187, 35, 152, 53, 182}, {190, 
         90, 79, 80, 177}, {163, 2, 76, 96, 171}, {162, 18, 21, 142, 161}, {
         179, 30, 133, 139, 196}, {185, 27, 88, 110, 189}, {165, 77, 125, 2, 
         163}, {25, 94, 37, 65, 51}, {86, 38, 16, 87, 89}, {166, 41, 33, 74, 
         160}, {130, 141, 28, 47, 145}, {155, 100, 120, 6, 54}, {182, 53, 114,
          3, 186}, {183, 154, 11, 44, 180}, {131, 46, 72, 23, 140}, {186, 3, 
         101, 17, 181}, {78, 125, 77, 8, 34}, {83, 157, 20, 68, 84}, {148, 
         149, 122, 9, 137}, {85, 115, 71, 118, 73}, {134, 56, 99, 69, 136}, {
         13, 156, 17, 101, 82}, {21, 18, 105, 5, 61}, {144, 95, 107, 106, 
         103}, {194, 29, 108, 132, 193}, {59, 144, 103, 93, 116}, {135, 9, 
         122, 117, 14}, {196, 139, 50, 138, 195}, {175, 150, 123, 146, 176}, {
         151, 114, 53, 152, 4}, {157, 83, 81, 158, 119}, {164, 39, 8, 77, 
         165}, {176, 146, 135, 14, 173}, {191, 75, 15, 35, 187}, {177, 80, 63,
          43, 188}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[
        PolygonBox[{{161, 142, 55, 12, 57, 159}, {24, 124, 67, 15, 75, 97}, {
         167, 60, 112, 105, 18, 162}, {100, 13, 82, 113, 66, 120}, {160, 74, 
         140, 23, 39, 164}, {70, 58, 106, 107, 7, 31}, {153, 62, 91, 98, 136, 
         69}, {4, 152, 35, 15, 67, 40}, {184, 1, 91, 62, 154, 183}, {50, 139, 
         133, 19, 64, 49}, {126, 143, 127, 26, 102, 32}, {115, 59, 116, 37, 
         94, 71}, {129, 104, 5, 105, 112, 48}, {121, 128, 51, 65, 26, 127}, {
         70, 153, 69, 99, 92, 58}, {178, 96, 76, 24, 97, 192}, {63, 80, 79, 
         117, 122, 149}, {168, 138, 50, 49, 111, 169}, {119, 158, 36, 66, 113,
          22}, {93, 102, 26, 65, 37, 116}, {86, 147, 110, 88, 109, 38}, {49, 
         64, 48, 112, 60, 111}, {173, 14, 117, 79, 90, 172}, {24, 76, 2, 125, 
         78, 124}, {143, 61, 5, 104, 121, 127}, {128, 121, 104, 129, 54, 6}, {
         130, 85, 73, 46, 131, 141}, {52, 19, 133, 30, 132, 108}, {123, 10, 
         137, 9, 135, 146}, {98, 148, 137, 10, 134, 136}, {33, 28, 141, 131, 
         140, 74}, {142, 21, 61, 143, 126, 55}, {153, 70, 31, 11, 154, 62}, {
         174, 42, 89, 87, 45, 170}, {197, 147, 86, 89, 42, 198}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[
        PolygonBox[{{31, 7, 109, 88, 27, 44, 11}, {28, 33, 41, 45, 87, 16, 
         47}, {55, 126, 32, 92, 99, 56, 12}, {157, 119, 22, 151, 4, 40, 20}, {
         52, 155, 54, 129, 48, 64, 19}, {8, 39, 23, 72, 84, 68, 34}, {123, 
         150, 57, 12, 56, 134, 10}, {78, 34, 68, 20, 40, 67, 124}, {83, 84, 
         72, 46, 73, 118, 81}, {93, 103, 106, 58, 92, 32, 102}, {114, 151, 22,
          113, 82, 101, 3}, {158, 81, 118, 71, 94, 25, 36}, {128, 6, 120, 66, 
         36, 25, 51}, {85, 130, 145, 95, 144, 59, 115}, {43, 63, 149, 148, 98,
          91, 1}, {155, 52, 108, 29, 156, 13, 100}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[PolygonBox[{{95, 145, 47, 16, 38, 109, 7, 107}}],
        Annotation[#, "Geometry"]& ], {
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{25, 94, 37, 65, 51}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{86, 38, 16, 87, 89}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{130, 141, 28, 47, 145}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{155, 100, 120, 6, 54}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{131, 46, 72, 23, 140}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{78, 125, 77, 8, 34}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{83, 157, 20, 68, 84}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{148, 149, 122, 9, 137}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{85, 115, 71, 118, 73}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{134, 56, 99, 69, 136}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{13, 156, 17, 101, 82}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{21, 18, 105, 5, 61}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{144, 95, 107, 106, 103}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{59, 144, 103, 93, 116}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{135, 9, 122, 117, 14}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{151, 114, 53, 152, 4}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{157, 83, 81, 158, 119}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{24, 124, 67, 15, 75, 97}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{100, 13, 82, 113, 66, 120}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{70, 58, 106, 107, 7, 31}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{153, 62, 91, 98, 136, 69}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{4, 152, 35, 15, 67, 40}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{50, 139, 133, 19, 64, 49}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{126, 143, 127, 26, 102, 32}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{115, 59, 116, 37, 94, 71}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{129, 104, 5, 105, 112, 48}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{121, 128, 51, 65, 26, 127}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{70, 153, 69, 99, 92, 58}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{63, 80, 79, 117, 122, 149}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{119, 158, 36, 66, 113, 22}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{93, 102, 26, 65, 37, 116}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{86, 147, 110, 88, 109, 38}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{49, 64, 48, 112, 60, 111}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{24, 76, 2, 125, 78, 124}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{143, 61, 5, 104, 121, 127}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{128, 121, 104, 129, 54, 6}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{130, 85, 73, 46, 131, 141}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{52, 19, 133, 30, 132, 108}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{123, 10, 137, 9, 135, 146}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{98, 148, 137, 10, 134, 136}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{33, 28, 141, 131, 140, 74}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{142, 21, 61, 143, 126, 55}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{153, 70, 31, 11, 154, 62}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{31, 7, 109, 88, 27, 44, 11}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{28, 33, 41, 45, 87, 16, 47}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{55, 126, 32, 92, 99, 56, 12}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{157, 119, 22, 151, 4, 40, 20}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{52, 155, 54, 129, 48, 64, 19}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{8, 39, 23, 72, 84, 68, 34}}]}, 
        {Hue[0.125, 0.5, 0.95], 
         PolygonBox[{{123, 150, 57, 12, 56, 134, 10}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{78, 34, 68, 20, 40, 67, 124}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{83, 84, 72, 46, 73, 118, 81}}]}, 
        {Hue[0.125, 0.5, 0.95], 
         PolygonBox[{{93, 103, 106, 58, 92, 32, 102}}]}, 
        {Hue[0.125, 0.5, 0.95], 
         PolygonBox[{{114, 151, 22, 113, 82, 101, 3}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{158, 81, 118, 71, 94, 25, 36}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{128, 6, 120, 66, 36, 25, 51}}]}, 
        {Hue[0.125, 0.5, 0.95], 
         PolygonBox[{{85, 130, 145, 95, 144, 59, 115}}]}, 
        {Hue[0.125, 0.5, 0.95], PolygonBox[{{43, 63, 149, 148, 98, 91, 1}}]}, 
        {Hue[0.125, 0.5, 0.95], 
         PolygonBox[{{155, 52, 108, 29, 156, 13, 100}}]}, 
        {Hue[0.125, 0.5, 0.95], 
         PolygonBox[{{95, 145, 47, 16, 38, 109, 7, 107}}]}}}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{
  3.836478434717183*^9, 3.836510687996766*^9, 3.836511315854951*^9, 
   3.8365639919170437`*^9, 3.836904340224312*^9, 3.8393686664109693`*^9, 
   3.8413949415627112`*^9, 3.84177810263316*^9, 3.8419612377001486`*^9, 
   3.844246503575186*^9, 3.8445107661331377`*^9, 3.844787363501359*^9, 
   3.844810163113415*^9, 3.845064520432288*^9, 3.845413422328168*^9, 
   3.845501235997283*^9, 3.845673629612662*^9, 3.845729274217905*^9, 
   3.8460201058475027`*^9, 3.8462572185824385`*^9, 3.8465802237712603`*^9, 
   3.8472256546518717`*^9, 3.8474049886230636`*^9, 3.8474531449701567`*^9, 
   3.848016066021521*^9, 3.8480572055369797`*^9, 3.8480951700208364`*^9, 
   3.848095206101985*^9, 3.848095348112343*^9, {3.8481019063565736`*^9, 
   3.8481019308471613`*^9}, 3.8481441637627344`*^9, 3.8483551259213867`*^9, 
   3.8485304221040087`*^9, 3.8503432968678656`*^9, 3.8511188111420164`*^9, 
   3.851127530821059*^9, 3.8511279930228653`*^9, 3.8530229391542997`*^9, 
   3.8576375231833143`*^9},
 CellLabel->
  "Out[215]=",ExpressionUUID->"08f5fc17-787a-4e6e-ae57-c3486f0dfa5a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make Adjacency Matrix", "Subsection",
 CellChangeTimes->{{3.738231290116765*^9, 3.7382312924853034`*^9}, {
  3.7441017538295946`*^9, 
  3.744101769164069*^9}},ExpressionUUID->"c35fba00-cb62-415c-b1da-\
5115990b2ebf"],

Cell["\<\
Create a nPts X nPts matrix that says whether or not a cell is adjacent to \
another cell. I cannot seem to find a built in function to do this, so I have \
to code it myself. Instead of making elements either 0 or 1, I make them 0 \
(not adjacent) or the length of the shared edge. This is because I will \
assume that the flux of ions/molecules through the gap junctions will be \
proportional to the length of the shared edge. The larger an edge is shared \
between cells, the more transfer we would expect due to more gap junctions \
being present. \
\>", "Text",
 CellChangeTimes->{{3.738231294509055*^9, 3.73823131727501*^9}, {
   3.73823324078627*^9, 3.7382332588831053`*^9}, {3.7385818477642565`*^9, 
   3.738581977384677*^9}, {3.738604658558565*^9, 3.7386047363802433`*^9}, 
   3.7396242549482255`*^9, 3.7396243909327908`*^9, {3.7439237325644693`*^9, 
   3.7439237369667315`*^9}},ExpressionUUID->"648ecd71-ff44-45d8-9c74-\
6a84cafce313"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Produce", " ", "adjacency", " ", "matrix", " ", "with", " ", "shared", 
    " ", "edge", " ", "lengths", " ", "as", " ", "elements"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "conn", ",", "lengths", ",", "directions", ",", "positionVectors", ",", 
      "sines", ",", "edges", ",", "adj"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Get", " ", "connectivity", " ", "matrix"}], ",", " ", 
      RowBox[{
      "which", " ", "is", " ", "a", " ", "matrix", " ", "whose", " ", "rows", 
       " ", "represent", " ", "a", " ", "cell", " ", "and", " ", "column", 
       " ", "represents", " ", "an", " ", "edge", " ", "associated", " ", 
       "with", " ", "the", " ", "cell"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"conn", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"mesh", "[", 
         RowBox[{"\"\<ConnectivityMatrix\>\"", "[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], "//", "Unitize"}], "//", 
       "Normal"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Lengths", " ", "of", " ", "each", " ", "edge"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"lengths", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "@@@", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"mesh", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "direction", " ", "vectors", " ", "of", " ", "each", " ", "edge"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"directions", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "@@@", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"mesh", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "position", " ", "vectors", " ", "of", " ", "the", " ", "midpoints", 
       " ", "of", " ", "each", " ", "edge"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"positionVectors", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "+", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", "2"}], "-", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"range", "/", "2"}], ",", 
            RowBox[{"range", "/", "2"}]}], "}"}]}], ")"}], "&"}], "@@@", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"mesh", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "List", " ", "of", " ", "Sin", " ", "of", " ", "angle", " ", "between", 
       " ", "position", " ", "vector", " ", "of", " ", "edge", " ", 
       "midpoint", " ", 
       RowBox[{"(", 
        RowBox[{
        "relative", " ", "to", " ", "the", " ", "wound", " ", "center"}], 
        ")"}], " ", "and", " ", "the", " ", "direciton", " ", "of", " ", 
       "the", " ", "shared", " ", "edge"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"sines", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Norm", "@", 
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"directions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "]"}], ",", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"positionVectors", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "]"}]}], "]"}]}], 
         "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{"directions", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", 
           RowBox[{"Norm", "[", 
            RowBox[{"positionVectors", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "directions"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "List", " ", "where", " ", "each", " ", "element", " ", "is", " ", "an",
        " ", "edge", " ", "and", " ", "tells", " ", "you", " ", "which", " ", 
       "cell", 
       RowBox[{"(", "s", ")"}], " ", "have", " ", "that", " ", "edge"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
         RowBox[{"Transpose", "[", "conn", "]"}]}], ")"}], "/.", 
       RowBox[{
        RowBox[{"{", "e_", "}"}], "\[Rule]", "e"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Initialize", " ", "matrix"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"adj", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0.", ",", 
        RowBox[{"{", 
         RowBox[{"numCells2D", ",", "numCells2D"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "Function", " ", "that", " ", "replaces", " ", "corresponding", " ", 
         "elements", " ", "in", " ", "the", " ", "initial", " ", "adjMat", 
         " ", "with", " ", "an", " ", "edge", " ", "length", " ", "if", " ", 
         "the", " ", "cells", " ", "in", " ", "the", " ", "row"}], "&"}], 
       "column", " ", "share", " ", "that", " ", "edge"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"alter", "[", 
       RowBox[{"pos_", ",", "edge_"}], "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "2"}], ",", 
        RowBox[{
         RowBox[{"adj", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"pos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pos", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"adj", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"pos", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"pos", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"lengths", "[", 
            RowBox[{"[", "edge", "]"}], "]"}], "*", 
           RowBox[{"If", "[", 
            RowBox[{"gjPolarize", ",", 
             RowBox[{"sines", "[", 
              RowBox[{"[", "edge", "]"}], "]"}], ",", "1."}], "]"}]}]}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"alter", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"First", "[", "#2", "]"}]}], "]"}], "&"}], ",", "edges"}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"adjMat", "=", 
      RowBox[{
       RowBox[{"SparseArray", "[", "adj", "]"}], "*", "meshRatio"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQHdE82VD21mvHjOfhRiDag/V78nEgzfBPOh1EP7Sd
3QSiu6wnNIPoo94M7meAtMk2CH3K1/nt4TuvHcMdDrwD0b/7p5UeAdJa8jfA
dILdPo6jQJpL7AqY3nxmdxHDk9eOETFxJSDaoF+oFkT/2RffD6Ktet/MBNHa
+pNmgeieb0W1P0F02nYwrV9k0QKid9Tbgun9Fr9bX/5+7Xi6V68dRC/7rjQf
ROe1OIBpjXvzrF8D6aBTu2xA9BXjMxcz/r92VLM5IZAJpN3KlWLbgPScVTbJ
IHrVuux0EP3huWsFiFZbqbb8afsbx6W1fzeB6MLXDkdB9JPmygsg+jEfb+wz
IJ2ZV5YMoo/dESgC0VqzPEtBtJSy9QQQbc8qOhFEn/N3mwai61J8V4Hoedu/
99RNfePIp9HZC6IBQLTk4g==
  "],
 CellLabel->
  "In[216]:=",ExpressionUUID->"8107746b-e1f9-448e-9c03-3e71bfdabe46"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
   "Check", " ", "to", " ", "make", " ", "sure", " ", "adjacencies", " ", 
    "are", " ", "correct"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"HighlightMesh", "[", 
     RowBox[{
      RowBox[{"HighlightMesh", "[", 
       RowBox[{"mesh", ",", 
        RowBox[{"Join", "[", 
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"adjMat", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", "\[NotEqual]", "0"}]}]}], "]"}], "//", 
             "Flatten"}]}], "}"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "i"}], "}"}], ",", "Red"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "numCells2D", ",", "1"}], "}"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.755955809417157*^9, 3.7559560104283314`*^9}, {
   3.755956713138179*^9, 3.7559567134439926`*^9}, {3.7578477292055774`*^9, 
   3.7578477327004123`*^9}, {3.757934525101997*^9, 3.7579345272556653`*^9}, 
   3.8365657673461933`*^9},
 CellLabel->
  "In[217]:=",ExpressionUUID->"3517f677-efae-4464-a0fa-6afe960fecd1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Values", "Subsection",
 CellChangeTimes->{{3.844810118639065*^9, 
  3.8448101273313847`*^9}},ExpressionUUID->"83d6f490-ae48-45fb-8cb3-\
7fc1f9028269"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"GAP", " ", "JUNCTIONS"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"gjRand", "=", "True"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"True", " ", "=", " ", 
     RowBox[{
     "give", " ", "each", " ", "cell", " ", "a", " ", "random", " ", "GJ", 
      " ", "parameter", " ", "the", " ", "tissue", " ", 
      RowBox[{"model", ".", " ", "Value"}], " ", "for", " ", "a", " ", 
      "border", " ", "determined", " ", "by", " ", "smallest", " ", "value", 
      " ", "of", " ", "the", " ", "two", " ", "cells", " ", "that", " ", 
      "share", " ", "that", " ", "border"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]GJ", "=", ".5"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "standard", " ", "deviation", " ", "for", " ", "GJ", " ", "randomness"}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"gjPolarize", "=", "False"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"True", " ", "=", " ", 
      RowBox[{
      "multiply", " ", "GJ", " ", "params", " ", "by", " ", "sin\[Theta]"}]}],
      ",", " ", 
     RowBox[{
     "where", " ", "\[Theta]", " ", "is", " ", "the", " ", "angle", " ", 
      "between", " ", "the", " ", "radial", " ", "vector", " ", "to", " ", 
      "a", " ", "cell", " ", "edge", " ", "and", " ", "the", " ", "direction",
       " ", "of", " ", "the", " ", "cell", " ", "edge"}]}], "*)"}], "\n", 
   "\n", 
   RowBox[{"(*", "GCaMP", "*)"}], "\n", 
   RowBox[{
    RowBox[{"gcampRand", "=", "True"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"True", " ", "=", " ", 
     RowBox[{
     "randomize", " ", "the", " ", "amount", " ", "of", " ", "GCaMP", " ", 
      "in", " ", "each", " ", 
      RowBox[{"cell", ".", " ", "The"}], " ", "random", " ", "scale", " ", 
      "will", " ", "also", " ", "scale", " ", "the", " ", "fluorescence", " ",
       "values", " ", "of", " ", "the", " ", "model", " ", "output"}]}], 
    "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]gcamp", "=", ".1"}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "standard", " ", "deviation", " ", "for", " ", "gcamp", " ", 
     "randomizer"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"gcampRandVals", "=", 
      RowBox[{"Abs", "@", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"1.", ",", "\[Sigma]gcamp"}], "]"}], ",", "numCells2D"}], 
        "]"}]}]}], ";"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"gcampRandVals", "=", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"LogNormalDistribution", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[".1", "2"]}], "/", "2"}], ",", ".1"}], "]"}], ",", 
       "numCells2D"}], "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"maxGCAMPVal", "=", 
     RowBox[{"Max", "@", "gcampRandVals"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Needed", " ", "to", " ", "determine", " ", "how", " ", "to", " ", 
     "scale", " ", "video", " ", "output", " ", "later"}], "*)"}], "\n", "\n", 
   RowBox[{"(*", "PLC", "*)"}], "\n", 
   RowBox[{
    RowBox[{"plcRand", "=", "False"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"True", " ", "=", " ", 
     RowBox[{"randomize", " ", "PLC", " ", 
      RowBox[{"(", 
       RowBox[{"parameter", " ", "\[Alpha]"}], ")"}], " ", "between", " ", 
      "cells"}]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"\[Sigma]PLC", "=", ".5"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "standard", " ", "deviation", " ", "for", " ", "PLC", " ", "randomizer"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"plcRandVals", "=", 
      RowBox[{"Abs", "@", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"1.", ",", "\[Sigma]PLC"}], "]"}], ",", "numCells2D"}], 
        "]"}]}]}], ";"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"plcRandVals", "=", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"LogNormalDistribution", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[".4", "2"]}], "/", "2"}], ",", ".4"}], "]"}], ",", 
       "numCells2D"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.844810129785514*^9, 3.844810129801504*^9}, {
  3.8482710455104165`*^9, 3.848271063888937*^9}, {3.8511272287405467`*^9, 
  3.851127280045853*^9}, {3.8511278666748915`*^9, 3.851127866775881*^9}, {
  3.8511279382235627`*^9, 3.8511279449719286`*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"2d398554-37cf-427a-89ce-6c6174c8fb58"]
}, Open  ]],

Cell[CellGroupData[{

Cell["GJ Fluxes", "Subsection",
 CellChangeTimes->{{3.8237898295581965`*^9, 
  3.8237898319476123`*^9}},ExpressionUUID->"b0f2f7ad-0943-4c21-811d-\
ac6c2ed9e53a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"random", " ", "GJ", " ", 
    RowBox[{"values", ".", " ", "Make"}], " ", "sure", " ", "none", " ", "of",
     " ", "them", " ", "are", " ", "negative"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"randGJmults", "=", 
     RowBox[{"If", "[", 
      RowBox[{"gjRand", ",", 
       RowBox[{"Abs", "@", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"1.", ",", "\[Sigma]GJ"}], "]"}], ",", "numCells2D"}], 
         "]"}]}], ",", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1.", ",", "numCells2D"}], "]"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"randGJmults", "=", 
    RowBox[{"If", "[", 
     RowBox[{"gjRand", ",", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"LogNormalDistribution", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox[".4", "2"]}], "/", "2"}], ",", ".4"}], "]"}], ",", 
        "numCells2D"}], "]"}], ",", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"1.", ",", "numCells2D"}], "]"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8286138778976765`*^9, 3.828613891158036*^9}, {
  3.828614044456558*^9, 3.82861409859408*^9}, {3.829053413903801*^9, 
  3.829053439813758*^9}, {3.8323225045005045`*^9, 3.832322506499134*^9}, {
  3.8482710724267955`*^9, 3.848271088944452*^9}, {3.8511273085138164`*^9, 
  3.851127320528618*^9}, {3.851127947309161*^9, 3.8511279513597097`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"84a3c9f9-da80-4f1f-a605-57d875bc5dd7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\[Eta]", " ", "values", " ", "are", " ", "based", " ", "on", " ", "a", 
     " ", "single", " ", "\"\<ideal\>\"", " ", "cell", " ", "of", " ", 
     "diameter", " ", "\[CapitalDelta]x"}], ",", " ", 
    RowBox[{
    "with", " ", "flux", " ", "through", " ", "its", " ", "entire", " ", 
     RowBox[{"perimeter", ".", " ", "Therefore"}]}], ",", " ", 
    RowBox[{
    "in", " ", "order", " ", "to", " ", "properly", " ", "scale", " ", 
     "based", " ", "on", " ", "cell", " ", "volume", " ", "and", " ", 
     "shared", " ", "perimeter", " ", "between", " ", "two", " ", "cells"}], 
    ",", " ", 
    RowBox[{
    "the", " ", "GJ", " ", "fluxes", " ", "have", " ", "to", " ", "be", " ", 
     "scaled", " ", "by", " ", 
     RowBox[{"(", 
      RowBox[{"v0", "/", 
       SubscriptBox["v", "i"]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"aij", "/", "a0"}], ")"}]}], ",", " ", 
    RowBox[{
    "where", " ", "the", " ", "0", " ", "subscript", " ", "denotes", " ", 
     "the", " ", "\"\<ideal\>\"", " ", "cell"}], ",", " ", 
    RowBox[{
    "i", " ", "is", " ", "the", " ", "cell", " ", "in", " ", "question"}], 
    ",", " ", 
    RowBox[{
    "and", " ", "j", " ", "denotes", " ", "any", " ", "cell", " ", "adjacent",
      " ", "to", " ", 
     RowBox[{"i", ".", " ", "Since"}], " ", "all", " ", "cells", " ", "have", 
     " ", "the", " ", "same", " ", "height"}], ",", " ", 
    RowBox[{
    "volume", " ", "ratios", " ", "are", " ", "reduced", " ", "to", " ", 
     "ratios", " ", "of", " ", "PM", " ", "area"}], ",", " ", 
    RowBox[{
    "and", " ", "shared", " ", "areas", " ", "are", " ", "reduced", " ", "to",
      " ", 
     RowBox[{"lengths", ".", " ", "So"}], " ", "v0", " ", "becomes", " ", 
     "the", " ", "PM", " ", "area", " ", "of", " ", "the", " ", "ideal", " ", 
     "cell"}], ",", " ", 
    RowBox[{
    "and", " ", "a0", " ", "becomes", " ", "the", " ", "circumference", " ", 
     "of", " ", "the", " ", "ideal", " ", 
     RowBox[{
     "cell", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "a0"}], " ", 
     "and", " ", "areas", " ", "are", " ", "in", " ", 
     SuperscriptBox["dm", "2"]}], ",", " ", 
    RowBox[{
    "adjMat", " ", "lengths", " ", "and", " ", "\[CapitalDelta]x", " ", "are",
      " ", "in", " ", 
     RowBox[{"\[Mu]m", ".", " ", "So"}], " ", "the", " ", "ratios", " ", 
     "work", " ", "out", " ", "to", " ", "be", " ", "dimensionless"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fluxGJCaTerms2D", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJc", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"randGJmults", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"randGJmults", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"a0", "/", 
               RowBox[{"areas", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"adjMat", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
             "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubscriptBox["c", "#"], "[", "t", "]"}], "-", 
               RowBox[{
                SubscriptBox["c", "i"], "[", "t", "]"}]}], ")"}]}], ")"}], 
           "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fluxIP3Terms2D", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJIP3", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"randGJmults", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"randGJmults", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"a0", "/", 
               RowBox[{"areas", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"adjMat", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubscriptBox["ip3", "#"], "[", "t", "]"}], "-", 
               RowBox[{
                SubscriptBox["ip3", "i"], "[", "t", "]"}]}], ")"}]}], ")"}], 
           "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Unwounded", " ", "terms"}], ";", " ", 
     RowBox[{
     "only", " ", "difference", " ", "is", " ", "the", " ", "part", " ", 
      "with", " ", "ablation", " ", "connection"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fluxGJCaTerms2DUW", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJc", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"randGJmults", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"randGJmults", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"a0", "/", 
               RowBox[{"areas", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"adjMat", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
             "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubscriptBox["c", "#"], "[", "t", "]"}], "-", 
               RowBox[{
                SubscriptBox["c", "i"], "[", "t", "]"}]}], ")"}]}], ")"}], 
           "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fluxIP3Terms2DUW", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJIP3", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"randGJmults", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"randGJmults", "[", 
                RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{"a0", "/", 
               RowBox[{"areas", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"adjMat", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
               RowBox[{"(", 
                RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SubscriptBox["ip3", "#"], "[", "t", "]"}], "-", 
               RowBox[{
                SubscriptBox["ip3", "i"], "[", "t", "]"}]}], ")"}]}], ")"}], 
           "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.744989624355424*^9, 3.7449896454543333`*^9}, {
   3.7449896772695875`*^9, 3.7449898276113024`*^9}, {3.7449898774373846`*^9, 
   3.744989879027397*^9}, 3.7449899288354883`*^9, {3.7468191533680162`*^9, 
   3.746819154558278*^9}, {3.7468194911067095`*^9, 3.746819502924386*^9}, 
   3.7468201212981615`*^9, {3.7486012147598615`*^9, 3.748601231129716*^9}, {
   3.7486013226080246`*^9, 3.7486013281635823`*^9}, {3.7486014084508247`*^9, 
   3.7486014113980007`*^9}, {3.748601531444604*^9, 3.7486015350513663`*^9}, {
   3.74860235387192*^9, 3.7486023691354604`*^9}, {3.755964984021002*^9, 
   3.755965148789323*^9}, {3.7559652074364877`*^9, 3.755965249714182*^9}, {
   3.75596530503138*^9, 3.7559653577331796`*^9}, {3.7559654357664976`*^9, 
   3.7559654620656843`*^9}, {3.7560340750123606`*^9, 3.75603407810847*^9}, {
   3.7560467420577135`*^9, 3.7560467637634516`*^9}, {3.757849011158785*^9, 
   3.757849019200803*^9}, {3.7578517055533648`*^9, 3.757851723062518*^9}, {
   3.7578518585814724`*^9, 3.7578518642769437`*^9}, {3.758020704597596*^9, 
   3.758020707036086*^9}, {3.823789840045166*^9, 3.8237898404480715`*^9}, {
   3.823790597311675*^9, 3.823790607663398*^9}, {3.8237908341960897`*^9, 
   3.8237908674135036`*^9}, {3.8237909823169155`*^9, 3.823790982921397*^9}, {
   3.8237911759769163`*^9, 3.8237911768337407`*^9}, {3.8237912310310836`*^9, 
   3.8237912468248386`*^9}, 3.8237913592807407`*^9, {3.823792526576125*^9, 
   3.823792541042704*^9}, {3.824316724894122*^9, 3.8243167338130865`*^9}, {
   3.824804959804517*^9, 3.824805079650198*^9}, {3.824805110060482*^9, 
   3.824805254620183*^9}, {3.8260214511961627`*^9, 3.8260214912257433`*^9}, {
   3.826032335119794*^9, 3.8260323678112803`*^9}, {3.8271795304046636`*^9, 
   3.827179535496957*^9}, {3.827180366360505*^9, 3.827180494545864*^9}, {
   3.82718107839067*^9, 3.8271811370938835`*^9}, {3.8271822184573493`*^9, 
   3.827182263257703*^9}, {3.828614243353843*^9, 3.828614292591341*^9}, {
   3.828614452322871*^9, 3.828614481762906*^9}, {3.8318020051682673`*^9, 
   3.831802087699815*^9}, {3.8323226519725113`*^9, 3.8323227169361205`*^9}, {
   3.832322750178913*^9, 3.832322754492408*^9}, {3.832322802606546*^9, 
   3.8323228452943172`*^9}, {3.8323238417482004`*^9, 3.832323842173833*^9}, {
   3.832717177689152*^9, 3.832717249389693*^9}, {3.8480951898053694`*^9, 
   3.848095194854148*^9}, {3.848095320754305*^9, 3.8480953402082515`*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"1a2a4539-1278-4ee3-b332-cfbd6fca2722"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IP3 Spike", "Chapter",
 CellChangeTimes->{{3.8364331386267242`*^9, 
  3.836433141301982*^9}},ExpressionUUID->"80776bcc-5de1-4622-90f0-\
54db8419e297"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Find", " ", "cell", " ", "closest", " ", "to", " ", "the", " ", 
    "center"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"spikeCell", "=", 
    RowBox[{"First", "@", 
     RowBox[{"Ordering", "@", "distances"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8364331478496313`*^9, 3.8364331643428507`*^9}, {
  3.8364331986959996`*^9, 3.836433211622664*^9}, {3.8364332516897182`*^9, 
  3.8364332860967216`*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"f1a6a6cb-d292-404b-8924-a163e2a4d684"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Single", "-", 
    RowBox[{"Cell", " ", "equations"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"modelEqns2D", "=", 
    RowBox[{"deqns", "/.", 
     RowBox[{"{", 
      RowBox[{"lr", "\[Rule]", "0."}], "}"}]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.815837355368222*^9, 3.8158373712013297`*^9}, {
   3.815837409793428*^9, 3.815837416449075*^9}, {3.8158503505520525`*^9, 
   3.8158503755201917`*^9}, {3.815850572918476*^9, 3.815850632644327*^9}, {
   3.8158507251941013`*^9, 3.8158507268747587`*^9}, {3.8158508092591686`*^9, 
   3.815850928292734*^9}, {3.8158511808681717`*^9, 3.815851217106206*^9}, {
   3.8158522542658677`*^9, 3.8158522603136187`*^9}, {3.815999668775794*^9, 
   3.8159996711020823`*^9}, {3.816000725021626*^9, 3.816000725374091*^9}, {
   3.816001672709465*^9, 3.8160016734619303`*^9}, {3.8171437386305275`*^9, 
   3.8171437391810026`*^9}, {3.8171438653103867`*^9, 
   3.8171438664446845`*^9}, {3.8172315327303925`*^9, 3.817231534041114*^9}, {
   3.818788932845103*^9, 3.8187889411816435`*^9}, {3.8187890515438766`*^9, 
   3.818789059444517*^9}, {3.8187891734017124`*^9, 3.8187891747360764`*^9}, {
   3.818789363545744*^9, 3.818789363661745*^9}, 3.818789451116909*^9, {
   3.818789484137412*^9, 3.8187894857306566`*^9}, {3.8189613581868153`*^9, 
   3.8189613589611473`*^9}, {3.819046395910932*^9, 3.819046457994269*^9}, {
   3.820746109312973*^9, 3.8207461115829306`*^9}, 3.820746454802818*^9, {
   3.8207465572111053`*^9, 3.8207465684314547`*^9}, {3.820746948110322*^9, 
   3.820746949333087*^9}, 3.826035776555591*^9, {3.826840360575862*^9, 
   3.826840368956185*^9}, {3.826889180520573*^9, 3.826889184925074*^9}, {
   3.827226873777075*^9, 3.827226874919515*^9}, {3.8272327021763687`*^9, 
   3.8272327164641423`*^9}, {3.8272370165369787`*^9, 3.827237024259626*^9}, 
   3.8272378016118298`*^9, 3.8272380459290466`*^9, 3.8272381057221365`*^9, {
   3.8272405932363963`*^9, 3.827240630844635*^9}, {3.8272420212104354`*^9, 
   3.8272420240788965`*^9}, 3.827242103337795*^9, {3.830601300244814*^9, 
   3.8306013240471387`*^9}, {3.831804245828209*^9, 3.8318042470457635`*^9}, {
   3.8318043530376673`*^9, 3.8318043558058076`*^9}, {3.8320727642119455`*^9, 
   3.832072769083949*^9}, {3.8320756875270147`*^9, 3.832075687949498*^9}, {
   3.8323279222671394`*^9, 3.8323279254258156`*^9}, {3.832328692939189*^9, 
   3.832328694051138*^9}, 3.8328901571028786`*^9, 3.8328906599810886`*^9, {
   3.832890727134014*^9, 3.8328907346880865`*^9}, {3.833327617008458*^9, 
   3.8333276182832675`*^9}, 3.8358071630734034`*^9, {3.8364333795633197`*^9, 
   3.83643338212995*^9}, {3.844247236510622*^9, 3.8442472590579443`*^9}, {
   3.844247575185307*^9, 3.8442475942721987`*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"4456ee87-f0c3-494d-bdc4-0a7842049e1a"],

Cell[CellGroupData[{

Cell["Scaling variables", "Subsection",
 CellChangeTimes->{{3.82602607830848*^9, 
  3.8260260833118973`*^9}},ExpressionUUID->"330090ce-44fd-4a42-96be-\
06ce7a2479ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Variable", " ", "replacements", " ", "for", " ", "multiple", " ", 
    "cells"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"depVars2D", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["spec", "i"], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"spec", ",", 
         RowBox[{"{", 
          RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"variableReplacements2D", "=", 
     RowBox[{"Flatten", "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"spec", "[", "t", "]"}], "\[Rule]", 
           RowBox[{
            SubscriptBox["spec", "i"], "[", "t", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"spec", "'"}], "[", "t", "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{
             SubscriptBox["spec", "i"], "'"}], "[", "t", "]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"spec", ",", 
          RowBox[{"{", 
           RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initReplacement2D", "=", 
     RowBox[{"Flatten", "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"i", "\[Equal]", "spikeCell"}], "&&", 
           RowBox[{"spec", "===", "ip3"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"spec", "[", "0", "]"}], "\[Rule]", 
            RowBox[{
             RowBox[{
              SubscriptBox["spec", "i"], "[", "0", "]"}], "/", 
             "ip3SpikeScale"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"spec", "[", "0", "]"}], "\[Rule]", 
            RowBox[{
             SubscriptBox["spec", "i"], "[", "0", "]"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"spec", ",", 
          RowBox[{"{", 
           RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
       "]"}]}]}], ";"}], " "}]}]], "Input",
 CellChangeTimes->{{3.820747224103917*^9, 3.8207472311048346`*^9}, {
   3.8207474308598533`*^9, 3.8207474948806467`*^9}, {3.820747698463586*^9, 
   3.8207477648570366`*^9}, {3.820747802189887*^9, 3.8207478804553957`*^9}, {
   3.820747942575816*^9, 3.8207479873316555`*^9}, {3.820748035702648*^9, 
   3.82074808982291*^9}, {3.8207623903471117`*^9, 3.820762393413571*^9}, {
   3.8207625517150917`*^9, 3.8207625546851096`*^9}, {3.8208342046355934`*^9, 
   3.820834212795676*^9}, {3.820834886293056*^9, 3.8208348982387247`*^9}, {
   3.8208351469046545`*^9, 3.8208351709717007`*^9}, {3.820835230285244*^9, 
   3.8208352313220005`*^9}, {3.8237918695543504`*^9, 
   3.8237918739636917`*^9}, {3.8237924219831505`*^9, 
   3.8237924263911705`*^9}, {3.826026428324896*^9, 3.826026429577958*^9}, {
   3.8260265203454*^9, 3.82602655383492*^9}, {3.826026658570833*^9, 
   3.826026697987548*^9}, {3.82602673009805*^9, 3.8260268011551275`*^9}, {
   3.8260268335109267`*^9, 3.82602693437117*^9}, {3.8260270712028856`*^9, 
   3.82602708384276*^9}, {3.8260271744144025`*^9, 3.826027271597234*^9}, {
   3.8260273051018515`*^9, 3.8260273092207675`*^9}, {3.826028021041113*^9, 
   3.826028052598837*^9}, {3.8260316358451405`*^9, 3.8260316946834407`*^9}, {
   3.8260317842832813`*^9, 3.8260318350401487`*^9}, {3.826031892402111*^9, 
   3.8260319072241793`*^9}, {3.827230113697481*^9, 3.827230118606576*^9}, {
   3.827238310329437*^9, 3.827238332233631*^9}, {3.8272386201186695`*^9, 
   3.827238764613989*^9}, {3.8272388302756424`*^9, 3.827238830607122*^9}, {
   3.827239197479381*^9, 3.827239246199875*^9}, {3.8272401735327015`*^9, 
   3.827240213869233*^9}, {3.827242505544941*^9, 3.827242505739997*^9}, {
   3.8272426046867704`*^9, 3.8272426095372567`*^9}, {3.8318042684358416`*^9, 
   3.8318043342849064`*^9}, {3.831805563733305*^9, 3.831805597130452*^9}, {
   3.831805637610808*^9, 3.831805638829829*^9}, {3.8318058261049857`*^9, 
   3.831805836663209*^9}, {3.8318068145543337`*^9, 3.8318068455445814`*^9}, {
   3.8318068992996016`*^9, 3.831806908363592*^9}, {3.831807192146207*^9, 
   3.831807194645749*^9}, {3.832328706949994*^9, 3.832328709568056*^9}, {
   3.832328770058731*^9, 3.8323288144167285`*^9}, {3.8328906677804976`*^9, 
   3.8328906828216624`*^9}, {3.836433435113756*^9, 3.8364334365001154`*^9}, {
   3.8364335009785414`*^9, 3.836433563493493*^9}, {3.8364336688514175`*^9, 
   3.8364336708231254`*^9}, 3.836474720825837*^9, 3.836474753243908*^9, 
   3.841400673585*^9, 3.8414007224907775`*^9, 3.8442888808088417`*^9, {
   3.8442901156402206`*^9, 3.844290118334156*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"961a4354-2805-4881-a578-84e80655b90c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Putting it all together", "Subsection",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, {3.826056084745327*^9, 
   3.8260560939701853`*^9}},ExpressionUUID->"153b919a-a0a7-4a7f-ae09-\
ce8d887dbda3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Comapred", " ", "to", " ", "the", " ", "equilibrium", " ", "tissue"}], 
    ",", " ", 
    RowBox[{
    "we", " ", "add", " ", "in", " ", "the", " ", "new", " ", "resting", " ", 
     "levels", " ", "from", " ", "the", " ", "previous", " ", "section"}], 
    ",", " ", 
    RowBox[{
    "and", " ", "we", " ", "take", " ", "out", " ", "the", " ", "initial", 
     " ", "condition", " ", "scaling", " ", 
     RowBox[{"(", 
      RowBox[{
      "since", " ", "we", " ", "already", " ", "have", " ", "the", " ", 
       "initial", " ", "conditions", " ", "for", " ", "each", " ", "cell"}], 
      ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"multiCellReplacements2D", "=", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"variableReplacements2D", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"initReplacement2D", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Bx", "\[Rule]", 
          RowBox[{"Bx", "*", 
           RowBox[{"If", "[", 
            RowBox[{"gcampRand", ",", 
             RowBox[{"gcampRandVals", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", "\[Rule]", 
          RowBox[{"\[Alpha]", "*", 
           RowBox[{"If", "[", 
            RowBox[{"plcRand", ",", 
             RowBox[{"plcRandVals", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Alpha]0", "\[Rule]", 
            RowBox[{"\[Alpha]0", "*", 
             RowBox[{"If", "[", 
              RowBox[{"plcRand", ",", 
               RowBox[{"plcRandVals", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}],
           ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"jGJIP3", "\[Rule]", 
           RowBox[{"fluxIP3Terms2DUW", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"jGJc", "\[Rule]", 
           RowBox[{"fluxGJCaTerms2DUW", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"r", "\[Rule]", 
          RowBox[{"distances", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, 3.826056084745327*^9, {
   3.827226893672307*^9, 3.8272269581060147`*^9}, {3.8272270028815317`*^9, 
   3.8272270142125435`*^9}, {3.827238363167718*^9, 3.8272383721227846`*^9}, {
   3.8272385091869297`*^9, 3.827238515491295*^9}, {3.827238564773803*^9, 
   3.8272385869548006`*^9}, {3.8272388441271563`*^9, 3.827238848641945*^9}, {
   3.827239830029871*^9, 3.8272398475545716`*^9}, 3.8272399319750137`*^9, {
   3.8272421646889706`*^9, 3.8272421708258486`*^9}, {3.8272425104004507`*^9, 
   3.827242546519987*^9}, {3.8306084531714983`*^9, 3.8306084533711023`*^9}, {
   3.8309921353104897`*^9, 3.8309921400477123`*^9}, {3.831805620871216*^9, 
   3.831805624165031*^9}, {3.831807208583192*^9, 3.8318072088043613`*^9}, {
   3.8323288408883753`*^9, 3.8323288410278077`*^9}, {3.8328906929266872`*^9, 
   3.8328906932331386`*^9}, {3.833585990152383*^9, 3.8335859903393974`*^9}, {
   3.8364334487113085`*^9, 3.83643345133823*^9}, {3.8413966849838142`*^9, 
   3.841396695876156*^9}, {3.8423644310922875`*^9, 3.8423644312170315`*^9}, {
   3.8442673905790477`*^9, 3.844267419571889*^9}, {3.8460256206250277`*^9, 
   3.8460256231007056`*^9}, {3.846027168074811*^9, 3.8460271749886937`*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"0718ce25-c1c2-428f-8f25-2b7e647781ab"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tissueCellEquations", "=", 
    RowBox[{"modelEqns2D", "/.", "multiCellReplacements2D"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tissueModelEquations", "=", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"tissueCellEquations", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}], "]"}], "/.", 
    "intParams"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, {3.8260329402687626`*^9, 3.8260329426192646`*^9}, {
   3.8260360766019735`*^9, 3.826036088355092*^9}, {3.827239937060782*^9, 
   3.827239949360552*^9}, {3.831804365319412*^9, 3.831804367592826*^9}, 
   3.8318056079315333`*^9, {3.831807213949911*^9, 3.831807215496257*^9}, {
   3.831809869850851*^9, 3.831809886289317*^9}, 3.8318099220327415`*^9, {
   3.8318099855078697`*^9, 3.8318100218273015`*^9}, {3.8318103889443903`*^9, 
   3.8318104003876157`*^9}, {3.831810438481258*^9, 3.831810483882758*^9}, {
   3.8318105463800983`*^9, 3.8318105484102726`*^9}, {3.8318105860676727`*^9, 
   3.831810590051114*^9}, {3.832365157066003*^9, 3.8323651674711018`*^9}, {
   3.832370481844284*^9, 3.83237048974708*^9}, {3.8328907031117268`*^9, 
   3.8328907063524866`*^9}, {3.833327629451953*^9, 3.8333276409663305`*^9}, {
   3.8358076883272552`*^9, 3.835807692263531*^9}, {3.8364334660277376`*^9, 
   3.8364334667061825`*^9}, 3.84426772779321*^9, {3.8442684795141907`*^9, 
   3.844268479908594*^9}, {3.8442874660604234`*^9, 3.8442874674271755`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"34a8f501-6929-4d08-abc4-33dfb2286372"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tissueModelSol", "=", "\[IndentingNewLine]", 
    RowBox[{"ParametricNDSolveValue", "[", "\[IndentingNewLine]", 
     RowBox[{"tissueModelEquations", ",", "\[IndentingNewLine]", 
      RowBox[{"depVars2D", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "3"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "400."}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Append", "[", 
       RowBox[{"extParams", ",", "ip3SpikeScale"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"DependentVariables", "\[Rule]", 
       RowBox[{"Flatten", "@", "depVars2D"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Method\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<EquationSimplification\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"\"\<TimeConstraint\>\"", "\[Rule]", "100"}]}], "}"}]}], 
        "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.815850935510934*^9, 3.8158509460012465`*^9}, {
   3.8158509986653643`*^9, 3.8158510166096992`*^9}, {3.815851066479927*^9, 
   3.8158511479676313`*^9}, {3.8158512195440855`*^9, 
   3.8158512207495766`*^9}, {3.8158522658868513`*^9, 3.81585226666661*^9}, {
   3.81600032865289*^9, 3.816000360666057*^9}, {3.81878934590421*^9, 
   3.818789351796474*^9}, {3.8187895705395308`*^9, 3.8187895788954916`*^9}, {
   3.8188565544822245`*^9, 3.8188565748234215`*^9}, {3.8190464720907354`*^9, 
   3.819046479157522*^9}, {3.8190480772271214`*^9, 3.8190480780182157`*^9}, {
   3.819372300088422*^9, 3.819372300241935*^9}, {3.8195477083814197`*^9, 
   3.819547709395692*^9}, {3.820835105121843*^9, 3.8208351212771935`*^9}, {
   3.8208351840177712`*^9, 3.820835277606222*^9}, {3.82083531359741*^9, 
   3.820835316680043*^9}, {3.8208408226491494`*^9, 3.8208408250844173`*^9}, {
   3.823792407850629*^9, 3.823792416120907*^9}, {3.8237924585713205`*^9, 
   3.8237924658182554`*^9}, 3.8238557989759893`*^9, {3.8238566471965246`*^9, 
   3.8238566662893934`*^9}, {3.8238567131383*^9, 3.8238567154320154`*^9}, 
   3.8243015214546595`*^9, {3.8268893937794204`*^9, 3.8268894179500875`*^9}, {
   3.826889475424861*^9, 3.8268894789280543`*^9}, 3.8268895966063337`*^9, {
   3.8272423242838273`*^9, 3.8272423469827924`*^9}, {3.8328907837486134`*^9, 
   3.8328907881606064`*^9}, {3.8442873665526247`*^9, 
   3.8442873668431787`*^9}, {3.8442880953543167`*^9, 3.844288096064742*^9}, {
   3.8442901515728364`*^9, 3.8442901785832167`*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"0d46a110-1977-4362-abda-44980c4b0685"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"association2D", "=", "\[IndentingNewLine]", 
    RowBox[{"Association", "@", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r\[Mu]T", "\[Rule]", 
        RowBox[{"0.", "*", "1000.", "*", 
         RowBox[{".25", "/", "50."}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Tau]Heal", "\[Rule]", "10."}], ",", "\[IndentingNewLine]", 
       RowBox[{"rPMCA", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kPMCA", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"rSOC", "\[Rule]", 
        RowBox[{"5.2565", "/", "50."}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]NCX", "\[Rule]", "50."}], ",", "\[IndentingNewLine]", 
       RowBox[{"nNCX", "\[Rule]", "1."}], ",", "\[IndentingNewLine]", 
       RowBox[{"kNCX", "\[Rule]", "8."}], ",", "\[IndentingNewLine]", 
       RowBox[{"rlkPM", "\[Rule]", 
        RowBox[{"1000", "*", 
         RowBox[{".002", "/", "50."}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "\[Rule]", "3."}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]0", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kl", "\[Rule]", ".05"}], ",", "\[IndentingNewLine]", 
       RowBox[{"nl", "\[Rule]", "3."}], ",", "\[IndentingNewLine]", 
       RowBox[{"Kc", "\[Rule]", ".4"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]IPR", "\[Rule]", "24.1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]SERCA", "\[Rule]", "20.1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kSERCA1", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"kSERCA2", "\[Rule]", "0."}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]lkER", "\[Rule]", ".03"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Bx", "\[Rule]", "5."}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]GJIP3", "\[Rule]", ".5"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\[Eta]GJc", "\[Rule]", "10."}], ",", "\[IndentingNewLine]", 
       RowBox[{"ip3SpikeScale", "\[Rule]", "10000."}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"connectAblated", "\[Rule]", "0."}]}], "\[IndentingNewLine]", 
      "}"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"params2D", "=", 
   RowBox[{"association2D", "/@", 
    RowBox[{"Append", "[", 
     RowBox[{"extParams", ",", "ip3SpikeScale"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQPX9Hkm364jeOHg+c7UH0uTWKXiCaW/dOJIheunZr
GoieKfsfTC954lMCot3yC8H0BP7UBhAdFzMVTBs9/TAZRLNsbpoGoj95cj+r
A9JCOoZgetaPoPUOS944coQIbwTR/tLeEo5Aep5VGZiWe7dZHUT3t1VqgOhn
4dEnU4F0hqvwKRDNdrD2N4g2YZwBpucx/xBJA9LLY/+A6UN7ViuB6E9hTpog
2mXhpYsg+tVhmSsg+kH4jdcgukVX8g2ILo5UUtm27I3jjBvGqiC6ME5JlWHV
G0fvvF4wraQaLTlt9RvHaYsmgenSEjaWNUB6/4xXYBoAFHmjYg==
  "],
 CellLabel->
  "In[242]:=",ExpressionUUID->"f634cb40-2554-4a3b-88fd-6af6041f736e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"tissueModelSol", "@@", "params2D"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8208353300834208`*^9, 3.820835334856078*^9}, {
   3.820835519795843*^9, 3.8208355902402844`*^9}, 3.820841280676635*^9, {
   3.820841389141342*^9, 3.820841389269723*^9}, {3.820841469548337*^9, 
   3.820841470340723*^9}, {3.8208415292324915`*^9, 3.8208415418677173`*^9}, {
   3.8208417023802767`*^9, 3.8208417027177057`*^9}, {3.820848483946121*^9, 
   3.82084848418559*^9}, {3.820848726382415*^9, 3.8208487265182843`*^9}, {
   3.820849827466297*^9, 3.8208498276031013`*^9}, {3.820849871664625*^9, 
   3.8208498717851133`*^9}, {3.823792483509634*^9, 3.8237924841185675`*^9}, 
   3.824301666114005*^9, {3.8243165917439127`*^9, 3.8243165947033243`*^9}, {
   3.824316655536581*^9, 3.8243166556971283`*^9}, {3.8243167501994925`*^9, 
   3.8243167514636164`*^9}, {3.824378616563017*^9, 3.8243786186499143`*^9}, {
   3.8260562048505993`*^9, 3.8260562162512856`*^9}, {3.8260562613445663`*^9, 
   3.826056268245102*^9}, {3.8260564090317717`*^9, 3.8260564142465906`*^9}, {
   3.82689122563451*^9, 3.8268912273206663`*^9}, {3.8271811985015483`*^9, 
   3.827181200673194*^9}, {3.8271816453311453`*^9, 3.8271816466495657`*^9}, {
   3.8271819662911997`*^9, 3.827181967112*^9}, {3.82724239535752*^9, 
   3.8272424027645364`*^9}, {3.8286152053602123`*^9, 
   3.8286152082844744`*^9}, {3.830601362033525*^9, 3.8306013633233547`*^9}, {
   3.8414000365326977`*^9, 3.841400037320561*^9}, {3.8442873779303784`*^9, 
   3.8442873868259397`*^9}, {3.844288102972471*^9, 3.8442881043545866`*^9}},
 CellLabel->
  "In[244]:=",ExpressionUUID->"13c5e42a-6ab8-4331-8a02-8ff4a827c405"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testG", "=", 
   RowBox[{"CtoF", "/@", "test"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8208356270472713`*^9, 3.8208356563281317`*^9}, 
   3.8208413418107004`*^9},
 CellLabel->
  "In[245]:=",ExpressionUUID->"16c7b66c-fc8f-4c26-98b4-3f4937643f01"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animation", "Subsection",
 CellChangeTimes->{{3.8237929524237785`*^9, 
  3.8237929546666975`*^9}},ExpressionUUID->"9ef8cc29-ad98-43d7-ad67-\
420a2cbb51a7"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Set", " ", "frames", " ", "before", " ", "wounding", " ", "to", " ", "be", 
   " ", "resting", " ", "calcium", " ", "levels"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8318108950298295`*^9, 3.8318109381141624`*^9}, 
   3.8323341730991573`*^9, {3.8324088708286533`*^9, 3.832408871283579*^9}},
 CellLabel->
  "In[246]:=",ExpressionUUID->"704c5fa3-eb6d-404a-9147-4d8bfe8d0b96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"animate2D", "[", 
   RowBox[{"soln_", ",", "maxTime_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "timePoints", ",", "minF", ",", "maxF", ",", "styles", ",", "animList", 
      ",", "frames"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"timePoints", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/.", 
         RowBox[{"t", "\[Rule]", "\[Tau]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Tau]", ",", "0.", ",", "maxTime", ",", "\[CapitalDelta]t"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"minF", "=", ".12"}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxF", "=", "1."}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"styles", "=", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "i"}], "}"}], ",", 
          RowBox[{"GrayLevel", "[", 
           RowBox[{"Min", "[", 
            RowBox[{"maxF", ",", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{"gcampRand", ",", 
                RowBox[{"gcampRandVals", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}], "*", 
              RowBox[{"Rescale", "[", 
               RowBox[{
                RowBox[{"timePoints", "[", 
                 RowBox[{"[", 
                  RowBox[{"\[Tau]", ",", "i"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"minInt", ",", 
                  RowBox[{"maxInt", "*", "maxGCAMPVal"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"minF", ",", "maxF"}], "}"}]}], "]"}]}]}], "]"}], 
           "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", 
          RowBox[{"Length", "@", "timePoints"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"animList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HighlightMesh", "[", 
         RowBox[{"mesh", ",", "#", ",", 
          RowBox[{"MeshCellStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Opacity", "[", "0", "]"}], ",", 
               RowBox[{"Antialiasing", "\[Rule]", "False"}]}], "]"}]}], 
            "}"}]}]}], "]"}], "&"}], "/@", "styles"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"frames", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Show", "[", 
          RowBox[{"#1", ",", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<t = \>\"", "<>", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]t", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "-", "1"}], ")"}]}], 
                    ",", ".1"}], "]"}], "]"}], "<>", "\"\< s\>\""}], ",", 
                  "White", ",", "18"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"75", ",", "35"}], "}"}]}], "]"}], ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<10 \[Mu]m\>\"", ",", "White", ",", "18"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"range", "*", ".825"}], ",", 
                  RowBox[{"range", "*", ".15"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"Thickness", "@", ".025"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"range", "*", ".75"}], ",", 
                   RowBox[{"range", "*", ".1"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"range", "*", ".75"}], "+", 
                    RowBox[{"(", 
                    RowBox[{"10", "/", "meshRatio"}], ")"}]}], ",", 
                   RowBox[{"range", "*", ".1"}]}], "}"}]}], "}"}], "]"}]}], 
             "}"}], "]"}]}], "]"}], "&"}], ",", "animList"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "frames", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ListAnimate", "[", 
     RowBox[{"frames", ",", "7"}], "]"}], "*)"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.758284567431217*^9, 3.7582846272947483`*^9}, {
   3.758284882128977*^9, 3.758284889286543*^9}, {3.758284919703703*^9, 
   3.758284981011743*^9}, 3.823792969383465*^9, {3.8237930235310607`*^9, 
   3.823793026170868*^9}, {3.823793213073285*^9, 3.823793248990878*^9}, {
   3.8237933313637085`*^9, 3.8237933339817624`*^9}, {3.8237933657848854`*^9, 
   3.8237933705583353`*^9}, 3.8237934063571815`*^9, {3.8238625363530283`*^9, 
   3.8238625379432516`*^9}, {3.8238625873087525`*^9, 3.823862659831546*^9}, {
   3.8285294518477087`*^9, 3.828529467764728*^9}, {3.8285295911344504`*^9, 
   3.8285295976542544`*^9}, {3.8285299651000395`*^9, 3.828529994724305*^9}, {
   3.828530106340125*^9, 3.8285301548588333`*^9}, {3.8285302676797733`*^9, 
   3.8285303237191105`*^9}, {3.8285311290820055`*^9, 
   3.8285311341809464`*^9}, {3.828531765137025*^9, 3.8285317725971146`*^9}, {
   3.8285328112274537`*^9, 3.8285328124521427`*^9}, 3.828533257346529*^9, {
   3.8306117443034797`*^9, 3.830611746782955*^9}, {3.830992352711447*^9, 
   3.8309923556951704`*^9}, {3.8309924290668383`*^9, 
   3.8309924499742365`*^9}, {3.8311210670282574`*^9, 3.8311210697226257`*^9}, 
   3.8311211707766314`*^9, {3.8318044040355177`*^9, 3.83180444267688*^9}, {
   3.8318046080702877`*^9, 3.831804647170457*^9}, {3.831810857609064*^9, 
   3.8318108837091713`*^9}, {3.8324087961018353`*^9, 
   3.8324087999053297`*^9}, {3.8328909647598467`*^9, 
   3.8328909648793955`*^9}, {3.8364339400321493`*^9, 3.836433943718794*^9}, {
   3.841400942908796*^9, 3.841400969664401*^9}, {3.841401147795055*^9, 
   3.841401189574343*^9}, {3.8414026448042674`*^9, 3.8414026475980215`*^9}, {
   3.844288213570419*^9, 3.844288238599496*^9}, {3.844288297699478*^9, 
   3.8442883019334946`*^9}, {3.844288357602178*^9, 3.844288358378338*^9}, {
   3.8466215268205605`*^9, 3.846621527087431*^9}, {3.8466215656240964`*^9, 
   3.846621590436982*^9}, {3.8466246458059444`*^9, 3.8466246551747093`*^9}, {
   3.8531053373008485`*^9, 3.853105454286339*^9}, {3.853105486370756*^9, 
   3.8531054874344883`*^9}, {3.8531056205118265`*^9, 3.853105637916523*^9}, {
   3.8531090015978613`*^9, 3.8531090029392853`*^9}, {3.8531090430121126`*^9, 
   3.853109043998608*^9}, {3.853109074099622*^9, 3.853109076085087*^9}, {
   3.8531091300472727`*^9, 3.8531092351474867`*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"401759af-8df1-4980-b7da-d8577b5660fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"frames2D", "=", 
   RowBox[{"animate2D", "[", "testG", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758285038257244*^9, 3.7582850536866913`*^9}, {
   3.7582868131838565`*^9, 3.758286825672124*^9}, 3.7585572694071145`*^9, {
   3.823793378580084*^9, 3.823793384618803*^9}, {3.8238626636694365`*^9, 
   3.8238626645344477`*^9}},
 CellLabel->
  "In[248]:=",ExpressionUUID->"ab9cee3b-429d-4be8-b518-bdfc3bed3af5"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{"ListAnimate", "[", 
    RowBox[{"frames2D", ",", "7"}], "]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<spikeTest.avi\>\"", ",", "frames2D", ",", 
     RowBox[{"\"\<FrameRate\>\"", "\[Rule]", "10"}]}], "]"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7582854776272025`*^9, 3.758285513616075*^9}, {
   3.758286831006818*^9, 3.758286832502891*^9}, {3.8320729710319214`*^9, 
   3.832072973438443*^9}, {3.832075723440464*^9, 3.8320757252203693`*^9}, {
   3.8365112378476667`*^9, 3.8365112701923704`*^9}, {3.841400402825634*^9, 
   3.8414004097778935`*^9}, {3.8417788156027513`*^9, 3.841778821569517*^9}, 
   3.8445107980121584`*^9},
 CellLabel->
  "In[249]:=",ExpressionUUID->"becbd4a9-48b9-4ead-af85-b7fa060d2027"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"testG", "[", 
    RowBox[{"[", 
     RowBox[{"spikeCell", "+", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8414005418223677`*^9, 3.841400597382824*^9}, {
  3.841400835515512*^9, 3.8414008384471445`*^9}, {3.841777771007868*^9, 
  3.841777772030794*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"278229ce-b958-4098-95a7-c226b8fb613a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
5+mCDPQ/BQghwA==
       "]]},
     Annotation[#, "Charting`Private`Tag$96100#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.09682400980687131},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8414005432376547`*^9, 3.8414005978245173`*^9}, 
   3.8414006946161795`*^9, 3.841400739082649*^9, 3.841400790352149*^9, {
   3.8414008360967326`*^9, 3.8414008397928333`*^9}, 3.8414027697300262`*^9, 
   3.841402846847331*^9, 3.8414029170727987`*^9, 3.84177722209875*^9, 
   3.841777260280655*^9, 3.841777299585763*^9, {3.8417777649227233`*^9, 
   3.841777773009286*^9}, 3.841782146288542*^9, 3.8417852440409403`*^9, 
   3.844510816401659*^9, 3.84478737554111*^9, 3.8448101762863097`*^9, 
   3.8450645331816454`*^9, 3.8454134341723633`*^9, 3.8455012486320057`*^9, 
   3.8456736432611322`*^9, 3.845729292644359*^9, 3.846020119154214*^9, 
   3.846257234098299*^9, 3.846580235856329*^9, 3.8472256640599537`*^9, 
   3.8474049979684906`*^9, 3.847453159073408*^9, 3.8480160748960924`*^9, 
   3.848057213225244*^9, 3.8480951795290346`*^9, 3.848095215262392*^9, 
   3.8480953565625167`*^9, {3.848101909429333*^9, 3.8481019385976586`*^9}, 
   3.848144172353196*^9, 3.8483551345535183`*^9, 3.8485304306346827`*^9, 
   3.8503433055470514`*^9, 3.8511188203158026`*^9, 3.8511275404309807`*^9, 
   3.8511280007367787`*^9, 3.853022949561792*^9, 3.8576375321837683`*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"6704c506-61f7-4f77-86fb-cdac5b1fa26f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final Function", "Chapter",
 CellChangeTimes->{{3.8442896003187513`*^9, 
  3.8442896034278*^9}},ExpressionUUID->"26862b14-1108-48cc-a382-92a90dcb5a9c"],

Cell[BoxData[{
 RowBox[{"getIP3SpikeSol", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getIP3SpikeSol", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramAssociation_", "?", "AssociationQ"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"maxTime_", "?", "NumberQ"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ip3SpikeScaleP_", "?", "NumberQ"}]}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"params", "=", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"paramAssociation", "/@", "extParams"}], ",", 
         "ip3SpikeScaleP"}], "]"}]}], ",", "\[IndentingNewLine]", "initRules",
       ",", "\[IndentingNewLine]", "eqnsCell", ",", "\[IndentingNewLine]", 
      "eqnsModel", ",", "\[IndentingNewLine]", "solution2D", ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "gcampSol2D", ",", 
      "\[IndentingNewLine]", "frames"}], "\[IndentingNewLine]", "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"initRules", "=", 
      RowBox[{"getNewInits", "[", "paramAssociation", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eqnsCell", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"modelEqns2D", "/.", "initRules"}], ")"}], "/.", 
       "multiCellReplacements2D"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"eqnsModel", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"eqnsCell", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}], "]"}], "/.", 
       "intParams"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"solution2D", "=", "\[IndentingNewLine]", 
      RowBox[{"ParametricNDSolveValue", "[", "\[IndentingNewLine]", 
       RowBox[{"eqnsModel", ",", "\[IndentingNewLine]", 
        RowBox[{"depVars2D", "[", 
         RowBox[{"[", 
          RowBox[{";;", ",", "3"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Append", "[", 
         RowBox[{"extParams", ",", "ip3SpikeScale"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"DependentVariables", "\[Rule]", 
         RowBox[{"Flatten", "@", "depVars2D"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<Method\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<EquationSimplification\>\"", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", 
             RowBox[{"\"\<TimeConstraint\>\"", "\[Rule]", "100"}]}], "}"}]}], 
          "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"gcampSol2D", "=", 
      RowBox[{"CtoF", "/@", 
       RowBox[{"(", 
        RowBox[{"solution2D", "@@", "params"}], ")"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"frames", "=", 
      RowBox[{"animate2D", "[", 
       RowBox[{"gcampSol2D", ",", "maxTime"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[IndentingNewLine]", 
      RowBox[{
      "{", "\[IndentingNewLine]", "frames", "\[IndentingNewLine]", "}"}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.843769094267501*^9, 3.8437691110861692`*^9}, 
   3.8438148356828613`*^9, 3.8438181707168913`*^9, {3.843824239395362*^9, 
   3.843824239871467*^9}, {3.8438243469051867`*^9, 3.8438243638945837`*^9}, {
   3.844120565240511*^9, 3.8441205693604507`*^9}, {3.844204151601036*^9, 
   3.8442041598028336`*^9}, 3.8442106985342283`*^9, {3.844210757822525*^9, 
   3.844210773425356*^9}, {3.8442133005351896`*^9, 3.8442133126529484`*^9}, {
   3.8442134379950757`*^9, 3.8442135958664956`*^9}, {3.844213658905744*^9, 
   3.8442136901905775`*^9}, {3.8442137551270456`*^9, 
   3.8442137605483203`*^9}, {3.8442138887809916`*^9, 3.844213939854982*^9}, {
   3.844213970453663*^9, 3.8442139717293854`*^9}, {3.844289639705867*^9, 
   3.844289686423231*^9}, {3.8442904996643505`*^9, 3.8442905133092003`*^9}, {
   3.844290553969926*^9, 3.844290563650516*^9}, {3.8442909115870132`*^9, 
   3.844290928421446*^9}, {3.8442956563861227`*^9, 3.8442957077541523`*^9}, {
   3.844296029314534*^9, 3.8442960294203625`*^9}, {3.8442960646366177`*^9, 
   3.844296098414458*^9}, {3.844296203171383*^9, 3.8442962034554806`*^9}, 
   3.844296270903656*^9, {3.8447879446719055`*^9, 3.844787954881446*^9}, {
   3.8448039814560223`*^9, 3.8448039850687833`*^9}, {3.84481040758709*^9, 
   3.8448104079338355`*^9}, {3.8453313283417645`*^9, 
   3.8453313635900917`*^9}, {3.845331401816532*^9, 3.8453314209789915`*^9}, {
   3.845331527264425*^9, 3.8453315654950294`*^9}, {3.846624665973652*^9, 
   3.8466246684177556`*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"9b217dd9-27a4-4226-ad8f-0c5f5b44d6fc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Full Single-Cell Model", "Title",
 CellChangeTimes->{{3.843815607836892*^9, 
  3.8438156145475397`*^9}},ExpressionUUID->"96ac6f6e-5fe9-47cc-8aa4-\
955cdd7f53d1"],

Cell["\<\
This section looks at the full single-cell model. While \[Mu]T damage can be \
included, the main point of this is to investigate single-cell responses to \
the damage signal of the second expansion. Checking that the calcium signal \
does not go too far away from the wound, to check on calcium oscillations, \
time delay of the second expansion, etc. This should be the final step of \
parameter tweaking before moving onto full-tissue runs on ACCRE.\
\>", "Text",
 CellChangeTimes->{{3.843815617260993*^9, 
  3.843815732237501*^9}},ExpressionUUID->"6c45ec36-7481-4eda-9874-\
f6a3f6dd9298"],

Cell[BoxData[
 RowBox[{
  RowBox[{"modelEqnsSingleCell", "=", 
   RowBox[{
    RowBox[{"deqns", "/.", "intParams"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lr", "\[Rule]", 
       RowBox[{"lrSol", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}], ",", 
      RowBox[{"jGJIP3", "\[Rule]", "0."}], ",", 
      RowBox[{"jGJc", "\[Rule]", "0."}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8443580107080603`*^9, 3.844358029446271*^9}, {
  3.8443591254608808`*^9, 3.8443591512226133`*^9}, {3.844359339681625*^9, 
  3.8443593479735613`*^9}, {3.8443748686727123`*^9, 3.8443748705981927`*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"e08f1c47-639d-4a39-82e1-6aed8f771941"],

Cell[BoxData[
 RowBox[{
  RowBox[{"fluxes", "=", 
   RowBox[{
    RowBox[{"\[Beta]", "*", 
     RowBox[{"{", 
      RowBox[{"jIPR", ",", 
       RowBox[{"-", "jSERCA"}], ",", "jlkER", ",", 
       RowBox[{"\[Eta]NCX", "*", "jSOC"}], ",", 
       RowBox[{
        RowBox[{"-", "\[Eta]NCX"}], "*", "jPMCA"}], ",", 
       RowBox[{
        RowBox[{"-", "\[Eta]NCX"}], "*", "jNCX"}], ",", 
       RowBox[{"\[Eta]NCX", "*", "jlkPM"}], ",", 
       RowBox[{"\[Eta]NCX", "*", "j\[Mu]T"}]}], "}"}]}], "/.", 
    "intParams"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8443731453956947`*^9, 3.844373168705491*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"908d7a57-90db-47ff-a4b5-f0804aea77c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"modelSolSingleCell", "=", 
   RowBox[{"ParametricNDSolveValue", "[", 
    RowBox[{"modelEqnsSingleCell", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ip3", "[", "t", "]"}], ",", 
       RowBox[{"c", "[", "t", "]"}], ",", 
       RowBox[{"cER", "[", "t", "]"}], ",", 
       RowBox[{"h", "[", "t", "]"}], ",", 
       RowBox[{"CtoF", "[", 
        RowBox[{"c", "[", "t", "]"}], "]"}], ",", 
       RowBox[{"Append", "[", 
        RowBox[{"fluxes", ",", 
         RowBox[{"Total", "@", "fluxes"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tEnd"}], "}"}], ",", 
     RowBox[{"Prepend", "[", 
      RowBox[{"extParams", ",", "r"}], "]"}], ",", 
     RowBox[{"DependentVariables", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ip3", "[", "t", "]"}], ",", 
        RowBox[{"c", "[", "t", "]"}], ",", 
        RowBox[{"cER", "[", "t", "]"}], ",", 
        RowBox[{"h", "[", "t", "]"}]}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8443580107080603`*^9, 3.844358029446271*^9}, {
   3.8443591254608808`*^9, 3.8443591512226133`*^9}, {3.844359339681625*^9, 
   3.8443593538517632`*^9}, {3.8443748034953003`*^9, 3.844374805698141*^9}, 
   3.8443748762387266`*^9, {3.8443749410042624`*^9, 3.8443749623918557`*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"12748962-172a-4ee1-8f65-ef6dcd206913"],

Cell[BoxData[{
 RowBox[{"getSingleCellSol", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getSingleCellSol", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramAssociation_", "?", "AssociationQ"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"maxTime_", "?", "NumberQ"}], ",", "\[IndentingNewLine]", 
    RowBox[{"dist_", "?", "NumberQ"}], ",", "\[IndentingNewLine]", 
    "sweepParam_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"params", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"Prepend", "[", 
          RowBox[{
           RowBox[{"paramAssociation", "/@", "extParams"}], ",", "#"}], "]"}],
          "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"1.", ",", "75.", ",", "120.", ",", "170.", ",", "dist"}], 
         "}"}]}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "initRules", ",", "\[IndentingNewLine]", "solution", ",", 
      "\[IndentingNewLine]", "sweepPlot", ",", "\[IndentingNewLine]", 
      "sweepSols", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "singleCellOutput", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"legend", "=", 
       RowBox[{"{", 
        RowBox[{
        "\"\<r= 0 \[Mu]m (Wound Center)\>\"", ",", 
         "\"\<r = 75 \[Mu]m (Max \!\(\*SuperscriptBox[\(1\), \(st\)]\) \
Exp.)\>\"", ",", 
         "\"\<r = 120 \[Mu]m (Max \!\(\*SuperscriptBox[\(2\), \(nd\)]\) Exp.)\
\>\"", ",", "\"\<r = 170 \[Mu]m (No Response)\>\"", ",", 
         RowBox[{"\"\<r = \>\"", "<>", 
          RowBox[{"ToString", "[", "dist", "]"}], "<>", "\"\< \[Mu]m\>\""}]}],
         "}"}]}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"initRules", "=", 
      RowBox[{"getNewInits", "[", "paramAssociation", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"solution", "=", "\[IndentingNewLine]", 
      RowBox[{"ParametricNDSolveValue", "[", 
       RowBox[{
        RowBox[{"modelEqnsSingleCell", "/.", "initRules"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ip3", "[", "t", "]"}], ",", 
          RowBox[{"c", "[", "t", "]"}], ",", 
          RowBox[{"cER", "[", "t", "]"}], ",", 
          RowBox[{"h", "[", "t", "]"}], ",", 
          RowBox[{"CtoF", "[", 
           RowBox[{"c", "[", "t", "]"}], "]"}], ",", 
          RowBox[{"Append", "[", 
           RowBox[{"fluxes", ",", 
            RowBox[{"Total", "@", "fluxes"}]}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
        RowBox[{"Prepend", "[", 
         RowBox[{"extParams", ",", "r"}], "]"}], ",", 
        RowBox[{"DependentVariables", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ip3", "[", "t", "]"}], ",", 
           RowBox[{"c", "[", "t", "]"}], ",", 
           RowBox[{"cER", "[", "t", "]"}], ",", 
           RowBox[{"h", "[", "t", "]"}]}], "}"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"singleCellOutput", "=", 
      RowBox[{"solution", "@@@", "params"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "If", " ", "you", " ", "want", " ", "to", " ", "sweep", " ", "a", " ", 
       "parameter"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"sweepParam", "===", "\"\<None\>\""}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sweepSols", "=", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"sweepParam", "===", "\"\<True \[Eta]NCX\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"solution", "@@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{"extParams", ",", "dist"}], "]"}], "/.", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ReplacePart", "[", 
                 RowBox[{"paramAssociation", ",", 
                  RowBox[{"Append", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Key", "@", "#"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"paramAssociation", "[", "#", "]"}], "/", 
                    "scale"}]}], ")"}], "&"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "r\[Mu]T", ",", "rPMCA", ",", "rSOC", ",", "rlkPM"}], 
                    "}"}]}], ",", 
                    RowBox[{
                    RowBox[{"Key", "@", "\[Eta]NCX"}], "\[Rule]", 
                    RowBox[{
                    RowBox[{"paramAssociation", "[", "\[Eta]NCX", "]"}], "*", 
                    "scale"}]}]}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"scale", ",", ".5", ",", "1.5", ",", ".25"}], 
                 "}"}]}], "]"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"solution", "@@@", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Prepend", "[", 
               RowBox[{"extParams", ",", "dist"}], "]"}], "/.", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"ReplacePart", "[", 
                 RowBox[{"paramAssociation", ",", 
                  RowBox[{
                   RowBox[{"Key", "@", "sweepParam"}], "\[Rule]", 
                   RowBox[{
                    RowBox[{"paramAssociation", "[", "sweepParam", "]"}], "*",
                     "scale"}]}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"scale", ",", ".5", ",", "1.5", ",", ".25"}], 
                 "}"}]}], "]"}]}], ")"}]}]}], "\[IndentingNewLine]", "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"colors", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"RGBColor", "[", 
            RowBox[{"r", ",", "0", ",", 
             RowBox[{"1", "-", "r"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"r", ",", "0", ",", "1", ",", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"Length", "@", "sweepSols"}], ")"}], "-", "1"}], 
               ")"}]}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"sweepPlot", "=", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"Evaluate", "@", 
            RowBox[{"sweepSols", "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "5"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "colors"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"minInt", "*", ".9"}], ",", 
              RowBox[{"maxInt", "*", "1.1"}]}], "}"}]}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<t (s)\>\"", ",", 
              "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) rad \
(\[Mu]m)\>\""}], "}"}]}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", 
            RowBox[{"ToString", "@", "sweepParam"}]}]}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"sweepPlot", "=", "\"\<Plot was not generated\>\""}], ";"}]}],
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"singleCellOutput", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "5"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{".9", "*", "minInt"}], ",", 
             RowBox[{"1.1", "*", "maxInt"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Frame", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<time (s)\>\"", ",", "\"\<GCaMP Fluorescence Intensity\>\""}],
             "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Black", ",", "18"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", "legend"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Epilog", "\[Rule]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Gray", ",", "\[IndentingNewLine]", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"35", ",", 
                  RowBox[{".9", "*", "minInt"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"35", ",", 
                  RowBox[{"1.1", "*", "maxInt"}]}], "}"}]}], "}"}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"94", ",", 
                  RowBox[{".9", "*", "minInt"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"94", ",", 
                  RowBox[{"1.1", "*", "maxInt"}]}], "}"}]}], "}"}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"Mean", "[", 
                   RowBox[{"{", 
                    RowBox[{"minInt", ",", "maxInt"}], "}"}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"1000", ",", 
                  RowBox[{"Mean", "[", 
                   RowBox[{"{", 
                    RowBox[{"minInt", ",", "maxInt"}], "}"}], "]"}]}], 
                 "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "Black", ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<None\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"20", ",", 
                 RowBox[{"1.05", "*", "maxInt"}]}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<Second Exp.\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"65", ",", 
                 RowBox[{"1.05", "*", "maxInt"}]}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<Flares\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"220", ",", 
                 RowBox[{"1.05", "*", "maxInt"}]}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"singleCellOutput", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<t (s)\>\"", ",", 
             "\"\<[\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)] (\[Mu]M)\>\
\""}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"singleCellOutput", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "3"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<t (s)\>\"", ",", 
             "\"\<[\!\(\*SuperscriptBox[\(Ca\), \
\(\(2\)\(+\)\)]\)\!\(\*SubscriptBox[\(]\), \(ER\)]\) (\[Mu]M)\>\""}], "}"}]}],
           ",", 
          RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"singleCellOutput", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<t (s)\>\"", ",", 
             "\"\<[\!\(\*SubscriptBox[\(IP\), \(3\)]\)] (\[Mu]M)\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"singleCellOutput", "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "4"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<t (s)\>\"", ",", "\"\<h\>\""}], "}"}]}], ",", 
          RowBox[{"PlotLegends", "\[Rule]", "legend"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"singleCellOutput", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "6"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<t (s)\>\"", ",", "\"\<GCaMP Fl\>\""}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<jIPR\>\"", ",", "\"\<jSERCA\>\"", ",", "\"\<jlkER\>\"", ",", 
             "\"\<jSOC\>\"", ",", "\"\<jPMCA\>\"", ",", "\"\<jNCX\>\"", ",", 
             "\"\<jlkPM\>\"", ",", "\"\<j\[Mu]T\>\"", ",", "\"\<jTotal\>\""}],
             "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", "sweepPlot"}], 
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.843769094267501*^9, 3.8437691110861692`*^9}, 
   3.8438148356828613`*^9, 3.8438181707168913`*^9, {3.843824239395362*^9, 
   3.843824239871467*^9}, {3.8438243469051867`*^9, 3.8438243638945837`*^9}, {
   3.844120565240511*^9, 3.8441205693604507`*^9}, {3.844204151601036*^9, 
   3.8442041598028336`*^9}, 3.8442106985342283`*^9, {3.844210757822525*^9, 
   3.844210773425356*^9}, {3.8442133005351896`*^9, 3.8442133126529484`*^9}, {
   3.8442134379950757`*^9, 3.8442135958664956`*^9}, {3.844213658905744*^9, 
   3.8442136901905775`*^9}, {3.8442137551270456`*^9, 
   3.8442137605483203`*^9}, {3.8442138887809916`*^9, 3.844213939854982*^9}, {
   3.844213970453663*^9, 3.8442139717293854`*^9}, {3.844289639705867*^9, 
   3.844289686423231*^9}, {3.8442904996643505`*^9, 3.8442905133092003`*^9}, {
   3.844290553969926*^9, 3.844290563650516*^9}, {3.8442909115870132`*^9, 
   3.844290928421446*^9}, {3.8442956563861227`*^9, 3.8442957077541523`*^9}, {
   3.844296029314534*^9, 3.8442960294203625`*^9}, {3.8442960646366177`*^9, 
   3.844296098414458*^9}, {3.844296203171383*^9, 3.8442962034554806`*^9}, 
   3.844296270903656*^9, {3.8444226276961412`*^9, 3.8444226981740923`*^9}, {
   3.8444232997097373`*^9, 3.844423310739894*^9}, {3.844423343560706*^9, 
   3.844423343703691*^9}, {3.8444235485310316`*^9, 3.844423845476287*^9}, {
   3.8444245079478025`*^9, 3.8444246077452765`*^9}, {3.844425513158657*^9, 
   3.844425514412138*^9}, {3.844896945521211*^9, 3.8448969467264524`*^9}, {
   3.8448969964246063`*^9, 3.8448970070403576`*^9}, {3.844897070574904*^9, 
   3.8448971119027853`*^9}, {3.8448986267238564`*^9, 
   3.8448986374370484`*^9}, {3.8449015485746098`*^9, 
   3.8449015695757127`*^9}, {3.844902760892578*^9, 3.8449027686821146`*^9}, {
   3.8449028201340513`*^9, 3.844902947776605*^9}, {3.844903066306593*^9, 
   3.8449030693052893`*^9}, {3.844903107261303*^9, 3.8449031103997135`*^9}, {
   3.8449031535085325`*^9, 3.844903161603529*^9}, {3.8449032414501157`*^9, 
   3.844903289186339*^9}, {3.844903336302045*^9, 3.844903343170871*^9}, {
   3.8449035097865973`*^9, 3.844903552018667*^9}, {3.844977470187175*^9, 
   3.84497755378675*^9}, {3.844977736845781*^9, 3.844977738656196*^9}, {
   3.8449778029887877`*^9, 3.844977848188692*^9}, {3.8449791414970226`*^9, 
   3.844979204035074*^9}, {3.8449794644053288`*^9, 3.844979464517242*^9}, {
   3.8453276903711925`*^9, 3.8453277377642794`*^9}, 3.845504791492715*^9, {
   3.8472728244585066`*^9, 3.8472728408216066`*^9}, {3.847488445193698*^9, 
   3.847488459273343*^9}, {3.8474887030098877`*^9, 3.8474887093863573`*^9}, {
   3.847488797701813*^9, 3.8474888126620865`*^9}, {3.847490870005003*^9, 
   3.8474908827473907`*^9}, {3.8474909165949097`*^9, 
   3.8474909352762575`*^9}, {3.84749140705482*^9, 3.84749140858384*^9}, {
   3.8474918476346245`*^9, 3.8474918625745707`*^9}, {3.847491936803217*^9, 
   3.847492038588133*^9}, {3.8474928075056167`*^9, 3.8474928102836323`*^9}, {
   3.853200310415214*^9, 3.853200328118782*^9}, {3.853200482291962*^9, 
   3.8532005026671267`*^9}, {3.8532005369054585`*^9, 3.853200543950571*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"e10aac0b-071a-4e09-b478-7c0d8fb9f91f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Putting it all together", "Title",
 CellChangeTimes->{{3.843815738525544*^9, 
  3.8438157446483555`*^9}},ExpressionUUID->"098de731-75e2-48d2-a0db-\
a88bb626c127"],

Cell["\<\
A Manipulate function to do all parameter tweaking in one place.\
\>", "Text",
 CellChangeTimes->{{3.843815747662306*^9, 
  3.8438157672882223`*^9}},ExpressionUUID->"3fcd3101-1cb2-4006-a62c-\
4e6cad53707b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Initializations", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "parameter", " ", "set", " ", "to", " ", "load", " ", "as", " ", 
    "starting", " ", "settings"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"paramLoad", "=", 
     RowBox[{"<|", 
      RowBox[{
       RowBox[{"r\[Mu]T", "\[Rule]", "41.14497773461118`"}], ",", 
       RowBox[{"\[Tau]Heal", "\[Rule]", "5.25`"}], ",", 
       RowBox[{"rPMCA", "\[Rule]", "0.12`"}], ",", 
       RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
       RowBox[{"rSOC", "\[Rule]", "0.15000000000000002`"}], ",", 
       RowBox[{"\[Eta]NCX", "\[Rule]", "10.`"}], ",", 
       RowBox[{"nNCX", "\[Rule]", "2.5`"}], ",", 
       RowBox[{"kNCX", "\[Rule]", "1.6`"}], ",", 
       RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
       RowBox[{"\[Alpha]", "\[Rule]", "0.9`"}], ",", 
       RowBox[{"\[Alpha]0", "\[Rule]", "0.1`"}], ",", 
       RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
       RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
       RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
       RowBox[{"\[Eta]IPR", "\[Rule]", "4.`"}], ",", 
       RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
       RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
       RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
       RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
       RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
       RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
       RowBox[{"\[Eta]GJc", "\[Rule]", "2.`"}], ",", 
       RowBox[{"connectAblated", "\[Rule]", "0.025`"}]}], "|>"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"contourInfo", "=", "\"\<Contour has not been generated\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"updateContour", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"info1D", "=", "\"\<1D Model has not been updated\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"update1D", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"info2D", "=", "\"\<2D Model has not been updated\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"update2D", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"infoSS", "=", "\"\<Single Cell Model has not been updated\>\""}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"updateSS", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "paramAssociation", "\[IndentingNewLine]", "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "r\[Mu]T", " ", "value", " ", "is", " ", "irrelevant", " ", "before", 
         " ", "contour", " ", "is", " ", "set"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"paramAssociation", "=", "\[IndentingNewLine]", 
         RowBox[{"Association", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"r\[Mu]T", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"(", 
                 RowBox[{
                 "contourInfo", "===", 
                  "\"\<Contour has not been generated\>\""}], ")"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"contourInfo", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", "\[Tau]HealP", "]"}], 
                "/", "\[Mu]TConversion"}], ",", "5."}], "]"}]}], ",", 
            RowBox[{"\[Tau]Heal", "\[Rule]", "\[Tau]HealP"}], ",", 
            RowBox[{"rPMCA", "\[Rule]", "rPMCAP"}], ",", 
            RowBox[{"kPMCA", "\[Rule]", "kPMCAP"}], ",", 
            RowBox[{"rSOC", "\[Rule]", "rSOCP"}], ",", 
            RowBox[{"\[Eta]NCX", "\[Rule]", "\[Eta]NCXP"}], ",", 
            RowBox[{"nNCX", "\[Rule]", "nNCXP"}], ",", 
            RowBox[{"kNCX", "\[Rule]", "kNCXP"}], ",", 
            RowBox[{"rlkPM", "\[Rule]", "rlkPMP"}], ",", 
            RowBox[{"\[Alpha]", "\[Rule]", "\[Alpha]P"}], ",", 
            RowBox[{"\[Alpha]0", "\[Rule]", "\[Alpha]0P"}], ",", 
            RowBox[{"kl", "\[Rule]", "klP"}], ",", 
            RowBox[{"nl", "\[Rule]", "nlP"}], ",", 
            RowBox[{"Kc", "\[Rule]", "KcP"}], ",", 
            RowBox[{"\[Eta]IPR", "\[Rule]", "\[Eta]IPRP"}], ",", 
            RowBox[{"\[Eta]SERCA", "\[Rule]", "\[Eta]SERCAP"}], ",", 
            RowBox[{"kSERCA1", "\[Rule]", "kSERCA1P"}], ",", 
            RowBox[{"kSERCA2", "\[Rule]", "kSERCA2P"}], ",", 
            RowBox[{"\[Eta]lkER", "\[Rule]", "\[Eta]lkERP"}], ",", 
            RowBox[{"Bx", "\[Rule]", "BxP"}], ",", 
            RowBox[{"\[Eta]GJIP3", "\[Rule]", "\[Eta]GJIP3P"}], ",", 
            RowBox[{"\[Eta]GJc", "\[Rule]", "\[Eta]GJcP"}], ",", 
            RowBox[{"connectAblated", "\[Rule]", "connectAblatedP"}]}], 
           "}"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"finalParamAssociation", "=", "paramAssociation"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Update", " ", "heal", " ", "contour", " ", "for", " ", "\[Tau]Heal",
           " ", "and", " ", 
          RowBox[{"r\[Mu]T", ".", " ", "Update"}], " ", "r\[Mu]T"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"updateContour", ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"if", " ", "update", " ", "contour"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"contourInfo", "=", 
            RowBox[{"getHealContour", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{"paramAssociation", ",", 
                RowBox[{
                 RowBox[{"Key", "@", "\[Alpha]"}], "\[Rule]", "0."}]}], "]"}],
               ",", "maxTimeRangeDKO", ",", 
              RowBox[{"{", 
               RowBox[{"\[Tau]Min", ",", "\[Tau]Max", ",", "\[Tau]Step"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"r\[Mu]TMin", ",", "r\[Mu]TMax", ",", "r\[Mu]TStep"}], 
               "}"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"updateContour", "=", "False"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"paramAssociation", "=", "\[IndentingNewLine]", 
            RowBox[{"Association", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"r\[Mu]T", "\[Rule]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"contourInfo", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", "\[Tau]HealP", "]"}], 
                 "/", "\[Mu]TConversion"}]}], ",", 
               RowBox[{"\[Tau]Heal", "\[Rule]", "\[Tau]HealP"}], ",", 
               RowBox[{"\[Tau]HealHDRatio", "->", "\[Tau]HealHDRatioP"}], ",", 
               RowBox[{"rPMCA", "\[Rule]", "rPMCAP"}], ",", 
               RowBox[{"kPMCA", "\[Rule]", "kPMCAP"}], ",", 
               RowBox[{"rSOC", "\[Rule]", "rSOCP"}], ",", 
               RowBox[{"\[Eta]NCX", "\[Rule]", "\[Eta]NCXP"}], ",", 
               RowBox[{"nNCX", "\[Rule]", "nNCXP"}], ",", 
               RowBox[{"kNCX", "\[Rule]", "kNCXP"}], ",", 
               RowBox[{"rlkPM", "\[Rule]", "rlkPMP"}], ",", 
               RowBox[{"\[Alpha]", "\[Rule]", "\[Alpha]P"}], ",", 
               RowBox[{"\[Alpha]0", "\[Rule]", "\[Alpha]0P"}], ",", 
               RowBox[{"kl", "\[Rule]", "klP"}], ",", 
               RowBox[{"nl", "\[Rule]", "nlP"}], ",", 
               RowBox[{"Kc", "\[Rule]", "KcP"}], ",", 
               RowBox[{"\[Eta]IPR", "\[Rule]", "\[Eta]IPRP"}], ",", 
               RowBox[{"\[Eta]SERCA", "\[Rule]", "\[Eta]SERCAP"}], ",", 
               RowBox[{"kSERCA1", "\[Rule]", "kSERCA1P"}], ",", 
               RowBox[{"kSERCA2", "\[Rule]", "kSERCA2P"}], ",", 
               RowBox[{"\[Eta]lkER", "\[Rule]", "\[Eta]lkERP"}], ",", 
               RowBox[{"Bx", "\[Rule]", "BxP"}], ",", 
               RowBox[{"\[Eta]GJIP3", "\[Rule]", "\[Eta]gGJP3P"}], ",", 
               RowBox[{"\[Eta]GJc", "\[Rule]", "\[Eta]GJcP"}], ",", 
               RowBox[{"connectAblated", "\[Rule]", "connectAblatedP"}]}], 
              "}"}]}]}], ";"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"If", " ", "not", " ", "update", " ", "contour"}], "*)"}], 
          "\[IndentingNewLine]", "\"\<Contour has not been generated\>\""}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Update", " ", "1", "D", " ", "model"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"update1D", ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"info1D", "=", 
             RowBox[{"get1DSol", "[", 
              RowBox[{
               RowBox[{"ReplacePart", "[", 
                RowBox[{"paramAssociation", ",", 
                 RowBox[{
                  RowBox[{"Key", "@", "\[Alpha]"}], "\[Rule]", "0."}]}], 
                "]"}], ",", "maxTimeRange1D"}], "]"}]}], ";"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"info1D", "=", 
            RowBox[{"get1DSol", "[", 
             RowBox[{
             "paramAssociation", ",", "maxTimeRange1D", ",", "sweepParamRad", 
              ",", "startRing", ",", "endRing", ",", "longTime"}], "]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"update1D", "=", "False"}], ";"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\"\<1D Model is not Updated\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Update", " ", "2", "D", " ", "model"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"update2D", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"info2D", "=", 
            RowBox[{"getIP3SpikeSol", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{"paramAssociation", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Key", "@", "\[Alpha]"}], "\[Rule]", 
                   RowBox[{"plcScale", "*", 
                    RowBox[{"paramAssociation", "[", "\[Alpha]", "]"}]}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"Key", "@", "r\[Mu]T"}], "\[Rule]", "0."}]}], 
                 "}"}]}], "]"}], ",", "maxTimeRange2D", ",", 
              "ip3SpikeScale"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"update2D", "=", "False"}], ";"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\"\<2D Model is not Updated\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Update", " ", "Single", " ", "Cell", " ", "model"}], "*)"}],
         "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"updateSS", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"infoSS", "=", 
            RowBox[{"getSingleCellSol", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{"paramAssociation", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Key", "@", "r\[Mu]T"}], "\[Rule]", "0."}], "}"}]}],
                "]"}], ",", "maxTimeRangeSS", ",", "distance", ",", 
              "sweepParamSS"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"updateSS", "=", "False"}], ";"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\"\<Single Cell Model is not Updated\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Main", " ", "Display", " ", "Switch"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Switch", "[", 
         RowBox[{
         "mainView", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Display", " ", "of", " ", "the", " ", "heal", " ", "contour"}], 
           "*)"}], "\[IndentingNewLine]", "\"\<Heal Contour\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
              "contourInfo", "===", 
               "\"\<Contour has not been generated\>\""}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Switch", "[", 
             RowBox[{
             "contourView", ",", "\[IndentingNewLine]", "\"\<25 s\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Show", "[", 
               RowBox[{"contourInfo", "[", 
                RowBox[{"[", "3", "]"}], "]"}], 
               RowBox[{"(*", 
                RowBox[{",", 
                 RowBox[{"Graphics", "[", 
                  RowBox[{"{", 
                   RowBox[{"Red", ",", 
                    RowBox[{"PointSize", "@", "Large"}], ",", 
                    RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{"\[Tau]HealP", ",", 
                    RowBox[{
                    RowBox[{"contourInfo", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "\[Tau]HealP", 
                    "]"}]}], "}"}], "]"}]}], "}"}], "]"}]}], "*)"}], "]"}], 
              ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\"\<All\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"contourInfo", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\"\<Both\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Show", "[", 
               RowBox[{
                RowBox[{"contourInfo", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"contourInfo", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "contourInfo"}], 
           "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Display", " ", "of", " ", "1", "D", " ", "model"}], 
           "*)"}], "\[IndentingNewLine]", "\"\<1D model\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
              "info1D", "===", "\"\<1D Model hsa not been updated\>\""}], 
              ")"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Switch", "[", 
             RowBox[{
             "view1D", ",", "\[IndentingNewLine]", 
              "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) Rad\>\"", 
              ",", "\[IndentingNewLine]", 
              RowBox[{"info1D", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\"\<GCaMP\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"info1D", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "ring"}], "]"}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"ring", ",", "1", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"info1D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "}"}]}], 
               "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"info1D", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ",", "ring"}], "]"}], "]"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"ring", ",", "1", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"info1D", "[", 
                    RowBox[{"[", "4", "]"}], "]"}]}], ",", "1"}], "}"}]}], 
               "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
              "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) All\>\"", 
              ",", "\[IndentingNewLine]", 
              RowBox[{"info1D", "[", 
               RowBox[{"[", "5", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\"\<Sweep\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"info1D", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\"\<Long Time\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"info1D", "[", 
               RowBox[{"[", "6", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}],
             ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "info1D"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Display", " ", "of", " ", "IP3", " ", "Spike"}], "*)"}], 
          "\[IndentingNewLine]", "\"\<IP3 Spike\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
              "info2D", "===", "\"\<2D Model has not been updated\>\""}], 
              ")"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Manipulate", "[", 
             RowBox[{
              RowBox[{"info2D", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "i"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "@", 
                 RowBox[{"info2D", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "}"}]}], 
             "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            "info2D"}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Display", " ", "of", " ", "the", " ", "full", " ", "single", " ", 
            "cell", " ", "model"}], "*)"}], "\[IndentingNewLine]", 
          "\"\<Single-Cell\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
              "infoSS", "===", 
               "\"\<Single Cell Model hsa not been updated\>\""}], ")"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Switch", "[", 
             RowBox[{
             "viewSS", ",", "\[IndentingNewLine]", "\"\<GCaMP\>\"", ",", 
              RowBox[{"infoSS", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)\>\"", ",", 
              RowBox[{"infoSS", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(Ca\), \(ER\)], \(\(2\)\
\(+\)\)]\)\>\"", ",", 
              RowBox[{"infoSS", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<\!\(\*SubscriptBox[\(IP\), \(3\)]\)\>\"", ",", 
              RowBox[{"infoSS", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<h\>\"", ",", 
              RowBox[{"infoSS", "[", 
               RowBox[{"[", "5", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<fluxes\>\"", ",", 
              RowBox[{"infoSS", "[", 
               RowBox[{"[", "6", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<sweep\>\"", ",", 
              RowBox[{"infoSS", "[", 
               RowBox[{"[", "7", "]"}], "]"}]}], "\[IndentingNewLine]", "]"}],
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "infoSS"}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
     "\[IndentingNewLine]", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Column", "@", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"mainView", ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Heal Contour\>\"", ",", "\"\<1D model\>\"", ",", 
                "\"\<IP3 Spike\>\"", ",", "\"\<Single-Cell\>\""}], "}"}]}], 
             "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Model Parameters\>\"", ",", "16", ",", "Bold"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Tau]HealP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "\[Tau]Heal"}], "]"}], "]"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"rPMCAP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "rPMCA"}], "]"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"kPMCAP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "kPMCA"}], "]"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"rSOCP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "rSOC"}], "]"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]NCXP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "\[Eta]NCX"}], "]"}], "]"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"nNCXP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "nNCX"}], "]"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"kNCXP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "kNCX"}], "]"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"rlkPMP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "rlkPM"}], "]"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Alpha]P", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "\[Alpha]"}], "]"}], "]"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Alpha]0P", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "\[Alpha]0"}], "]"}], "]"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"klP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "kl"}], "]"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"nlP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "nl"}], "]"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"KcP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "Kc"}], "]"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]IPRP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "\[Eta]IPR"}], "]"}], "]"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]SERCAP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "\[Eta]SERCA"}], "]"}], "]"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"kSERCA1P", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "kSERCA1"}], "]"}], "]"}]}], "}"}]}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"kSERCA2P", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "kSERCA2"}], "]"}], "]"}]}], "}"}]}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]lkERP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "\[Eta]lkER"}], "]"}], "]"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"BxP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "Bx"}], "]"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]GJIP3P", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "\[Eta]GJIP3"}], "]"}], "]"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]GJcP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "\[Eta]GJc"}], "]"}], "]"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"connectAblatedP", ",", 
              RowBox[{"paramLoad", "[", 
               RowBox[{"[", 
                RowBox[{"Key", "@", "connectAblated"}], "]"}], "]"}]}], 
             "}"}]}]}], "\[IndentingNewLine]", "}"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Column", "@", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Heal Contour Settings\>\"", ",", "16", ",", "Bold"}],
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Update Contour\>\"", ",", 
             RowBox[{
              RowBox[{"updateContour", "=", "True"}], ";"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"maxTimeRangeDKO", ",", "100."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Tau]Min", ",", "1."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Tau]Max", ",", "6."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Tau]Step", ",", ".5"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"r\[Mu]TMin", ",", "1."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"r\[Mu]TMax", ",", "10."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"r\[Mu]TStep", ",", "1."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"contourView", ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<All\>\"", ",", "\"\<25 s\>\"", ",", "\"\<Both\>\""}], 
               "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Radial Cell Line Settings\>\"", ",", "16", ",", "Bold"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Update 1D Model\>\"", ",", 
             RowBox[{
              RowBox[{"update1D", "=", "True"}], ";"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"maxTimeRange1D", ",", "100."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"view1D", ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) Rad\>\"", 
                ",", "\"\<GCaMP\>\"", ",", 
                "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)\>\"", 
                ",", "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) \
All\>\"", ",", "\"\<Sweep\>\"", ",", "\"\<Long Time\>\""}], "}"}]}], "}"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"sweepParamRad", ",", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{"extParams", ",", "\"\<None\>\""}], "]"}], ",", 
                "\"\<True \[Eta]NCX\>\""}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"startRing", ",", "7"}], "}"}], ",", 
              RowBox[{"Range", "[", 
               RowBox[{"1", ",", "numRings"}], "]"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"endRing", ",", "11"}], "}"}], ",", 
              RowBox[{"Reverse", "@", 
               RowBox[{"Range", "[", 
                RowBox[{"1", ",", "numRings"}], "]"}]}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"longTime", ",", "False"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}]}], "}"}]}], 
        ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Column", "@", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<IP3 Spike Settings\>\"", ",", "16", ",", "Bold"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Update Ip3 Spike Model\>\"", ",", 
             RowBox[{
              RowBox[{"update2D", "=", "True"}], ";"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"maxTimeRange2D", ",", "20."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"plcScale", ",", "3.5"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"ip3SpikeScale", ",", "1000."}], "}"}]}], ",", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Single Cell Settings\>\"", ",", "16", ",", "Bold"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Update Single Cell Model\>\"", ",", 
             RowBox[{
              RowBox[{"updateSS", "=", "True"}], ";"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"maxTimeRangeSS", ",", "400."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"distance", ",", "200."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"viewSS", ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<GCaMP\>\"", ",", 
                "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)\>\"", 
                ",", "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(Ca\), \(ER\)], \
\(\(2\)\(+\)\)]\)\>\"", ",", "\"\<\!\(\*SubscriptBox[\(IP\), \(3\)]\)\>\"", 
                ",", "\"\<h\>\"", ",", "\"\<fluxes\>\"", ",", 
                "\"\<sweep\>\""}], "}"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"sweepParamSS", ",", 
              RowBox[{"Append", "[", 
               RowBox[{
                RowBox[{"Prepend", "[", 
                 RowBox[{"extParams", ",", "\"\<None\>\""}], "]"}], ",", 
                "\"\<True \[Eta]NCX\>\""}], "]"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843815898778635*^9, 3.8438159045685215`*^9}, {
   3.8438159428237514`*^9, 3.8438159630640545`*^9}, {3.8438160542507057`*^9, 
   3.8438161415282516`*^9}, {3.843816179804641*^9, 3.8438163081173706`*^9}, {
   3.8438163570894938`*^9, 3.843816614668515*^9}, {3.843817085681676*^9, 
   3.843817375345074*^9}, 3.8438175379658103`*^9, {3.8438176506483107`*^9, 
   3.8438176606347275`*^9}, {3.8438178135949974`*^9, 3.843817858504219*^9}, {
   3.8438182066594877`*^9, 3.8438182101424675`*^9}, {3.8438183843632*^9, 
   3.8438183846288223`*^9}, {3.8438184240825443`*^9, 
   3.8438184590313916`*^9}, {3.843818774546809*^9, 3.8438188062478514`*^9}, {
   3.8438189469619102`*^9, 3.8438189534659033`*^9}, {3.8438193435768585`*^9, 
   3.843819348726983*^9}, {3.843820533318985*^9, 3.8438205933216915`*^9}, {
   3.8438206728651314`*^9, 3.8438206972382064`*^9}, {3.8438207327261257`*^9, 
   3.8438207662594585`*^9}, {3.8438209509936724`*^9, 
   3.8438209625201015`*^9}, {3.8438210256447906`*^9, 
   3.8438210577792854`*^9}, {3.843821269744338*^9, 3.8438213659735136`*^9}, {
   3.843822012003831*^9, 3.8438220692449303`*^9}, {3.8438221172148933`*^9, 
   3.843822179224832*^9}, {3.8438224875050077`*^9, 3.843822515286862*^9}, {
   3.8438225861595974`*^9, 3.8438226359848595`*^9}, {3.843822667225129*^9, 
   3.843822670989041*^9}, {3.84382282541455*^9, 3.843822917561928*^9}, {
   3.843822947688384*^9, 3.843822982253627*^9}, {3.8438231073419065`*^9, 
   3.843823125841571*^9}, {3.8438231831223373`*^9, 3.843823209333853*^9}, {
   3.8438233860294476`*^9, 3.843823461809049*^9}, {3.843823532366933*^9, 
   3.8438235336937847`*^9}, {3.8438236174962378`*^9, 
   3.8438236242902803`*^9}, {3.8438236620800457`*^9, 3.843823741012968*^9}, {
   3.8438237905172443`*^9, 3.8438238089872274`*^9}, {3.843824118153765*^9, 
   3.8438241442834077`*^9}, {3.8438245175909433`*^9, 3.843824522650078*^9}, {
   3.8441175652312574`*^9, 3.8441175676612806`*^9}, {3.8441186985833545`*^9, 
   3.8441187310723877`*^9}, {3.844118781048031*^9, 3.84411878305225*^9}, {
   3.8441188360228806`*^9, 3.8441188724225326`*^9}, {3.844118978383685*^9, 
   3.8441190999730463`*^9}, {3.8441191319362974`*^9, 3.844119165470493*^9}, {
   3.8441192901245766`*^9, 3.84411938325988*^9}, {3.8441194238604703`*^9, 
   3.844119470511012*^9}, {3.844119511041647*^9, 3.844119577492264*^9}, {
   3.8441197901044817`*^9, 3.8441198034468203`*^9}, {3.844119839540701*^9, 
   3.8441198465066595`*^9}, {3.844119876607153*^9, 3.8441199512437763`*^9}, {
   3.8441200389458723`*^9, 3.844120176127071*^9}, {3.844120234412332*^9, 
   3.844120311488877*^9}, {3.8441203437102613`*^9, 3.8441203729844823`*^9}, {
   3.844120408240523*^9, 3.8441204308983617`*^9}, {3.8441206487457976`*^9, 
   3.844120889524843*^9}, {3.844120929834691*^9, 3.844120930294032*^9}, {
   3.844212369935813*^9, 3.844212391014431*^9}, {3.8442125971487427`*^9, 
   3.8442126440492487`*^9}, {3.844212810032943*^9, 3.8442128161312127`*^9}, {
   3.8442140076494637`*^9, 3.8442140081786585`*^9}, {3.844214064589904*^9, 
   3.844214164282734*^9}, {3.844214273450955*^9, 3.844214522011698*^9}, {
   3.844214604380192*^9, 3.844214690144476*^9}, {3.8442148670810328`*^9, 
   3.8442148932527447`*^9}, {3.8442424528982143`*^9, 3.844242453897354*^9}, {
   3.8442425271430297`*^9, 3.844242529043105*^9}, {3.844242770660857*^9, 
   3.844242784787385*^9}, {3.8442428289555593`*^9, 3.8442428508292556`*^9}, 
   3.8442441305038853`*^9, {3.8442450296236563`*^9, 3.844245049956544*^9}, {
   3.8442963520681734`*^9, 3.844296498291395*^9}, {3.844296529444977*^9, 
   3.8442965628959126`*^9}, {3.844296655405017*^9, 3.844296666113083*^9}, {
   3.8442967862033896`*^9, 3.8442968327253995`*^9}, {3.844296880272318*^9, 
   3.844296890856458*^9}, 3.844296945566719*^9, {3.8442971582379847`*^9, 
   3.844297210734641*^9}, {3.844297408724305*^9, 3.8442974125058737`*^9}, {
   3.844297498088236*^9, 3.844297508445451*^9}, {3.844297560048293*^9, 
   3.8442975682011633`*^9}, {3.844297668945566*^9, 3.8442976811781535`*^9}, {
   3.8443745049764585`*^9, 3.8443745128770204`*^9}, {3.844424981328211*^9, 
   3.844425219009429*^9}, {3.8444253192594852`*^9, 3.844425464315342*^9}, {
   3.84442570849203*^9, 3.8444257145955267`*^9}, {3.844788043837276*^9, 
   3.8447880441502495`*^9}, {3.8448063302392263`*^9, 3.8448063311539*^9}, {
   3.8448109796143336`*^9, 3.844810991061296*^9}, {3.844893630184566*^9, 
   3.8448937646116037`*^9}, {3.8448941643840313`*^9, 3.84489416940915*^9}, {
   3.8448944705006905`*^9, 3.8448944975847006`*^9}, {3.8448966121904984`*^9, 
   3.844896637967372*^9}, {3.8448985256549463`*^9, 3.8448985269426613`*^9}, {
   3.844979508552088*^9, 3.8449795176412582`*^9}, {3.845457837964452*^9, 
   3.845457850621475*^9}, {3.8454599763002357`*^9, 3.845459989667468*^9}, {
   3.845460042819747*^9, 3.8454601047877417`*^9}, {3.845501481264134*^9, 
   3.84550150636959*^9}, {3.845501597078741*^9, 3.8455016039406304`*^9}, {
   3.8455936550823917`*^9, 3.8455937032746344`*^9}, 3.845636953675025*^9, 
   3.845637407177183*^9, 3.845640580056215*^9, {3.8456736221903443`*^9, 
   3.845673653687996*^9}, 3.8462571820932064`*^9, {3.84662468281781*^9, 
   3.8466246830844526`*^9}, {3.8472256881087036`*^9, 3.847225726628457*^9}, {
   3.8472276160788045`*^9, 3.847227630464215*^9}, {3.847227983364681*^9, 
   3.84722806642939*^9}, {3.8472281618928876`*^9, 3.847228209276147*^9}, {
   3.8472333362006845`*^9, 3.8472333363785763`*^9}, {3.847405332053294*^9, 
   3.8474053402346563`*^9}, {3.847406434932054*^9, 3.8474064657012987`*^9}, {
   3.8474074162986865`*^9, 3.847407424584727*^9}, {3.8474094806005487`*^9, 
   3.8474095048694763`*^9}, {3.8474920590128403`*^9, 3.847492059288009*^9}, {
   3.8474921472466354`*^9, 3.8474921986465693`*^9}, {3.847492230068299*^9, 
   3.847492252036127*^9}, {3.848057097283438*^9, 3.848057143089724*^9}, {
   3.8481019560525403`*^9, 3.8481020353813753`*^9}, {3.848102073649337*^9, 
   3.8481021274142513`*^9}, {3.8503436149524894`*^9, 
   3.8503436538433514`*^9}, {3.850343695690996*^9, 3.850343695845366*^9}, {
   3.851118387588092*^9, 3.8511184030173826`*^9}, {3.851118464849931*^9, 
   3.851118633324195*^9}, 3.851118828460571*^9, {3.85302583532331*^9, 
   3.8530259021199574`*^9}, {3.857637594724295*^9, 3.857637595943262*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"df25f896-d77c-496a-a8bc-14404f4e082d"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`BxP$$ = 5., $CellContext`connectAblatedP$$ =
     0.025, $CellContext`contourView$$ = "All", $CellContext`distance$$ = 
    200., $CellContext`endRing$$ = 11, $CellContext`ip3SpikeScale$$ = 
    1000., $CellContext`KcP$$ = 0.4, $CellContext`klP$$ = 
    0.05, $CellContext`kNCXP$$ = 1.6, $CellContext`kPMCAP$$ = 
    0.1, $CellContext`kSERCA1P$$ = 0.1, $CellContext`kSERCA2P$$ = 
    0., $CellContext`longTime$$ = False, $CellContext`mainView$$ = 
    "1D model", $CellContext`maxTimeRange1D$$ = 
    100., $CellContext`maxTimeRange2D$$ = 
    20., $CellContext`maxTimeRangeDKO$$ = 
    100., $CellContext`maxTimeRangeSS$$ = 400., $CellContext`nlP$$ = 
    5., $CellContext`nNCXP$$ = 2.5, $CellContext`plcScale$$ = 
    3.5, $CellContext`rlkPMP$$ = 0.00025, $CellContext`rPMCAP$$ = 
    0.12, $CellContext`rSOCP$$ = 
    0.15000000000000002`, $CellContext`r\[Mu]TMax$$ = 
    10., $CellContext`r\[Mu]TMin$$ = 1., $CellContext`r\[Mu]TStep$$ = 
    1., $CellContext`startRing$$ = 7, $CellContext`sweepParamRad$$ = 
    "None", $CellContext`sweepParamSS$$ = "None", $CellContext`view1D$$ = 
    "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) Rad", \
$CellContext`viewSS$$ = "GCaMP", $CellContext`\[Alpha]0P$$ = 
    0.1, $CellContext`\[Alpha]P$$ = 0.9, $CellContext`\[Eta]GJcP$$ = 
    2., $CellContext`\[Eta]GJIP3P$$ = 4., $CellContext`\[Eta]IPRP$$ = 
    4., $CellContext`\[Eta]lkERP$$ = 0.01, $CellContext`\[Eta]NCXP$$ = 
    10., $CellContext`\[Eta]SERCAP$$ = 5., $CellContext`\[Tau]HealP$$ = 
    5.25, $CellContext`\[Tau]Max$$ = 6., $CellContext`\[Tau]Min$$ = 
    1., $CellContext`\[Tau]Step$$ = 0.5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`mainView$$], {
      "Heal Contour", "1D model", "IP3 Spike", "Single-Cell"}}, {
      Hold[$CellContext`\[Tau]HealP$$], 5.25}, {
      Hold[$CellContext`rPMCAP$$], 0.12}, {
      Hold[$CellContext`kPMCAP$$], 0.1}, {
      Hold[$CellContext`rSOCP$$], 0.15000000000000002`}, {
      Hold[$CellContext`\[Eta]NCXP$$], 10.}, {
      Hold[$CellContext`nNCXP$$], 2.5}, {
      Hold[$CellContext`kNCXP$$], 1.6}, {
      Hold[$CellContext`rlkPMP$$], 0.00025}, {
      Hold[$CellContext`\[Alpha]P$$], 0.9}, {
      Hold[$CellContext`\[Alpha]0P$$], 0.1}, {
      Hold[$CellContext`klP$$], 0.05}, {
      Hold[$CellContext`nlP$$], 5.}, {
      Hold[$CellContext`KcP$$], 0.4}, {
      Hold[$CellContext`\[Eta]IPRP$$], 4.}, {
      Hold[$CellContext`\[Eta]SERCAP$$], 5.}, {
      Hold[$CellContext`kSERCA1P$$], 0.1}, {
      Hold[$CellContext`kSERCA2P$$], 0.}, {
      Hold[$CellContext`\[Eta]lkERP$$], 0.01}, {
      Hold[$CellContext`BxP$$], 5.}, {
      Hold[$CellContext`\[Eta]GJIP3P$$], 4.}, {
      Hold[$CellContext`\[Eta]GJcP$$], 2.}, {
      Hold[$CellContext`connectAblatedP$$], 0.025}, {
      Hold[$CellContext`maxTimeRangeDKO$$], 100.}, {
      Hold[$CellContext`\[Tau]Min$$], 1.}, {
      Hold[$CellContext`\[Tau]Max$$], 6.}, {
      Hold[$CellContext`\[Tau]Step$$], 0.5}, {
      Hold[$CellContext`r\[Mu]TMin$$], 1.}, {
      Hold[$CellContext`r\[Mu]TMax$$], 10.}, {
      Hold[$CellContext`r\[Mu]TStep$$], 1.}, {
      Hold[$CellContext`contourView$$], {"All", "25 s", "Both"}}, {
      Hold[$CellContext`maxTimeRange1D$$], 100.}, {
      Hold[$CellContext`view1D$$], {
      "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) Rad", "GCaMP", 
       "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)", 
       "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) All", "Sweep", 
       "Long Time"}}, {
      Hold[$CellContext`sweepParamRad$$], {
      "None", $CellContext`r\[Mu]T, $CellContext`\[Tau]Heal, \
$CellContext`rPMCA, $CellContext`kPMCA, $CellContext`rSOC, \
$CellContext`\[Eta]NCX, $CellContext`nNCX, $CellContext`kNCX, \
$CellContext`rlkPM, $CellContext`\[Alpha], $CellContext`\[Alpha]0, \
$CellContext`kl, $CellContext`nl, $CellContext`Kc, $CellContext`\[Eta]IPR, \
$CellContext`\[Eta]SERCA, $CellContext`kSERCA1, $CellContext`kSERCA2, \
$CellContext`\[Eta]lkER, $CellContext`Bx, $CellContext`\[Eta]GJIP3, \
$CellContext`\[Eta]GJc, $CellContext`connectAblated, "True \[Eta]NCX"}}, {{
       Hold[$CellContext`startRing$$], 7}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
       12, 13, 14, 15, 16, 17, 18, 19, 20, 21}}, {{
       Hold[$CellContext`endRing$$], 11}, {21, 20, 19, 18, 17, 16, 15, 14, 13,
       12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}}, {{
       Hold[$CellContext`longTime$$], False}, {True, False}}, {
      Hold[$CellContext`maxTimeRange2D$$], 20.}, {
      Hold[$CellContext`plcScale$$], 3.5}, {
      Hold[$CellContext`ip3SpikeScale$$], 1000.}, {
      Hold[$CellContext`maxTimeRangeSS$$], 400.}, {
      Hold[$CellContext`distance$$], 200.}, {
      Hold[$CellContext`viewSS$$], {
      "GCaMP", "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)", 
       "\!\(\*SuperscriptBox[SubscriptBox[\(Ca\), \(ER\)], \(\(2\)\(+\)\)]\)",
        "\!\(\*SubscriptBox[\(IP\), \(3\)]\)", "h", "fluxes", "sweep"}}, {
      Hold[$CellContext`sweepParamSS$$], {
      "None", $CellContext`r\[Mu]T, $CellContext`\[Tau]Heal, \
$CellContext`rPMCA, $CellContext`kPMCA, $CellContext`rSOC, \
$CellContext`\[Eta]NCX, $CellContext`nNCX, $CellContext`kNCX, \
$CellContext`rlkPM, $CellContext`\[Alpha], $CellContext`\[Alpha]0, \
$CellContext`kl, $CellContext`nl, $CellContext`Kc, $CellContext`\[Eta]IPR, \
$CellContext`\[Eta]SERCA, $CellContext`kSERCA1, $CellContext`kSERCA2, \
$CellContext`\[Eta]lkER, $CellContext`Bx, $CellContext`\[Eta]GJIP3, \
$CellContext`\[Eta]GJc, $CellContext`connectAblated, "True \[Eta]NCX"}}, {
      Hold[
       Row[{
         Column[{
           Manipulate`Place[1], 
           Style["Model Parameters", 16, Bold], 
           Manipulate`Place[2], 
           Manipulate`Place[3], 
           Manipulate`Place[4], 
           Manipulate`Place[5], 
           Manipulate`Place[6], 
           Manipulate`Place[7], 
           Manipulate`Place[8], 
           Manipulate`Place[9], 
           Manipulate`Place[10], 
           Manipulate`Place[11], 
           Manipulate`Place[12], 
           Manipulate`Place[13], 
           Manipulate`Place[14], 
           Manipulate`Place[15], 
           Manipulate`Place[16], 
           Manipulate`Place[17], 
           Manipulate`Place[18], 
           Manipulate`Place[19], 
           Manipulate`Place[20], 
           Manipulate`Place[21], 
           Manipulate`Place[22], 
           Manipulate`Place[23]}], 
         Column[{
           Style["Heal Contour Settings", 16, Bold], 
           Button["Update Contour", $CellContext`updateContour = True; Null], 
           Manipulate`Place[24], 
           Manipulate`Place[25], 
           Manipulate`Place[26], 
           Manipulate`Place[27], 
           Manipulate`Place[28], 
           Manipulate`Place[29], 
           Manipulate`Place[30], 
           Manipulate`Place[31], 
           Style["Radial Cell Line Settings", 16, Bold], 
           Button["Update 1D Model", $CellContext`update1D = True; Null], 
           Manipulate`Place[32], 
           Manipulate`Place[33], 
           Manipulate`Place[34], 
           Manipulate`Place[35], 
           Manipulate`Place[36], 
           Manipulate`Place[37]}], 
         Column[{
           Style["IP3 Spike Settings", 16, Bold], 
           Button[
           "Update Ip3 Spike Model", $CellContext`update2D = True; Null], 
           Manipulate`Place[38], 
           Manipulate`Place[39], 
           Manipulate`Place[40], 
           Style["Single Cell Settings", 16, Bold], 
           Button[
           "Update Single Cell Model", $CellContext`updateSS = True; Null], 
           Manipulate`Place[41], 
           Manipulate`Place[42], 
           Manipulate`Place[43], 
           Manipulate`Place[44]}]}]], Manipulate`Dump`ThisIsNotAControl}}, 
    Typeset`size$$ = {441., {118., 122.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, 
      "Variables" :> {$CellContext`BxP$$ = 5., $CellContext`connectAblatedP$$ = 
        0.025, $CellContext`contourView$$ = "All", $CellContext`distance$$ = 
        200., $CellContext`endRing$$ = 11, $CellContext`ip3SpikeScale$$ = 
        1000., $CellContext`KcP$$ = 0.4, $CellContext`klP$$ = 
        0.05, $CellContext`kNCXP$$ = 1.6, $CellContext`kPMCAP$$ = 
        0.1, $CellContext`kSERCA1P$$ = 0.1, $CellContext`kSERCA2P$$ = 
        0., $CellContext`longTime$$ = False, $CellContext`mainView$$ = 
        "Heal Contour", $CellContext`maxTimeRange1D$$ = 
        100., $CellContext`maxTimeRange2D$$ = 
        20., $CellContext`maxTimeRangeDKO$$ = 
        100., $CellContext`maxTimeRangeSS$$ = 400., $CellContext`nlP$$ = 
        5., $CellContext`nNCXP$$ = 2.5, $CellContext`plcScale$$ = 
        3.5, $CellContext`rlkPMP$$ = 0.00025, $CellContext`rPMCAP$$ = 
        0.12, $CellContext`rSOCP$$ = 
        0.15000000000000002`, $CellContext`r\[Mu]TMax$$ = 
        10., $CellContext`r\[Mu]TMin$$ = 1., $CellContext`r\[Mu]TStep$$ = 
        1., $CellContext`startRing$$ = 7, $CellContext`sweepParamRad$$ = 
        "None", $CellContext`sweepParamSS$$ = "None", $CellContext`view1D$$ = 
        "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) Rad", \
$CellContext`viewSS$$ = "GCaMP", $CellContext`\[Alpha]0P$$ = 
        0.1, $CellContext`\[Alpha]P$$ = 0.9, $CellContext`\[Eta]GJcP$$ = 
        2., $CellContext`\[Eta]GJIP3P$$ = 4., $CellContext`\[Eta]IPRP$$ = 
        4., $CellContext`\[Eta]lkERP$$ = 0.01, $CellContext`\[Eta]NCXP$$ = 
        10., $CellContext`\[Eta]SERCAP$$ = 5., $CellContext`\[Tau]HealP$$ = 
        5.25, $CellContext`\[Tau]Max$$ = 6., $CellContext`\[Tau]Min$$ = 
        1., $CellContext`\[Tau]Step$$ = 0.5}, "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`paramAssociation}, $CellContext`paramAssociation = 
         Association[{$CellContext`r\[Mu]T -> If[
              
              Not[$CellContext`contourInfo === 
               "Contour has not been generated"], 
              Part[$CellContext`contourInfo, 
                1][$CellContext`\[Tau]HealP$$]/$CellContext`\[Mu]TConversion, 
              5.], $CellContext`\[Tau]Heal -> $CellContext`\[Tau]HealP$$, \
$CellContext`rPMCA -> $CellContext`rPMCAP$$, $CellContext`kPMCA -> \
$CellContext`kPMCAP$$, $CellContext`rSOC -> $CellContext`rSOCP$$, \
$CellContext`\[Eta]NCX -> $CellContext`\[Eta]NCXP$$, $CellContext`nNCX -> \
$CellContext`nNCXP$$, $CellContext`kNCX -> $CellContext`kNCXP$$, \
$CellContext`rlkPM -> $CellContext`rlkPMP$$, $CellContext`\[Alpha] -> \
$CellContext`\[Alpha]P$$, $CellContext`\[Alpha]0 -> \
$CellContext`\[Alpha]0P$$, $CellContext`kl -> $CellContext`klP$$, \
$CellContext`nl -> $CellContext`nlP$$, $CellContext`Kc -> $CellContext`KcP$$, \
$CellContext`\[Eta]IPR -> $CellContext`\[Eta]IPRP$$, $CellContext`\[Eta]SERCA -> \
$CellContext`\[Eta]SERCAP$$, $CellContext`kSERCA1 -> $CellContext`kSERCA1P$$, \
$CellContext`kSERCA2 -> $CellContext`kSERCA2P$$, $CellContext`\[Eta]lkER -> \
$CellContext`\[Eta]lkERP$$, $CellContext`Bx -> $CellContext`BxP$$, \
$CellContext`\[Eta]GJIP3 -> $CellContext`\[Eta]GJIP3P$$, \
$CellContext`\[Eta]GJc -> $CellContext`\[Eta]GJcP$$, \
$CellContext`connectAblated -> $CellContext`connectAblatedP$$}]; \
$CellContext`finalParamAssociation = $CellContext`paramAssociation; 
        If[$CellContext`updateContour, $CellContext`contourInfo = \
$CellContext`getHealContour[
             
             ReplacePart[$CellContext`paramAssociation, 
              Key[$CellContext`\[Alpha]] -> 
              0.], $CellContext`maxTimeRangeDKO$$, {$CellContext`\[Tau]Min$$, \
$CellContext`\[Tau]Max$$, $CellContext`\[Tau]Step$$}, \
{$CellContext`r\[Mu]TMin$$, $CellContext`r\[Mu]TMax$$, \
$CellContext`r\[Mu]TStep$$}]; $CellContext`updateContour = 
           False; $CellContext`paramAssociation = 
           Association[{$CellContext`r\[Mu]T -> 
              Part[$CellContext`contourInfo, 
                 1][$CellContext`\[Tau]HealP$$]/$CellContext`\[Mu]TConversion,\
 $CellContext`\[Tau]Heal -> $CellContext`\[Tau]HealP$$, \
$CellContext`\[Tau]HealHDRatio -> $CellContext`\[Tau]HealHDRatioP, \
$CellContext`rPMCA -> $CellContext`rPMCAP$$, $CellContext`kPMCA -> \
$CellContext`kPMCAP$$, $CellContext`rSOC -> $CellContext`rSOCP$$, \
$CellContext`\[Eta]NCX -> $CellContext`\[Eta]NCXP$$, $CellContext`nNCX -> \
$CellContext`nNCXP$$, $CellContext`kNCX -> $CellContext`kNCXP$$, \
$CellContext`rlkPM -> $CellContext`rlkPMP$$, $CellContext`\[Alpha] -> \
$CellContext`\[Alpha]P$$, $CellContext`\[Alpha]0 -> \
$CellContext`\[Alpha]0P$$, $CellContext`kl -> $CellContext`klP$$, \
$CellContext`nl -> $CellContext`nlP$$, $CellContext`Kc -> $CellContext`KcP$$, \
$CellContext`\[Eta]IPR -> $CellContext`\[Eta]IPRP$$, $CellContext`\[Eta]SERCA -> \
$CellContext`\[Eta]SERCAP$$, $CellContext`kSERCA1 -> $CellContext`kSERCA1P$$, \
$CellContext`kSERCA2 -> $CellContext`kSERCA2P$$, $CellContext`\[Eta]lkER -> \
$CellContext`\[Eta]lkERP$$, $CellContext`Bx -> $CellContext`BxP$$, \
$CellContext`\[Eta]GJIP3 -> $CellContext`\[Eta]gGJP3P, $CellContext`\[Eta]GJc -> \
$CellContext`\[Eta]GJcP$$, $CellContext`connectAblated -> \
$CellContext`connectAblatedP$$}]; Null, "Contour has not been generated"]; 
        If[$CellContext`update1D, $CellContext`info1D = \
$CellContext`get1DSol[$CellContext`paramAssociation, \
$CellContext`maxTimeRange1D$$, $CellContext`sweepParamRad$$, \
$CellContext`startRing$$, $CellContext`endRing$$, $CellContext`longTime$$]; \
$CellContext`update1D = False; Null, "1D Model is not Updated"]; 
        If[$CellContext`update2D, $CellContext`info2D = \
$CellContext`getIP3SpikeSol[
             
             ReplacePart[$CellContext`paramAssociation, {
              Key[$CellContext`\[Alpha]] -> $CellContext`plcScale$$ \
$CellContext`paramAssociation[$CellContext`\[Alpha]], 
               Key[$CellContext`r\[Mu]T] -> 
               0.}], $CellContext`maxTimeRange2D$$, \
$CellContext`ip3SpikeScale$$]; $CellContext`update2D = False; Null, 
          "2D Model is not Updated"]; 
        If[$CellContext`updateSS, $CellContext`infoSS = \
$CellContext`getSingleCellSol[
             
             ReplacePart[$CellContext`paramAssociation, {
              Key[$CellContext`r\[Mu]T] -> 
               0.}], $CellContext`maxTimeRangeSS$$, $CellContext`distance$$, \
$CellContext`sweepParamSS$$]; $CellContext`updateSS = False; Null, 
          "Single Cell Model is not Updated"]; 
        Switch[$CellContext`mainView$$, "Heal Contour", 
          If[
           Not[$CellContext`contourInfo === "Contour has not been generated"], 
           Switch[$CellContext`contourView$$, "25 s", 
            Show[
             Part[$CellContext`contourInfo, 3]], "All", 
            Part[$CellContext`contourInfo, 2], "Both", 
            Show[
             Part[$CellContext`contourInfo, 2], 
             Part[$CellContext`contourInfo, 3]]], $CellContext`contourInfo], 
          "1D model", 
          If[
           Not[$CellContext`info1D === "1D Model hsa not been updated"], 
           
           Switch[$CellContext`view1D$$, 
            "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) Rad", 
            Part[$CellContext`info1D, 2], "GCaMP", 
            Manipulate[
             
             Part[$CellContext`info1D, 
              1, $CellContext`ring], {$CellContext`ring, 1, 
              Length[
               Part[$CellContext`info1D, 1]], 1}], 
            "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)", 
            Manipulate[
             
             Part[$CellContext`info1D, 
              4, $CellContext`ring], {$CellContext`ring, 1, 
              Length[
               Part[$CellContext`info1D, 4]], 1}], 
            "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) All", 
            Part[$CellContext`info1D, 5], "Sweep", 
            Part[$CellContext`info1D, 3], "Long Time", 
            Part[$CellContext`info1D, 6]], $CellContext`info1D], "IP3 Spike", 
          If[
           Not[$CellContext`info2D === "2D Model has not been updated"], 
           Manipulate[
            Part[$CellContext`info2D, 1, $CellContext`i], {$CellContext`i, 1, 
             Length[
              Part[$CellContext`info2D, 1]], 1}], $CellContext`info2D], 
          "Single-Cell", 
          If[
           
           Not[$CellContext`infoSS === 
            "Single Cell Model hsa not been updated"], 
           Switch[$CellContext`viewSS$$, "GCaMP", 
            Part[$CellContext`infoSS, 1], 
            "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)", 
            Part[$CellContext`infoSS, 2], 
            "\!\(\*SuperscriptBox[SubscriptBox[\(Ca\), \(ER\)], \
\(\(2\)\(+\)\)]\)", 
            Part[$CellContext`infoSS, 3], 
            "\!\(\*SubscriptBox[\(IP\), \(3\)]\)", 
            Part[$CellContext`infoSS, 4], "h", 
            Part[$CellContext`infoSS, 5], "fluxes", 
            Part[$CellContext`infoSS, 6], "sweep", 
            Part[$CellContext`infoSS, 7]], $CellContext`infoSS]]], 
      "Specifications" :> {{$CellContext`mainView$$, {
         "Heal Contour", "1D model", "IP3 Spike", "Single-Cell"}, 
         ControlPlacement -> 1}, {$CellContext`\[Tau]HealP$$, 5.25, 
         ControlPlacement -> 2}, {$CellContext`rPMCAP$$, 0.12, 
         ControlPlacement -> 3}, {$CellContext`kPMCAP$$, 0.1, 
         ControlPlacement -> 4}, {$CellContext`rSOCP$$, 0.15000000000000002`, 
         ControlPlacement -> 5}, {$CellContext`\[Eta]NCXP$$, 10., 
         ControlPlacement -> 6}, {$CellContext`nNCXP$$, 2.5, ControlPlacement -> 
         7}, {$CellContext`kNCXP$$, 1.6, ControlPlacement -> 
         8}, {$CellContext`rlkPMP$$, 0.00025, ControlPlacement -> 
         9}, {$CellContext`\[Alpha]P$$, 0.9, ControlPlacement -> 
         10}, {$CellContext`\[Alpha]0P$$, 0.1, ControlPlacement -> 
         11}, {$CellContext`klP$$, 0.05, ControlPlacement -> 
         12}, {$CellContext`nlP$$, 5., ControlPlacement -> 
         13}, {$CellContext`KcP$$, 0.4, ControlPlacement -> 
         14}, {$CellContext`\[Eta]IPRP$$, 4., ControlPlacement -> 
         15}, {$CellContext`\[Eta]SERCAP$$, 5., ControlPlacement -> 
         16}, {$CellContext`kSERCA1P$$, 0.1, ControlPlacement -> 
         17}, {$CellContext`kSERCA2P$$, 0., ControlPlacement -> 
         18}, {$CellContext`\[Eta]lkERP$$, 0.01, ControlPlacement -> 
         19}, {$CellContext`BxP$$, 5., ControlPlacement -> 
         20}, {$CellContext`\[Eta]GJIP3P$$, 4., ControlPlacement -> 
         21}, {$CellContext`\[Eta]GJcP$$, 2., ControlPlacement -> 
         22}, {$CellContext`connectAblatedP$$, 0.025, ControlPlacement -> 
         23}, {$CellContext`maxTimeRangeDKO$$, 100., ControlPlacement -> 
         24}, {$CellContext`\[Tau]Min$$, 1., ControlPlacement -> 
         25}, {$CellContext`\[Tau]Max$$, 6., ControlPlacement -> 
         26}, {$CellContext`\[Tau]Step$$, 0.5, ControlPlacement -> 
         27}, {$CellContext`r\[Mu]TMin$$, 1., ControlPlacement -> 
         28}, {$CellContext`r\[Mu]TMax$$, 10., ControlPlacement -> 
         29}, {$CellContext`r\[Mu]TStep$$, 1., ControlPlacement -> 
         30}, {$CellContext`contourView$$, {"All", "25 s", "Both"}, 
         ControlPlacement -> 31}, {$CellContext`maxTimeRange1D$$, 100., 
         ControlPlacement -> 32}, {$CellContext`view1D$$, {
         "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) Rad", "GCaMP", 
          "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)", 
          "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) All", "Sweep", 
          "Long Time"}, ControlPlacement -> 
         33}, {$CellContext`sweepParamRad$$, {
         "None", $CellContext`r\[Mu]T, $CellContext`\[Tau]Heal, \
$CellContext`rPMCA, $CellContext`kPMCA, $CellContext`rSOC, \
$CellContext`\[Eta]NCX, $CellContext`nNCX, $CellContext`kNCX, \
$CellContext`rlkPM, $CellContext`\[Alpha], $CellContext`\[Alpha]0, \
$CellContext`kl, $CellContext`nl, $CellContext`Kc, $CellContext`\[Eta]IPR, \
$CellContext`\[Eta]SERCA, $CellContext`kSERCA1, $CellContext`kSERCA2, \
$CellContext`\[Eta]lkER, $CellContext`Bx, $CellContext`\[Eta]GJIP3, \
$CellContext`\[Eta]GJc, $CellContext`connectAblated, "True \[Eta]NCX"}, 
         ControlPlacement -> 34}, {{$CellContext`startRing$$, 7}, {1, 2, 3, 4,
          5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21}, 
         ControlPlacement -> 35}, {{$CellContext`endRing$$, 11}, {21, 20, 19, 
         18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1}, 
         ControlPlacement -> 36}, {{$CellContext`longTime$$, False}, {
         True, False}, ControlPlacement -> 
         37}, {$CellContext`maxTimeRange2D$$, 20., ControlPlacement -> 
         38}, {$CellContext`plcScale$$, 3.5, ControlPlacement -> 
         39}, {$CellContext`ip3SpikeScale$$, 1000., ControlPlacement -> 
         40}, {$CellContext`maxTimeRangeSS$$, 400., ControlPlacement -> 
         41}, {$CellContext`distance$$, 200., ControlPlacement -> 
         42}, {$CellContext`viewSS$$, {
         "GCaMP", "\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)", 
          "\!\(\*SuperscriptBox[SubscriptBox[\(Ca\), \(ER\)], \(\(2\)\(+\)\)]\
\)", "\!\(\*SubscriptBox[\(IP\), \(3\)]\)", "h", "fluxes", "sweep"}, 
         ControlPlacement -> 43}, {$CellContext`sweepParamSS$$, {
         "None", $CellContext`r\[Mu]T, $CellContext`\[Tau]Heal, \
$CellContext`rPMCA, $CellContext`kPMCA, $CellContext`rSOC, \
$CellContext`\[Eta]NCX, $CellContext`nNCX, $CellContext`kNCX, \
$CellContext`rlkPM, $CellContext`\[Alpha], $CellContext`\[Alpha]0, \
$CellContext`kl, $CellContext`nl, $CellContext`Kc, $CellContext`\[Eta]IPR, \
$CellContext`\[Eta]SERCA, $CellContext`kSERCA1, $CellContext`kSERCA2, \
$CellContext`\[Eta]lkER, $CellContext`Bx, $CellContext`\[Eta]GJIP3, \
$CellContext`\[Eta]GJc, $CellContext`connectAblated, "True \[Eta]NCX"}, 
         ControlPlacement -> 44}, 
        Row[{
          Column[{
            Manipulate`Place[1], 
            Style["Model Parameters", 16, Bold], 
            Manipulate`Place[2], 
            Manipulate`Place[3], 
            Manipulate`Place[4], 
            Manipulate`Place[5], 
            Manipulate`Place[6], 
            Manipulate`Place[7], 
            Manipulate`Place[8], 
            Manipulate`Place[9], 
            Manipulate`Place[10], 
            Manipulate`Place[11], 
            Manipulate`Place[12], 
            Manipulate`Place[13], 
            Manipulate`Place[14], 
            Manipulate`Place[15], 
            Manipulate`Place[16], 
            Manipulate`Place[17], 
            Manipulate`Place[18], 
            Manipulate`Place[19], 
            Manipulate`Place[20], 
            Manipulate`Place[21], 
            Manipulate`Place[22], 
            Manipulate`Place[23]}], 
          Column[{
            Style["Heal Contour Settings", 16, Bold], 
            Button["Update Contour", $CellContext`updateContour = True; Null], 
            Manipulate`Place[24], 
            Manipulate`Place[25], 
            Manipulate`Place[26], 
            Manipulate`Place[27], 
            Manipulate`Place[28], 
            Manipulate`Place[29], 
            Manipulate`Place[30], 
            Manipulate`Place[31], 
            Style["Radial Cell Line Settings", 16, Bold], 
            Button["Update 1D Model", $CellContext`update1D = True; Null], 
            Manipulate`Place[32], 
            Manipulate`Place[33], 
            Manipulate`Place[34], 
            Manipulate`Place[35], 
            Manipulate`Place[36], 
            Manipulate`Place[37]}], 
          Column[{
            Style["IP3 Spike Settings", 16, Bold], 
            Button[
            "Update Ip3 Spike Model", $CellContext`update2D = True; Null], 
            Manipulate`Place[38], 
            Manipulate`Place[39], 
            Manipulate`Place[40], 
            Style["Single Cell Settings", 16, Bold], 
            Button[
            "Update Single Cell Model", $CellContext`updateSS = True; Null], 
            Manipulate`Place[41], 
            Manipulate`Place[42], 
            Manipulate`Place[43], 
            Manipulate`Place[44]}]}]}, 
      "Options" :> {SynchronousUpdating -> False}, "DefaultOptions" :> {}],
     ImageSizeCache->{971., {413., 419.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.8576376154269066`*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"ab43f38a-56e7-4573-8b77-6a3cdc069b68"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[OpenCurlyDoubleQuote]saved\[CloseCurlyDoubleQuote]", "Subsection",
 CellChangeTimes->{{3.8454197587598257`*^9, 
  3.845419759924881*^9}},ExpressionUUID->"d63c7749-42db-4bfd-9c1f-\
7059a7dd2660"],

Cell["First good one", "Text",
 CellChangeTimes->{{3.8456369374782963`*^9, 
  3.8456369394379697`*^9}},ExpressionUUID->"036fabdf-cb7a-4405-b379-\
3c9b2047af5d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Tau]HealP", ",", "3.75"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"rPMCAP", ",", ".08"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"kPMCAP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"rSOCP", ",", ".265"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]NCXP", ",", "15."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"nNCXP", ",", "1."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"kNCXP", ",", "10."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"rlkPMP", ",", ".0005"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]P", ",", ".5562"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]0P", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"klP", ",", ".05"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"nlP", ",", "5."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"KcP", ",", ".4"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]IPRP", ",", "8.4"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]SERCAP", ",", "10.1"}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"kSERCA1P", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"kSERCA2P", ",", "0."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]lkERP", ",", ".02"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"BxP", ",", "5."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]GJIP3P", ",", "4."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]GJcP", ",", "4."}], "}"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8460206161662445`*^9, 3.846020618832011*^9}, {
  3.847274548066984*^9, 3.847274560693636*^9}},
 CellLabel->
  "In[743]:=",ExpressionUUID->"f6d34665-f671-4e0b-8579-451c46f15174"],

Cell["\<\
Different single-cell response, but good first expansion. Lowered ER fluxes. \
Lower first expansion sensitivity to ER fluxes?\
\>", "Text",
 CellChangeTimes->{{3.845419766344877*^9, 
  3.8454198090083833`*^9}},ExpressionUUID->"8c9f12b7-30b0-488f-b0eb-\
f6f947f7009a"],

Cell[BoxData[
 RowBox[{"(*", "finalParamAssociation", "*)"}]], "Input",
 CellChangeTimes->{{3.8454194716423054`*^9, 3.8454194728315907`*^9}, 
   3.845594339836118*^9},
 CellLabel->
  "In[744]:=",ExpressionUUID->"fb43bd4d-cba5-4ea2-a668-febbb8b155df"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Tau]HealP", ",", "6."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"rPMCAP", ",", ".08"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"kPMCAP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"rSOCP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]NCXP", ",", "15."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"nNCXP", ",", "1."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"kNCXP", ",", "10."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"rlkPMP", ",", ".00025"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]P", ",", "1."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]0P", ",", ".05"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"klP", ",", ".05"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"nlP", ",", "5."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"KcP", ",", ".4"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]IPRP", ",", "4."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]SERCAP", ",", "5."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"kSERCA1P", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"kSERCA2P", ",", "0."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]lkERP", ",", ".01"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"BxP", ",", "5."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]GJIP3P", ",", "4."}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Control", "@", 
    RowBox[{"{", 
     RowBox[{"\[Eta]GJcP", ",", "4."}], "}"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8456368705454187`*^9, 3.8456369169373507`*^9}, {
  3.8460206225475245`*^9, 3.846020625493698*^9}, {3.8472745659521675`*^9, 
  3.8472745660990734`*^9}},
 CellLabel->
  "In[745]:=",ExpressionUUID->"febdf8cb-44c5-41d4-9e36-c6250251ac86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"11", "-", "22", "-", "21"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"r\[Mu]T", "\[Rule]", "39.786776046703196`"}], ",", 
    RowBox[{"\[Tau]Heal", "\[Rule]", "3.`"}], ",", 
    RowBox[{"rPMCA", "\[Rule]", "0.08`"}], ",", 
    RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"rSOC", "\[Rule]", "0.11`"}], ",", 
    RowBox[{"\[Eta]NCX", "\[Rule]", "10.`"}], ",", 
    RowBox[{"kNCX", "\[Rule]", "10.`"}], ",", 
    RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "1.71`"}], ",", 
    RowBox[{"\[Alpha]0", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
    RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
    RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
    RowBox[{"\[Eta]IPR", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
    RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
    RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
    RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
    RowBox[{"\[Eta]GJc", "\[Rule]", "4.`"}]}], 
   "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.846626413000492*^9, 3.8466264205799017`*^9}},
 CellLabel->
  "In[746]:=",ExpressionUUID->"4dbed1ae-eca8-45b9-898a-614713c49f30"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"r\[Mu]T", "\[Rule]", "39.786776046703196`"}], ",", 
   RowBox[{"\[Tau]Heal", "\[Rule]", "3.`"}], ",", 
   RowBox[{"rPMCA", "\[Rule]", "0.08`"}], ",", 
   RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"rSOC", "\[Rule]", "0.11`"}], ",", 
   RowBox[{"\[Eta]NCX", "\[Rule]", "10.`"}], ",", 
   RowBox[{"kNCX", "\[Rule]", "10.`"}], ",", 
   RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "1.71`"}], ",", 
   RowBox[{"\[Alpha]0", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
   RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
   RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
   RowBox[{"\[Eta]IPR", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
   RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
   RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
   RowBox[{"\[Eta]GJc", "\[Rule]", "4.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8480956361380153`*^9, 3.8511188209079065`*^9, 
  3.8511275411112785`*^9, 3.8511280013490887`*^9},
 CellLabel->
  "Out[746]=",ExpressionUUID->"b1ae4660-ddbc-474b-9c33-e026ad80373e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"12", "-", "1", "-", "21"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"r\[Mu]T", "\[Rule]", "49.56135368822545`"}], ",", 
    RowBox[{"\[Tau]Heal", "\[Rule]", "4.25`"}], ",", 
    RowBox[{"rPMCA", "\[Rule]", "0.08`"}], ",", 
    RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"rSOC", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"\[Eta]NCX", "\[Rule]", "10.`"}], ",", 
    RowBox[{"nNCX", "\[Rule]", "2.5`"}], ",", 
    RowBox[{"kNCX", "\[Rule]", "1.6`"}], ",", 
    RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\[Alpha]0", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
    RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
    RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
    RowBox[{"\[Eta]IPR", "\[Rule]", "4.`"}], ",", 
    RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
    RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
    RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
    RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
    RowBox[{"\[Eta]GJc", "\[Rule]", "2.`"}]}], 
   "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.847410258142036*^9, 3.847410274048677*^9}, {
  3.848016089228079*^9, 3.8480160961665263`*^9}},
 CellLabel->
  "In[747]:=",ExpressionUUID->"5e9fad98-4ac1-44d3-a691-2bbd2916f3da"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"r\[Mu]T", "\[Rule]", "49.56135368822545`"}], ",", 
   RowBox[{"\[Tau]Heal", "\[Rule]", "4.25`"}], ",", 
   RowBox[{"rPMCA", "\[Rule]", "0.08`"}], ",", 
   RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"rSOC", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"\[Eta]NCX", "\[Rule]", "10.`"}], ",", 
   RowBox[{"nNCX", "\[Rule]", "2.5`"}], ",", 
   RowBox[{"kNCX", "\[Rule]", "1.6`"}], ",", 
   RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\[Alpha]0", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
   RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
   RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
   RowBox[{"\[Eta]IPR", "\[Rule]", "4.`"}], ",", 
   RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
   RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
   RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
   RowBox[{"\[Eta]GJc", "\[Rule]", "2.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.848095636197231*^9, 3.851118820965904*^9, 
  3.851127541172763*^9, 3.851128001389509*^9},
 CellLabel->
  "Out[747]=",ExpressionUUID->"a71f1394-230c-4715-b63e-31fafd6cbef3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"12", "-", "9", "-", "21"}], ";", " ", 
    RowBox[{
     RowBox[{
     "same", " ", "as", " ", "above", " ", "but", " ", "with", " ", 
      "connectAblated", " ", "as", " ", "a", " ", "non"}], "-", 
     RowBox[{"zero", " ", "parameter"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"r\[Mu]T", "\[Rule]", "49.56135368822545`"}], ",", 
    RowBox[{"\[Tau]Heal", "\[Rule]", "4.25`"}], ",", 
    RowBox[{"rPMCA", "\[Rule]", "0.08`"}], ",", 
    RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"rSOC", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"\[Eta]NCX", "\[Rule]", "10.`"}], ",", 
    RowBox[{"nNCX", "\[Rule]", "2.5`"}], ",", 
    RowBox[{"kNCX", "\[Rule]", "1.6`"}], ",", 
    RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "1.`"}], ",", 
    RowBox[{"\[Alpha]0", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
    RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
    RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
    RowBox[{"\[Eta]IPR", "\[Rule]", "4.`"}], ",", 
    RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
    RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
    RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
    RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
    RowBox[{"\[Eta]GJc", "\[Rule]", "2.`"}], ",", 
    RowBox[{"connectAblated", "\[Rule]", "0.0015`"}]}], 
   "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.848103581843479*^9, 3.8481036219750147`*^9}, {
  3.8483573419788256`*^9, 3.848357342496661*^9}},
 CellLabel->
  "In[748]:=",ExpressionUUID->"c7c0607b-33ed-47e9-a144-4315f7edf967"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"r\[Mu]T", "\[Rule]", "49.56135368822545`"}], ",", 
   RowBox[{"\[Tau]Heal", "\[Rule]", "4.25`"}], ",", 
   RowBox[{"rPMCA", "\[Rule]", "0.08`"}], ",", 
   RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"rSOC", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"\[Eta]NCX", "\[Rule]", "10.`"}], ",", 
   RowBox[{"nNCX", "\[Rule]", "2.5`"}], ",", 
   RowBox[{"kNCX", "\[Rule]", "1.6`"}], ",", 
   RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\[Alpha]0", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
   RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
   RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
   RowBox[{"\[Eta]IPR", "\[Rule]", "4.`"}], ",", 
   RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
   RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
   RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
   RowBox[{"\[Eta]GJc", "\[Rule]", "2.`"}], ",", 
   RowBox[{"connectAblated", "\[Rule]", "0.0015`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8481036228600206`*^9, 3.8511188210179873`*^9, 
  3.8511275412274933`*^9, 3.8511280014294844`*^9},
 CellLabel->
  "Out[748]=",ExpressionUUID->"a7a69836-4151-4601-ad02-4b658a74a030"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"12", "-", "12", "-", 
            RowBox[{
            "21", " ", "a", " ", "tweak", " ", "on", " ", "the", " ", "above",
              " ", "to", " ", "\[IndentingNewLine]", "1"}]}], ")"}], " ", 
          "Increase", " ", "rPMCA", " ", "and", " ", "rSOC", " ", "to", " ", 
          "give", " ", "them", " ", "more", " ", "of", " ", "a", " ", 
          "noticable", " ", "effect", " ", "in", " ", "the", " ", 
          "knockdown"}], ",", "\[IndentingNewLine]", "    ", "2"}], ")"}], 
       " ", "Increase", " ", "connectedAblated", " ", "parameter", " ", 
       "since", " ", "it", " ", "was", " ", "too", " ", "weak"}], ",", 
      "\[IndentingNewLine]", "      ", "3"}], ")"}], " ", "Slightly", " ", 
    "lower", " ", "\[Alpha]", " ", "since", " ", "the", " ", "flares", " ", 
    "were", " ", "going", " ", "a", " ", "little", " ", "too", " ", "far", 
    " ", "for", " ", "my", " ", "liking"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"r\[Mu]T", "\[Rule]", "41.14497773461118`"}], ",", 
    RowBox[{"\[Tau]Heal", "\[Rule]", "5.25`"}], ",", 
    RowBox[{"rPMCA", "\[Rule]", "0.12`"}], ",", 
    RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"rSOC", "\[Rule]", "0.15000000000000002`"}], ",", 
    RowBox[{"\[Eta]NCX", "\[Rule]", "10.`"}], ",", 
    RowBox[{"nNCX", "\[Rule]", "2.5`"}], ",", 
    RowBox[{"kNCX", "\[Rule]", "1.6`"}], ",", 
    RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.9`"}], ",", 
    RowBox[{"\[Alpha]0", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
    RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
    RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
    RowBox[{"\[Eta]IPR", "\[Rule]", "4.`"}], ",", 
    RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
    RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
    RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
    RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
    RowBox[{"\[Eta]GJc", "\[Rule]", "2.`"}], ",", 
    RowBox[{"connectAblated", "\[Rule]", "0.025`"}]}], 
   "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.8483573331936455`*^9, 3.8483573390774307`*^9}, {
  3.8483573851449723`*^9, 3.848357478245365*^9}},
 CellLabel->
  "In[749]:=",ExpressionUUID->"a042f7a7-06bf-4278-b397-12703ce90194"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"r\[Mu]T", "\[Rule]", "41.14497773461118`"}], ",", 
   RowBox[{"\[Tau]Heal", "\[Rule]", "5.25`"}], ",", 
   RowBox[{"rPMCA", "\[Rule]", "0.12`"}], ",", 
   RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"rSOC", "\[Rule]", "0.15000000000000002`"}], ",", 
   RowBox[{"\[Eta]NCX", "\[Rule]", "10.`"}], ",", 
   RowBox[{"nNCX", "\[Rule]", "2.5`"}], ",", 
   RowBox[{"kNCX", "\[Rule]", "1.6`"}], ",", 
   RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.9`"}], ",", 
   RowBox[{"\[Alpha]0", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
   RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
   RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
   RowBox[{"\[Eta]IPR", "\[Rule]", "4.`"}], ",", 
   RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
   RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
   RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
   RowBox[{"\[Eta]GJc", "\[Rule]", "2.`"}], ",", 
   RowBox[{"connectAblated", "\[Rule]", "0.025`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.848357478970535*^9, 3.851118821062957*^9, 
  3.8511275412804585`*^9, 3.8511280014747467`*^9},
 CellLabel->
  "Out[749]=",ExpressionUUID->"ee036b50-5b16-422d-994b-7d90e60df21b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"1", "-", "4", "-", 
    RowBox[{
    "22", "\[IndentingNewLine]", "Trying", " ", "a", " ", "first", " ", 
     "expansion", " ", "that", " ", "goes", " ", "a", " ", "little", " ", 
     "farther", " ", "but", " ", "decays", " ", "quicker", " ", "as", " ", 
     RowBox[{"well", ".", " ", "Other"}], " ", "parameters", " ", "are", " ", 
     "adjusted", " ", "accordingly"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"r\[Mu]T", "\[Rule]", "101.28200925591425`"}], ",", 
    RowBox[{"\[Tau]Heal", "\[Rule]", "3.`"}], ",", 
    RowBox[{"rPMCA", "\[Rule]", "0.12`"}], ",", 
    RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"rSOC", "\[Rule]", "0.15`"}], ",", 
    RowBox[{"\[Eta]NCX", "\[Rule]", "13.`"}], ",", 
    RowBox[{"nNCX", "\[Rule]", "2.5`"}], ",", 
    RowBox[{"kNCX", "\[Rule]", "1.6`"}], ",", 
    RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
    RowBox[{"\[Alpha]", "\[Rule]", "0.9`"}], ",", 
    RowBox[{"\[Alpha]0", "\[Rule]", "0.075`"}], ",", 
    RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
    RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
    RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
    RowBox[{"\[Eta]IPR", "\[Rule]", "4.`"}], ",", 
    RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
    RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
    RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
    RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
    RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
    RowBox[{"\[Eta]GJc", "\[Rule]", "2.`"}], ",", 
    RowBox[{"connectAblated", "\[Rule]", "0.025`"}]}], 
   "\[RightAssociation]"}]}]], "Input",
 CellChangeTimes->{{3.8483574726444435`*^9, 3.8483574726743298`*^9}, {
  3.850344474268922*^9, 3.8503445155311394`*^9}, {3.8503446057866096`*^9, 
  3.8503446348598967`*^9}},
 CellLabel->
  "In[750]:=",ExpressionUUID->"7571b696-df04-4a07-8e5d-4ef97c5fd800"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"r\[Mu]T", "\[Rule]", "101.28200925591425`"}], ",", 
   RowBox[{"\[Tau]Heal", "\[Rule]", "3.`"}], ",", 
   RowBox[{"rPMCA", "\[Rule]", "0.12`"}], ",", 
   RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"rSOC", "\[Rule]", "0.15`"}], ",", 
   RowBox[{"\[Eta]NCX", "\[Rule]", "13.`"}], ",", 
   RowBox[{"nNCX", "\[Rule]", "2.5`"}], ",", 
   RowBox[{"kNCX", "\[Rule]", "1.6`"}], ",", 
   RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
   RowBox[{"\[Alpha]", "\[Rule]", "0.9`"}], ",", 
   RowBox[{"\[Alpha]0", "\[Rule]", "0.075`"}], ",", 
   RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
   RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
   RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
   RowBox[{"\[Eta]IPR", "\[Rule]", "4.`"}], ",", 
   RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
   RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
   RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
   RowBox[{"\[Eta]GJc", "\[Rule]", "2.`"}], ",", 
   RowBox[{"connectAblated", "\[Rule]", "0.025`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8503446277664757`*^9, 3.8511188211039333`*^9, 
  3.8511275413334136`*^9, 3.851128001515723*^9},
 CellLabel->
  "Out[750]=",ExpressionUUID->"d76ade8e-295e-4d2e-b655-5c40f95e6011"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Final Model", "Title",
 CellChangeTimes->{{3.8460192390145454`*^9, 
  3.8460192405544653`*^9}},ExpressionUUID->"25f9dda8-332b-4f6c-80ca-\
74f553948165"],

Cell["\<\
Final code for testing a parameter set chosen above. This code is tested \
using the \[OpenCurlyDoubleQuote]zoomed in mesh\[CloseCurlyDoubleQuote], but \
the goal is to move this to ACCRE to run on the full mesh. Ideally only the \
Initialization section as well as this section are the only things that will \
need to go to ACCRE; the other sections should be removed when making the \
ACCRE notebook, as they are just for the purpose of testing the parameters.\
\>", "Text",
 CellChangeTimes->{{3.8460192454057055`*^9, 
  3.8460193732380795`*^9}},ExpressionUUID->"2f0e3e73-2bbc-44f5-986d-\
4ea71bc9b453"],

Cell[BoxData[
 RowBox[{
  RowBox[{"finalParamAssociation", "=", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"r\[Mu]T", "\[Rule]", "41.14497773461118`"}], ",", 
     RowBox[{"\[Tau]Heal", "\[Rule]", "5.25`"}], ",", 
     RowBox[{"rPMCA", "\[Rule]", "0.12`"}], ",", 
     RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
     RowBox[{"rSOC", "\[Rule]", "0.15000000000000002`"}], ",", 
     RowBox[{"\[Eta]NCX", "\[Rule]", "10.`"}], ",", 
     RowBox[{"nNCX", "\[Rule]", "2.5`"}], ",", 
     RowBox[{"kNCX", "\[Rule]", "1.6`"}], ",", 
     RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
     RowBox[{"\[Alpha]", "\[Rule]", "0.9`"}], ",", 
     RowBox[{"\[Alpha]0", "\[Rule]", "0.1`"}], ",", 
     RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
     RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
     RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
     RowBox[{"\[Eta]IPR", "\[Rule]", "4.`"}], ",", 
     RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
     RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
     RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
     RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
     RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
     RowBox[{"\[Eta]GJIP3", "\[Rule]", "8.`"}], ",", 
     RowBox[{"\[Eta]GJc", "\[Rule]", "4.`"}], ",", 
     RowBox[{"connectAblated", "\[Rule]", "0.025`"}]}], 
    "\[RightAssociation]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8460205611047187`*^9, 3.8460205621633673`*^9}, {
   3.846189463608893*^9, 3.8461894638162403`*^9}, 3.846257318228273*^9, 
   3.8462573793525143`*^9, 3.8474114871378155`*^9, 3.8481036387075367`*^9, 
   3.848357489637735*^9, 3.850344656594291*^9, 3.85112818259721*^9, {
   3.852157825732616*^9, 3.852157828598709*^9}, 3.852197103106358*^9},
 CellLabel->
  "In[398]:=",ExpressionUUID->"12cdddd6-150c-4664-8f04-3ea0a3b54b68"],

Cell[CellGroupData[{

Cell["Initializations", "Chapter",
 CellChangeTimes->{{3.846020674183674*^9, 3.846020691706911*^9}, {
  3.846064449751243*^9, 
  3.846064460420183*^9}},ExpressionUUID->"f341433c-e0cb-4011-9199-\
957fc500305e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "List", " ", "of", " ", "strings", " ", "to", " ", "specify", " ", 
     "model", " ", "components", " ", "to", " ", "knockout", " ", "by", " ", 
     "70", "%", " ", "in", " ", "one", " ", "half", " ", "of", " ", "the", 
     " ", 
     RowBox[{"tissue", ".", " ", "Current"}], " ", "options", " ", "are", " ",
      "GJ"}], ",", " ", "PLC", ",", " ", "SERCA", ",", " ", "SOC", ",", " ", 
    RowBox[{
     RowBox[{"PMCA", ".", " ", "Note"}], " ", "that", " ", "GJs", " ", "are", 
     " ", "handled", " ", "separately", " ", "when", " ", "GJ", " ", "terms", 
     " ", "are", " ", "made"}], ",", " ", 
    RowBox[{
     RowBox[{
     "since", " ", "the", " ", "GJ", " ", "parameters", " ", "are", " ", 
      "specific", " ", "to", " ", "cell"}], "-", 
     RowBox[{
     "cell", " ", "boundaries", " ", "rather", " ", "than", " ", "single", 
      " ", 
      RowBox[{"cells", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"knockoutVal", "=", ".3"}], 
    RowBox[{"(*", 
     RowBox[{
     "percentage", " ", "to", " ", "keep", " ", "for", " ", "knockout", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"so", " ", "1"}], " ", "-", " ", 
        RowBox[{"this", " ", "for", " ", "percent", " ", "knockdown"}]}], 
       ")"}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"knockoutList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "knockout", " ", "commands", " ", "that", " ", "do", " ", "not", " ", 
     "require", " ", "user", " ", "input"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"knockoutAssociations", "=", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<GJ\>\"", "\[Rule]", "Nothing"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<PLC\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"\[Alpha]", "\[Rule]", 
             RowBox[{"#", "*", "\[Alpha]"}]}], 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"\[Alpha]0", "\[Rule]", 
               RowBox[{"#", "*", "\[Alpha]0"}]}]}], "*)"}], "}"}], ")"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<SERCA\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"\[Eta]SERCA", "\[Rule]", 
            RowBox[{"#", "*", "\[Eta]SERCA"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<SOC\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"\[Eta]SOC", "\[Rule]", 
            RowBox[{"#", "*", "\[Eta]SOC"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<PMCA\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"\[Eta]PMCA", "\[Rule]", 
            RowBox[{"#", "*", "\[Eta]PMCA"}]}], ")"}]}]}], "|>"}], "&"}], "@",
       "knockoutVal"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"knockoutRules", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"knockoutAssociations", "/@", "knockoutList"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "List", " ", "of", " ", "strings", " ", "to", " ", "specify", " ", 
     "model", " ", "components", " ", "to", " ", "overexpress", " ", "by", 
     " ", "100", "%", " ", "in", " ", "one", " ", "half", " ", "of", " ", 
     "the", " ", 
     RowBox[{"tissue", ".", " ", "Current"}], " ", "options", " ", "are", " ", 
     RowBox[{"PLC", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"overExpressVal", "=", "2."}], 
    RowBox[{"(*", 
     RowBox[{"overexpression", " ", "factor"}], "*)"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"overExpressList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "knockout", " ", "commands", " ", "that", " ", "do", " ", "not", " ", 
     "require", " ", "user", " ", "input"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"overExpressAssociations", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"<|", 
        RowBox[{"\"\<PLC\>\"", "\[Rule]", 
         RowBox[{"(", 
          RowBox[{"{", 
           RowBox[{"\[Alpha]", "\[Rule]", 
            RowBox[{"#", "*", "\[Alpha]"}]}], 
           RowBox[{"(*", 
            RowBox[{",", 
             RowBox[{"\[Alpha]0", "\[Rule]", 
              RowBox[{"#", "*", "\[Alpha]0"}]}]}], "*)"}], "}"}], ")"}]}], 
        "|>"}], "&"}], "@", "overExpressVal"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"overExpressRules", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"overExpressAssociations", "/@", "overExpressList"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.827179364005952*^9, 3.8271793874442997`*^9}, {
   3.8271805206337786`*^9, 3.827180522920491*^9}, {3.8271826943333845`*^9, 
   3.827182699387295*^9}, {3.827242903629511*^9, 3.8272429091104593`*^9}, {
   3.827358198836939*^9, 3.827358201665182*^9}, {3.8286131306548767`*^9, 
   3.8286131358358107`*^9}, {3.828614107548217*^9, 3.8286141079457483`*^9}, {
   3.82861532938661*^9, 3.8286153306630793`*^9}, {3.8286155217394276`*^9, 
   3.828615522104452*^9}, {3.8291257093025637`*^9, 3.8291257107616467`*^9}, {
   3.829345105269735*^9, 3.8293451112049875`*^9}, {3.8297783027246456`*^9, 
   3.8297783040396433`*^9}, {3.830601021843954*^9, 3.830601023517907*^9}, {
   3.830943914853161*^9, 3.8309440467628264`*^9}, {3.830944137793647*^9, 
   3.8309441881772747`*^9}, {3.830991825192729*^9, 3.8309918469699893`*^9}, {
   3.831730714236368*^9, 3.8317307900306883`*^9}, {3.831735364315231*^9, 
   3.831735364517955*^9}, {3.8322054569935813`*^9, 3.8322055333666453`*^9}, {
   3.83220563584507*^9, 3.8322056427360487`*^9}, {3.8322056872406645`*^9, 
   3.832205695436123*^9}, {3.832205729080778*^9, 3.832205734836997*^9}, {
   3.832205829781869*^9, 3.832205831295498*^9}, {3.83220596708339*^9, 
   3.8322062401184072`*^9}, {3.832206279993104*^9, 3.832206413419774*^9}, 
   3.832321905955312*^9, {3.8323225139465356`*^9, 3.8323225337338743`*^9}, {
   3.832334314848716*^9, 3.8323343308024244`*^9}, {3.8323344798873425`*^9, 
   3.832334496838752*^9}, {3.83233468235277*^9, 3.832334683007225*^9}, {
   3.8323696331148987`*^9, 3.8323696337365355`*^9}, {3.8323700042242556`*^9, 
   3.832370026003986*^9}, {3.8323701512921476`*^9, 3.8323702960196366`*^9}, {
   3.8324082388762913`*^9, 3.8324082448644094`*^9}, {3.8328010964159756`*^9, 
   3.8328010972552977`*^9}, {3.8328880955047293`*^9, 
   3.8328881056525197`*^9}, {3.8333273355576224`*^9, 3.833327393907683*^9}, {
   3.8333280530002775`*^9, 3.833328053746929*^9}, {3.833412071572592*^9, 
   3.833412077478315*^9}, {3.8334469770006247`*^9, 3.833447013624609*^9}, {
   3.833448848587971*^9, 3.8334488517528534`*^9}, {3.833535526756957*^9, 
   3.8335355367441006`*^9}, {3.83353574579655*^9, 3.8335358213297186`*^9}, {
   3.8335358582380733`*^9, 3.8335359065139694`*^9}, {3.8335360463314433`*^9, 
   3.8335360836378264`*^9}, {3.833536118707966*^9, 3.8335361224347525`*^9}, {
   3.8335856735031157`*^9, 3.833585739697442*^9}, {3.8335858010118504`*^9, 
   3.833585801510857*^9}, {3.8358069048170652`*^9, 3.8358069061418324`*^9}, {
   3.8359529852459373`*^9, 3.835952985555745*^9}, {3.838119520446247*^9, 
   3.8381195279826684`*^9}, {3.8460207140472884`*^9, 
   3.8460207246924686`*^9}, {3.8460644756920424`*^9, 
   3.8460644770071507`*^9}, {3.84606458778082*^9, 3.846064592568492*^9}, {
   3.846064776823372*^9, 3.8460647867122765`*^9}, {3.8461015359621954`*^9, 
   3.8461015708032537`*^9}, {3.846101714686349*^9, 3.846101715337779*^9}},
 CellLabel->
  "In[399]:=",ExpressionUUID->"c561c30a-53de-4422-8bda-28167131a414"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gjRand", "=", "True"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"True", " ", "=", " ", 
    RowBox[{
    "give", " ", "each", " ", "cell", " ", "a", " ", "random", " ", "GJ", " ",
      "parameter", " ", "the", " ", "tissue", " ", 
     RowBox[{"model", ".", " ", "Value"}], " ", "for", " ", "a", " ", 
     "border", " ", "determined", " ", "by", " ", "smallest", " ", "value", 
     " ", "of", " ", "the", " ", "two", " ", "cells", " ", "that", " ", 
     "share", " ", "that", " ", "border"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]GJ", "=", ".4"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "\[Sigma]", " ", "parameter", " ", "for", " ", "GJ", " ", "randomness"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gjPolarize", "=", "False"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"True", " ", "=", " ", 
     RowBox[{
     "multiply", " ", "GJ", " ", "params", " ", "by", " ", "sin\[Theta]"}]}], 
    ",", " ", 
    RowBox[{
    "where", " ", "\[Theta]", " ", "is", " ", "the", " ", "angle", " ", 
     "between", " ", "the", " ", "radial", " ", "vector", " ", "to", " ", "a",
      " ", "cell", " ", "edge", " ", "and", " ", "the", " ", "direction", " ",
      "of", " ", "the", " ", "cell", " ", "edge"}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gcampRand", "=", "True"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"True", " ", "=", " ", 
    RowBox[{
    "randomize", " ", "the", " ", "amount", " ", "of", " ", "GCaMP", " ", 
     "in", " ", "each", " ", 
     RowBox[{"cell", ".", " ", "The"}], " ", "random", " ", "scale", " ", 
     "will", " ", "also", " ", "scale", " ", "the", " ", "fluorescence", " ", 
     "values", " ", "of", " ", "the", " ", "model", " ", "output"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]gcamp", "=", ".1"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "\[Sigma]", " ", "parameter", " ", "for", " ", "gcamp", " ", 
    "randomizer"}], "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plcRand", "=", "False"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"True", " ", "=", " ", 
    RowBox[{"randomize", " ", "PLC", " ", 
     RowBox[{"(", 
      RowBox[{"parameter", " ", "\[Alpha]"}], ")"}], " ", "between", " ", 
     "cells"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"varPLC", "=", ".225"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "standard", " ", "deviation", " ", "for", " ", "PLC", " ", "randomizer"}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"connectAblated", "=", "0.015"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "parameter", " ", "to", " ", "connect", " ", "the", " ", "ablated", " ", 
     "region", " ", "to", " ", "the", " ", "rest", " ", "of", " ", "the", " ", 
     RowBox[{"tissue", ".", " ", "The"}], " ", "range", " ", "can", " ", "be",
      " ", "1", " ", 
     RowBox[{"(", 
      RowBox[{"full", " ", "connection"}], ")"}], " ", "to", " ", "0", " ", 
     RowBox[{"(", 
      RowBox[{"no", " ", "connection"}], ")"}]}], "*)"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"connectAblated", "=."}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.827179364005952*^9, 3.8271793874442997`*^9}, {
   3.8271805206337786`*^9, 3.827180522920491*^9}, {3.8271826943333845`*^9, 
   3.827182699387295*^9}, {3.827242903629511*^9, 3.8272429091104593`*^9}, {
   3.827358198836939*^9, 3.827358201665182*^9}, {3.8286131306548767`*^9, 
   3.8286131358358107`*^9}, {3.828614107548217*^9, 3.8286141079457483`*^9}, {
   3.82861532938661*^9, 3.8286153306630793`*^9}, {3.8286155217394276`*^9, 
   3.828615522104452*^9}, {3.8291257093025637`*^9, 3.8291257107616467`*^9}, {
   3.829345105269735*^9, 3.8293451112049875`*^9}, {3.8297783027246456`*^9, 
   3.8297783040396433`*^9}, {3.830601021843954*^9, 3.830601023517907*^9}, {
   3.830943914853161*^9, 3.8309440467628264`*^9}, {3.830944137793647*^9, 
   3.8309441881772747`*^9}, {3.830991825192729*^9, 3.8309918469699893`*^9}, {
   3.831730714236368*^9, 3.8317307900306883`*^9}, {3.831735364315231*^9, 
   3.831735364517955*^9}, {3.8322054569935813`*^9, 3.8322055333666453`*^9}, {
   3.83220563584507*^9, 3.8322056427360487`*^9}, {3.8322056872406645`*^9, 
   3.832205695436123*^9}, {3.832205729080778*^9, 3.832205734836997*^9}, {
   3.832205829781869*^9, 3.832205831295498*^9}, {3.83220596708339*^9, 
   3.8322062401184072`*^9}, {3.832206279993104*^9, 3.832206413419774*^9}, 
   3.832321905955312*^9, {3.8323225139465356`*^9, 3.8323225337338743`*^9}, {
   3.832334314848716*^9, 3.8323343308024244`*^9}, {3.8323344798873425`*^9, 
   3.832334496838752*^9}, {3.83233468235277*^9, 3.832334683007225*^9}, {
   3.8323696331148987`*^9, 3.8323696337365355`*^9}, {3.8323700042242556`*^9, 
   3.832370026003986*^9}, {3.8323701512921476`*^9, 3.8323702960196366`*^9}, {
   3.8324082388762913`*^9, 3.8324082448644094`*^9}, {3.8328010964159756`*^9, 
   3.8328010972552977`*^9}, {3.8328880955047293`*^9, 
   3.8328881056525197`*^9}, {3.8333273355576224`*^9, 3.833327393907683*^9}, {
   3.8333280530002775`*^9, 3.833328053746929*^9}, {3.833412071572592*^9, 
   3.833412077478315*^9}, {3.8334469770006247`*^9, 3.833447013624609*^9}, {
   3.833448848587971*^9, 3.8334488517528534`*^9}, {3.833535526756957*^9, 
   3.8335355367441006`*^9}, {3.83353574579655*^9, 3.8335358213297186`*^9}, {
   3.8335358582380733`*^9, 3.8335359065139694`*^9}, {3.8335360463314433`*^9, 
   3.8335360836378264`*^9}, {3.833536118707966*^9, 3.8335361224347525`*^9}, {
   3.8335856735031157`*^9, 3.833585739697442*^9}, {3.8335858010118504`*^9, 
   3.833585801510857*^9}, {3.8358069048170652`*^9, 3.8358069061418324`*^9}, {
   3.8359529852459373`*^9, 3.835952985555745*^9}, {3.838119520446247*^9, 
   3.8381195279826684`*^9}, {3.8460207140472884`*^9, 
   3.8460207246924686`*^9}, {3.84784210366005*^9, 3.847842105505391*^9}, 
   3.8481038006421633`*^9, 3.852154969446376*^9, {3.852197725247239*^9, 
   3.8521977357895827`*^9}, {3.8522050830350623`*^9, 3.852205095992342*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"b0159073-58e3-4a89-bfa9-39571f82de8f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mesh", "Chapter",
 CellChangeTimes->{{3.8226599075851936`*^9, 
  3.822659908096011*^9}},ExpressionUUID->"954129e0-1d0e-483e-b0c3-\
14bb3c996171"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"mesh", "=", 
  RowBox[{
  "Import", "[", 
   "\"\<C:\\\\Users\\\\Greg Stevens\\\\Box\\\\Research Backup\\\\Current Work\
\\\\Older Calcium Modeling and Misc\\\\mesh_4826cells_450x450.m\>\"", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"meshRatio", "=", "1."}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"mesh", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
       "Import", "[", 
        "\"\<C:\\\\Users\\\\Greg Stevens\\\\Box\\\\Research Backup\\\\Current \
Work\\\\Older Calcium Modeling and Misc\\\\mesh_100cells_450x450.m\>\"", 
        "]"}], "\[IndentingNewLine]", "meshRatio"}], "=", ".143"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"Just", " ", "for", " ", "testing", " ", 
     RowBox[{"purposes", ".", " ", "This"}], " ", "ratio", " ", "takes", " ", 
     "the", " ", "100", " ", "cell", " ", "mesh", " ", "and", " ", "changes", 
     " ", "the", " ", "lengths", " ", "to", " ", "be", " ", "comparable", " ",
      "to", " ", "the", " ", "4826", " ", "cell", " ", "mesh"}], "*)"}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.739621047277499*^9, 3.7396210862113266`*^9}, {
   3.739621516171378*^9, 3.7396215270716095`*^9}, {3.7396231420362487`*^9, 
   3.7396231423380613`*^9}, {3.7396232577494*^9, 3.7396232581221695`*^9}, {
   3.7397866816720877`*^9, 3.739786681931926*^9}, {3.740309095596455*^9, 
   3.7403090975832243`*^9}, {3.740309219624446*^9, 3.7403092205148926`*^9}, {
   3.7439230049245567`*^9, 3.743923011719336*^9}, 3.7439255061219854`*^9, {
   3.7559450748103423`*^9, 3.755945085796426*^9}, {3.755948700588379*^9, 
   3.755948708343642*^9}, {3.7559505913784027`*^9, 3.755950591663229*^9}, {
   3.7560486657395988`*^9, 3.756048672687342*^9}, {3.756051392365344*^9, 
   3.7560514022025604`*^9}, {3.7577606527660847`*^9, 
   3.7577606598556967`*^9}, {3.757766371201997*^9, 3.7577663772242656`*^9}, {
   3.758019174596737*^9, 3.7580191760618305`*^9}, {3.7580279944598103`*^9, 
   3.75802799730205*^9}, {3.8226599213418117`*^9, 3.822659988677163*^9}, {
   3.8237895408722878`*^9, 3.8237895628648596`*^9}, {3.823855663719519*^9, 
   3.823855686675416*^9}, {3.8238560323876524`*^9, 3.823856033821536*^9}, {
   3.82385654983352*^9, 3.8238565574427624`*^9}, {3.823860538172841*^9, 
   3.8238605394794726`*^9}, {3.824294012447626*^9, 3.824294045164238*^9}, {
   3.824378002009613*^9, 3.824378003332076*^9}, {3.824804554918685*^9, 
   3.8248045569903536`*^9}, {3.8260560007012205`*^9, 
   3.8260560075649085`*^9}, {3.8284377333566713`*^9, 3.828437741542472*^9}, {
   3.8284391859843435`*^9, 3.8284391922832336`*^9}, {3.828613779586338*^9, 
   3.8286137865115166`*^9}, {3.8286138447492485`*^9, 3.828613852637532*^9}, {
   3.830600810807991*^9, 3.8306008148577113`*^9}, {3.8306009324260116`*^9, 
   3.8306009395545816`*^9}, {3.8306015427194953`*^9, 3.830601549937025*^9}, {
   3.830857585537733*^9, 3.830857594929878*^9}, {3.8318050775196266`*^9, 
   3.8318050849720135`*^9}, {3.8320756251669416`*^9, 
   3.8320756317040014`*^9}, {3.8364339933477573`*^9, 
   3.8364340019488487`*^9}, {3.8364737380145025`*^9, 3.836473819039795*^9}, {
   3.836474040374346*^9, 3.8364740616391273`*^9}, {3.8365106591927795`*^9, 
   3.836510662145822*^9}, {3.837035493527646*^9, 3.837035499411827*^9}, {
   3.841394232553795*^9, 3.841394266297035*^9}, {3.8417780814656057`*^9, 
   3.8417780853734446`*^9}, {3.841864980717204*^9, 3.841864989595215*^9}, {
   3.847842507823306*^9, 3.847842511601962*^9}, {3.84784383541053*^9, 
   3.847843849372938*^9}, {3.8516371232396784`*^9, 3.8516371290957375`*^9}, {
   3.8521984334909334`*^9, 3.852198445741688*^9}, {3.853114732196967*^9, 
   3.8531147353903666`*^9}, {3.853532447216279*^9, 3.8535324510870085`*^9}, {
   3.85621451829817*^9, 3.8562145216177588`*^9}, {3.856214651770797*^9, 
   3.8562146590058565`*^9}, {3.857724336103386*^9, 3.8577243405316515`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"07c194d9-654f-4963-9878-a9e0ca658930"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     MeshRegion[CompressedData["
1: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
+r/r/9NT/+P/Xf/f/QL9/H/8/wDQIO5h
      "], {
       Polygon[{{9460, 3971, 9434}}], 
       Polygon[CompressedData["
1:eJwV0ltoz3EYx/HHcTaHTRg2O9loydJcOJUVckoyE005JTnMYc3hYg41ETnb
xYY0VlbLxIqUxQU53ciQcCFLuHGosRi54PW/+PR9P8/z/T6n3y9vbWXZtp4R
MZl60+wxEcuyI8b3iyjE42hJUsQBsRl4p9jcnIim5IhzKRHnCyK+8XWK1+Nn
NJX9u0fEKdzeN2KoxGP5VuRFlMix3PuKARFF+LQ7RWLr1XiK6xL5vFnX31v8
grbTfb4HzmneHPG+UL0JuFudEn18FZ+Ht/DdEn8kXz6eoOaGXDbl4AV8K3Ha
QCeuoGm9IlItoTwxK50dHJHNtxkvpulpWL2teCHlyVOcGjEHl7p3eZD3ct5X
9/boiN1UY+bi9Ii7en7vTjW7DV+nm8MiytjXcBNlDImoGm6HuIa+uN/Kd5RW
m6stKyIzM6JrVMTDERF7RkY05+uL74n7c+2v0b6O4TvU6N1zNVL0N4au2ssn
moUvic80X7XzA72ltWbfZR9p4vfYr9V/Rc14L9/roRFT6GLiezkL5D+u/xRz
1vIt1Vepu1dwCy3C//TXjH/h2j7+LfZP3EXZ+p9uph/4oDsnxA/jVnyTkmmI
mXY6v/Kf0e8kPb7EnxM5/Dur9PcF73Lno1nTqBpX0Tvfp4P24z/uNGREPFbz
L87k69R3i/rd7Cx2uT3W2ut3dgfN922b6A1OF68zX4d4Ep5IuXadroeN+AK1
y1dPDYl/k/aZdY16h3El7dDLJPYhvCnxT/qXTsp9A/8HEWSIYA==
        "]], 
       Polygon[CompressedData["
1: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
yt8vZ4mcsWsW5/yc96/Oe1+Y+9huZdsu9wv2YfGP5Fkl4z/PNjmf5H2JdtfD
fGDO3Qk/hn4M//A8w2TupD7yruRDcp/4OmZ8y/93znl8D+f5A+/Hty/MRPpu
8izJu1yYwfi+OUfhe2i/GdvWcvwO8wLsm+pYkL8d5hkGP9SYeTPzBeZbfKC8
l/I9KK5y5lzOEHnGIP+An8P/d/42he/H1oj/NXnmoHFpDzUQez7/p3CfoAui
o6niP8hcIr8ndmTuMdyh6KiML/V9kn5AI+R5XWyL7L8ZF+hN9JX411Ht9E/2
KHFj8J/F1M9YkaNOnk3E9UadXN9WrYvzWs5tdTafeTKnMrfKYP7STpm4L2F6
5zyV8Y2+Yv8dXbt5rGbMrtL2TeI6iqulxv7sn6HX0g/yr8h6K9fRbFPxyWid
mPL8P6V/1POTnPNzpsizMtxbeT+YMwf57cRk/NEvgPlNW9XJO6N9sn/WKPaK
7Bmn06+B2UctE7PeidsNriv+VO57nj1gTzZWxye+QvE8n+f65+F/t+z0aV3s
4dnLz0Vb5BlHviX5W1bGENy2bOW09WSusdX/L1UlLcT1gf81Z1zy/TBf4Kdm
H8geIX4q26/a/1yO09XZnX9XMR9bI9vCzGIvw1fkTMH+Bd5A8rfyjADfQx35
IUqe7fKMt7V8H8C8jz6Kn28m28f0t5JDrun0x+RdKt91WV/Ra+JH4d+LGZy1
WN5jcl52fTtaeyuYj+/qzzn0h9DTHkBvpg+sKBf9CXQceRN703rmBv14fBX9
XLjqrucW/BaYFh5YB+qf7eylDejH1Hfv7K874KvFbGho/RK/gzZvq1u0lTb/
5PtEjaWwe6Pj4fvi3+BT5WyAr8P3UO8KMevkeY/tb/ICuIViL+JfIM/p9JPV
cwp6i30j2wvoevjrUFUxS8UfgR+IzxfXAv8Bv0FsefxCtT/JNhX+abZq4j1S
lzzLVx/dnL9Js22jnlr8HeSagTd3XQ+Qh+RM5fo+Ic/M3xPgD4Kfhr9Cfxgt
UdtL2jiE/ZH8DUxbneXYU/7X2I8iX67N19kP1c5i+Z4RX4d9kbxX5/5oZwz9
Cvjf0V7ofPS/vDfJvYdZBFNPjnJwL+fZV+wXcn2b5yC22nwT6Gv4zuB7hO0H
tg/zPK7dVXAH0QfwDUT7oJFq/EbdK/nuhO+Rulz7LHnm0JfDvw8zRY7L2fbl
64aGse2H94fZXcwI/HzYI8k7q/tYOd+lT9fG2/SZ6Fe+BuLOYz+dfgpfM3G3
k8dnDPL3zNjLO1ljcRc5DkXDtL0Mrjp5KnqK/DhbH9d0H9xx5IPJo7ImyXU3
f0u1jVDvH/Ier82H0E+ucRv8Vv4K2vmD/zj5JuPPiW+iroF8T7NVJt9O3gfu
a3m7sFWQe2+4SRnrbGvoleWrxNcS7gX6TvTryd+I3Zf9M21Oxx+Vb1nDYnxk
nBxJnptxRP8YZkzGoJjJ6A7yDPYT5emHBhg7T2b+yvG2Wsfhu6ujCnqK/QO2
D9F94l6l982YJbfXj7elr9BzGatyPa/2F9B0+ivaPVCOv9jvE3Nczs98teSf
h3/Mvi73XPs3krdnb5Ga+HZwnceKmcv/d9ZV9+F2tmv4yru2S+DezjjMmJB3
lXq68n+atZuvS/oarow8m/8q8oC8s6EfmXWT7RIx+7MfzrabvHuwHSTHr3nu
EN+P3JhtR/wfuNbwo7X5ZOYx+cP8po7+P/5d5OieOYAfJtcG9CvfAfIMh1+f
syX5IHnOhqmLrqHvR2/atljXspYNxOfh77E9hneRZ080jH0kPon9HrRYvovp
7eoX9zj3unbF4p7m3h4t7/qMf7X9mT4W0w92OXkbvBv8FLbv+d/EL0T7ib2N
3g3vKHaMHJ/CbcX3h2v5jW0317gr/1C++9gPMw9uZX8RvYT6o/OznvOdJNcX
+G3qaZT7C7sP2zP0Duw7p6/lWSjmDfo8NDK1si9FvTK2YHuJvbhtsTZmjXxc
/e3pq/HeWcfIS+BH4r/gV+CzMs75SmHaojPEHst2Ar639sqy9ri2jm2LsZ85
0KRisX9lH3ud/Z/0t9jn1dQka0PaYWvsOtazXQC7Mv1KP5B/dd5Z4IexvZh+
RePg72d/Ti2VMi7E1JfzQJjntfO9+/hl22KOZa7tBfOoHGuzDmfNaFzsBy1h
HhT7bMNibziaPjp7Evwy2PtRDbiP8V3QYc7qu/LfKmcz+t5inlPP0/TmYiZk
H1LXDJhP5FpAvwzmn5zXMs4336fcr38rFPtw9uMVMA+ln/EytbVjfyf7D70r
fS/0Vq4fdrrYgxsV60LWh+tQlYwR9WyHvtfOWDSE/7eMFXS52Jn442ha/WK/
yL7REy1Txwj2u9kurV+cOXL2eEnNY7I+0h+FG5uxpY4ftNVS/mqePbuggXWL
uZ81YDAMeMkgvKlcH8j9DuwY+bfOWsH2Mt9lYhZae2aSR2XeoRlwvfg7wG2A
v7Ft0XZqqFexuKe5t9vzT8zf/tXRHnWBm6rPx7PNyrjMHkoei97LM7+8S9Au
cC+Jv4J9UsWiH9Of5fX1DnxDxW7P3sg1/iZfDfb/yXWr9iazv4wmsDflXyT2
OfhHXUfNnF3kX5Nx37A4X0zbPKZyvss5bzZ6Ti2r2duxPUrvnX1Yvu+1MSh5
Nu8D2Q/uytjDZ9Hbw60UdzZMP7GnqfU8/f43/9UNizmSuZKcyd2nfrEuZH3I
fpF94+u6RfupoxP8qXCviZlMnq2Gpe7Zna5pLOpHX2QNXuL+HGq8f4avFnt7
+ljuDfgv6IWsH2gh+S/2jWoZhNbALs9YQvkB93j+r8kfq3uS9k6G+ZftnUbF
2eiRnIlyLqtfnJN+4F8B+zrbV+S1anov+0LOKFnT8IpsK2Fnou/QF9p8F+YY
/m6ubaG4i8g/Zi9D1+VvAfyv5ewp9zs5H9A7q28o/rb4Mnl6ivsCpgr/BjH1
6Y21VZO+E395sfPR2+hKcTPlfjDn28xN9Dvc7Tkf5/mJryPfdto4Ou+d00/0
7/iXwK3OPiOmAVunzEO2OdrcCr8J9cgeyreYPEgN9XLmhKsn3z3kLfBRapqj
rWk5a8N9gk/PORW/OT+Cznk/+wzfFDkWorlid8zeCNNWX12d8zL6AeaWnP3Y
J9LX0M+BO0ZMBfxv+jy+Bfn7Kf0n+s/khmr8QDsH49XFn7l5Lc6aPB5uQuZd
zrJs1+a61bUW9kW8Tc4X/D+LPzXv6XJf85vmnKH5eqKN4mqJa4zegXmG72+4
yewVsr9n/0FH5UzCths6gv1J2P2y92ffyzXJ+x36pmJxn3K/8syVZ69v4b7O
eb20OKNsoV8q6t/VDYvzSjfYf8n/8R2fv4PKU8b/a86ROdfnPYo+ezdzU+6J
OWOlXfJi9orm0K1quiNrBt+H5HZ5nqJ/JO9LcIeQa4s/l68Oap3zTe6j+Cn8
DbRXHzVEb+R9phr7id2X/462xXNInkd2ZZ/GXkO+n8WV08599Lf4tsuegg/O
34PEDcfL4XPxtfhdcGfBtBZ3Vt5daGtI1ia+euz12xZzOnN7Rtbw7BFwLbXZ
VXuPZJ62LfCJe4Hv+jxHsNdgey3zUD2z9NdnFYs5kblxDuohx01tiufS7IvZ
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
gfxUg6KW1DQoe6Mx+Ll8W1oDh9EPww/PmQamD8yKvM9i/6xe8R42fZE+ybUk
T/K9kN/O0oeUFX97yt+gGvBdVVZQ5K9gmrFfmfuYMZ5zM/tSdV1dVvRr+jd/
t0qO5Oqc95owb+Z9e/6GRb6OfZNc7egd5biLPq2sOHfk/DHB/RtD3+De3cE/
kV7Vet2SbYfKxbukvD+azrYIf4j9X3IHvttgb6D/InavnMWt92/nb9x574Au
ZBtNb2l/+B99BGzHnKFbFGeMnDWqop/oFeS8Q77fc4ZED2VPtZ8MRP/Sy+Qe
yD+L/YM8O+E3i61IHipnT/z6sqLt1HA0fnfeYeC3sB/MfzDcEO3cRJ8t1zWJ
zXND3n/lPEZuLO+xeK08P7E9Xla8f8g7h0k5h5cV9aSumjnfi/2ztNj3sv9N
heuPP0gfXVY89+f5/3iYx+jly4qzfc7426PG9KaZI2zP0+/G/yst2kl7eSbJ
s8nYssIef+vmRd+mj+8sK56h8iz1P/z2jBU1HYYe3tyH6cty7D2bFmeMnCs2
iS1he4uvV2nhC6Zi9rimxbNH6ky9yZnceaeR68l1rePfRg099fX++qFji2Ic
ZTzleS41pbaTKhXvfvK+ZyzaHvYANJ59PH0cyuvpWnk/l3cH9MnoKDkqid/L
dT3ToqgptZXB/K7tV9lOkWNJk+Jd2Fj+b9Xyxub3Yumv9Fue7drBT6FXydyH
aZjryDs0vEGuT5692hXjMOMx62zW2/x2Letg1sPVpcX3AflOIGtt1tzMpcyp
To2L+Zl5OgHVIJ/dtlgDshZkfco6dXqjYh3Mepj5n3Ugv2XJ71fuLyvuSe5N
zn6pKbWl7tSf93F5Bze1rBgzGTt555f3fI3KivGWcZfni8ztzPEmuZd5FmpR
jK+Ms3mbrz3PzHl2rlxWzPXM+Txf/P8zRVkxVjNmV+X9DfvMsuKMlTNEzhLZ
17O/r0UnWXPPy+8AXc8PpcU+mv00v2/9ZfMe8w3qkW8Q7GX18vvqsmIvzJ7Y
TT+fBvt5abH/ZB96tk6BT1wd2Lr5fWzNYm/OHp12/r8996mm2FX0P7LH5bmj
SXHduf4KaLn6b2pejPWM+bmb14beTYvxlXGWPkxf5t1p8InLnpm9867axX6d
fTt1p/45dYqaUlv22+y7+c1/9tzsvU+WFd/M5NuZCey9y4rfbef32/m2Jr5g
jst8Vf+c2sXvLfO7y6FocH670LjYl7I/ZXxknOT3Tj+Jn1RW7A3ZI95tVKzx
WevvLiv+zp+/9ydHcmWfyn71e91ibGaM3oi666NexszL+mB6WXGPc68/htkF
v43+9Ob1JGtI1uXn6Y+g9+lvNCvW36zDGZd9N78rzlqbNTfrcdblrEXJkVzJ
mdxPoqPluKOsuJZcU36vkNpzDaknde1fWrSVNv8P5mvU/A==
        "]], 
       Polygon[CompressedData["
1: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
cXxFX9947ip/UG8Kz5gPfZsXZ61nbu+8wE3UI9UntbeelshW8hH5ifZX98qo
BAcQD+hZE3vHs2tiIt9cRH9nF8RZ9mRNnOWe3crmd6sbMqZLxU+UPcVmGevz
ysjk3yNOmwr94PfkHTsre+aGPVm7snqG+sbXuSEnK3+1TM4QzxJlz2cJT+f9
/82L/eE+GZAOHE7ZUxn0Y/p6OytwuSMoa0P948XA8mKvumcLcwNHFk9uT5tG
5J1UELYA95/78E/yTigI20Afx8J4c5WD6XuT5wH5z/HcQ8jPzw9MV2w3j3gB
NC3RZdRpriM9Q7yF8H7qtSc+TNyWfn+SX+fH+nSdzqS/dp7H1PsGei8r1qBr
8X51Xd6nIj+wIjEjcWjxK3GsCYy9YX7gneKA4oG9lUuhCYXxjr6r6911f537
iDE0If0p4XW07+6cKLMXBJYupp6GviO+nX35Cv1szQ39Sj3rgtyYQ3WTmmQf
2b/PaVgT56fn6MXJWteuIhYldt80eU6H/MCm1tL/3TXBj+RLB5L3F/ST8qLn
UWHIh8qJ7xD/jrn4x7knvjf1noQaEz8uHXhxbir4rXxXPFI8fB55HUjvkR/n
iefK+dCexLdVx/f1O3fOD5lW2dZ95H5SllV/FScbSd298gKXEp8SN7uPZ3+f
H3KV8pU69jfk9xe74Bkb5PnyIdp+Cn2bCl1L3eo3yu6Vv6fizOyU4L9d6a97
fpyhc1OBS+2f8EJ5ojKqMkOP5Fv4TdSBr3auPVfzw56lXese+tiVvId9VzET
ZVrfh7wjCf8lrMgNnUnd6XOedT9tDiT/LMZ5J2UDyf+PvL7KzeR97RjEL2lz
JvGXoXcZ98meA4SfKcNQflJh6KaP0mZQfvRpH+qq66DGyppQE+gp9w/PHpUb
fEJ+IW/UXqV9St1ZHfoY+jw8P/af+/Bl8s/Ii3fxneRDRyUymr4v+rocriya
HzLbUHmaZ744ZSr8SvQvaSIWRPgJ6a/p4wXqDYeehF7ybJc3UH+iuCF9vknd
OQUhyyrTnqVNkTqjoA7pwB3EH9oRn62OlB8yn/KZcppYcJVyRlbgBMpmymjq
FFfQ73BodirkodHJGX0Izzw9P3RqdWvxLHGtG6vjrPLM+p52O0GPQFuqAzu5
ARpH2Y3Qb6nAUqbnx7fzG7am/AzCCc1DBz29JmRjZeQL80IndW4Og86Vn8qr
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
bZVx1Q28P3E0fX1B27tT4Zeuf3pNddzD8t7VnZ7Z6bgv5b0pn+mzHbO6lbK4
Mrkye02CUeuboE/wiwkvlGFoq1NHlQfIC9Q91EGUU5VXxTrFPL3f/1R1YPFi
8i9od3H9F4SOrU6tP5Q4jriNert+K+K58gf5hDrh0kSmX5WsB9eFthbt4+Lk
4uX6tLluXb/Wt1ysVrxF3MU7DPpBLEvwETEzsTPtdeJyy5M159rTR1RfUX0I
9CUQrxKf0nalT6IyobqSOpPYiFizMqJYkfcavd/4iWs0HdiRmJdr2LH7Duoj
2ib61gSfk9/ph+7djQ3V4WPen7LH8sN+p21HG0/jZC+7p8UAlauUoza4hqk/
lXrPqvuTvjA/7kFoJ9BeILYtxq1/a1V13D/Ut00fN0G7V1Nx90gdWN4pD9Xv
y7tIYpzfEu9YHditGK6Yp/eWvL+kfVo7tT473kvxPtqt5HXJjbus3mn1fpp3
XK5PxW8MKEsqU3rnRXlDfxF94b07oZ1F+WN5QZzf8iK/rd9Y/8WtyX5yX9m/
z/EOpjYJbRP6cGpL0aaiz5h319wz/7tjVBB+JN5lU1/3DqJ3EdcyrvmJ/i5e
6Z3Wf5O14JqQ/3ifxjsDOxJepDyjXDO8MH6XQTu69nTPa5nQbllxz8P7Ht5h
eZxnbZf38JzO1XFn1uf4vAWJfUWMXz81/dK846u9RaxIXV3d/OxEh1KXEs9Q
/xcH0C/Ys8QzRWw/LzmjvCvn3b+FqfhdC/2OtD9ph5IPyA+8l6tNUNugtjRt
amXpIOPa2bznoz6kXlSfvPPpc3ODuFMsxijWeGqLkL2VwcWh9lKebRE2fm39
rjPXm5i72Lt38cS4xbT1+dCHW19u7wzqpyyeLq6u36j3vvRF9Qz2zJXPy+/1
79Bu3pOyo1MhizdP7Oj9EvuLdhj9DvQ/GJ3Y3bSzeY56nqqvqLdMyI07md7B
1BdAn4BW6cBgxDbbJHaZDgkms4dzonxQHXe4vLN1C23bVwduJX7l3S3xXXHe
9yXmq646/Nb0X2ubDh8gMVPPKc8rsRQxFf1n9JfxfqR+MfrH6FvqHTLlIOUh
f4PE3yLxTpnypFj/fum4q61srHzZi/C46vhdlP1TYW/U7ujd3Pvp55R02He0
83hX917tJ7lxN8c7Oi+qt6ZDbvmfb306bMxia8ox2rW9oygmJTblHW3t3OpN
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
EXzoNddGSfjk6pvredoxE/qjeqS+X56vhbWB7c5PvpHfZEN2yJj65uqLO1ad
vTRkTrFHMVAxT2UFZQaxyCdKQ65UvhxH+knXSVHMsXvPvabtYXoy58qcyp7q
z+rRYkkL5TGuc/ocWhL71P2qrOzZsm9RyCvKLepPnjXqNeox+ifqj/gg8edL
Q1ZWZlZ+VY6VX8o3faZz6xx79ngGOQb/Fq1/k7YkO85qz2xt9pcT7pUd68N1
oi+OPjn3J/PrPLtP3C/qyK7xHZmwG4nLic+55vWp6ZcJHyfXs+taW8I7peFP
rF+x68L1oS3m/dLA4sXe/Zu6+mPol6FtZDDzvDTZD+4LbSXaw7WL61OjDVxb
+LKEb7yeCVlFmUUdTD6i764+vB8Qfp4J/UM9ZCVhlnpQaZxrnm8vU2d5gzj3
1iZ8Uj8U/VH0F9U/dLh7hmevJnw8E7Li2rLAzMTOxMSUHfXn0X/Hc9hzV1xq
XcL/5IPq5cpTyiPKJZ3K4o6A/uL6jesrqc9kQSp4t7zas/l00t1Lw+e9a3lg
9uqH6on6wCtHKTeJWevjqX+Hfh5FOYGlip3q/6EfyA7t8SWh0ym3KL+IB+rb
pg+JOoAyv35Q2o+0I2kn1S4q3qxOom7yR03gVFuT9ey6blEWuNUt6v6lcYfA
uwTDeW46E374+nbry63dQ/vHuQku6V0FMTOxs//51lGeTV+XUP4f+S3o4yDP
x9LAZMRmlDWUB5QLtP3oV/NEJmyI4q3iLeIu+q2/Sfpo+nie+H814ce+LBOY
ixiLfqXaFbQjqJ++WBr6lfJkXqKv6nslbi1+rQ+BNmdtz/pd6Geh36T+k95T
8L5CTnnc3/Aeh3Ka8prY1pHQ/vQ1leeXE9/NMWVCF9FXXsxQ7PDwRDfRpjyu
OHwR9EnQ/04b81XQTsqaZeFzJfYiBqPt951MyGDKYuKy2oKblgW/l+8rtyi/
6GOk796etXF2eIZoK9Bm8Hdx6H7qer6LYxefm0Mfc6FrHQdr8/2y8AXSl1Ys
rHmyN9wj+ta6LhaXxHv6vrsm68Qz3rN+t7LADcQPXlMGzIn7LUuTOzbetfms
Ju7EfJIJu4oyr3Pq3Crzqn+rhzsPeyYy8F5lwXPlsfbvc0aUhf6p7KiseGVx
4Lrqo+3VuzKBkYqV6ge6NhPnqeenvnX62G0mr6A2fPK9E9I52cfuZ330/+dH
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
em5AbaHb1T/p61vxCt7xJuUk+vuJNg/YXt5IHyNot5q8JYQHUP6dmAdzeVJF
rHnXfnVypnm2fUzdPenvdNLLlQmo35x+LqB9U+Z5N543rjZwHvEe98qrlDep
CN7yX7J3Uglfk78NFzegbDPprMrgB/IF5TXltrnK09TJIf5nTvAYec1Y6vSF
bqyLeXQ+l9NmBM+90DWgHZ7yvMrAgHITWaxT/Tj3POfUcZTNCitDPlJO+pk2
add8vcAklO2U5YqJ31MbGIV73T3pHmymPlMRe/8Mz37XNfFGxKdQt4w6Fc4P
z82irEKZSBmd+PmUDyP8wbPYNuS3qAoe3yIVWJfrwPUgz29CvINnKOmDaXcl
8bPFeJiX6Z5HxI8ib2fqLaLPfevH9/M7ysvECsUM76BsKc/Z4Hcgb3dlVc8D
ZZt6wdv8Tn4vzwD1CHmfvG4mz9ilMvQKdcf65DWg7aKK4KHy0udJ39Uo9Cn1
Kvv2GZ7Fv5D/TUXsC/eHZ/NV0KXw86/J30T5WOq3oWxneSPPeIv0gcRLoVHu
mfKQLeTV8mxxFfEV10+adDuxo3px3rie3nd8dSFjKmtuos4Q51I+S9lX0CUN
Yk+7tztBl1C/IXP0Os+6jfgy6HTSa1kD89TfeJfzXGPkbaXdQ84J1Kph7DP3
2yc+R/yjMnidvG0leVM8b3NCZ1R37Mt4e5LXuzJ0fnV896J78uyGwbPkXZ3p
60DyttDuCnElxvC942Mc7flO2xyLsiX5i8ifSd03ld/Efehnmm0J+1cGj5BX
NGJOHlHup87mRJ9Xrx/genev8Zwp5aFfq2f/JI4lL1aHrhdz61ye5rlZG+eM
500bxlDlGnFefI7yGvG96a+Qsa5zL5eHjKysrK6sziy2fHZF8Dn5nbLrUOg1
90H9OEM8Sz7MCZxHvOfYypCdlKF+hfbiGavLQ3frKoZOWQ7ttlSGLldPXl8e
eIP4gljtsY1ivbm+DiLcU1mFfk4kPJL3Pbky5E7lz8uVSdWb5c225T2H14sz
27NbnebIijgP1ifrzXX3HfV7EN5J+VTPRMo7Eh/j+MX11PsqQgdUFzyRvEnU
+5j4LMdJfC55rxHe45kJ/arcoOxWG/KY8td+pKcoB1L+AOm+vEc/MTXSA+uF
vKHccRPUqSpkB2UIz1PP1W7UWU79yzzr6fdK+Y3nGvkfUN67UejA6sKzamMt
n0D5FjH6+oGPuLYPdX/STx7pS4kfQLxtcgaWJ/LZt8qGyZm4pi5kC2UJ9RR1
e3X8DtStT78j6OcIsUz6voo6PVzzYo3Ex1P/IW0kxK+rDGxNjE2dSt3q1IaB
uea71pN94H4Qg20LHS9WRL1HakMHUBdQR1CuVL70nPK8Ui5XXs5rHBiYcoby
hvKzMvhYMWUxJso7NA6ZXPnqfWVk5ZeqwI2Vt/4lfqfnGvnLGsZedc9+5Lnj
fJC3HTqLZ+7jGqbd3ZVhi9Am4b50f55D/hGE91YGliCm8CVURJ2n6kLeVu7u
Tfxa1xDpZdp/tb+JBZLeTF91rp+q0BnVHe8j3kLdjjZ7OpeE/8iToXeo83Cy
bl2/vShfpUwvf+M5b9SLNehafBza31D+5v6Sv7reqdOSunXM0xcJvitOKl56
Ic++pjzWtet7B89+Sj5BfLpnFW1vgJ6HniZ/OPUXEb4KTaDaseKUzgPhyZSd
Aj1bGXqs+uyd4hI5cQ57HmfTT0PCOeoY+oxUBc4g3iDPkHespGwx4THqXITT
XavKN9SdwnO2U7df4xiDY2nF/L5fF7xLHvYF7WeoI6vjqP9Whcyr7Puj64bw
LcLl1LuasmriXevHWhMHFw8fkPBn1957lYGViI2IC4kPPZScR9oAxPz/Jv1+
ZZxPsz3HKgNrcp24XlZVxr5uUy8wBGV8ZX33uWtwDm3G1AveMytZk5dBF8lT
qkJWVDYU/7iNep3lI9BF9LGTfVJv30TXVbftQXiDsnRlnLE/iKFT/jnpverF
mbvas4ayNeLp5K0hvVQZIjlnhiQ8Vd6q7K0MoyzjN/XbillshPrSfnhd6PDq
8u/zjW5Qt6wIDELMoavyLPmdmeeDfAZjG0jYnnAR+VvlY8RfJmypruEe1z4g
/+IZg4n/xTtkNQ4dVl32x8qwaWnDOlCbAXQQdLfnpzykMtbYluRcmqwOrX5N
Pz+T14n0YcoztM+4dgmHQsOg/KrAGT5S5kueZd/iDivo4zfPcKiS9O+UdSTU
WVkcTjxuiHoZ8YsrAg8R//iDfv9KeIK8QdlzMX1NYDxf1gt7q7KoOtG7pN/m
2evIm90odKRt4qTM35+eleQVk9eY8veJ5zQMuV35fY6ydkVg2WJHYkgnUKe/
ejPP25AT9jHluacTeVK5UnxeG4k2EWVX5UnlyqK6wHV2SWRJda6mjcIGpy1O
e4b6vXq++JNnoWfi2dR9h/I7oVvJP5S8goqYK+dMPExcTB19Rl3I8crz5ZWh
s1dCVaTvJpzaKN7f9/0d2q1xyFrKXBPF3RuG3tqLfv4Ul1A2qQg9dkV5yDTK
MNquzmbemxF/vjxsbNrUMtBQ+60L/UY9x7PSM3MAbetIdyMsbxy4ofjhvpTt
4lrjOdmNQ29Vf93ftcCY+hK+qy9QZeBv4nA9q4LHX1cXMqyy7BENg+e/SNuJ
laEHKyMrK5+lrqMOrXzBM4po3wM6G+qf6Mbqws1pO1IZtlHImsqc6qm/KKcT
LiwPG7O2Zu1e2r+0J/9EP9srY013TL6Pe8K9oX49WFxRHtMovrnfXhnzs5zQ
t9Uv1DOUObvXDxuB8oRyhbq0OnWbBBsRI9Gm/h9texB+Cl3FuK4gLPPcJDy0
LmxZHepibI5R27e2LXnGrEbBc+Q94qYDkzlWllJ2EsMVy3XOtfWID4oTigGL
BWv7EbsSMxIjmkO7f7MCyxKLrXMeGwVfsm+foR6k3qN92T3n3ltZF7bxyQkP
cd5c39rKF/L8f+rF+e05/qAyHOGgyrCzaG/ZQ55AnRx5ifoi8VXkf1YVfEP+
oQ36UtLHV8XadI1qkxaLE5sQi1CnV2ZSdhIjWlYR55/noDK9mNEllSHPerZ4
xig/KkeeWBdryDUzqV7YJrRRaN/SzuW8OD8nUf65Mkqy1l3bfmu/rbiJcqBy
30jyL2gYNnJt5eIW4hfi8uLzm+ThFXEGexaPSfa6e15dvjXPGqXcR52GdaGf
qqe+UBs2APER9Wz17fHE65SBa0N3U4cTX3lN/Rw6L+G9zqVzOop63elz74rw
49Bvw/PBc0LZ33f0XV0T4ofqAreRN7syZDxlPe1IFyVnyK6U9eb5l5B+IyfO
lNWNQj5STloh/1Q/IPyCZz9bEdimeI9n+f+1dObxWk1rHKdz3teUhjO+Y5zz
nmN2yXRvyM14QzJHaDAlRJMkZCokM2WMSCJJZipDhswyZJ6JMqfMMtzvt2f9
sT5r77XXXnu/e6/1DL/n9+xXnf5OVcx55/4JjeGn6K+I2Y/zPPqdn2SGsuME
2i+gHsp9tqHvmbTfx5jvVwV2LFasLartOZ1zF9B+CduL6wN/FIccTF3Nsecb
g5MiN+Vx5X1D3OOiZM9dWR/4rPc8sT4wbjFtfXl9d/G50xoD/9LH1dfdwm+e
1wfmIa9Ffos2ofaCdsMzDWF3aX8ZGzNGNqk+8Dffje9C3d2a5tX49Jv9jTfV
hw+mL6auXFAfXBU5K3KU1J2fJVtE22Nqfdid2pm9fWf1sb5cZ+Jy4nNyBMQX
xBlm0/5aQ3AGpmnvav/R/iDn3KZsaQxOi9yWCfR7Sd+d+jT6LWS7i+Npe1PP
pNzJff9QG3iba9S1Kn64W33oPu0GY2PGyIwJqQvFl8STrjYOo5/MGIMZ+1y2
H6J9MvWqzjfKw/URHzaOLv4jDiRGKVb5SH3ECLVFtEm0F7QbjKGrh9XH3RsC
DxEX0e/QzxjfELiD+IPx/jXVAbRdwjkb10Zc0fjibHVXQ/jG+sjvce6nlGfY
vonjV9H/yqbAx8TJ9IX1ib+ilDnvAI4fSnnee2sK/NR55Hx6nP0X68Pm1/Y3
VimeJK70F9tTmsJG/SDZsdqzYvnjkg2gLSBeID6woiF0a9dkl2uff6uOrY11
6fo8h3oI9ZvKO8abqw/I/v+aQy+pn+TIfCwWXh8Yjr6BPoK6Vd6J/JPWhCuq
a41B6E9qw2vLK0uUKdpyyjJll3FS46XadspsfUvljPJG30UZPl9Mjv7PNcWa
d+2fKH5aE1wHuQ1yOORynNUYuMfY5njOPm+xCHGQT/x9TcF/kge1M/1vawrc
yfftezf2r25SR+m3yyWQU+Cadm3rxw9lvEfVpWyPVlayv7w+4k+d2f+R7QU1
wWEyHmVffepf0jMxPuO5u9cFdqb9ph23Hv06NId/nmecYasE1iPmo78uz0tO
oP64fvmK+uB9iav/zfaa1IMpr1UHzn4S9f3N4cPqy65P/WNdyMuhdWHja+sr
U5QtxzeH76GvsYH2C/dUpd9cH/G/U1KswJjBN7URJxRXF1//siE4THKZemsj
5eI+vJ8haX65dlxDxtWMr8m/kBv2Jsfrc2FfameK0bTTtuT8QRwfI+bO9t7u
c7xllYi9iemI7RjnOEkMgOf/SnXYydrLYuBi4eKBHyUMRyynkbbx9D+gPmwU
bZKm6vB19HmeqA9bv5jsvUtpX6sxsGHPa0xr1zUsVtyTer7nKeu1ibjG21UR
l5dLJHdIXo6Yo9jjVTXBmZI7ZexbjECsYFP6TasL+1U79ifK5r6b5niXvrvj
mkPfqneVPXPYH1YXOkKdoCzSNmxsDlxcHFx/VVtRvKU1XcNrXes6oP61Jjge
+vT69vIf5FX1qg7cX/zfZ+87qBG/wx5aVh/Ymhib2LcYuJiZPuxWyXbcuz4w
NPlCM1KMVPtSe0q76pKa4BrKLXxMe9bf2hgYqrpW3aovoU8hpmrMf0fjP7UR
nzNOJwdAvEfcRyzSeM1K/08Zpfyqjni18el+lOvp0539QnPgiuIO4g/GHOUy
vFwdXDDliXJFboPzcNe6wGnFa40LOC/lyYij7570yO2NwZuR5/kJ51R4Hnux
v2dD8D7/aQw9qb6U02fs1BiqmIvYy8NpDjmXrmgMjuft9PuwMXhydyc/U2xg
EPe6P9t9ObZVJrCCAxuCGyEXQl6t/NqljWEDaqdrr6sD1YXahPInD24I+1F7
cWhD8CnlsLk2XAvKCGWFnLZ7vR7j7E3/BvUoY3doDG7j303xfH3O8gHkOiqT
5tWFz63vLY9DGTWS7Z/Y7t8Yc8S5or8hV1D7WhtUW1Q8Wu6gWJyY3PJk/yiz
xCnWz8Vv75t8A32EXSlz5IK6Xqoipmtstw3tP1Kf0BA8Uvmk4qbip3JM3kz6
T3nlPXqvBfnCDSHPzkl6Unv2a2Ur2630Gd4QMRljM2dWBz9CnsT8xrCDtIdG
Up/LtSZR1skEP1me8qeNIQtc++KF8ljks6xfHXFN45trsz9O24DSXk51LvjQ
8qLFu8S9nqsJbFOM81fvg/qqusBE5e/I4xGDEIsQIxVfv5Myui54PvqK+oza
V9pM2khiDGIN2lv9qwO/cAzHGpfO1beTJ6fOVHc+n3y9e8zpotTJp6BcSFs5
E1icmKAY4LOc90FTYHPadtp4O1AXOfYm157UHM/MNeMaMWZg7MBn+BFlQHNw
Yl1HriftUPFPbYabk89yLeMfXx12vna9PE15mWdoV6o7lQcN8fv8PT6TmQ1h
m2qjakdqTypHlafqlmeawv70ufh81DVyvno3RexefEpbRptmSkPw0H3fvne5
O3J49EMvbw5OrPPbea5fKudCDoScB7lW8m7lYMxle3pDcO3kv8mD+7Ip5NtC
+t/h/dB3eVPIuwLP76Da+C13pvdtXGVWQ2DlYuNyLuRefFEXsW1j3PJqjIMb
D5cv0zbZF9oZ9zXEunf907RKd/ouYyPDPW3GnHy0Kuz/zej7EH0fbIj14PxX
rsk1kVuye9KRyrk53hfnX0TZJRe/0d8q9rOU+p+GwJDEksSC/vJ++R0HMO7j
DaEr1BnyduTpqKfV1+I029WHPFOu6Q9rD2mPaJfsu2rIV+Wsutu8E/NP9Mvu
MGbEsevrAxd/Ns0RZbsyXp/h+TRnRrVGPFdfUJ9QvtMprYFDymfxGa+MQzSE
PurOfQ5mnAUNYV9pZ4ntyhmRWyCXoF9z8G3lkIiria8ZUzK2pE+mbyafyviP
cSD5J2vLh64NO2oy588Wd2G/Lhd2lTESYyUzGK8nx95me0xLxFN20sb0npoj
Hmh85YeG4MPJixPjE+vbrDbiM+Ij4iTaKNoR2hPa1N+w/7HzvSlyC1bmGNRG
LNDYnzhmTcI65HrJ+TLfQLxa3NocDHEPcQ7j8mLvYu3yXfQfc4zTpz7sTO1N
/clPEoYrZisn4GvnFWMsrI/8FvNctOu078SetqZtHn2bOW8R53XieV7H9uG8
s020VeS2K1/0M1ojrturLjgEcgnk9xnnNda6oDHsM+00cUdjr780hExXhmuX
aJ/IJ5L391hz6Av1hvi3OLj8UP0f/SCxHLkS5lnpr/kbvGdxMzFR/Te5Qt20
9xoDExEbkTsk1igOJR7lenHdyE9elf3zauJ3+ns/NL7dFHpcvb1z8uH15c1X
eaAh8AJxA2MXrmvXt7F354vzxtiqMVZj8eYSHdsccQNtZ5+1z1z7WXtZn1nf
eR7Xbcv+umILzYHdiuH2ZB0OaAp5rvz2Xrwn85nMa9L37JVsTnEh8SF90dNo
r20M7ro4pnimHFe5E8Zz9If1i43lNDRG/o06WJ0rB18uvvk4xtDkH32dOBDm
OxhTk19jHEn9qp6VY9cp/VZ9KH0pbRJtEH+7+U+3V0cMzziLeJq4mtiJnBt9
Yn1jczTEUtZju3NzcDPkaBiTMzYnl0BOwcTkW+lLmR8i58xYuTFz+Xfav9rB
cnj0X/VjxbX1ufW95Uy92BycZ7nP5qvJoZLfP7MpeN7yveXXdk6yzliCuIH4
gbFAZZ/rZSh9uxibYfupqlg/6jL1sPrYmL58VHWbeIJccvkE8grEAcUXtm0M
3aOumVkX8S/jYHIv5WB2bQyuu9z215qCe9uqPdAY8S7jXnJxjSOIAYoFiv07
j5xP2qHyKeRVOHd2TnapOUzv+Xtd99RjGiOnyfiYPGixcDFxY1nGtKYlfGt6
fXBwjeMZzzP2aLzIuFGmPnBMccvPm0InqYP0X8xLMj/JuPeYJGuVuWKQYpHm
p5iPYvzO3+XvO6Q67GHtX3F3/UH9QnNrDmkMfEhfU59T31U+gtyQqY1hX2hP
yA2WK2Ks31ipsVE54uaKGft3nCMbgvMpF0McynGNa4vT+p58X/9JeuDLuoj/
iLVrV2tf62s4hmN5D/p12u7a8PKoy7WBe4t/y3+QVy2X83bGOYr2fHP4XfpZ
+ifautq84qLio/or4vrGoHyOPk/9QnH+45yPtYFNilHKiRpUHbiAfBbxYuWD
ckIfVT2rXjV2am6IuSBj5dq1RG6KXDI5ZUPYXkrbv+ojtmQsSdmqjP2Lc0ew
/UJ95JWYX6K/oX/hWjCmLn4vXi8Hz7UhTiPmJvZmPO6ZhNvIjxXjE9Obl+aj
fFlxM2NTciblH8hDEEfTPtVO1ecamvAacW7xLvEtcyfNofxLvnpjzGvv1XvT
BzJe4jyXa6qsVDaaB2DujNxTef531gUP3nicMSJjRdpo2mr6osoAZYGY4vfV
kRtsLvAU8VHafmiKfBBtUu027beVOYy1IfeV/9pj2mXiPeI+5laa52S+kzm2
K/HqmsgNEQcXD9cX1jbTRpPrLcfIOKp4rbituTRiquaZmG8iRixWLMZ6fWNw
r+Vay8GUizmtKXKe5ArLDTYPyXwkc6DkJkxpDu6+HH7zZOQq3EzZWP+jKfwW
/ZfRTWH/yFMx18HcFeNE2kOuRXOA5XnL9741rc1p1Dc5F5oiP9lcX3N+tSf1
PeROyKEQM9C+lJfrc/H5iGeLa8vTNc/JXA5llrJLm0nbaVaa185vcUrxSvlG
ymBlsT6tvq1yXnkv3qLNrO28F78fU2OV95vC19fn3yX5c/p14mLmFZr3+FBj
4P/qLnWYdrv+qH6pdqb2pnb83dWRXygXyliYsS/zRc39faop4nzG+4yzGG/R
H9Mvc99244HmW4lzGlM3hm4uhznQ4p7mHop9i3XL4ZCXLj9dP1KupH64/rhc
D/3K52zj+l1zsU5cLydXR+6kOYHmAFb8vTWRS2k82LiwMRtjN8b+5QCYT/10
c9h82n7y7cwlMhfcPBvjesb31LHqWrnJJcZZ6DNsDB9eX34VxmhPezX2+5uu
edreoH6rMfGO6yJPTD6bvDZjNeYcmmNo3M74nbEb8yrNETb3zhilmInYibbO
Sv4K9Ycc21wcpjkwJHOStXm0fcxHFFMy/1s7WVtTm9OYwCeNkcspPik2oT2r
XTuqIXKyzM1aRJnrPOOeenL9xf6G6ohrGt+UYynXcgn7tzSFbaSNZK74sU2R
2yrnXgxPW0abxtwCc4XNpzdnyxjLxgkfLtYHjiWeZezeeLhxcbGcnxhvWWPo
YnWv2I75fUsT/iAOYc6x+X7yV+Wr/tYUuXTm1B3jeIzza2Pk05sDKv4nDmi+
/+/pvsxl/pHSVl61fm0uuE5ynsxnNK9Rbp35juY9HlwdGL5YvvanMTOxP/EM
cQ3tUfNTu3Cv+VzwebQLtA+MLRv7MwZYlbDPNolDai698l89kEk5rPI3ZtUF
B1BMK5typifXRi6zXC45XfIIzb+RD2vusbnGch3FxcXHxZa2SWvCtWGerFjT
Eo51zIVtpo3ms/MZygORQyln0vxIfUR9Rb8hIU9EPF//Uz/Ub0qYv99G7Cvl
58plkNPgM5DXuZLfWR32YD5hb+Z2i0nqy+u7i8WVqb9uipwXc1/M6TW313xu
c+fMlTMf29xxc8jlvcxsju87mA8ip1cejBxAOcRyhiu5yPWWE2h+v7mI5h6K
34rjmu+vLaFNIda6EnNNeaftmyN2YwxHO1p7Wgxho1zoAGW+33swj9h8Yr8h
ID9CnoS8H/MDzBOYWh3YilhKFfv/0q5XlzZH7r259qcYH2F788Qh9TsBygJl
gjnXckq3rI68LLmgckLFAsUET+V3vVQT89f5aj6uOfLqQnWiObnmkMkVkTNi
bG1CsjGUoeZpmq8pH7lbdcSHxDHEM+Qny481Z1tOt9zuHRNfVs6r3Ff5OPop
+ivG33pkIm9412Q7aEOIBc2titwAcwHECsQG/E6D3B9z8My5O7op/Ef9SHPV
zb03114+pD6cvtz4ptBx6roelNkcH87515a5P20R2h5pyz2Ly4rNcd3P1+Ge
88jUEjKVehJlqvh8hWdvPoH/Ich5pbWZN+l8xxlLuY8ymTnWKxc5q+aoHsT2
IearohQOzsV/0fuf9F/oI9DnRuUQN9mG8W9huyPXu0h95hr2HdP+ob8pF99R
8XsqfrPF71j4PYuzKSPL8Q2Xk7QvM/HtDb/B0Z96a8Y7wjXC77qfY4+w/R39
u/vf7D5TynmUo3LRz/Z+9NuG6w5gv8z5W/gNxVz8/7v/9+5/wfuf8AOpf2qO
+/d+/V6L32ep4tihzjue4TSudRtlM9o2p3zI9q2UrdjekvIa1ynxbE6k/wSE
72fsP8d5ObaH0LbIZ0nbA4y9KvXt1DM470LGOJjz5tNvBH02pL6W+76c7ZMp
O9H3a/p8Q7mOsoAxT6F9D9pHUu+Ti/ft+12dcxewP5Xx/qK8RHmCc27k2HLq
Xpw7iz6n02cx++MZY77zi7Yz6PuYz5z72pLtdfAnvuC8jdgfSr8M26c1xTd3
/MbO78pXts8Rl6Mc3BRzxrnzruuiFO+kC+ceTT2f+fJd23hHS8QnuP5ZygGu
PV2dQ30T53Tk2pM4NpCxXqH9Fs5vz3u5ML0j39VlfmeMvmM5toJyH/27+o0d
xjiAsgP7l7n+ueefqdfi/Mdou5hj99DvVecv+19SyrRNZH8446zB9mZc/3Pq
C+S+sX0UZRTHZzi3OPdn+g2mjFBucg9nMMYG1JdS38/xOylf0fdo9hto707d
idKZcy5i3F3zK82nVd5m+wv63c2xftTfUtox5ij2/7ED/W9krGPaIFs5Z8N8
rKvTaDuEugP7TflYZw3eN+9rA879ivu9jeN9OH84xx7iHgbTvid9DqTtONoW
U39Pv8MYa0E5fpe/7wGufyf16uz/yvHp3hvjbmr+GvWOnLs1z34p73Ents+m
3O160vfh3DV4znM478mamBPOgaspU+m3oiq+dfEr5e9cfMfG79n47YtlzpNC
fEPFbxv4jYP/sH8F13+Rc6+kXoPyhe+Gei7Ht+M3HMzYQ+nXhusuov0lyrc8
uyeyIRuUEXdyX8PUWZS2tD2mnGCcW+hzKqUL42dp/4G6H/UrjPcwY/+X7Tq2
VzDekdR3ca0XGeNl3scNHHuB/nWM8wtlB449TlsV4/2X/Uu4Ri+e11ec+4I6
QdnFuSf4nT/257Dfl2t8wHO8iXNepu0un4t2XSXmvfP/Wepr1B3OM9pznPcu
1/mUfl04/hLtCzn+W3Wscdf0u/R7xJwsytvpWfvMf5P3mJ6rz9dvSfhOfDcf
c97ZlCsZ9xXGrKLPWeX4PonfEfB7AspsZfc+tJ/IdgO/72P2J9L/I+oTKOd7
jPH2pa3A9uO0fZpkhTJjcpLx/dK8f5p7Xcy11vHbqZx3MW3tGHsmZQDH3s7E
WnXNbs9z3Zj6Rfa72pf9Iezv7jcx6Lc29/M77Xux/xP1ppQHGG9jxnmH7S7c
07uc80cp5po6SR3kt738bo9z7336/0i9DcfnUdbkvMtpu8l3zXk7F0KOKE+u
5To7cM3/UvYux3Px+ajjVuX4cVx3i3zIR+XkTcpcY5ji48yhCX6bnu0VtH/C
uQX6t6X/vWy3YeyOXG9SNvTiP2m9+C59p348/jH1LH13pT7SdcJvG86xfDH0
lvqrTfquSqeWkOnK8D0KIXeVvz9zjUvKIbuUYdephyvx/TG/N7Y65VzOW4/j
vxmnVweyP04+ANtHuz6o36DtHuoNqa/gnJ04f1/65KkbvR/1WzH0l3psKtfp
LZbYFDZCxyTLXA9zk6xT5tXkY33UeZx6RD7GdfyfGKMv25vkY125vo5lPjew
/wPXOJnfsSytFdfMa/QfR30B5WXu+w3lP30f5Pi3bJfYfjQXNoK2QnvOP4x+
G1A68Gxupu0Z+q2dj/v3fpXByjxl31RtHfYrlEHpufn8VmhP24/x1qeeVQ65
r5yfytg9ad8oHzLf3+3vf9r5XR336L325vd+QH0jY66gvF0OG0RbZCTHOifd
7Fxzzmmnaa9pm1zFvW3LuY203VQIW8VvtPmtNr87twltPzHe31x/GWXjQnyT
zm/TDafftvTbTjsyH3p3YLKZjuNZf832N+Lb7JeqYj26Ln9mvlXzux5rG/9Z
6H8X/kRbt3zIPmXdxWuHLlGnqF/UJ7OSnaC9sLN9ua/1Ge8p9Xo25qpzdiD1
SeosyuHs96ZcSJ8jKJewPYz6XOpxlL0Y5zrupaf6iv1zKHuzPZ0+FbYz3NdP
/Nax7M/VPuKZDNKW0Daj3k9ZzbHulZA9B7J/gO+Le7ioGLLoUY7Xcu5s5QPl
anUS+ysYdw/qbSkH028m7R1d6+yvRf0obddoE2hX0nYY+09ynW+UPZQsc+tg
7uF8yh1+59Bv/9H3HbnaXPv8Vmxj2m5VDlLvyLnjaFuXPoez/7y62PVBOYPx
j86HXFe+T2KMr6h3Yf9U2guMsZD6Hfp9w7HXC2E/PMgY12qbUU/Mhj3hHF9k
LIH9fWhvLcec97pe5wi2exZCD6gPdlP/8ZzvYdz+2imc00LfddRrHHuR+jSe
7WPaj+Km4i75uK7X35H9Hj5f13U+5IDyoJ66yPGB1MfTd3OfG3024dixpWj7
D9cbRP25dlw++pxOvYyygLIP/W5UF6kb2e7E8U+4h/PYHs3xKt7BOcyJs1zX
5fBD9EdOoN8Ytv/H+FdRj1IWsX0C11kb+b6c45cyxmccW5/7uZv6pVzYZtpo
57N/HuU7nuOZ9B3nu6G+jHMuYDuv/0C/f9N2IftPUF+p3KCtl+uMtu1pG8o9
HUHfyaV4h/PVj/R5neOzc/FO36RMoHxPmcQ5Gb/bwv0upd+VtG1E/aC6T3xf
f4I+53uc7RXKC7a35vi51C9wrWvVs/S5hvqSNF+/FXCiLKJcl4/5q5+iX6L/
eax+Gte5ge2vKY8w1sOZ8En0TS7Nhu5Qh+zkOqLehfKQuof9tfVPtLMo/dn/
N+3HuRa4xs3ZsG20ZbQ371VWOZeob6Nc5FzPh/33OuV2tvdzfpTCHhyWCz9M
f6zAde6mvS/7d7K/GttXcb2ZbA/m2Cy5OZmw47Xn7+M6s9i+x2tTDmMODC/E
vu3TOb+Ztmc4Z5o4QSbkj3KoLef+h3Ig/e+g5Gn/S13iOnNu8WzPSLJHGbQ7
ZQ91LH0KbK/OPS5l+0D6z8uGPpmb9Kj25c6UXRxDfITrva29yDm3+Nv1Vel/
AsfX5NzHOO9lfzPHZlKeYH88z2Ue9R2lsIe0i55SzrC/tjY2x1/Rh/R9Uh9K
2y2M+w/9rqdP3rWl/qQ84xxm/yHta8po+mbp+6H+Ocdq2K6m/f1c2NXa1y/l
w3fSV1qqHuTYR4yxmHq8mBz9zhIzoX6N+lTqZ5Sn1LsVQ34rxy+lvEJZ1bWt
zmSMl8QQ6LOavq4+unlL6lyOT+HY29SNtK/H8X24xwL77+bDftSOnOK8cHy2
j87E3HaO/+LaYPsuzl3Oeb/T70NlnD6/WBj7ZxuLKYZMUjbtQD2e8jHbn9K3
XAqZoez4hb4Tqb+kfo9nMZg++zPWEOq/2V+c9JF6SX9D/0KbRtvmTfEhZS+/
q0NLrDnXhmvhb64xOR9rcALj7c71n6ftYdpeoK0d+8uVrd5zPmSGsuM++s6l
Hutzob5c/cf2vFzI1OVetxDvw/eijG3bEja6NvkCzr+E9h/zgU39QN8nivHc
fH7KipHsz1GHUtagz+Gc+z7n/ZEP214bP6e9jGweUgkZ3J1Sw+/9k+MHF0Im
P0q/v/LhD+n/aKdrr19P28mMeRX3/HQpZJay60quu2YpfBF9Eq/r9dWVr1LX
FmN+Ok/Vnf9i3HGM9zz953F8T45/lwkM5qhK+Ir6jP0KgclMz4ROXzPJyM8T
3nC6NlxL2Gjaas+pM6h7qEM5fmY+1o/r6Dauc5/rgfF/ZXsGY/7D9t6cvyfn
92Z7DOfU0udPOZw+d/1XcR19zqrACcQLnON3c3wR5T7OWbUYcz7vPfieKyFf
lDNT6HtxbiX1e5XtGesq+l5NKdL3HXGH8iorP3g8Qv+I897gvHU5thbnLUxr
zLW2K+feqpxyjbK9OX2btNvYLvK8JrmWKR/RVs1Yh3Kfn+djDTjnh4thU//D
/jf8/vuVRYV4hj6z7SgbKRsrgaOJp9WzPYh7P6sm7Fzt3VcLIeeV9z6faRyv
p96Wvudm43lpR2hPbKYuy4dvrI/8I/f5sZgnpTPnN4kjcZ/HtIRcVD5uVQ67
S/trWfK770266mS2+1fCNn+jFLLw4fTeff/q9ikc/9LfKVabCV0/m/Y5tPfR
91Tncu2XtRHYn804Ja7Zn/3DKd04vrPykfZDqGewP4pyCOUFyoe+C+pjGfNm
tkcWwm7RTil5DmUZbbt5X1y/O/Wt9Ds1F/pXPTyE640TW6D+XexEW0SbORv6
VT37SD5wAPGA1YshL5Qb1xfCHtEuOUp9rI7U9qGM1xamHNgSOIp4irie+N51
2dCT6sv784GD6OPp62mz9GkJW+yqJAeWpjnbjWv/qd+pTM/GHNa325z+D3Ct
u3mu6+bD11P/qm+1/fVf9WOPpd8brnn2O3Ot7en3t1g413pUeZ4J30MfpJWx
Dqc+qhBYktjRLMrpbE9I62IQ473O+QfQdlk51sl+3F+Z/WM5vjH713D8yGzY
5AuTPbdD0hnatdqlTdrVudDh6nLtVPXDAH8n5ZFSrBnXjjiZ9qx2bXfa38wE
bqa9p333LedtUw77RTtmhLKZNTPG9eAa5viZHK/OB4YrZvuga4L6vWLgF6c6
N9h+0/75wDPGZmIdu55H0H4afd7W5tQW5Nhon6v+tr6eulOZ1RL2sHZxX64/
iPazlYn024P9dXmn57B/Lv1+pn9jOXw3fbgr6VNN3Ub/x/vUflVP0zaAcn4h
1ovr5lKOzVXf0faDmEEl5r5r4ELnMOUg54f+ZyFwKPEoseRLlTfqIv1zrr8z
/T7PBK4ojtiftid4Nz9TL0fufMCxVcvxrHxmu6Z12EvbhHP3L4XfqP+4JBfP
Vp9L38t1an/PuywfenhSWkOupUcoK3gWz7K/Jduncc4IYxL4gw8rIzj2Kvt3
sD2Z4/O5j3WVxbStVg57UrvyQDEe2qdw/Vlel/1ruI+TyiG3j0/zzXk3Lclx
dchgrns7++1pv60QOkU7V3v3/rRetXP1u50jn2prJnk0Ks2ZDWn7jvv5LNlU
2lD7cq0t9TMZ90DfA21/UX9Pv3sK4fvp632kPyBOUw7dOI32Exijhj4dC6Er
H/B9Mc6TYnXsP8j+nVwrm/TG+kkGK4sfSvbHnPQufCf69r/qE3A/r1fC79X/
PZvyFeOtS30Qxzelfphznuf6Czmnp76F90j7l7RPoPxB2wP58Ov07z6h7V+0
5bm/sepC2mYyn5/meEV8j/pyMWHqbr43xq5mLf/C/n8Z+ztKN/UO5Q+u820p
fO3DKS8VYkzH0Pd+n7pzKTAlsaWTfO/FsH21ge/h2B35mLv9Ez4gHvAu7a+l
NehaPIZzP87Hb/S3KhuVkdqA23Ldt9gezRhrFcIm1H7Xjn9ZuaAPqv7GV5no
GqBswf4Cjv/ub9U3oN6CemvlHXUV9zJKWeTzKoSdrL18jvdN+ZS2kwqBs4i3
/ME9HVGMWI62ljaXtp4234nGtwphV2rnae+JRV/nO+QaY+kzphL6Vz28RH1a
DrxE208bUJ/l60JgNpuWwrbXxtcX1icuY2v9ZqyF7e8KYWdrVxveuYpxehbj
WfhM3k66Vp17BOO0Um6lXMw5p9P3WOrRYhucc4Lvm/O2Yvs5+q9F/XMh8Chx
KX3lqpaw47Xnv8mH77yx+pv6smI8X5/zScZRtLMoK5T7+ofUq/AMBjJGH7av
Zvtv6qeMR7BdoL3YEv6dfl6OsRaVQtZWCmFHak9uUwzZqz+o/aodW03b05Te
tO+QDf9PP7CK8zuzP6cUNqK2ov7Z5Zy7Nve0gG0TJt+j/2/agpx/PW2dirEO
tjZG2Smehc/EdeEzuIW+v6Z34bP3mehvGmM01vhneoe+yxfEF4sR06lLtr42
f3vuZxrjNxTD39TvvEhMOR/YtjaCtoL+pn6ndqZ2pXiCcV4xebH52dSDqY+m
bsfv/Fa8Rf9b2ce9TtZOzcTv7JRkybhKyBxlj/iisqW5GDaTNpIYqFjonuz3
Y3+bUqwZ185njNXCdhefZTnWuetdTFkcfEg+sDmxODFWsdblVYEFibuIv/Sm
1JcCG/qJPmcVY+45B0dpIxYD+zyN49uVQu55j97rLZnwefRxjK26tl3jJ3n/
mVjX3qv33L8U8s335vtzbht/Ng59J89gaC70t3r8A+pnxYJo75QNmaBs+DfH
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
+cDaD58lG0lbybwb7QljnsY+5daaw2Z+mXlm+nByB/V79X/lUOjTPVOMOeqc
NM9oivMsG3mv3VrCltKmksdmrkmHcugl9ZM+gL7Aauxfn4k8QrEzMbS26iLK
F+IGcubpN4P2Y+j7QT74EWKMYo3GQcwBMxfMPCpzycwd+yLNCeeGeTliTWJO
8o3ER8VJxR2V/eqAPxKuYT6Y+UNyzY1xGusUFxQfNLdgG+7n4XLkNJlrZK6B
Nks2YY/qmvXLYcOY92euqTlhxv3EQcQ9zMMVAxYLVgYq88QltWm0beSf3K++
4D7+rgQ+b66RuUWHVYKbI16v7XxvsiHF3p8tRy6xMWoxSjFEsUQ5psasXyxH
frM5TOYymQdpPqS8bvNWzfM031MfRV/FWId8PXl7T2SCa2bsw1xJueNibNOT
jSJ33pwked7yveUWyzE2R8lYx0Vsl7ORF21ukrEPOaGDKpF79W6SAcoCc+zk
MctnFvcR/5Fbrr+o3+gYjiWnSm6VuYliC2IMcn3kZcrDfBT/66tKcInkFMk/
M49OTCjLe+yRj1xROW5iROaTGh8xTiJPRXxXnHdJOfImzZ8UpxGv2aIQeWTe
u7/BPGHjcsbn5ETIB5QXaD6b+dlyJMwhMxfd3HPzT33+voeuldBb6q99KVXs
f0/dqxB8f/mM8hfNWRtZiVxObTVtMzFKcyPMkbiiEDwyfUh9SXms5m+J95rj
Z06fvDxxffFf87YHZ4ObKUfT3D9zAG/OhO5UV6qH1cfykeSSm+9t3N34u1wS
ueXGjI0dm/tvbpk5ZuY3mi8jn1BeofiVOFbbSnAxzL13Ljon98kGN8PYsvlM
cqCnJwxTLNMYkLEgc+nMqTO/ebNK5FiulXSVOkusoE5fpVNwweV+X5sLfrs8
d/PE9Q30BT7h3jqkvHG/SXBCTWAGYgfmUJtLvWZr/J+v36H0u5O1HF+DtvrV
kLNsN1EmroVtsDo6wA8wrMH4VAP83h99NqXtcPZ7sT+iLbKT/R6UJ+k/kL69
2J7PsT70OYjto2jfhLKTeXHsH0F7P+oXGKsvdR319HV4lmxvQ58h1DO5/jLG
OJ5jw9lfn/oR9oexvYT6EK5zLtuHUo+lPpa28Y7FONPYvpZrXOi9M85Uzm1i
3KvZH8Z2R7av6hRjONYtbL9BPYV6OPVd1CP1wdjeiv5D6DeLttPZn865r7C9
gDKG4ffneC9+2zFc5yvaVmW7xPaXbM/2O6t+v4J7OohzaznWg+2elPn0GbEm
c4vt/anfot9F9HnQ/xGn7ROxC/r3Z3sgpTPbH2jzsL0effbmPg6h7SzubTRt
o70/6vcYYwztB9N+Jfs7U66g9KW9C9cZybkz2L+DcjnbBzDOvWyPo1zAOf/Q
dh/bx3F/T3Nsw47ICM59j7aFlHcpg9oh+5FBX7PdTllEfQv1snVZp5SzkcPX
sC9Z9QHqKupb0dVbcF51Bwr7ezJuB+bcCPq249hTjNGe9va0rUG/ddvjW7E/
j/7N9C2wvR1ty+l/PKWV/TPYb6EexfldOKcb9absb0I5le2JlDU5d3v2t2L7
WX5PV7ZnsT2K/rt7X4zRnfrf1H0ck/vdm+N92Z5Bnw5cqw/3cCFtJ9G2PeNd
QZ/hbK9O2w6cN1ZSLu1jqH/l2DlsL6beCbtzR79dTXs71uF02lfjnB607cPx
Pam/6Bg5rOay9q+J/xX3/8X93sQStt/3m4LUH1TH/yP7P8lZZOGcqviPbP8r
ez7tC2vi/2b8XxT/H8X/a76/Lv5/5uTm+C9wv23tN339tu91fketNf6r1O9u
+u0pvzU1qTX+K89vC/otQb8tW2b/ZbYnt8b/tfm/bf7nqf9xeiNti7mXWtoG
VMf/S/g/Ex9Rn8fvqEV2fd8c+X7GMo1pmrN5ay6+8SGuJb5lDqc5X8arjVtf
lI18VHPA5ORqc2tjm+tlztdeldC/2uja5OYDHl4JfZzlngZWwvbVBv7BmEZr
8MTN/Xo8H/6BfoK8ceW/OUXDkt5Qf6gP5BDLJZb3I//H75WUWyPv1PzT0ZXg
MMllkuMuN0aOjBwluUpyZ+TQmIdnPt6zleAdyD+Qo3tba+SwiANpI2kTTWuN
WIMxB3nVa7QEZi52PoE5M9OYci74xvKO27UE51nus9xE+VZyZuTOrGeuSyXi
xuKs4q33lSL/LtcS3Ds5eBu0RD6eucLmDG/ZEtwPuR5DM8HfMDd1a7HvQsRS
jaluL8ZP/9Zs2LPatUubw68Xi324FLwh+UP6+TNag88sr9lcHnN37qCtpRA5
MHLl5cwfQl1Xid/qb34g2dHa031bgrsnh28NxjmS/csrKc+Wa7xsXKUlvm0i
/1W+66vKONbpKGN4rLdTqLsyZ2dx7fPZ3tf35fnM37toe5ftp1j3X7Lul1B2
59yPafs/1cy9yw==
        "]], 
       Polygon[CompressedData["
1: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
vT5aRH4rzyPuzayL7KFirtBGh6yJ9FWu+eQzYIvpZ7L3T90Tf2+5Yl/N/noc
+Z3Mf75j2D7L/YZeD/4eXlHModlzyWW09xKfrWAf0tdroxP5bL4D2KbXKPa6
7HlL0KaMCft2+W2XsVqa+sjnb/Rxy2KOZa7lnpD7Qjf6MvKW4j7Fr9Ju2xpF
HU09rWteT6EvEPOafnyed5m9MHsq+V3+98lxcH5rha9oWZxTc179glwT1ls/
vyLfIP5LfCRewTh8L+/u/FbC/st3MPj2sC+0tTg1i+3bvCPYY+RvyHflfYk/
Qd7v6Y/Sv2tZ7JXZM39AVbW3Ct9FzKpSMQ8yH7pl7MStZvsR9ZNnR9hZ7E3Z
e4r7Gd6M/BP+FP4bupXPQ573F1iT3F+y5nPGyjlQvlrxSw2jT4T/Sn6H34zM
PbSWvibPaLyfhp/P70f59s/9BP4HnyGw38kbqxdrNmu3Vu4sWXu582Uu8PkY
ldfP2mx/tSz21+yzf6aelC1qb+rs35l/tYq5nDm93JheCT9Hmxth/2QNZa5n
z4Udzfdf2DH4fdm/YZtS94zfk7nj54s0ynts/8EX0i+Bd8ne2aqIT57M1w82
r4WsifQ1fS6Hv+E5yuj3m/TJ4irCZvGrgPdgO7x6sRdlT+qhucqtivtC7g0b
4SfyfbJW8X7znqvgU9h21u6X+DrPWD73nKxR/lvgD/OfJ++SnBk279fZt6vj
j+d3gXkmtpp4C/zszO3Ujy2LtZA1UZvt+tREtCW5DT4m+0bmqGepC1ui7ToZ
rNyL8B3M757kq3Inom9IfLViH85+3BBWTVsN8i75TiFP41MxdyQ5G8M7li32
3+zDN4jrWKP4fWF+Z9gE/yV3fzmX5HeKfE/afLbNGXcUvVn2bnGdWhX17pTN
Z/Sc1VvSy+R+jVqnv9ps1aqY+1kDbcnb5Vk3j0/G6Xb8NDRpy+LelTvW3fhW
eDl8l5wt8LJ4e9jW6Ejyufp9zOa20uYf+tehVXHfy72vXdni84B8LpA20/be
9G3xD/XrGT4/yLE9fbc8l/Y7kh/Nvkf/IXe6ssX5NefYTpuf+87UaD470o/D
d8CbGKv9U7tQM1gX2E7oOXID7+HV7N1iT61enG9yzknNT+2/NOcO/emWfrQq
7pC5L+5KHlOuuGfnvn1N9t3cp1oV97rc7z7bXOv3RHu0KnIk1x75TIXteXHd
YQfq857pp7iubHdkHsN6wPZCh4vpkLbw4Vl/4v6qUdSu1LB98Z45r+e7dvh+
9F5oBL86OdezPZwzP1sf+Ef8/le2qNGp1fk8Lp/L7U8/lt6AX1/yv/jF+a2s
PP1zT8+9Dn8H/7dm8XlBLc95EOykzXtT9qh8hlBV/28rV9x1cudZAhtIvobc
ifyInIfmvp7v+emHkNexHZY5iwahbd1fluf3r97RR+WdGWAnoqvqeI6GxiV+
+AL2++rrD34krIq408hHkJtXsnaylsXXQzXp71Usfr+Y3zHWtwct5XtUxoVt
GD7akn6a75v6/3G++0mtQ3/ncwCX/GXsx9FfFXcs/pu2O8l1lY2zTj5XhQ1O
f/Lu+Jdh669Pl/PvSG9JbodOYu9fpnimPFsHWL+GxfNnHE5GO2aPzHc25C30
+1T8Jnl+aKDf+vg9fgbsEm3sJv508mP68S16jN9w+jx+3/C7nr4zvzNhu+Bb
wy/Sz3/IlRtZg+iszJvMC7n2hY/MO0VH6dcN9PL6cA79G/IU9DK/c+mnN5NT
/Lx8lkBfbaxG4bXYz8Mf8tyjU19amydZ+/z6sd2rD+fDF9M/wS9A15K/0t+u
2iyT39PpYz2+U8kX512yHcdnbKvid6/5/eulqRvGaaDxuoT8mphG/Oqmj8Zi
k/aPhV3Odhm6Av0vz8qnj9xXkmeRP8z8Qk+mLsLH4ffBH0Ad9Odq+q/6UZe8
Ue5r6NXl/ZD9e/hnmXPmx3X4U7Ab9e9a8iF5//ldWcYxz7D5fea9vmANHAof
n/mdzz3lvTFrijyE/IQxm5A+5zcs2lgq7qbUTDmPg91Cfpfv757x5qxb9oWZ
d+g3/rfCGvOdmHquTzvBumjvdnofY3MbviXsKM9xB3mO9r6mTyK/mc8P4I35
v0yumt+xwxfgk5OPbSx5O/5boLthXfX5LrwkpgG6m/0e+hfsO+b37fgU+sPa
eZ3tcPxeeg192U8/D6DflznGb7Q2p+aZ2O5Pu/r/rpgj5Jku93RYa/NuEt9p
5FXsr5BX69cD9MriXqfPIH8Jewj/Cn8Q78j3Z7nq8Smb3+qjmWwz2X4iT2Z/
mHwWeX+0k/YepV9E/pjtEXIj/X2fvlyfH6dP16/H8Dp4Zz4/6v++8j+xeR1m
Pc5Cn5F/T/voSvJTm+dc5t4N+vAp7FV9e4Z+nRxP4zPx8+CD5FuXeyWsgvZ3
5j+bXFX/GsOfz1zJ3xngF4v5VszW/Er4GXJuKX4O2y9sF/D7vVxRP1JHXsha
J8/DV/B9I/sD2hU2H/Yiug3eTVxv8+w8/b8CvQx/CY0hT8rfFqD9tPcTfUHe
vbbK5t1kzYp9LXMrNRSN5Dcxn+Hnby48w0LYfsazrn6eyFYt7xD2HvkNOUal
NuPl9emm9JFtEXordbNekTf563vmAehp7b2YM5Hci+EVxX4j59vkcuwvs72Q
z7nz9wup83WLGpZa9n76qy/l5Nhde7tq+4OsF7meZh/Pd0nmRO2idqSGVOHz
Mvoxf+ehPx9vnnOZex9lTyBfy34u2394f3mXZR5rf6G+XArfq0JRD1MXL8SX
o629wvG1ixqTWtM184TcU5sTyIfp5xnwL9Jn2OcZF/wCfXyB/cu801bFvpX9
61fYiWyr0aP68DWsh/gryV+1Kmpnauiz7N/Qn6evzJzTv0f4fYJ/l7Wpz9/i
a/ge0KDYU7K3/AibS56Hfsg7Ff9T1ox+nsBvdWqscdzesy7Tp5O0c1iDoi6n
Ps+X4+esKdhycn3xv2U90H/NXkJ/Kd8JkX9HZ2pnb9SFb2+0FjZJzvV89tbO
Ovrw+oVvYp7P9wj0U+T5g34hv2r6sp7cW9yq3LfI67S3Hv1JvpT/m557J36H
aONv2EpxreXfEF9yFbEb8wz5jCN1mm1X/v/Q35JnE6xzzjb0f7Pm5CkZk9ro
P/qf8HLli/03+/BL5P/0pQx7k3w3p/26+lG2dTHfM+/LZW9OHdX2AFSOXIfv
i/meh09l+hI+lfC79eHo1OJ8/8u3KuxRfr3Yq5C3QN9uXhNZG09kDcLmiXuM
z9XoXnINWHX0ivzV6EP4ncpWC9Yufce30Uaj1BzyZdraG82vVzxrnvmjBsV6
WJr5lj6jRdrst3mNbJs6w78h/Dc59yM3yDNkbelfJ894Mr/GsD7li7mVOdYE
PwsdDJstpjvelH6TuOb4CNQsz6o/fer8f2ksTfdPbfn6wlqytUDP6Euj/N1W
7aJ+zs06hb8MezXzp3VRUzvTu5Pb5h3y/Zvehry7mJvIe3nOvcjtYEfgn8K2
Is/S1lz+7ck/kLfGd0udg3UgT8kYom78N2TPwBviTXRnTP3iPJVz1bb4/dpo
qv9n8XmO/rP+/cl3e/I9+AP8j9LGFt5J58wdcid8Lby92B3Jt/LbIe+PPpnc
ka1z5hh5E/8ubNdk/uMb5f9aW3fm3gs7ks8u8A30JvSdyfXYq+tTN/pu9BX0
T/jtSu6ijdbk7VJb6euz3+fc17r4O7j8Pdwe5JXa6Yb/CrsOnYOOqFuMd8Z9
zzyf/OenbpKX5/Mf+L/y9qBX1v4m8h5oENoH1pTvQj57kztoc6p8N2m/J/1y
8hVo35xV2abznV2/2JOyN9Uh9yIvyH0g60Fcn4xn6g6+A/ul5DtRD3n2h/VF
L/EdRT8v9VjOcfyer1ecd3LueZd/P/JUz10Z3p98YOasPvzBthL9qs39xB+U
uctnlZwDyNvDFrO9mjmP9mVbTh9I/jjnMTnvyt8Ckg+FbcV/Tb7nIu+ds1+9
Yv/IPjIIP5ffe+g+PvPKFWe0nNUG5x6W+o2/JMe/+DV8lrHtkzmQ+Y3msj3A
NjTPrt2V9CHk84Npoxrfo+hPkcuxDyM/lPtU9lxYa/ZjYEvJv4g5mjy4TnG+
yVnmuNQs+LH423KfgL+Jjs/7zL0o9y85+uVelu/dtXFS5h+5JvlE8p/BMkes
h+vlOAX2Gf+T8XdynmLfJ3dJ+u9Zm3xPTV3IuS5/Y4nOoM/PPbd+cU7IeaE9
eV99OJN+rT4Mx6/DR/LvLf9p5YvalBo1sHxRi1KTzs7aQmsyJ8qYR/xH0l+s
U8yzxvRz6VvK/1TWQeti7p2fdUsfnb7gB4p/Em9rHVzF/gL8AjS2fOEX//fy
HSyqSL4oddczjcG/ZB+Xs5Ucr/H/SJsXJxZdkXM32+3wS+gv8G2WM6wxvZS+
a84RqD2/y7NW+F2WtZz1za9W1hC6Eraazy7sV6R+sl2VuYe+SPt4L3na5rya
cxrfmXWKsckYraVfjd+cM4F8e9Kvy1hnXdNPEPOJZ5uR/qIbsj7EdyBfn3WI
/54zPHk8ehzdiKqkvsB3zj6SepC5S368VPQtfcwelr3slrSPLqUfI99H2rs1
cxI9Rp/YuthDs5d2ztkjtU3+gz3rHbBJaGI+k+B7Nnxn+J2wX/T/ndw9yD3J
N6M/5BmRuxXsrqytvFvt/g/dXKfYI7JX3IOqw/aAPeKd7Jq/+4UdkHt26gC9
BvqEzzA0NfMg9yq8R+pyzj94Gdj0rD19mpa89A+znslPZ2+QYwZ+ib6vga/N
XVFsLfJDWQP4g/gIuV7LPqf9r/CZqSH1i/tg7n7r8E5oSfli3DJ+j2QMcnYq
X3xmk89uHt/8nh5DH+W+L6aVnNvXK+7GuSPPwjvyH0cul/tc/uY64wG7IeuB
PC3n2tzl9OFheZ5JnStfPFOeLXMsc+1Z8mJ8TM4OqafJp71eeS/inm9d7K/Z
Zzu2Lv6GOn9LPZe8Tf3i/px79NzNNXJpvWINZi1eiM9rXdTNO8R0xefTbyf/
mXsK+T9yA3GjyC+jT8kvpWabh5PZ5qCjxC2A3ZkanHtVctYp9u/s46/l3cKv
rl3sCdkbxmcfzztoXdyjcmdaSP4+tVvscLnORG/AFqFX5fqsXFFXU19HpsaU
L3Ik17tsS9AG+OI8ez5/Yn87603+t9j68vuA3hJeA/Y+eY/Me8/alL4k75x8
lxwfpv7kfoNW6duo2sUazVr9CP+jbvG5Wj5fW5bamXfMZyl5FHmxHD9q85M8
L78t6hT38tzPP4SvE/9ZxjNzL+c1+i34+6nJ+vIF/Hm+n6ePnqVNveLcnfP3
17Cv8vuF1sW9Lve7No08LxrG91v4YPyw/I4uY5r51Mb9CB9d3XkwfwNfTV3k
c0czzwefjA+A91Prf8iYVi9+O5jfEK6mv8X2Iz5IG2+TD2J7W8zPeT78p9RR
+CXoV/J3cn/Odybbb/TL8SvQGvKfqCvbhXKsTf1qrC20Df0W7a6DXS9PrfyN
GPl4uZ6gt7SJ/EFfj5bAdjNWt+SOI9ezYv+CP1y+yJ92dof/Iu40tr/p29JP
1c6GjF9T4wvvZ1zm4Bthddj+weviu/Gtns8n81lAait+jlz/ku9vWIxbxih/
MPJfah7/c2Cz5TocNjyfMeC18/dl+eyQ/L4+3ypmfr4not9ML4cPFPeyQ/Sn
+lSRfjj/KagCeQyshcV2C70SfZ78K8i3wevDp4q7UHxVtr/1e6icVcjt9ad5
noNfNfpH8C3w1vS54v8RNwXVgI2EXQurTv4w/2eANrYXW5PeTJ6T2P4SX4u+
HH6w9rYkr+B7BNsznqc2vS460juqgw8Vd7g8nbVRKb8F51dTXH22WvgZ9Hrk
K8kN8E38+/PfoJ2G9AMjw14s66xB/4pfI/xa2L9i1/Jrkmdmn0R/l32omKZ5
dnSafh7Fp37GgT6d3Aw/mO8M2AF8W9IvEdcC/4f/EPLbbLfg36HW8PX6/xa5
FfkOOcaQtyIfl/9DIp9Tk5sbh3b4TWiWvOvoW/Pbmt4FTeT3qzzbkFc3KfqX
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
XGg8/w9YEyqe
        "]], 
       Polygon[{{3105, 1956, 2812, 7821, 1948, 7820, 2637, 156}, {1873, 2865, 
        537, 9329, 8135, 9328, 666, 1837}, {461, 68, 9331, 1731, 9330, 460, 
        13, 338}, {78, 2449, 9335, 7854, 402, 9334, 1786, 8024}, {944, 3689, 
        9339, 839, 922, 9338, 4065, 3664}, {3413, 8132, 9341, 3307, 9340, 801,
         3753, 848}, {66, 5290, 4949, 9347, 1052, 5895, 9346, 1160}, {1386, 
        6791, 6670, 9353, 7348, 7403, 9352, 1582}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, "BoundaryNesting" -> 
        Automatic, "SeparateBoundaries" -> Automatic, "TJunction" -> 
        Automatic, "PropagateMarkers" -> True, "ZeroTest" -> Automatic, 
        "Hash" -> 9181665499288004303}]]}, 
    TagBox[GraphicsComplexBox[CompressedData["
1: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
+r/r/9NT/+P/Xf/f/QL9/H/8/wDQIO5h
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[PolygonBox[{{9460, 3971, 9434}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[PolygonBox[CompressedData["
1:eJwV0ltoz3EYx/HHcTaHTRg2O9loydJcOJUVckoyE005JTnMYc3hYg41ETnb
xYY0VlbLxIqUxQU53ciQcCFLuHGosRi54PW/+PR9P8/z/T6n3y9vbWXZtp4R
MZl60+wxEcuyI8b3iyjE42hJUsQBsRl4p9jcnIim5IhzKRHnCyK+8XWK1+Nn
NJX9u0fEKdzeN2KoxGP5VuRFlMix3PuKARFF+LQ7RWLr1XiK6xL5vFnX31v8
grbTfb4HzmneHPG+UL0JuFudEn18FZ+Ht/DdEn8kXz6eoOaGXDbl4AV8K3Ha
QCeuoGm9IlItoTwxK50dHJHNtxkvpulpWL2teCHlyVOcGjEHl7p3eZD3ct5X
9/boiN1UY+bi9Ii7en7vTjW7DV+nm8MiytjXcBNlDImoGm6HuIa+uN/Kd5RW
m6stKyIzM6JrVMTDERF7RkY05+uL74n7c+2v0b6O4TvU6N1zNVL0N4au2ssn
moUvic80X7XzA72ltWbfZR9p4vfYr9V/Rc14L9/roRFT6GLiezkL5D+u/xRz
1vIt1Vepu1dwCy3C//TXjH/h2j7+LfZP3EXZ+p9uph/4oDsnxA/jVnyTkmmI
mXY6v/Kf0e8kPb7EnxM5/Dur9PcF73Lno1nTqBpX0Tvfp4P24z/uNGREPFbz
L87k69R3i/rd7Cx2uT3W2ut3dgfN922b6A1OF68zX4d4Ep5IuXadroeN+AK1
y1dPDYl/k/aZdY16h3El7dDLJPYhvCnxT/qXTsp9A/8HEWSIYA==
         "]],
        Annotation[#, "Geometry"]& ], 
       TagBox[PolygonBox[CompressedData["
1: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
yt8vZ4mcsWsW5/yc96/Oe1+Y+9huZdsu9wv2YfGP5Fkl4z/PNjmf5H2JdtfD
fGDO3Qk/hn4M//A8w2TupD7yruRDcp/4OmZ8y/93znl8D+f5A+/Hty/MRPpu
8izJu1yYwfi+OUfhe2i/GdvWcvwO8wLsm+pYkL8d5hkGP9SYeTPzBeZbfKC8
l/I9KK5y5lzOEHnGIP+An8P/d/42he/H1oj/NXnmoHFpDzUQez7/p3CfoAui
o6niP8hcIr8ndmTuMdyh6KiML/V9kn5AI+R5XWyL7L8ZF+hN9JX411Ht9E/2
KHFj8J/F1M9YkaNOnk3E9UadXN9WrYvzWs5tdTafeTKnMrfKYP7STpm4L2F6
5zyV8Y2+Yv8dXbt5rGbMrtL2TeI6iqulxv7sn6HX0g/yr8h6K9fRbFPxyWid
mPL8P6V/1POTnPNzpsizMtxbeT+YMwf57cRk/NEvgPlNW9XJO6N9sn/WKPaK
7Bmn06+B2UctE7PeidsNriv+VO57nj1gTzZWxye+QvE8n+f65+F/t+z0aV3s
4dnLz0Vb5BlHviX5W1bGENy2bOW09WSusdX/L1UlLcT1gf81Z1zy/TBf4Kdm
H8geIX4q26/a/1yO09XZnX9XMR9bI9vCzGIvw1fkTMH+Bd5A8rfyjADfQx35
IUqe7fKMt7V8H8C8jz6Kn28m28f0t5JDrun0x+RdKt91WV/Ra+JH4d+LGZy1
WN5jcl52fTtaeyuYj+/qzzn0h9DTHkBvpg+sKBf9CXQceRN703rmBv14fBX9
XLjqrucW/BaYFh5YB+qf7eylDejH1Hfv7K874KvFbGho/RK/gzZvq1u0lTb/
5PtEjaWwe6Pj4fvi3+BT5WyAr8P3UO8KMevkeY/tb/ICuIViL+JfIM/p9JPV
cwp6i30j2wvoevjrUFUxS8UfgR+IzxfXAv8Bv0FsefxCtT/JNhX+abZq4j1S
lzzLVx/dnL9Js22jnlr8HeSagTd3XQ+Qh+RM5fo+Ic/M3xPgD4Kfhr9Cfxgt
UdtL2jiE/ZH8DUxbneXYU/7X2I8iX67N19kP1c5i+Z4RX4d9kbxX5/5oZwz9
Cvjf0V7ofPS/vDfJvYdZBFNPjnJwL+fZV+wXcn2b5yC22nwT6Gv4zuB7hO0H
tg/zPK7dVXAH0QfwDUT7oJFq/EbdK/nuhO+Rulz7LHnm0JfDvw8zRY7L2fbl
64aGse2H94fZXcwI/HzYI8k7q/tYOd+lT9fG2/SZ6Fe+BuLOYz+dfgpfM3G3
k8dnDPL3zNjLO1ljcRc5DkXDtL0Mrjp5KnqK/DhbH9d0H9xx5IPJo7ImyXU3
f0u1jVDvH/Ier82H0E+ucRv8Vv4K2vmD/zj5JuPPiW+iroF8T7NVJt9O3gfu
a3m7sFWQe2+4SRnrbGvoleWrxNcS7gX6TvTryd+I3Zf9M21Oxx+Vb1nDYnxk
nBxJnptxRP8YZkzGoJjJ6A7yDPYT5emHBhg7T2b+yvG2Wsfhu6ujCnqK/QO2
D9F94l6l982YJbfXj7elr9BzGatyPa/2F9B0+ivaPVCOv9jvE3Nczs98teSf
h3/Mvi73XPs3krdnb5Ga+HZwnceKmcv/d9ZV9+F2tmv4yru2S+DezjjMmJB3
lXq68n+atZuvS/oarow8m/8q8oC8s6EfmXWT7RIx+7MfzrabvHuwHSTHr3nu
EN+P3JhtR/wfuNbwo7X5ZOYx+cP8po7+P/5d5OieOYAfJtcG9CvfAfIMh1+f
syX5IHnOhqmLrqHvR2/atljXspYNxOfh77E9hneRZ080jH0kPon9HrRYvovp
7eoX9zj3unbF4p7m3h4t7/qMf7X9mT4W0w92OXkbvBv8FLbv+d/EL0T7ib2N
3g3vKHaMHJ/CbcX3h2v5jW0317gr/1C++9gPMw9uZX8RvYT6o/OznvOdJNcX
+G3qaZT7C7sP2zP0Duw7p6/lWSjmDfo8NDK1si9FvTK2YHuJvbhtsTZmjXxc
/e3pq/HeWcfIS+BH4r/gV+CzMs75SmHaojPEHst2Ar639sqy9ri2jm2LsZ85
0KRisX9lH3ud/Z/0t9jn1dQka0PaYWvsOtazXQC7Mv1KP5B/dd5Z4IexvZh+
RePg72d/Ti2VMi7E1JfzQJjntfO9+/hl22KOZa7tBfOoHGuzDmfNaFzsBy1h
HhT7bMNibziaPjp7Evwy2PtRDbiP8V3QYc7qu/LfKmcz+t5inlPP0/TmYiZk
H1LXDJhP5FpAvwzmn5zXMs4336fcr38rFPtw9uMVMA+ln/EytbVjfyf7D70r
fS/0Vq4fdrrYgxsV60LWh+tQlYwR9WyHvtfOWDSE/7eMFXS52Jn442ha/WK/
yL7REy1Txwj2u9kurV+cOXL2eEnNY7I+0h+FG5uxpY4ftNVS/mqePbuggXWL
uZ81YDAMeMkgvKlcH8j9DuwY+bfOWsH2Mt9lYhZae2aSR2XeoRlwvfg7wG2A
v7Ft0XZqqFexuKe5t9vzT8zf/tXRHnWBm6rPx7PNyrjMHkoei97LM7+8S9Au
cC+Jv4J9UsWiH9Of5fX1DnxDxW7P3sg1/iZfDfb/yXWr9iazv4wmsDflXyT2
OfhHXUfNnF3kX5Nx37A4X0zbPKZyvss5bzZ6Ti2r2duxPUrvnX1Yvu+1MSh5
Nu8D2Q/uytjDZ9Hbw60UdzZMP7GnqfU8/f43/9UNizmSuZKcyd2nfrEuZH3I
fpF94+u6RfupoxP8qXCviZlMnq2Gpe7Zna5pLOpHX2QNXuL+HGq8f4avFnt7
+ljuDfgv6IWsH2gh+S/2jWoZhNbALs9YQvkB93j+r8kfq3uS9k6G+ZftnUbF
2eiRnIlyLqtfnJN+4F8B+zrbV+S1anov+0LOKFnT8IpsK2Fnou/QF9p8F+YY
/m6ubaG4i8g/Zi9D1+VvAfyv5ewp9zs5H9A7q28o/rb4Mnl6ivsCpgr/BjH1
6Y21VZO+E395sfPR2+hKcTPlfjDn28xN9Dvc7Tkf5/mJryPfdto4Ou+d00/0
7/iXwK3OPiOmAVunzEO2OdrcCr8J9cgeyreYPEgN9XLmhKsn3z3kLfBRapqj
rWk5a8N9gk/PORW/OT+Cznk/+wzfFDkWorlid8zeCNNWX12d8zL6AeaWnP3Y
J9LX0M+BO0ZMBfxv+jy+Bfn7Kf0n+s/khmr8QDsH49XFn7l5Lc6aPB5uQuZd
zrJs1+a61bUW9kW8Tc4X/D+LPzXv6XJf85vmnKH5eqKN4mqJa4zegXmG72+4
yewVsr9n/0FH5UzCths6gv1J2P2y92ffyzXJ+x36pmJxn3K/8syVZ69v4b7O
eb20OKNsoV8q6t/VDYvzSjfYf8n/8R2fv4PKU8b/a86ROdfnPYo+ezdzU+6J
OWOlXfJi9orm0K1quiNrBt+H5HZ5nqJ/JO9LcIeQa4s/l68Oap3zTe6j+Cn8
DbRXHzVEb+R9phr7id2X/462xXNInkd2ZZ/GXkO+n8WV08599Lf4tsuegg/O
34PEDcfL4XPxtfhdcGfBtBZ3Vt5daGtI1ia+euz12xZzOnN7Rtbw7BFwLbXZ
VXuPZJ62LfCJe4Hv+jxHsNdgey3zUD2z9NdnFYs5kblxDuohx01tiufS7IvZ
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
gfxUg6KW1DQoe6Mx+Ll8W1oDh9EPww/PmQamD8yKvM9i/6xe8R42fZE+ybUk
T/K9kN/O0oeUFX97yt+gGvBdVVZQ5K9gmrFfmfuYMZ5zM/tSdV1dVvRr+jd/
t0qO5Oqc95owb+Z9e/6GRb6OfZNc7egd5biLPq2sOHfk/DHB/RtD3+De3cE/
kV7Vet2SbYfKxbukvD+azrYIf4j9X3IHvttgb6D/InavnMWt92/nb9x574Au
ZBtNb2l/+B99BGzHnKFbFGeMnDWqop/oFeS8Q77fc4ZED2VPtZ8MRP/Sy+Qe
yD+L/YM8O+E3i61IHipnT/z6sqLt1HA0fnfeYeC3sB/MfzDcEO3cRJ8t1zWJ
zXND3n/lPEZuLO+xeK08P7E9Xla8f8g7h0k5h5cV9aSumjnfi/2ztNj3sv9N
heuPP0gfXVY89+f5/3iYx+jly4qzfc7426PG9KaZI2zP0+/G/yst2kl7eSbJ
s8nYssIef+vmRd+mj+8sK56h8iz1P/z2jBU1HYYe3tyH6cty7D2bFmeMnCs2
iS1he4uvV2nhC6Zi9rimxbNH6ky9yZnceaeR68l1rePfRg099fX++qFji2Ic
ZTzleS41pbaTKhXvfvK+ZyzaHvYANJ59PH0cyuvpWnk/l3cH9MnoKDkqid/L
dT3ToqgptZXB/K7tV9lOkWNJk+Jd2Fj+b9Xyxub3Yumv9Fue7drBT6FXydyH
aZjryDs0vEGuT5692hXjMOMx62zW2/x2Letg1sPVpcX3AflOIGtt1tzMpcyp
To2L+Zl5OgHVIJ/dtlgDshZkfco6dXqjYh3Mepj5n3Ugv2XJ71fuLyvuSe5N
zn6pKbWl7tSf93F5Bze1rBgzGTt555f3fI3KivGWcZfni8ztzPEmuZd5FmpR
jK+Ms3mbrz3PzHl2rlxWzPXM+Txf/P8zRVkxVjNmV+X9DfvMsuKMlTNEzhLZ
17O/r0UnWXPPy+8AXc8PpcU+mv00v2/9ZfMe8w3qkW8Q7GX18vvqsmIvzJ7Y
TT+fBvt5abH/ZB96tk6BT1wd2Lr5fWzNYm/OHp12/r8996mm2FX0P7LH5bmj
SXHduf4KaLn6b2pejPWM+bmb14beTYvxlXGWPkxf5t1p8InLnpm9867axX6d
fTt1p/45dYqaUlv22+y7+c1/9tzsvU+WFd/M5NuZCey9y4rfbef32/m2Jr5g
jst8Vf+c2sXvLfO7y6FocH670LjYl7I/ZXxknOT3Tj+Jn1RW7A3ZI95tVKzx
WevvLiv+zp+/9ydHcmWfyn71e91ibGaM3oi666NexszL+mB6WXGPc68/htkF
v43+9Ob1JGtI1uXn6Y+g9+lvNCvW36zDGZd9N78rzlqbNTfrcdblrEXJkVzJ
mdxPoqPluKOsuJZcU36vkNpzDaknde1fWrSVNv8P5mvU/A==
         "]],
        Annotation[#, "Geometry"]& ], 
       TagBox[PolygonBox[CompressedData["
1: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
cXxFX9947ip/UG8Kz5gPfZsXZ61nbu+8wE3UI9UntbeelshW8hH5ifZX98qo
BAcQD+hZE3vHs2tiIt9cRH9nF8RZ9mRNnOWe3crmd6sbMqZLxU+UPcVmGevz
ysjk3yNOmwr94PfkHTsre+aGPVm7snqG+sbXuSEnK3+1TM4QzxJlz2cJT+f9
/82L/eE+GZAOHE7ZUxn0Y/p6OytwuSMoa0P948XA8mKvumcLcwNHFk9uT5tG
5J1UELYA95/78E/yTigI20Afx8J4c5WD6XuT5wH5z/HcQ8jPzw9MV2w3j3gB
NC3RZdRpriM9Q7yF8H7qtSc+TNyWfn+SX+fH+nSdzqS/dp7H1PsGei8r1qBr
8X51Xd6nIj+wIjEjcWjxK3GsCYy9YX7gneKA4oG9lUuhCYXxjr6r6911f537
iDE0If0p4XW07+6cKLMXBJYupp6GviO+nX35Cv1szQ39Sj3rgtyYQ3WTmmQf
2b/PaVgT56fn6MXJWteuIhYldt80eU6H/MCm1tL/3TXBj+RLB5L3F/ST8qLn
UWHIh8qJ7xD/jrn4x7knvjf1noQaEz8uHXhxbir4rXxXPFI8fB55HUjvkR/n
iefK+dCexLdVx/f1O3fOD5lW2dZ95H5SllV/FScbSd298gKXEp8SN7uPZ3+f
H3KV8pU69jfk9xe74Bkb5PnyIdp+Cn2bCl1L3eo3yu6Vv6fizOyU4L9d6a97
fpyhc1OBS+2f8EJ5ojKqMkOP5Fv4TdSBr3auPVfzw56lXese+tiVvId9VzET
ZVrfh7wjCf8lrMgNnUnd6XOedT9tDiT/LMZ5J2UDyf+PvL7KzeR97RjEL2lz
JvGXoXcZ98meA4SfKcNQflJh6KaP0mZQfvRpH+qq66DGyppQE+gp9w/PHpUb
fEJ+IW/UXqV9St1ZHfoY+jw8P/af+/Bl8s/Ii3fxneRDRyUymr4v+rocriya
HzLbUHmaZ744ZSr8SvQvaSIWRPgJ6a/p4wXqDYeehF7ybJc3UH+iuCF9vknd
OQUhyyrTnqVNkTqjoA7pwB3EH9oRn62OlB8yn/KZcppYcJVyRlbgBMpmymjq
FFfQ73BodirkodHJGX0Izzw9P3RqdWvxLHGtG6vjrPLM+p52O0GPQFuqAzu5
ARpH2Y3Qb6nAUqbnx7fzG7am/AzCCc1DBz29JmRjZeQL80IndW4Og86Vn8qr
82OuLqft0IKQhZSJcsg7Lz8w+zz6+TM3cPhTU6G7nZcO+UI5QzvLBeRNcj+n
Q+ZX9ve88dxpRNbFlF1OP/smeJS41B7Q0LzwuVF/U4/7gHr3uNagvZWh3E/q
icrA1cGDMwUhRypPvpofPFm59S7S/Zy3wtALlWOXec5AT/Hs0zxjeNbthYGt
ibFp59berR1Je9KHWaFDqjMeSn/vEnaj/qDckAeVC9XnPoKmFsb8D0zFNxmX
7KEzk7lv5xnoGZYKvcVvob5ZS9ltzkdBrBHXypt5gSOLJ7+fG9iLGIyy32uJ
XpqV6AHKgvkkSunnLvKXkz/L+afd8Txnr+Rc93xXR1VX1dZ9ImU/Ngg5U3lT
/OBe6iz3bPfZhO+LPUHdeO5u6i3kjxFT4Hm7kO7LHLRIh+1YG/IZxPNrAn8T
b+tM3Yfyw2b4YMKrvq4OniZvE+d7Lvm2ykbKQuKQa5Jv/WFBYAZiB9rVtK/1
pY9vyX+xIPawe1lbvDb5X3mfk3h+PeI3VAfvkQcV5gWGJpYmJio2Oq4wsB/x
G3GcL6FF+YEFiUHO890Lgq8+l4xVfiL/uFVMPz/sw9qJ/0h4ieNxXC86Jtov
Tnjry8l6cM/+qnxDOD435Ablh7S8rSDsEUvygxfJk17LD/tEb+q+qm6mTOT4
xTuqA+MSaxBbUD9XxlLWEpPZtSbOXc9f9QMxmg41saZdwz/lBrYvxj8LuicV
tiBtQouS+bgkP/ake9C15NoR76ih7djqsE9rp1b+U967lrL9qkOfUa8RfxCH
GJqc85734kPyH/nQp+5X/Rjzwp6hXeNH9Xhth4SfycvIf5N+Pq6OPa0dTLuI
9pHP82OPi4tUU+85ZQ/yFucGTqI/hviOOM/65GzyjNKX40L5ayp8T/RB0bfj
LXWHwpgP3991Ic7XID/wPHG95vkhMyo7TlevoI/NxDsXxPnpOfpUYchhymNd
yB8L3azcRt7W/MAUxWuUL5QzdknFnnJvvVkY+o56T65z6JlI+hDCjz1T/KbQ
p+Jw5O3Me/zs92FN/SafSwfWJ+a30vlLxTOVBZX9dsoPPNMxvFcY+9z97rSo
66rzeia6nl3XX6ZCflaOFtvQP0U/FWVI5RTlFWW37xnHyZQP0k5ZGLLciZT/
lx8+FfpWtCGclxXrynUkfuY38FtcpK6SH+/sO2bnh16nHncCeWeKS8pXqgMf
Eye7iGdk6DOP+MXKMuR75ORoJ1HmJ+8P9T7Cx9Wb6bOIMA2dqoytbk7dAwoD
83IPuZfE655PhW+NPjZlBWGn8Iz1rN1K/NB04EDiPt/Q/gfGtZn4Ofnh86nv
Z09xJN6rqiBsxuI54jpigmKDi0k3qwlZ6ZlEPlFOuSsV57zn/d+FgXuIf6zL
C19YfQH0CXCdu97157mK+tUFgfOI9+jfo56iXvJdg8AmxCi0i/fICh1ZGV9Z
X3uCdoXz5CcFgWeJa4mvirOqI6sr66usz/JD6vjQ7q7F6sAwXT+uI88P5bfL
6G8P8kv87gUhz83NCl9lfZa75Ic8rFwsHr6uMGQMZQ1xhAdT4eczgXRb6q/M
Chxf3H4odfsXxnnvua/8rx7QLJkj50ReMDIvdPmpubH/3IffUvYJYSHjWyS2
QPkdyiXJ+eY5Nz8V2I46h7qHvisTqFdPmxXhTPr6R+yE+p8Whs+GvhtiiWKK
UxOZQH4i/9BecHRB6BnqG/JmddGDEn6ibiSv3ov47pT9Sryvbanzuv0Xhhwj
r5PnzWdQNTXBG7oRXsW4ZpF3fXXwCm0mYjRiMtq7lP/VA37Rd8z1lRs+CT3F
H1KBt+ib7vf1O4uNiL+IZR2erB9t5J5FnknZNWFT14YuD5FniJc9qH+K9vbc
eF/fW3vJsILA2pQnlSs3UudZ8j+HDq4J/6G/E7lY+Vg9/yFxtoIESyoMvf/7
rPDvU5eXJ8mbyihbkx/4uDi5PhHjoBXQ94x7YjpwAnVmdecBCR9dURg6zXsJ
r5Hn7CB8vCZ4lLzqVPJm54Zeq34rD5WXysfbp8N2JkYuVu46d71PIV4DXVsT
43IcnyTr7lH6XV0YvnD6xB3MPOyTGzKxsrHYzFmEe3q+0/4h4m8QH0j8Xur8
4NrlmX+Tv3de2Jq0Oe3ivqTetlTYtMR6xHy0W+zCcy4oCJlbGfuerMBqxWyv
4fmpwpD91QHEzMXOnyT7v7zANt0H7oc11YFBig1dRTjF9VATmOQr+SHTKMNc
WhA6orriKb5rYehDyrbKuN9qc6qJtlMSXiJP8T7EfHkU6TzmpAnhVaRPFhut
Dt8gfYGuTsd9BO8l/EF4rH4HBWE7FssQ07iNcBp0Q0HI7MruR7h/8mM9uC7O
L4yz2zNcfvgU7bonZ5BnjvxRWXVzdeDx4u/q58qu4kIzkv59TgMxPflZQdgJ
tBf4rfxmYwsDnxeP1+dlsnKY2E9NYGvqtuq4ypnKm33ywzdnQk3YJJVHFyVy
Wb+8sKVpO9Pmre37ssLAk8SVxDq1wai/qseurw7/R/0g7yc9F9pM/QcI3072
vjxAu732+4cLAl/3vPHceV0/p6zAQvXd1FezgGc2rQ5s1HPWc1X/N+2R2iXP
1S6bCkxHDGdt8j39rhcR3pcKnyh9o953vaTD/1X/L/3AtOlrw9cfVplNWVuZ
27PRM1IZbgTPOlJdMOHx8nrlP9eh68597f7Wv0s/r8HkvVQQMrmyeSHx0z2n
CN9jnA3zws6tvfuJvPCtUsdX19fnYFzCV16gTZdU+BXoX1BJmxMRsN4j7zTe
+7nC+H5+R/UHZclR1eFzp++dMraypbKbmIgYiH4l+pcoy4m1iPGJ6eUkfEn+
NCUd8+R8KfurA6wqDN8u/an1qx6X4PEvJHrThzz3XXl0fthc1aPGMsbh6cBV
xVf179DPo2tyHn6S8E3f1/fWv0BeJu/y7FSW1d/gs4Kw/Wjrmc0c5SlPKDuS
3kCYnRu+xPoOr4aG18RedW+KO+qnob/GOr+nckIqfD+1UWqr1GdZbE2M7VDK
RlSHD7MYqj4r+qiIiYiNiKmKozdTB8kLHxZ1SHXJxQnuI6YhtqFspoym/qjN
QxuHa8E1od62U9Kv/duP/W1NBT6vv6R+kz+S/2Be4PXqcPqNeTZ6RiprqdOd
kwrfeX3o9efRr0f/OLFBMUoxSc94z3qxwhPVeajTjXBbQciWypjOp/vJfaXt
QRuE81tAfsea8Dl177kHlXE9E8RelSeUK9RXPCPmyhOrw/9xo7oZ+f8UhIyr
rKs8qlwqn9ucnAneZVKOdc6cO8+INwvi/f83D1mxtvsUhD+qfgv6L+g3oP+A
vkL6lekDpi+Y/oT/qJfnhp/Jw6nwLXINuhbF/NvVhN+0/tN+T7+rdpJ0Yaxd
16q2B20Q96bDzqy9WX8S7dDao/Ufca+3qQnZQBlBPca9/1F16JHqk9PScT9s
NOXXQM9Xhy6gTqDvsD7E+qK2TMedBu82DE6Hb6q+GvpsdMiLc0r+tjaR0wZl
BW4lfiXupNymv4r+KZ59noHiPc0Kg4/Jt9RflV+UF5QbpqWCh8ozPRMb8dxM
YfjT/5sfGLn6lXqW/vXabPXHEUMUS/y0Qdhwdy0MmUYZZlJ1+H/qB/pobthB
tYdqc9D2oC+89nrt818TXlId/hf6YXhnULlB+UGsThuPtp6pNSGnKK9cSvkv
9FebFfcZh9DnabQbTXxGYdxv1BaiTaQkP+4/eA/imZq4E/BVdfhEaX/QDqFN
R3vKxdq5GNP8wrD7aV8RN7yiJvAlcSb9u8QR9Usfz7g+kp8oh2WFn7p2G/EO
cQ/lAc9tz++ViW6hfVY7lPaoB6rDj0UboTZBcVLxCnGLeenwc9LfSZ99MfQ7
E/1xR0HoOcqByoPqkwfQ58KasO9r59f+qx24jPy+heEHod+DPpT6UnYoiHsp
3k9RjlKeEhvaIh7s+ck4WpIeoExBm4GFoQeoD+irL84m3qZtd3Fe+AroM6D/
mrbel6FTKD+1MHyWxDTENu7LCvlIOUmsUzut9tqjCoN3y6uVN5Q79N3R9y0n
L3i+vF/8XhxfnaxDMmZxLbFYdTTvM36g7KiSKI6XivuN7pX+BYFRii+JM7l3
PK89n+8oDP1dPf6EwvDtdb24brxHc3E6fH2XNQ88U1yTf6l9+YbLm8ddn641
Ycc4KZlT51a59Mi88NlyHpwP5VQxYe/gulZds3NqAiN+J+G5ZyTjcVzz80Nn
VOZTxhO3Eb9RhxxPeGp1YIxijfpjzswN3wntP+q96r9TlJFr4s7T9HTcB/Be
gPdevOdyXmH4LuiroNym/HZ9YegwExJZQZnB9/M9xQzFbsRqtH2qv6mvnVAd
56jnqbYr7wh4V0B/GHVWddeiBEcRT9mV/Nya8MHQF0NbnTY7/Qb0H9BfUN1H
XeeVVPimKZsqi+rTpX1cO/nxWYGVqw+rF2sr12au/qK+4h2xvqnwV9JvSd8Y
fT317fQusTZtbdvyPG0S4gPiBNoH5YG/0f7d6pgT50YZd0eD2Ctn0Fex3574
b8ne0ccyOzlDPUu16+tzKT5wUyr8CfQrEL8TL7gNKs0PHzl95c6HhmaFPUL7
w7GFYT9wjbhWXLPKE8oV+lC4RlwrywoDWxdLvy8/cAPxA+1v+ueKSYtNa0PT
ltY5K+x72vnEuMS0puSFHUq7k7qnOqjYobZK75fNTfjqHMJbGds25uGBwrAF
avv7h+cfKA/LD3lV+VScW71J/elB0ivyAtdRJ1M3U8/T9q+frD4eypjKmt7l
W1wdd6o6psM2qo1Uf2TvWNnP6wXh66hvhfiR/crDtU2LjT6VzLU8/fX8wLOV
bZVx1Q28P3E0fX1B27tT4Zeuf3pNddzD8t7VnZ7Z6bgv5b0pn+mzHbO6lbK4
Mrkye02CUeuboE/wiwkvlGFoq1NHlQfIC9Q91EGUU5VXxTrFPL3f/1R1YPFi
8i9od3H9F4SOrU6tP5Q4jriNert+K+K58gf5hDrh0kSmX5WsB9eFthbt4+Lk
4uX6tLluXb/Wt1ysVrxF3MU7DPpBLEvwETEzsTPtdeJyy5M159rTR1RfUX0I
9CUQrxKf0nalT6IyobqSOpPYiFizMqJYkfcavd/4iWs0HdiRmJdr2LH7Duoj
2ib61gSfk9/ph+7djQ3V4WPen7LH8sN+p21HG0/jZC+7p8UAlauUoza4hqk/
lXrPqvuTvjA/7kFoJ9BeILYtxq1/a1V13D/Ut00fN0G7V1Nx90gdWN4pD9Xv
y7tIYpzfEu9YHditGK6Yp/eWvL+kfVo7tT473kvxPtqt5HXJjbus3mn1fpp3
XK5PxW8MKEsqU3rnRXlDfxF94b07oZ1F+WN5QZzf8iK/rd9Y/8WtyX5yX9m/
z/EOpjYJbRP6cGpL0aaiz5h319wz/7tjVBB+JN5lU1/3DqJ3EdcyrvmJ/i5e
6Z3Wf5O14JqQ/3ifxjsDOxJepDyjXDO8MH6XQTu69nTPa5nQbllxz8P7Ht5h
eZxnbZf38JzO1XFn1uf4vAWJfUWMXz81/dK846u9RaxIXV3d/OxEh1KXEs9Q
/xcH0C/Ys8QzRWw/LzmjvCvn3b+FqfhdC/2OtD9ph5IPyA+8l6tNUNugtjRt
amXpIOPa2bznoz6kXlSfvPPpc3ODuFMsxijWeGqLkL2VwcWh9lKebRE2fm39
rjPXm5i72Lt38cS4xbT1+dCHW19u7wzqpyyeLq6u36j3vvRF9Qz2zJXPy+/1
79Bu3pOyo1MhizdP7Oj9EvuLdhj9DvQ/GJ3Y3bSzeY56nqqvqLdMyI07md7B
1BdAn4BW6cBgxDbbJHaZDgkms4dzonxQHXe4vLN1C23bVwduJX7l3S3xXXHe
9yXmq646/Nb0X2ubDh8gMVPPKc8rsRQxFf1n9JfxfqR+MfrH6FvqHTLlIOUh
f4PE3yLxTpnypFj/fum4q61srHzZi/C46vhdlP1TYW/U7ujd3Pvp55R02He0
83hX917tJ7lxN8c7Oi+qt6ZDbvmfb306bMxia8ox2rW9oygmJTblHW3t3OpN
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
EXzoNddGSfjk6pvredoxE/qjeqS+X56vhbWB7c5PvpHfZEN2yJj65uqLO1ad
vTRkTrFHMVAxT2UFZQaxyCdKQ65UvhxH+knXSVHMsXvPvabtYXoy58qcyp7q
z+rRYkkL5TGuc/ocWhL71P2qrOzZsm9RyCvKLepPnjXqNeox+ifqj/gg8edL
Q1ZWZlZ+VY6VX8o3faZz6xx79ngGOQb/Fq1/k7YkO85qz2xt9pcT7pUd68N1
oi+OPjn3J/PrPLtP3C/qyK7xHZmwG4nLic+55vWp6ZcJHyfXs+taW8I7peFP
rF+x68L1oS3m/dLA4sXe/Zu6+mPol6FtZDDzvDTZD+4LbSXaw7WL61OjDVxb
+LKEb7yeCVlFmUUdTD6i764+vB8Qfp4J/UM9ZCVhlnpQaZxrnm8vU2d5gzj3
1iZ8Uj8U/VH0F9U/dLh7hmevJnw8E7Li2rLAzMTOxMSUHfXn0X/Hc9hzV1xq
XcL/5IPq5cpTyiPKJZ3K4o6A/uL6jesrqc9kQSp4t7zas/l00t1Lw+e9a3lg
9uqH6on6wCtHKTeJWevjqX+Hfh5FOYGlip3q/6EfyA7t8SWh0ym3KL+IB+rb
pg+JOoAyv35Q2o+0I2kn1S4q3qxOom7yR03gVFuT9ey6blEWuNUt6v6lcYfA
uwTDeW46E374+nbry63dQ/vHuQku6V0FMTOxs//51lGeTV+XUP4f+S3o4yDP
x9LAZMRmlDWUB5QLtP3oV/NEJmyI4q3iLeIu+q2/Sfpo+nie+H814ce+LBOY
ixiLfqXaFbQjqJ++WBr6lfJkXqKv6nslbi1+rQ+BNmdtz/pd6Geh36T+k95T
8L5CTnnc3/Aeh3Ka8prY1pHQ/vQ1leeXE9/NMWVCF9FXXsxQ7PDwRDfRpjyu
OHwR9EnQ/04b81XQTsqaZeFzJfYiBqPt951MyGDKYuKy2oKblgW/l+8rtyi/
6GOk796etXF2eIZoK9Bm8Hdx6H7qer6LYxefm0Mfc6FrHQdr8/2y8AXSl1Ys
rHmyN9wj+ta6LhaXxHv6vrsm68Qz3rN+t7LADcQPXlMGzIn7LUuTOzbetfms
Ju7EfJIJu4oyr3Pq3Crzqn+rhzsPeyYy8F5lwXPlsfbvc0aUhf6p7KiseGVx
4Lrqo+3VuzKBkYqV6ge6NhPnqeenvnX62G0mr6A2fPK9E9I52cfuZ330/+dH
k44z1LNUnzn9apQDlfsOg44tDr8J/SfUkdSVlEeUP3w/31PdUOxTjEmsSZup
uuKXnIETmwduJ07nfZ/vmoffjfqzerT3AsRoxGr2dk9mwtdDnw9tgdoE9VfQ
b0GfSXUodab3ssO3ThlXmVY/M+3p2tX18ann3JUHjq+Orq6ufqQ+NIC2A8vC
T0p/KX1y9FXVN1U/dm3pgxMepn1D/EEcQvujPE3//12KYn6cJ+Vk7wO4X+4l
nMmzZxG/IhP7R79RzyzPLs9dz199AcQfbs+Ev4J+C2KK4hHDy+Ls8azRF9A7
LDOyw9f1GeocWxb2vO2Jft86sYVo+9iLOhkoqyjWketWmUXZRf8N19WJ7nPq
jCoLm4I2hEfLwr7XJBO+xOLw4vHa+8TT9MvWL1bbpDZK8TV1UXXSA7PDj0d/
nnWZsKVqY9Ompi6s7itWql65LTv0E/UU79GoZ3p/Sx4sL/6ENdKOPsaTPqss
sWWWxTvPJX5oScjPysvi/ep36nlnQ1OLA5dSd1SHVE/Vr0H5QXlBX159UpSL
lY+3p+Nekz4D+g5oB9YebD8XlIbPp74e4l/2W5QJLHh88r30N+lRHncmtF+J
5yuHK4+rk9iHfTkGdTplfWV+fZkHKJ8Qb50Jn219m+WR+i5rO1QvljfII+Ym
GK26jDqNMrGysXYD7Qc3JHPpnKoDTisLLEnsSF1fnV+cVL3z37Lwm9F/Rp4i
b9GOvA/74JayuHfh2ewZ/U5N/N1a76h4z0L/NP3UZtF2V+ofXxa8VR7bKTv0
EfUP15JrSvtU29qw72tf0M6gv94Vyf4Q8/GOnP6a+m2qK6ozjiyOdrYXzxZn
Em8SA9T2+D9/jrLAhsQE15TEOe95PydZ065t7c36QojZid1p39P+LMazTybk
VOVV9Tv1vP61gZGJiXnP0PuGD7ueSmLP+F6+n3qW9hp96r+in2NKwv6oTUzb
mHqsvEKeIYapnKa85n0E74Lqt63covwiduk9vl8yce/Bew7X5MS9vmLlDtqM
zA65Tvnur7Kwu2hP0K6grUCbgXYYMdvn5B9FgTWLOYvherfRuy3Kbcpv3mHy
LpM25MMycTfGOzJf1IRN+e2iuGvn3bqKTNzB8C7GuEzcHRKbFqPWJqlt0jt3
6vfq+d5NkH/IR87ODp9CfQj1cdHXxbtb3vdxnbnexBLFDvUtakSbfbWxlIW/
rme1Z7Z36bZk4q6Hd1WuyIm7dWJL4xLd3Ds06lPqVdrjtK1oY9H2qA1S+5x5
lmmb876N+op6i3xgUlncD9T/Wj9s+cKYFiHTKtuKPz3rXfsW4Rspxi7Wrh+A
/gDjMyEDKQt5R0d5QrlCGXx0UdzF0karrVYfRn0Z6zJha9DmoO+/WKKYoj6p
npGeiV8m/FbfkE3JGnVNrqHuZ8pEtXH3zvtn3kM7n7F8XRZ38bxn+iR19nOf
MOZvy+LeqbiJGKZYpvYa73mJo3g3be9MYF1iXvqo66v+k/yL/I01cW/K+1OV
OYHpivOKXYlh6TMlxivPl/eLfYiB6OMjHrrN750Td6+9g+19Mu+V/Z7wX324
9Mvw7PAMed27NEVxD0x7ptiIGIl+Va2K4q6Bdw70HdGHRN4m/iQOJZYtpi2v
8z6fd0q9Q6qfub6h+ohqi/DOkni1uLV+StomvMdcL5GLlSm1I3gHWjuUdqcH
Ke/Ecxq5VpK7nOoruf/ff3nc7fya/Etpf3JR3AXz7leh/lCe0UVx/8d7QENI
F5PfznQm7nJ5p8v7Ut6b8u6pWIy6pjqnmKzY7E3Z4duqL+vv6bjPVZncpdPf
Wr9rcR/xH/3o9Ynz7px35byHJ84uru4dw16ZwBLFFL1v551D76Tqq6dvnndP
vCPqXdFXa+KukzYY9TD1MX37xWTEZvQfdR26Hr0f6R0zx+YYvTtcl9gL9fXQ
H1G/RO+0qVupY/1WE3i3uLd6o/qj9saa7LjfoF/kbsl9tpMzcff2zER/VV8V
fxKH8n7mmgTHFM/0Loh3QrwL7v0Y78nsUR7+6/qr66Ok7qgOqY+td8P0qxMf
9k6gdwD1IWyb4MWHZOJukr4U+lR4Z9jfB9APVH9Q7w56h1A9S33Le3niyeLK
2t9+8bcZy+MekHdUvauqf5N+Tvqfez5qG1EGVRZVr/a8VP/SJqQN3Xt53llW
H9OGrIyiTHJxWdzT06as74I+DPoC6XevHqjep4/bxkzcxfNOnvdxeydnQp/y
+F0EfwfBe5NPJXcl+2fibu9BCS4gDrClJu4o6Zupj6b4mzjcSPc66Q/9LZKc
uJPp3cwB5XFX07uZ3pvS90MfkCMSW4W2Ce+r6Kfq+tDPVH9T/XSU55XrvUeu
Ta0yE3elvTPtvW5tbN4Z9Zz0vBQXOTJZ0//WhF6tfu3dAu8YvET7mTmh96v/
64etP7b3ObXfaa/zjri/neBvKBwLXVuBrMd5elxj1h3r4h7Cr6CVjXiPOuaj
HnyJ/Gur+A6ES0g3rIaHUf5HRfw9a/+u9XDi3xD/nL4eYo8tpN711H+UcCT9
HEufP0ODxH18R8awP/mnlcffQPdvntdUxN/lnky7GsIzyGuWir/TfSntDqNe
MXWOqmRtN6Et/fUn7xnK6vGcTuSNo809xBf5dz5JP078LPLG02dz0kW070x4
CmHGZ1HWjz42U/4ReSugWvr9gPbnaS8h/TVhY575DzQb5Xs6czGJvO202Yv4
YdQ5HPqT+A/kvcwzc6nbgLw7ybuM8GLqP0PZRe5FnpeBWlXEeHz+vKoYu+8w
lvBSaCD5P9DXPzzzR8KLqHsuVEDf5xEuz4m//+7fgT+JuSyhj0eoO4LykdBO
zN0y8toRH0z7odTpRfmVrg3ya6DvmYP1hFeTN9F7d/Q7tjb+Frl/k3wV87A7
4/ia9ldrd6B9B9JvUW9f2nYhfxf6/YY+bqSPCZTXEt9G3nZoOnkjmM9O1H9O
HxLSZ9HmRepMo24J+VXeWyesYZzPQXnEs8g71d8SIb4z7S/mWSsp24f8DfTR
h7L2tO/jeKBN5N0BLaD+Quh86lfxjL7Uv5+wN3k5tHmavu4SkyM8i/fp5jeg
378oO5C8H4h/SdsbaTOA8c+m7n30/zvlPzD+Xwl/oU4b6jaH/qaPFoRnM19d
yT+R/u6nTTFztzt0LH3k0Fc9qDH0H7QO6scz3qK/Csofdtz085Dv5XxAfehz
PP1t4nn51HmMsq9Iv0fZ7YQnE95BmGZsw+lrMPSE/JH027RZDGXTbi+/PXm5
0EbSN5BeQL1e9N/GsViXcdRQloHK6Pcen0V/s4m3VHaj3jDan0ZeZ+hU0i9A
aeqPJn8CfV5IuA99ribvc6gr8ffo5y/qLaX8B8I/oB+hx+n3V8LL68W+cB+0
hobT5hSfTf4bhPPIK+T7PUjYjT5qKF9EWQN5id8HGu065tkrvXOjLO55puGB
dpWM41zxDNo0pY/9yPvQ9QSN5NsspWyUPIyw2jvN+mLT5m2etYo+88lbTtky
+b7nn+uHudro2QjNp94D5fHN/fbVtBlG2JZ6G/1dNPjgEwylEeEC8j6R73ku
6t/Asw6m7qeeXaSPI74b79LKtUK6gGc/7b1B0gfSdnfCR+l/HvVvdc86Bsb6
Lvl/E3+PsGlVjGs19ZoT/5VxPVkZ43yQvHPprw99n0H+l8pA1LmP8It6sX/c
Rxnqvk/+t6Q/J78/42hNmx7QTuTfRd6ePHcJ8dn09xp9LYUOlQ9CX0A/0fY5
ym6nXjva96PNSfS9mrL6xO9n/C14zuGU70r4K/Wf9Cwkf7+Ex8nTLoduZh67
kz6ZsqXq9dQfCD1MP9cQrqT/NdDd1D2aeu+St5D0ATzvTvIaaUiBZtJ2CM9/
kXb/yt8S3iIvKaZ8M/XrE/bhOdurgnfKQ5/le2+j/t1+g8ZxXnhuLKb+tYz/
FcLB1Muir6OJHwW9TPsDqN+Eeu/R/nbCw6j7C21zyb+gPPiTfCqP+i1pX0f8
Yfk3NJC6x5P+kbZP5wafl9/Pod2n8nPitxD2ot1LtP8lJ860f+viXPR8TFXE
GbeJ8kMIW/HceeR/Q7qU9Cza51K/i2coeU97JvCNX6fe3pRVUGcf9yr5K2j3
Gfk/66/BuBtRtsrzlvadSJ9I+8YVwa/kW/eSfxzl3aEznUvK/iFcQv5dVbEH
3YudGwd/eC+RBzz/n+R9L4OmMecZ0l/wzG60q1U2IL6bZwTPG016GP1X0v7l
8uBZ8q5d6XM0YzqH/J+p9xZ1Hq+K83YP0lmcZ880Dn4j32mT8CJ50kTPZvkh
4UvyKupnk/908j39rhW0ncoYTvcdPJcJdydcS3k/5wz6nXEud/8Tz3b/MZ77
iZc3jO/m9+tQEeva9d2xfpy3nrsf14+z07PyIMZ6PO2H+r3ov7HnIOly4qXE
u7kfqdsaakxeCXQodUd5ZlBva3nsp+7J864lfSXhY9CL9H8x4/mAenfTz1jC
fQmfhHoyhknUeZt+X6bOGOIHQHvxHjsYYzn5j7peCK+TH/s3nym7XhmGvCHk
jYZ28u4Y9ZvVxfzcRfxmeZS/eVcb83WW67oq1qfrtJu/00H8Mvr/hzpfUbaD
9DmM4xPCo+jzK/obXBHP9NmDiPcn74Pk/Z2HP3ifF2izRD6g7b9RyGjKap/W
C5ko7TgJ//PbJjLSiLqQWZVR5SPykz0bxXfxO7xIegbldeyzzqSfoP4wwhtr
Q/5VDj6JtvfSptrfhOT5fxE/lvwlBbGvF5K3M997BPETkn2eT3g9fbVEtj4q
N8qs82ZyRuXWD7nCs8Yz5zjHot+UfIc5+oRxnansxbOOJv4Q83Ia6Q8pO7Ui
9oh75XKonPQ26jxG/HrCA+j7I9o1p/7nhJdSvhvxqdYnfZV5EuPbAxrvGEjP
gz6k/WT7IH5HXfAX+cw60gOYpyXEp/HsQ4jfqi5B+njq7MHcVhAuaBh87bxE
rv0a+tEzDtpM/Hzy1zM//1JvvmcOfWyrCL4kf+rGc1orjxNu8xtDu0BDqP+p
/JmyV6E8+ZoyvHYa55nysfRzJWWXuGeSufDd19D+K/qfQnx/5Vq/KWUbmO9p
rlfK96gX395vfYNnuXxB2Yn6+8tbPM+Z112oV0y9GeoAxG8m/3fa30b678rQ
vS4Uf6af6aSvqwhdrIHjIT6TNhOVJ7RTVMZ4fP5RhAXkd/R5hFsp66eMRpsW
FSF/KYdNgqZSvkzfP+rcTNklpG8n3AHd6hlEf5/J48sj7yXa3EQ6l/yrkzpV
pO9QrvZbkf86zz2Xeu3pqyfpWY6bsIx0D8KX1IM8N5U1oK88m8l/l/f9kHHe
a7/0+Q60wrMwkUGVOWvJO4jx/0f8Nfp7i/y5fnP6my/PoX3XesFP5av1qH8O
1J74VvIeos7dtSE7KkPWJ30f5YOcO8Ined4RtG9L/FHKvyd8hLATeV0IN2rH
p23DijgPPBe60O+rjeIbXtIc2YOyLZ5XFfFN5xMOoM7P1O1Ive/k94Qzy+Ps
96xXN1EXvDNZj8o9yj/z1fMrYn3+xTwcz/OfId2M9OX0+YxnHul/ofugOtLN
oeeJl8qPlF+rQkdSV7qd9MuUTZDv0n4cdQ4hnAg1hG52PVH3C7+vZxl0KtRO
vYSw1H1L+0F+Z8JxFSHjKeu9Rp2SypBH3yQ9yb6pd3OjkE/bMW/r64V+qJ54
GOWHke4N7Uadm6jTiHFNEx8g/m1O6DPqNWuJv+dapHwetJz8k5RzEj4jv3mW
dmuVL2jbs17wEnnKx67jutDf1eOV+5Xzi9UxlWsbh16/Iql3Hm0WEx9D2evu
K+gN54JnvMr8n0HYHVpFne8Yw87UO4bn7UrbzzxDoDcqQiY9hbw0fW/nmR83
Chl1GnmPp0JmUnZa5/tBG9yfzMsV9LmeeBP6beVap10e+e1p95/zQZsdhLtS
/pJ6tjyDeEfy7pJfEf+avHWk10O/Ed+HvELoKspbk9eLPrqR3ky6jPLLybsC
qiWvAeFTFYFtKFcpXz1LvEGjwDruos7J0CkNg3fLw89339WFTKYM9gTUmvpP
em5AbaHb1T/p61vxCt7xJuUk+vuJNg/YXt5IHyNot5q8JYQHUP6dmAdzeVJF
rHnXfnVypnm2fUzdPenvdNLLlQmo35x+LqB9U+Z5N543rjZwHvEe98qrlDep
CN7yX7J3Uglfk78NFzegbDPprMrgB/IF5TXltrnK09TJIf5nTvAYec1Y6vSF
bqyLeXQ+l9NmBM+90DWgHZ7yvMrAgHITWaxT/Tj3POfUcZTNCitDPlJO+pk2
add8vcAklO2U5YqJ31MbGIV73T3pHmymPlMRe/8Mz37XNfFGxKdQt4w6Fc4P
z82irEKZSBmd+PmUDyP8wbPYNuS3qAoe3yIVWJfrwPUgz29CvINnKOmDaXcl
8bPFeJiX6Z5HxI8ib2fqLaLPfevH9/M7ysvECsUM76BsKc/Z4Hcgb3dlVc8D
ZZt6wdv8Tn4vzwD1CHmfvG4mz9ilMvQKdcf65DWg7aKK4KHy0udJ39Uo9Cn1
Kvv2GZ7Fv5D/TUXsC/eHZ/NV0KXw86/J30T5WOq3oWxneSPPeIv0gcRLoVHu
mfKQLeTV8mxxFfEV10+adDuxo3px3rie3nd8dSFjKmtuos4Q51I+S9lX0CUN
Yk+7tztBl1C/IXP0Os+6jfgy6HTSa1kD89TfeJfzXGPkbaXdQ84J1Kph7DP3
2yc+R/yjMnidvG0leVM8b3NCZ1R37Mt4e5LXuzJ0fnV896J78uyGwbPkXZ3p
60DyttDuCnElxvC942Mc7flO2xyLsiX5i8ifSd03ld/Efehnmm0J+1cGj5BX
NGJOHlHup87mRJ9Xrx/genev8Zwp5aFfq2f/JI4lL1aHrhdz61ye5rlZG+eM
500bxlDlGnFefI7yGvG96a+Qsa5zL5eHjKysrK6sziy2fHZF8Dn5nbLrUOg1
90H9OEM8Sz7MCZxHvOfYypCdlKF+hfbiGavLQ3frKoZOWQ7ttlSGLldPXl8e
eIP4gljtsY1ivbm+DiLcU1mFfk4kPJL3Pbky5E7lz8uVSdWb5c225T2H14sz
27NbnebIijgP1ifrzXX3HfV7EN5J+VTPRMo7Eh/j+MX11PsqQgdUFzyRvEnU
+5j4LMdJfC55rxHe45kJ/arcoOxWG/KY8td+pKcoB1L+AOm+vEc/MTXSA+uF
vKHccRPUqSpkB2UIz1PP1W7UWU79yzzr6fdK+Y3nGvkfUN67UejA6sKzamMt
n0D5FjH6+oGPuLYPdX/STx7pS4kfQLxtcgaWJ/LZt8qGyZm4pi5kC2UJ9RR1
e3X8DtStT78j6OcIsUz6voo6PVzzYo3Ex1P/IW0kxK+rDGxNjE2dSt3q1IaB
uea71pN94H4Qg20LHS9WRL1HakMHUBdQR1CuVL70nPK8Ui5XXs5rHBiYcoby
hvKzMvhYMWUxJso7NA6ZXPnqfWVk5ZeqwI2Vt/4lfqfnGvnLGsZedc9+5Lnj
fJC3HTqLZ+7jGqbd3ZVhi9Am4b50f55D/hGE91YGliCm8CVURJ2n6kLeVu7u
Tfxa1xDpZdp/tb+JBZLeTF91rp+q0BnVHe8j3kLdjjZ7OpeE/8iToXeo83Cy
bl2/vShfpUwvf+M5b9SLNehafBza31D+5v6Sv7reqdOSunXM0xcJvitOKl56
Ic++pjzWtet7B89+Sj5BfLpnFW1vgJ6HniZ/OPUXEb4KTaDaseKUzgPhyZSd
Aj1bGXqs+uyd4hI5cQ57HmfTT0PCOeoY+oxUBc4g3iDPkHespGwx4THqXITT
XavKN9SdwnO2U7df4xiDY2nF/L5fF7xLHvYF7WeoI6vjqP9Whcyr7Puj64bw
LcLl1LuasmriXevHWhMHFw8fkPBn1957lYGViI2IC4kPPZScR9oAxPz/Jv1+
ZZxPsz3HKgNrcp24XlZVxr5uUy8wBGV8ZX33uWtwDm3G1AveMytZk5dBF8lT
qkJWVDYU/7iNep3lI9BF9LGTfVJv30TXVbftQXiDsnRlnLE/iKFT/jnpverF
mbvas4ayNeLp5K0hvVQZIjlnhiQ8Vd6q7K0MoyzjN/XbillshPrSfnhd6PDq
8u/zjW5Qt6wIDELMoavyLPmdmeeDfAZjG0jYnnAR+VvlY8RfJmypruEe1z4g
/+IZg4n/xTtkNQ4dVl32x8qwaWnDOlCbAXQQdLfnpzykMtbYluRcmqwOrX5N
Pz+T14n0YcoztM+4dgmHQsOg/KrAGT5S5kueZd/iDivo4zfPcKiS9O+UdSTU
WVkcTjxuiHoZ8YsrAg8R//iDfv9KeIK8QdlzMX1NYDxf1gt7q7KoOtG7pN/m
2evIm90odKRt4qTM35+eleQVk9eY8veJ5zQMuV35fY6ydkVg2WJHYkgnUKe/
ejPP25AT9jHluacTeVK5UnxeG4k2EWVX5UnlyqK6wHV2SWRJda6mjcIGpy1O
e4b6vXq++JNnoWfi2dR9h/I7oVvJP5S8goqYK+dMPExcTB19Rl3I8crz5ZWh
s1dCVaTvJpzaKN7f9/0d2q1xyFrKXBPF3RuG3tqLfv4Ul1A2qQg9dkV5yDTK
MNquzmbemxF/vjxsbNrUMtBQ+60L/UY9x7PSM3MAbetIdyMsbxy4ofjhvpTt
4lrjOdmNQ29Vf93ftcCY+hK+qy9QZeBv4nA9q4LHX1cXMqyy7BENg+e/SNuJ
laEHKyMrK5+lrqMOrXzBM4po3wM6G+qf6Mbqws1pO1IZtlHImsqc6qm/KKcT
LiwPG7O2Zu1e2r+0J/9EP9srY013TL6Pe8K9oX49WFxRHtMovrnfXhnzs5zQ
t9Uv1DOUObvXDxuB8oRyhbq0OnWbBBsRI9Gm/h9texB+Cl3FuK4gLPPcJDy0
LmxZHepibI5R27e2LXnGrEbBc+Q94qYDkzlWllJ2EsMVy3XOtfWID4oTigGL
BWv7EbsSMxIjmkO7f7MCyxKLrXMeGwVfsm+foR6k3qN92T3n3ltZF7bxyQkP
cd5c39rKF/L8f+rF+e05/qAyHOGgyrCzaG/ZQ55AnRx5ifoi8VXkf1YVfEP+
oQ36UtLHV8XadI1qkxaLE5sQi1CnV2ZSdhIjWlYR55/noDK9mNEllSHPerZ4
xig/KkeeWBdryDUzqV7YJrRRaN/SzuW8OD8nUf65Mkqy1l3bfmu/rbiJcqBy
30jyL2gYNnJt5eIW4hfi8uLzm+ThFXEGexaPSfa6e15dvjXPGqXcR52GdaGf
qqe+UBs2APER9Wz17fHE65SBa0N3U4cTX3lN/Rw6L+G9zqVzOop63elz74rw
49Bvw/PBc0LZ33f0XV0T4ofqAreRN7syZDxlPe1IFyVnyK6U9eb5l5B+IyfO
lNWNQj5STloh/1Q/IPyCZz9bEdimeI9n+f+1dObxWk1rHKdz3teUhjO+Y5zz
nmN2yXRvyM14QzJHaDAlRJMkZCokM2WMSCJJZipDhswyZJ6JMqfMMtzvt2f9
sT5r77XXXnu/e6/1DL/n9+xXnf5OVcx55/4JjeGn6K+I2Y/zPPqdn2SGsuME
2i+gHsp9tqHvmbTfx5jvVwV2LFasLartOZ1zF9B+CduL6wN/FIccTF3Nsecb
g5MiN+Vx5X1D3OOiZM9dWR/4rPc8sT4wbjFtfXl9d/G50xoD/9LH1dfdwm+e
1wfmIa9Ffos2ofaCdsMzDWF3aX8ZGzNGNqk+8Dffje9C3d2a5tX49Jv9jTfV
hw+mL6auXFAfXBU5K3KU1J2fJVtE22Nqfdid2pm9fWf1sb5cZ+Jy4nNyBMQX
xBlm0/5aQ3AGpmnvav/R/iDn3KZsaQxOi9yWCfR7Sd+d+jT6LWS7i+Npe1PP
pNzJff9QG3iba9S1Kn64W33oPu0GY2PGyIwJqQvFl8STrjYOo5/MGIMZ+1y2
H6J9MvWqzjfKw/URHzaOLv4jDiRGKVb5SH3ECLVFtEm0F7QbjKGrh9XH3RsC
DxEX0e/QzxjfELiD+IPx/jXVAbRdwjkb10Zc0fjibHVXQ/jG+sjvce6nlGfY
vonjV9H/yqbAx8TJ9IX1ib+ilDnvAI4fSnnee2sK/NR55Hx6nP0X68Pm1/Y3
VimeJK70F9tTmsJG/SDZsdqzYvnjkg2gLSBeID6woiF0a9dkl2uff6uOrY11
6fo8h3oI9ZvKO8abqw/I/v+aQy+pn+TIfCwWXh8Yjr6BPoK6Vd6J/JPWhCuq
a41B6E9qw2vLK0uUKdpyyjJll3FS46XadspsfUvljPJG30UZPl9Mjv7PNcWa
d+2fKH5aE1wHuQ1yOORynNUYuMfY5njOPm+xCHGQT/x9TcF/kge1M/1vawrc
yfftezf2r25SR+m3yyWQU+Cadm3rxw9lvEfVpWyPVlayv7w+4k+d2f+R7QU1
wWEyHmVffepf0jMxPuO5u9cFdqb9ph23Hv06NId/nmecYasE1iPmo78uz0tO
oP64fvmK+uB9iav/zfaa1IMpr1UHzn4S9f3N4cPqy65P/WNdyMuhdWHja+sr
U5QtxzeH76GvsYH2C/dUpd9cH/G/U1KswJjBN7URJxRXF1//siE4THKZemsj
5eI+vJ8haX65dlxDxtWMr8m/kBv2Jsfrc2FfameK0bTTtuT8QRwfI+bO9t7u
c7xllYi9iemI7RjnOEkMgOf/SnXYydrLYuBi4eKBHyUMRyynkbbx9D+gPmwU
bZKm6vB19HmeqA9bv5jsvUtpX6sxsGHPa0xr1zUsVtyTer7nKeu1ibjG21UR
l5dLJHdIXo6Yo9jjVTXBmZI7ZexbjECsYFP6TasL+1U79ifK5r6b5niXvrvj
mkPfqneVPXPYH1YXOkKdoCzSNmxsDlxcHFx/VVtRvKU1XcNrXes6oP61Jjge
+vT69vIf5FX1qg7cX/zfZ+87qBG/wx5aVh/Ymhib2LcYuJiZPuxWyXbcuz4w
NPlCM1KMVPtSe0q76pKa4BrKLXxMe9bf2hgYqrpW3aovoU8hpmrMf0fjP7UR
nzNOJwdAvEfcRyzSeM1K/08Zpfyqjni18el+lOvp0539QnPgiuIO4g/GHOUy
vFwdXDDliXJFboPzcNe6wGnFa40LOC/lyYij7570yO2NwZuR5/kJ51R4Hnux
v2dD8D7/aQw9qb6U02fs1BiqmIvYy8NpDjmXrmgMjuft9PuwMXhydyc/U2xg
EPe6P9t9ObZVJrCCAxuCGyEXQl6t/NqljWEDaqdrr6sD1YXahPInD24I+1F7
cWhD8CnlsLk2XAvKCGWFnLZ7vR7j7E3/BvUoY3doDG7j303xfH3O8gHkOiqT
5tWFz63vLY9DGTWS7Z/Y7t8Yc8S5or8hV1D7WhtUW1Q8Wu6gWJyY3PJk/yiz
xCnWz8Vv75t8A32EXSlz5IK6Xqoipmtstw3tP1Kf0BA8Uvmk4qbip3JM3kz6
T3nlPXqvBfnCDSHPzkl6Unv2a2Ur2630Gd4QMRljM2dWBz9CnsT8xrCDtIdG
Up/LtSZR1skEP1me8qeNIQtc++KF8ljks6xfHXFN45trsz9O24DSXk51LvjQ
8qLFu8S9nqsJbFOM81fvg/qqusBE5e/I4xGDEIsQIxVfv5Myui54PvqK+oza
V9pM2khiDGIN2lv9qwO/cAzHGpfO1beTJ6fOVHc+n3y9e8zpotTJp6BcSFs5
E1icmKAY4LOc90FTYHPadtp4O1AXOfYm157UHM/MNeMaMWZg7MBn+BFlQHNw
Yl1HriftUPFPbYabk89yLeMfXx12vna9PE15mWdoV6o7lQcN8fv8PT6TmQ1h
m2qjakdqTypHlafqlmeawv70ufh81DVyvno3RexefEpbRptmSkPw0H3fvne5
O3J49EMvbw5OrPPbea5fKudCDoScB7lW8m7lYMxle3pDcO3kv8mD+7Ip5NtC
+t/h/dB3eVPIuwLP76Da+C13pvdtXGVWQ2DlYuNyLuRefFEXsW1j3PJqjIMb
D5cv0zbZF9oZ9zXEunf907RKd/ouYyPDPW3GnHy0Kuz/zej7EH0fbIj14PxX
rsk1kVuye9KRyrk53hfnX0TZJRe/0d8q9rOU+p+GwJDEksSC/vJ++R0HMO7j
DaEr1BnyduTpqKfV1+I029WHPFOu6Q9rD2mPaJfsu2rIV+Wsutu8E/NP9Mvu
MGbEsevrAxd/Ns0RZbsyXp/h+TRnRrVGPFdfUJ9QvtMprYFDymfxGa+MQzSE
PurOfQ5mnAUNYV9pZ4ntyhmRWyCXoF9z8G3lkIiria8ZUzK2pE+mbyafyviP
cSD5J2vLh64NO2oy588Wd2G/Lhd2lTESYyUzGK8nx95me0xLxFN20sb0npoj
Hmh85YeG4MPJixPjE+vbrDbiM+Ij4iTaKNoR2hPa1N+w/7HzvSlyC1bmGNRG
LNDYnzhmTcI65HrJ+TLfQLxa3NocDHEPcQ7j8mLvYu3yXfQfc4zTpz7sTO1N
/clPEoYrZisn4GvnFWMsrI/8FvNctOu078SetqZtHn2bOW8R53XieV7H9uG8
s020VeS2K1/0M1ojrturLjgEcgnk9xnnNda6oDHsM+00cUdjr780hExXhmuX
aJ/IJ5L391hz6Av1hvi3OLj8UP0f/SCxHLkS5lnpr/kbvGdxMzFR/Te5Qt20
9xoDExEbkTsk1igOJR7lenHdyE9elf3zauJ3+ns/NL7dFHpcvb1z8uH15c1X
eaAh8AJxA2MXrmvXt7F354vzxtiqMVZj8eYSHdsccQNtZ5+1z1z7WXtZn1nf
eR7Xbcv+umILzYHdiuH2ZB0OaAp5rvz2Xrwn85nMa9L37JVsTnEh8SF90dNo
r20M7ro4pnimHFe5E8Zz9If1i43lNDRG/o06WJ0rB18uvvk4xtDkH32dOBDm
OxhTk19jHEn9qp6VY9cp/VZ9KH0pbRJtEH+7+U+3V0cMzziLeJq4mtiJnBt9
Yn1jczTEUtZju3NzcDPkaBiTMzYnl0BOwcTkW+lLmR8i58xYuTFz+Xfav9rB
cnj0X/VjxbX1ufW95Uy92BycZ7nP5qvJoZLfP7MpeN7yveXXdk6yzliCuIH4
gbFAZZ/rZSh9uxibYfupqlg/6jL1sPrYmL58VHWbeIJccvkE8grEAcUXtm0M
3aOumVkX8S/jYHIv5WB2bQyuu9z215qCe9uqPdAY8S7jXnJxjSOIAYoFiv07
j5xP2qHyKeRVOHd2TnapOUzv+Xtd99RjGiOnyfiYPGixcDFxY1nGtKYlfGt6
fXBwjeMZzzP2aLzIuFGmPnBMccvPm0InqYP0X8xLMj/JuPeYJGuVuWKQYpHm
p5iPYvzO3+XvO6Q67GHtX3F3/UH9QnNrDmkMfEhfU59T31U+gtyQqY1hX2hP
yA2WK2Ks31ipsVE54uaKGft3nCMbgvMpF0McynGNa4vT+p58X/9JeuDLuoj/
iLVrV2tf62s4hmN5D/p12u7a8PKoy7WBe4t/y3+QVy2X83bGOYr2fHP4XfpZ
+ifautq84qLio/or4vrGoHyOPk/9QnH+45yPtYFNilHKiRpUHbiAfBbxYuWD
ckIfVT2rXjV2am6IuSBj5dq1RG6KXDI5ZUPYXkrbv+ojtmQsSdmqjP2Lc0ew
/UJ95JWYX6K/oX/hWjCmLn4vXi8Hz7UhTiPmJvZmPO6ZhNvIjxXjE9Obl+aj
fFlxM2NTciblH8hDEEfTPtVO1ecamvAacW7xLvEtcyfNofxLvnpjzGvv1XvT
BzJe4jyXa6qsVDaaB2DujNxTef531gUP3nicMSJjRdpo2mr6osoAZYGY4vfV
kRtsLvAU8VHafmiKfBBtUu027beVOYy1IfeV/9pj2mXiPeI+5laa52S+kzm2
K/HqmsgNEQcXD9cX1jbTRpPrLcfIOKp4rbituTRiquaZmG8iRixWLMZ6fWNw
r+Vay8GUizmtKXKe5ArLDTYPyXwkc6DkJkxpDu6+HH7zZOQq3EzZWP+jKfwW
/ZfRTWH/yFMx18HcFeNE2kOuRXOA5XnL9741rc1p1Dc5F5oiP9lcX3N+tSf1
PeROyKEQM9C+lJfrc/H5iGeLa8vTNc/JXA5llrJLm0nbaVaa185vcUrxSvlG
ymBlsT6tvq1yXnkv3qLNrO28F78fU2OV95vC19fn3yX5c/p14mLmFZr3+FBj
4P/qLnWYdrv+qH6pdqb2pnb83dWRXygXyliYsS/zRc39faop4nzG+4yzGG/R
H9Mvc99244HmW4lzGlM3hm4uhznQ4p7mHop9i3XL4ZCXLj9dP1KupH64/rhc
D/3K52zj+l1zsU5cLydXR+6kOYHmAFb8vTWRS2k82LiwMRtjN8b+5QCYT/10
c9h82n7y7cwlMhfcPBvjesb31LHqWrnJJcZZ6DNsDB9eX34VxmhPezX2+5uu
edreoH6rMfGO6yJPTD6bvDZjNeYcmmNo3M74nbEb8yrNETb3zhilmInYibbO
Sv4K9Ycc21wcpjkwJHOStXm0fcxHFFMy/1s7WVtTm9OYwCeNkcspPik2oT2r
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
5To7cM3/UvYux3Px+ajjVuX4cVx3i3zIR+XkTcpcY5ji48yhCX6bnu0VtH/C
uQX6t6X/vWy3YeyOXG9SNvTiP2m9+C59p348/jH1LH13pT7SdcJvG86xfDH0
lvqrTfquSqeWkOnK8D0KIXeVvz9zjUvKIbuUYdephyvx/TG/N7Y65VzOW4/j
vxmnVweyP04+ANtHuz6o36DtHuoNqa/gnJ04f1/65KkbvR/1WzH0l3psKtfp
LZbYFDZCxyTLXA9zk6xT5tXkY33UeZx6RD7GdfyfGKMv25vkY125vo5lPjew
/wPXOJnfsSytFdfMa/QfR30B5WXu+w3lP30f5Pi3bJfYfjQXNoK2QnvOP4x+
G1A68Gxupu0Z+q2dj/v3fpXByjxl31RtHfYrlEHpufn8VmhP24/x1qeeVQ65
r5yfytg9ad8oHzLf3+3vf9r5XR336L325vd+QH0jY66gvF0OG0RbZCTHOifd
7Fxzzmmnaa9pm1zFvW3LuY203VQIW8VvtPmtNr87twltPzHe31x/GWXjQnyT
zm/TDafftvTbTjsyH3p3YLKZjuNZf832N+Lb7JeqYj26Ln9mvlXzux5rG/9Z
6H8X/kRbt3zIPmXdxWuHLlGnqF/UJ7OSnaC9sLN9ua/1Ge8p9Xo25qpzdiD1
SeosyuHs96ZcSJ8jKJewPYz6XOpxlL0Y5zrupaf6iv1zKHuzPZ0+FbYz3NdP
/Nax7M/VPuKZDNKW0Daj3k9ZzbHulZA9B7J/gO+Le7ioGLLoUY7Xcu5s5QPl
anUS+ysYdw/qbSkH028m7R1d6+yvRf0obddoE2hX0nYY+09ynW+UPZQsc+tg
7uF8yh1+59Bv/9H3HbnaXPv8Vmxj2m5VDlLvyLnjaFuXPoez/7y62PVBOYPx
j86HXFe+T2KMr6h3Yf9U2guMsZD6Hfp9w7HXC2E/PMgY12qbUU/Mhj3hHF9k
LIH9fWhvLcec97pe5wi2exZCD6gPdlP/8ZzvYdz+2imc00LfddRrHHuR+jSe
7WPaj+Km4i75uK7X35H9Hj5f13U+5IDyoJ66yPGB1MfTd3OfG3024dixpWj7
D9cbRP25dlw++pxOvYyygLIP/W5UF6kb2e7E8U+4h/PYHs3xKt7BOcyJs1zX
5fBD9EdOoN8Ytv/H+FdRj1IWsX0C11kb+b6c45cyxmccW5/7uZv6pVzYZtpo
57N/HuU7nuOZ9B3nu6G+jHMuYDuv/0C/f9N2IftPUF+p3KCtl+uMtu1pG8o9
HUHfyaV4h/PVj/R5neOzc/FO36RMoHxPmcQ5Gb/bwv0upd+VtG1E/aC6T3xf
f4I+53uc7RXKC7a35vi51C9wrWvVs/S5hvqSNF+/FXCiLKJcl4/5q5+iX6L/
eax+Gte5ge2vKY8w1sOZ8En0TS7Nhu5Qh+zkOqLehfKQuof9tfVPtLMo/dn/
N+3HuRa4xs3ZsG20ZbQ371VWOZeob6Nc5FzPh/33OuV2tvdzfpTCHhyWCz9M
f6zAde6mvS/7d7K/GttXcb2ZbA/m2Cy5OZmw47Xn7+M6s9i+x2tTDmMODC/E
vu3TOb+Ztmc4Z5o4QSbkj3KoLef+h3Ig/e+g5Gn/S13iOnNu8WzPSLJHGbQ7
ZQ91LH0KbK/OPS5l+0D6z8uGPpmb9Kj25c6UXRxDfITrva29yDm3+Nv1Vel/
AsfX5NzHOO9lfzPHZlKeYH88z2Ue9R2lsIe0i55SzrC/tjY2x1/Rh/R9Uh9K
2y2M+w/9rqdP3rWl/qQ84xxm/yHta8po+mbp+6H+Ocdq2K6m/f1c2NXa1y/l
w3fSV1qqHuTYR4yxmHq8mBz9zhIzoX6N+lTqZ5Sn1LsVQ34rxy+lvEJZ1bWt
zmSMl8QQ6LOavq4+unlL6lyOT+HY29SNtK/H8X24xwL77+bDftSOnOK8cHy2
j87E3HaO/+LaYPsuzl3Oeb/T70NlnD6/WBj7ZxuLKYZMUjbtQD2e8jHbn9K3
XAqZoez4hb4Tqb+kfo9nMZg++zPWEOq/2V+c9JF6SX9D/0KbRtvmTfEhZS+/
q0NLrDnXhmvhb64xOR9rcALj7c71n6ftYdpeoK0d+8uVrd5zPmSGsuM++s6l
Hutzob5c/cf2vFzI1OVetxDvw/eijG3bEja6NvkCzr+E9h/zgU39QN8nivHc
fH7KipHsz1GHUtagz+Gc+z7n/ZEP214bP6e9jGweUgkZ3J1Sw+/9k+MHF0Im
P0q/v/LhD+n/aKdrr19P28mMeRX3/HQpZJay60quu2YpfBF9Eq/r9dWVr1LX
FmN+Ok/Vnf9i3HGM9zz953F8T45/lwkM5qhK+Ir6jP0KgclMz4ROXzPJyM8T
3nC6NlxL2Gjaas+pM6h7qEM5fmY+1o/r6Dauc5/rgfF/ZXsGY/7D9t6cvyfn
92Z7DOfU0udPOZw+d/1XcR19zqrACcQLnON3c3wR5T7OWbUYcz7vPfieKyFf
lDNT6HtxbiX1e5XtGesq+l5NKdL3HXGH8iorP3g8Qv+I897gvHU5thbnLUxr
zLW2K+feqpxyjbK9OX2btNvYLvK8JrmWKR/RVs1Yh3Kfn+djDTjnh4thU//D
/jf8/vuVRYV4hj6z7SgbKRsrgaOJp9WzPYh7P6sm7Fzt3VcLIeeV9z6faRyv
p96Wvudm43lpR2hPbKYuy4dvrI/8I/f5sZgnpTPnN4kjcZ/HtIRcVD5uVQ67
S/trWfK770266mS2+1fCNn+jFLLw4fTeff/q9ikc/9LfKVabCV0/m/Y5tPfR
91Tncu2XtRHYn804Ja7Zn/3DKd04vrPykfZDqGewP4pyCOUFyoe+C+pjGfNm
tkcWwm7RTil5DmUZbbt5X1y/O/Wt9Ds1F/pXPTyE640TW6D+XexEW0SbORv6
VT37SD5wAPGA1YshL5Qb1xfCHtEuOUp9rI7U9qGM1xamHNgSOIp4irie+N51
2dCT6sv784GD6OPp62mz9GkJW+yqJAeWpjnbjWv/qd+pTM/GHNa325z+D3Ct
u3mu6+bD11P/qm+1/fVf9WOPpd8brnn2O3Ot7en3t1g413pUeZ4J30MfpJWx
Dqc+qhBYktjRLMrpbE9I62IQ473O+QfQdlk51sl+3F+Z/WM5vjH713D8yGzY
5AuTPbdD0hnatdqlTdrVudDh6nLtVPXDAH8n5ZFSrBnXjjiZ9qx2bXfa38wE
bqa9p333LedtUw77RTtmhLKZNTPG9eAa5viZHK/OB4YrZvuga4L6vWLgF6c6
N9h+0/75wDPGZmIdu55H0H4afd7W5tQW5Nhon6v+tr6eulOZ1RL2sHZxX64/
iPazlYn024P9dXmn57B/Lv1+pn9jOXw3fbgr6VNN3Ub/x/vUflVP0zaAcn4h
1ovr5lKOzVXf0faDmEEl5r5r4ELnMOUg54f+ZyFwKPEoseRLlTfqIv1zrr8z
/T7PBK4ojtiftid4Nz9TL0fufMCxVcvxrHxmu6Z12EvbhHP3L4XfqP+4JBfP
Vp9L38t1an/PuywfenhSWkOupUcoK3gWz7K/Jduncc4IYxL4gw8rIzj2Kvt3
sD2Z4/O5j3WVxbStVg57UrvyQDEe2qdw/Vlel/1ruI+TyiG3j0/zzXk3Lclx
dchgrns7++1pv60QOkU7V3v3/rRetXP1u50jn2prJnk0Ks2ZDWn7jvv5LNlU
2lD7cq0t9TMZ90DfA21/UX9Pv3sK4fvp632kPyBOUw7dOI32Exijhj4dC6Er
H/B9Mc6TYnXsP8j+nVwrm/TG+kkGK4sfSvbHnPQufCf69r/qE3A/r1fC79X/
PZvyFeOtS30Qxzelfphznuf6Czmnp76F90j7l7RPoPxB2wP58Ov07z6h7V+0
5bm/sepC2mYyn5/meEV8j/pyMWHqbr43xq5mLf/C/n8Z+ztKN/UO5Q+u820p
fO3DKS8VYkzH0Pd+n7pzKTAlsaWTfO/FsH21ge/h2B35mLv9Ez4gHvAu7a+l
NehaPIZzP87Hb/S3KhuVkdqA23Ldt9gezRhrFcIm1H7Xjn9ZuaAPqv7GV5no
GqBswf4Cjv/ub9U3oN6CemvlHXUV9zJKWeTzKoSdrL18jvdN+ZS2kwqBs4i3
/ME9HVGMWI62ljaXtp4234nGtwphV2rnae+JRV/nO+QaY+kzphL6Vz28RH1a
DrxE208bUJ/l60JgNpuWwrbXxtcX1icuY2v9ZqyF7e8KYWdrVxveuYpxehbj
WfhM3k66Vp17BOO0Um6lXMw5p9P3WOrRYhucc4Lvm/O2Yvs5+q9F/XMh8Chx
KX3lqpaw47Xnv8mH77yx+pv6smI8X5/zScZRtLMoK5T7+ofUq/AMBjJGH7av
Zvtv6qeMR7BdoL3YEv6dfl6OsRaVQtZWCmFHak9uUwzZqz+o/aodW03b05Te
tO+QDf9PP7CK8zuzP6cUNqK2ov7Z5Zy7Nve0gG0TJt+j/2/agpx/PW2dirEO
tjZG2Smehc/EdeEzuIW+v6Z34bP3mehvGmM01vhneoe+yxfEF4sR06lLtr42
f3vuZxrjNxTD39TvvEhMOR/YtjaCtoL+pn6ndqZ2pXiCcV4xebH52dSDqY+m
bsfv/Fa8Rf9b2ce9TtZOzcTv7JRkybhKyBxlj/iisqW5GDaTNpIYqFjonuz3
Y3+bUqwZ185njNXCdhefZTnWuetdTFkcfEg+sDmxODFWsdblVYEFibuIv/Sm
1JcCG/qJPmcVY+45B0dpIxYD+zyN49uVQu55j97rLZnwefRxjK26tl3jJ3n/
mVjX3qv33L8U8s335vtzbht/Ng59J89gaC70t3r8A+pnxYJo75QNmaBs+DfH
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
+cDaD58lG0lbybwb7QljnsY+5daaw2Z+mXlm+nByB/V79X/lUOjTPVOMOeqc
NM9oivMsG3mv3VrCltKmksdmrkmHcugl9ZM+gL7Aauxfn4k8QrEzMbS26iLK
F+IGcubpN4P2Y+j7QT74EWKMYo3GQcwBMxfMPCpzycwd+yLNCeeGeTliTWJO
8o3ER8VJxR2V/eqAPxKuYT6Y+UNyzY1xGusUFxQfNLdgG+7n4XLkNJlrZK6B
Nks2YY/qmvXLYcOY92euqTlhxv3EQcQ9zMMVAxYLVgYq88QltWm0beSf3K++
4D7+rgQ+b66RuUWHVYKbI16v7XxvsiHF3p8tRy6xMWoxSjFEsUQ5psasXyxH
frM5TOYymQdpPqS8bvNWzfM031MfRV/FWId8PXl7T2SCa2bsw1xJueNibNOT
jSJ33pwked7yveUWyzE2R8lYx0Vsl7ORF21ukrEPOaGDKpF79W6SAcoCc+zk
MctnFvcR/5Fbrr+o3+gYjiWnSm6VuYliC2IMcn3kZcrDfBT/66tKcInkFMk/
M49OTCjLe+yRj1xROW5iROaTGh8xTiJPRXxXnHdJOfImzZ8UpxGv2aIQeWTe
u7/BPGHjcsbn5ETIB5QXaD6b+dlyJMwhMxfd3HPzT33+voeuldBb6q99KVXs
f0/dqxB8f/mM8hfNWRtZiVxObTVtMzFKcyPMkbiiEDwyfUh9SXms5m+J95rj
Z06fvDxxffFf87YHZ4ObKUfT3D9zAG/OhO5UV6qH1cfykeSSm+9t3N34u1wS
ueXGjI0dm/tvbpk5ZuY3mi8jn1BeofiVOFbbSnAxzL13Ljon98kGN8PYsvlM
cqCnJwxTLNMYkLEgc+nMqTO/ebNK5FiulXSVOkusoE5fpVNwweV+X5sLfrs8
d/PE9Q30BT7h3jqkvHG/SXBCTWAGYgfmUJtLvWZr/J+v36H0u5O1HF+DtvrV
kLNsN1EmroVtsDo6wA8wrMH4VAP83h99NqXtcPZ7sT+iLbKT/R6UJ+k/kL69
2J7PsT70OYjto2jfhLKTeXHsH0F7P+oXGKsvdR319HV4lmxvQ58h1DO5/jLG
OJ5jw9lfn/oR9oexvYT6EK5zLtuHUo+lPpa28Y7FONPYvpZrXOi9M85Uzm1i
3KvZH8Z2R7av6hRjONYtbL9BPYV6OPVd1CP1wdjeiv5D6DeLttPZn865r7C9
gDKG4ffneC9+2zFc5yvaVmW7xPaXbM/2O6t+v4J7OohzaznWg+2elPn0GbEm
c4vt/anfot9F9HnQ/xGn7ROxC/r3Z3sgpTPbH2jzsL0effbmPg6h7SzubTRt
o70/6vcYYwztB9N+Jfs7U66g9KW9C9cZybkz2L+DcjnbBzDOvWyPo1zAOf/Q
dh/bx3F/T3Nsw47ICM59j7aFlHcpg9oh+5FBX7PdTllEfQv1snVZp5SzkcPX
sC9Z9QHqKupb0dVbcF51Bwr7ezJuB+bcCPq249hTjNGe9va0rUG/ddvjW7E/
j/7N9C2wvR1ty+l/PKWV/TPYb6EexfldOKcb9absb0I5le2JlDU5d3v2t2L7
WX5PV7ZnsT2K/rt7X4zRnfrf1H0ck/vdm+N92Z5Bnw5cqw/3cCFtJ9G2PeNd
QZ/hbK9O2w6cN1ZSLu1jqH/l2DlsL6beCbtzR79dTXs71uF02lfjnB607cPx
Pam/6Bg5rOay9q+J/xX3/8X93sQStt/3m4LUH1TH/yP7P8lZZOGcqviPbP8r
ez7tC2vi/2b8XxT/H8X/a76/Lv5/5uTm+C9wv23tN339tu91fketNf6r1O9u
+u0pvzU1qTX+K89vC/otQb8tW2b/ZbYnt8b/tfm/bf7nqf9xeiNti7mXWtoG
VMf/S/g/Ex9Rn8fvqEV2fd8c+X7GMo1pmrN5ay6+8SGuJb5lDqc5X8arjVtf
lI18VHPA5ORqc2tjm+tlztdeldC/2uja5OYDHl4JfZzlngZWwvbVBv7BmEZr
8MTN/Xo8H/6BfoK8ceW/OUXDkt5Qf6gP5BDLJZb3I//H75WUWyPv1PzT0ZXg
MMllkuMuN0aOjBwluUpyZ+TQmIdnPt6zleAdyD+Qo3tba+SwiANpI2kTTWuN
WIMxB3nVa7QEZi52PoE5M9OYci74xvKO27UE51nus9xE+VZyZuTOrGeuSyXi
xuKs4q33lSL/LtcS3Ds5eBu0RD6eucLmDG/ZEtwPuR5DM8HfMDd1a7HvQsRS
jaluL8ZP/9Zs2LPatUubw68Xi324FLwh+UP6+TNag88sr9lcHnN37qCtpRA5
MHLl5cwfQl1Xid/qb34g2dHa031bgrsnh28NxjmS/csrKc+Wa7xsXKUlvm0i
/1W+66vKONbpKGN4rLdTqLsyZ2dx7fPZ3tf35fnM37toe5ftp1j3X7Lul1B2
59yPafs/1cy9yw==
         "]],
        Annotation[#, "Geometry"]& ], 
       TagBox[PolygonBox[CompressedData["
1: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
vT5aRH4rzyPuzayL7KFirtBGh6yJ9FWu+eQzYIvpZ7L3T90Tf2+5Yl/N/noc
+Z3Mf75j2D7L/YZeD/4eXlHModlzyWW09xKfrWAf0tdroxP5bL4D2KbXKPa6
7HlL0KaMCft2+W2XsVqa+sjnb/Rxy2KOZa7lnpD7Qjf6MvKW4j7Fr9Ju2xpF
HU09rWteT6EvEPOafnyed5m9MHsq+V3+98lxcH5rha9oWZxTc179glwT1ls/
vyLfIP5LfCRewTh8L+/u/FbC/st3MPj2sC+0tTg1i+3bvCPYY+RvyHflfYk/
Qd7v6Y/Sv2tZ7JXZM39AVbW3Ct9FzKpSMQ8yH7pl7MStZvsR9ZNnR9hZ7E3Z
e4r7Gd6M/BP+FP4bupXPQ573F1iT3F+y5nPGyjlQvlrxSw2jT4T/Sn6H34zM
PbSWvibPaLyfhp/P70f59s/9BP4HnyGw38kbqxdrNmu3Vu4sWXu582Uu8PkY
ldfP2mx/tSz21+yzf6aelC1qb+rs35l/tYq5nDm93JheCT9Hmxth/2QNZa5n
z4Udzfdf2DH4fdm/YZtS94zfk7nj54s0ynts/8EX0i+Bd8ne2aqIT57M1w82
r4WsifQ1fS6Hv+E5yuj3m/TJ4irCZvGrgPdgO7x6sRdlT+qhucqtivtC7g0b
4SfyfbJW8X7znqvgU9h21u6X+DrPWD73nKxR/lvgD/OfJ++SnBk279fZt6vj
j+d3gXkmtpp4C/zszO3Ujy2LtZA1UZvt+tREtCW5DT4m+0bmqGepC1ui7ToZ
rNyL8B3M757kq3Inom9IfLViH85+3BBWTVsN8i75TiFP41MxdyQ5G8M7li32
3+zDN4jrWKP4fWF+Z9gE/yV3fzmX5HeKfE/afLbNGXcUvVn2bnGdWhX17pTN
Z/Sc1VvSy+R+jVqnv9ps1aqY+1kDbcnb5Vk3j0/G6Xb8NDRpy+LelTvW3fhW
eDl8l5wt8LJ4e9jW6Ejyufp9zOa20uYf+tehVXHfy72vXdni84B8LpA20/be
9G3xD/XrGT4/yLE9fbc8l/Y7kh/Nvkf/IXe6ssX5NefYTpuf+87UaD470o/D
d8CbGKv9U7tQM1gX2E7oOXID7+HV7N1iT61enG9yzknNT+2/NOcO/emWfrQq
7pC5L+5KHlOuuGfnvn1N9t3cp1oV97rc7z7bXOv3RHu0KnIk1x75TIXteXHd
YQfq857pp7iubHdkHsN6wPZCh4vpkLbw4Vl/4v6qUdSu1LB98Z45r+e7dvh+
9F5oBL86OdezPZwzP1sf+Ef8/le2qNGp1fk8Lp/L7U8/lt6AX1/yv/jF+a2s
PP1zT8+9Dn8H/7dm8XlBLc95EOykzXtT9qh8hlBV/28rV9x1cudZAhtIvobc
ifyInIfmvp7v+emHkNexHZY5iwahbd1fluf3r97RR+WdGWAnoqvqeI6GxiV+
+AL2++rrD34krIq408hHkJtXsnaylsXXQzXp71Usfr+Y3zHWtwct5XtUxoVt
GD7akn6a75v6/3G++0mtQ3/ncwCX/GXsx9FfFXcs/pu2O8l1lY2zTj5XhQ1O
f/Lu+Jdh669Pl/PvSG9JbodOYu9fpnimPFsHWL+GxfNnHE5GO2aPzHc25C30
+1T8Jnl+aKDf+vg9fgbsEm3sJv508mP68S16jN9w+jx+3/C7nr4zvzNhu+Bb
wy/Sz3/IlRtZg+iszJvMC7n2hY/MO0VH6dcN9PL6cA79G/IU9DK/c+mnN5NT
/Lx8lkBfbaxG4bXYz8Mf8tyjU19amydZ+/z6sd2rD+fDF9M/wS9A15K/0t+u
2iyT39PpYz2+U8kX512yHcdnbKvid6/5/eulqRvGaaDxuoT8mphG/Oqmj8Zi
k/aPhV3Odhm6Av0vz8qnj9xXkmeRP8z8Qk+mLsLH4ffBH0Ad9Odq+q/6UZe8
Ue5r6NXl/ZD9e/hnmXPmx3X4U7Ab9e9a8iF5//ldWcYxz7D5fea9vmANHAof
n/mdzz3lvTFrijyE/IQxm5A+5zcs2lgq7qbUTDmPg91Cfpfv757x5qxb9oWZ
d+g3/rfCGvOdmHquTzvBumjvdnofY3MbviXsKM9xB3mO9r6mTyK/mc8P4I35
v0yumt+xwxfgk5OPbSx5O/5boLthXfX5LrwkpgG6m/0e+hfsO+b37fgU+sPa
eZ3tcPxeeg192U8/D6DflznGb7Q2p+aZ2O5Pu/r/rpgj5Jku93RYa/NuEt9p
5FXsr5BX69cD9MriXqfPIH8Jewj/Cn8Q78j3Z7nq8Smb3+qjmWwz2X4iT2Z/
mHwWeX+0k/YepV9E/pjtEXIj/X2fvlyfH6dP16/H8Dp4Zz4/6v++8j+xeR1m
Pc5Cn5F/T/voSvJTm+dc5t4N+vAp7FV9e4Z+nRxP4zPx8+CD5FuXeyWsgvZ3
5j+bXFX/GsOfz1zJ3xngF4v5VszW/Er4GXJuKX4O2y9sF/D7vVxRP1JHXsha
J8/DV/B9I/sD2hU2H/Yiug3eTVxv8+w8/b8CvQx/CY0hT8rfFqD9tPcTfUHe
vbbK5t1kzYp9LXMrNRSN5Dcxn+Hnby48w0LYfsazrn6eyFYt7xD2HvkNOUal
NuPl9emm9JFtEXordbNekTf563vmAehp7b2YM5Hci+EVxX4j59vkcuwvs72Q
z7nz9wup83WLGpZa9n76qy/l5Nhde7tq+4OsF7meZh/Pd0nmRO2idqSGVOHz
Mvoxf+ehPx9vnnOZex9lTyBfy34u2394f3mXZR5rf6G+XArfq0JRD1MXL8SX
o629wvG1ixqTWtM184TcU5sTyIfp5xnwL9Jn2OcZF/wCfXyB/cu801bFvpX9
61fYiWyr0aP68DWsh/gryV+1Kmpnauiz7N/Qn6evzJzTv0f4fYJ/l7Wpz9/i
a/ge0KDYU7K3/AibS56Hfsg7Ff9T1ox+nsBvdWqscdzesy7Tp5O0c1iDoi6n
Ps+X4+esKdhycn3xv2U90H/NXkJ/Kd8JkX9HZ2pnb9SFb2+0FjZJzvV89tbO
Ovrw+oVvYp7P9wj0U+T5g34hv2r6sp7cW9yq3LfI67S3Hv1JvpT/m557J36H
aONv2EpxreXfEF9yFbEb8wz5jCN1mm1X/v/Q35JnE6xzzjb0f7Pm5CkZk9ro
P/qf8HLli/03+/BL5P/0pQx7k3w3p/26+lG2dTHfM+/LZW9OHdX2AFSOXIfv
i/meh09l+hI+lfC79eHo1OJ8/8u3KuxRfr3Yq5C3QN9uXhNZG09kDcLmiXuM
z9XoXnINWHX0ivzV6EP4ncpWC9Yufce30Uaj1BzyZdraG82vVzxrnvmjBsV6
WJr5lj6jRdrst3mNbJs6w78h/Dc59yM3yDNkbelfJ894Mr/GsD7li7mVOdYE
PwsdDJstpjvelH6TuOb4CNQsz6o/fer8f2ksTfdPbfn6wlqytUDP6Euj/N1W
7aJ+zs06hb8MezXzp3VRUzvTu5Pb5h3y/Zvehry7mJvIe3nOvcjtYEfgn8K2
Is/S1lz+7ck/kLfGd0udg3UgT8kYom78N2TPwBviTXRnTP3iPJVz1bb4/dpo
qv9n8XmO/rP+/cl3e/I9+AP8j9LGFt5J58wdcid8Lby92B3Jt/LbIe+PPpnc
ka1z5hh5E/8ubNdk/uMb5f9aW3fm3gs7ks8u8A30JvSdyfXYq+tTN/pu9BX0
T/jtSu6ijdbk7VJb6euz3+fc17r4O7j8Pdwe5JXa6Yb/CrsOnYOOqFuMd8Z9
zzyf/OenbpKX5/Mf+L/y9qBX1v4m8h5oENoH1pTvQj57kztoc6p8N2m/J/1y
8hVo35xV2abznV2/2JOyN9Uh9yIvyH0g60Fcn4xn6g6+A/ul5DtRD3n2h/VF
L/EdRT8v9VjOcfyer1ecd3LueZd/P/JUz10Z3p98YOasPvzBthL9qs39xB+U
uctnlZwDyNvDFrO9mjmP9mVbTh9I/jjnMTnvyt8Ckg+FbcV/Tb7nIu+ds1+9
Yv/IPjIIP5ffe+g+PvPKFWe0nNUG5x6W+o2/JMe/+DV8lrHtkzmQ+Y3msj3A
NjTPrt2V9CHk84Npoxrfo+hPkcuxDyM/lPtU9lxYa/ZjYEvJv4g5mjy4TnG+
yVnmuNQs+LH423KfgL+Jjs/7zL0o9y85+uVelu/dtXFS5h+5JvlE8p/BMkes
h+vlOAX2Gf+T8XdynmLfJ3dJ+u9Zm3xPTV3IuS5/Y4nOoM/PPbd+cU7IeaE9
eV99OJN+rT4Mx6/DR/LvLf9p5YvalBo1sHxRi1KTzs7aQmsyJ8qYR/xH0l+s
U8yzxvRz6VvK/1TWQeti7p2fdUsfnb7gB4p/Em9rHVzF/gL8AjS2fOEX//fy
HSyqSL4oddczjcG/ZB+Xs5Ucr/H/SJsXJxZdkXM32+3wS+gv8G2WM6wxvZS+
a84RqD2/y7NW+F2WtZz1za9W1hC6Eraazy7sV6R+sl2VuYe+SPt4L3na5rya
cxrfmXWKsckYraVfjd+cM4F8e9Kvy1hnXdNPEPOJZ5uR/qIbsj7EdyBfn3WI
/54zPHk8ehzdiKqkvsB3zj6SepC5S368VPQtfcwelr3slrSPLqUfI99H2rs1
cxI9Rp/YuthDs5d2ztkjtU3+gz3rHbBJaGI+k+B7Nnxn+J2wX/T/ndw9yD3J
N6M/5BmRuxXsrqytvFvt/g/dXKfYI7JX3IOqw/aAPeKd7Jq/+4UdkHt26gC9
BvqEzzA0NfMg9yq8R+pyzj94Gdj0rD19mpa89A+znslPZ2+QYwZ+ib6vga/N
XVFsLfJDWQP4g/gIuV7LPqf9r/CZqSH1i/tg7n7r8E5oSfli3DJ+j2QMcnYq
X3xmk89uHt/8nh5DH+W+L6aVnNvXK+7GuSPPwjvyH0cul/tc/uY64wG7IeuB
PC3n2tzl9OFheZ5JnStfPFOeLXMsc+1Z8mJ8TM4OqafJp71eeS/inm9d7K/Z
Zzu2Lv6GOn9LPZe8Tf3i/px79NzNNXJpvWINZi1eiM9rXdTNO8R0xefTbyf/
mXsK+T9yA3GjyC+jT8kvpWabh5PZ5qCjxC2A3ZkanHtVctYp9u/s46/l3cKv
rl3sCdkbxmcfzztoXdyjcmdaSP4+tVvscLnORG/AFqFX5fqsXFFXU19HpsaU
L3Ik17tsS9AG+OI8ez5/Yn87603+t9j68vuA3hJeA/Y+eY/Me8/alL4k75x8
lxwfpv7kfoNW6duo2sUazVr9CP+jbvG5Wj5fW5bamXfMZyl5FHmxHD9q85M8
L78t6hT38tzPP4SvE/9ZxjNzL+c1+i34+6nJ+vIF/Hm+n6ePnqVNveLcnfP3
17Cv8vuF1sW9Lve7No08LxrG91v4YPyw/I4uY5r51Mb9CB9d3XkwfwNfTV3k
c0czzwefjA+A91Prf8iYVi9+O5jfEK6mv8X2Iz5IG2+TD2J7W8zPeT78p9RR
+CXoV/J3cn/Odybbb/TL8SvQGvKfqCvbhXKsTf1qrC20Df0W7a6DXS9PrfyN
GPl4uZ6gt7SJ/EFfj5bAdjNWt+SOI9ezYv+CP1y+yJ92dof/Iu40tr/p29JP
1c6GjF9T4wvvZ1zm4Bthddj+weviu/Gtns8n81lAait+jlz/ku9vWIxbxih/
MPJfah7/c2Cz5TocNjyfMeC18/dl+eyQ/L4+3ypmfr4not9ML4cPFPeyQ/Sn
+lSRfjj/KagCeQyshcV2C70SfZ78K8i3wevDp4q7UHxVtr/1e6icVcjt9ad5
noNfNfpH8C3w1vS54v8RNwXVgI2EXQurTv4w/2eANrYXW5PeTJ6T2P4SX4u+
HH6w9rYkr+B7BNsznqc2vS460juqgw8Vd7g8nbVRKb8F51dTXH22WvgZ9Hrk
K8kN8E38+/PfoJ2G9AMjw14s66xB/4pfI/xa2L9i1/Jrkmdmn0R/l32omKZ5
dnSafh7Fp37GgT6d3Aw/mO8M2AF8W9IvEdcC/4f/EPLbbLfg36HW8PX6/xa5
FfkOOcaQtyIfl/9DIp9Tk5sbh3b4TWiWvOvoW/Pbmt4FTeT3qzzbkFc3KfqX
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
XGg8/w9YEyqe
         "]],
        Annotation[#, "Geometry"]& ], 
       TagBox[
        PolygonBox[{{3105, 1956, 2812, 7821, 1948, 7820, 2637, 156}, {1873, 
         2865, 537, 9329, 8135, 9328, 666, 1837}, {461, 68, 9331, 1731, 9330, 
         460, 13, 338}, {78, 2449, 9335, 7854, 402, 9334, 1786, 8024}, {944, 
         3689, 9339, 839, 922, 9338, 4065, 3664}, {3413, 8132, 9341, 3307, 
         9340, 801, 3753, 848}, {66, 5290, 4949, 9347, 1052, 5895, 9346, 
         1160}, {1386, 6791, 6670, 9353, 7348, 7403, 9352, 1582}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{{3.8478438503350897`*^9, 3.8478438598886604`*^9}, 
   3.8478440184635663`*^9, 3.847844048927926*^9, 3.848103655009098*^9, 
   3.8481038313404303`*^9, 3.848357571603082*^9, 3.8486541823232784`*^9, 
   3.851128193040236*^9, 3.851637132474702*^9, 3.851723092089073*^9, {
   3.852198446725565*^9, 3.852198462650215*^9}, 3.8531147364097486`*^9, 
   3.8535324529121637`*^9, 3.853536885275687*^9, 3.853537093115704*^9, 
   3.8535372118451366`*^9, 3.856214524434574*^9, 3.8562146610248384`*^9, 
   3.857724325344029*^9, 3.857724368487938*^9, 3.857726666371376*^9},
 CellLabel->"Out[105]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJycvVtzXkeWJYYhvgtIkLpV1UR32xMzT+MIv/lP2E/+Ee0Jh7sfHHaM5xc4
Yoq4AwTA+wV3AjgESVEUWSWVVEUQNxIgeBdFSqQoqaiqmu6amnJMOPw4Xmuv
zJ158vuoaruDpcZ3OydP5s6d+7L22v/j3/67v/uf/9e//Xd//2/+9l/9D//2
b//3v/v7f/N//Kv//n/7t3ir95/19Pyzv8P//pe/6sHf/6WnR//j//09/qc/
/7/91eZ/e//8n/+f7373n55/+489B/D/e5r4C/9f//hug++2XrxO7379/R+/
efOnXr7f+yJ+W7/u9e/F1+Xnxevn9dfN/D74u0d3we1w0/StfIy4YvhWce+3
jrm8Z/er/djIus+LRvmWsXzbdSwd9250zkIcUTO/Bucmn0Gfq/q3/Le6ZzGv
Db87vtj7Y+MsV6CVXy9/7uc/vr6ds/rtP2G9W/ks5XfzUbzl6l1Xtvu7tSfP
71GMpWNl/3+O7W2S02Vmu8yUjxpXLb5tEtT7xz//36Yb/ktPM+311tz1+8Pz
WwMz68cv7R+/dO/ohfVe/NXTGpy9Pbm6a2/uTyzfHZzdsPd7h+Y2Rhd3+OcB
+97RC7f8e+NLO4Mz+n3v5Orezy/c8u/h9e7R/LVd83Z6jYsOzm2k6/p98A9/
4KW+N7a0o8F2uT8uMDK/lV0/Xa+Xn+Xjxs3xlez5bveG661Pre6F681ujC5s
6/d4vza+4vcD2fxgPrP7zqxjWtLvfn7+N/oR/uGL/6Tn0tx0ncf+o+dv5ZOP
PyarPbvSvdHFbTyBXy89l/6294/gwkM2Xp+//BL4e2AGD3onXuV8uopGz6c+
EKWjNRifXp8PzoX3f34+PY2eIM7WJiZybHEnzBYujsFlsxxHhH+a2e7SpLG8
9XXr6Mz62FKQJs1052prxu37TZ9Vvn/+Vo9Gi78w4JrM1u7ia108JQRvMFvb
3sG6jNTWesRn7QBmXqP0p6nPQnMg+x3kKs5htYfpxjW7j7L32Mrd8aUt2/zZ
mX/hGhfsxNUveg5UO/+5pzWyuD19+en48t7Q/AaudfbGK3u/Pff577Bi+HNl
6z9NXnqIMY4t3dFv/ju8hYm+8Ks3+nh08Q6ma7K6j5dLG/9xZGHrxJUn+C/+
xjsTq/v48vErT/H34q1/GJ7fxP2n1x6GL2MaZjdOf/SVLmUq6vax1fv45rlf
fItbnr3x+uzHL0cX7+Lx8J2Zz94cu/QAP5n97Ae8nP/173HB0Tiy96YvP8Ec
6HL4DIPAVzF8vMRVcOnhhS1cGi9nf/UDftnLX/Xj/bnPfoc/8Q8zM3ZxFyPA
m1hPfAfD0tX/Gpc+94vX+t748i71jj0WvoE74QeTa4/1lFhaXAXv6ykxk7gi
BoSXk9UDWzP8oufdoflNfKAr4klxCawEfra88afxi3cxq3hTj8IdrtFCAjSz
53/5HVYPf0xdfjp9+RH+uHj7P+ISGu37+Auv8SVcCX+fu/las4CrDsUpx82H
F3bw5vGrXxyr9vXLQ5gDzBkXa3ELd8D06knGlveG57ftOw1c9PwvX5+5/tWx
1XuSpMlL9yfXnuj5MXN4tAP4q+cDXARXGL8YLnLhl99BHrQImHVcf/7Xf3Bp
ufDL7wdnbmPQuuboxbtYATwfPh1fuXfqoxf2/t9ABgZmb+OCq9v/16lrz3Av
KEE8LT7Eg+HlcLwgHgRTp7vjppBVrI0+4jrNbpz88Eu7ZhN/a4Xwj7vMZvtn
mDl87+S159gfx1b3XX5wYwxocHZTE4kr4q5Yc136xNVneEiIfs8BvNHTh9GN
r+yNL93RxyNLnB78Uk/JAa7cw0P7WmqONbtnPv4KPz9AMWyN2VbDeuFzzOvs
r97YN3+CtcMQNQ7oOogPxsffXv9qYnnv7A1+/8yNlxifho53cJKNLW5JK+i/
/+fJtd3hhW2sLH5vU/cANzt9/euF3/wHzC0W4tilh1ivgQvr+NrYIg7D2xAV
fBm3wQNQTczenl57NDS7CZ2CNZ355Fst0PDCJh54/vM/aNGH56HcNvE+foun
xaTiRvr05NWnVIOzm/gaPp1YuYdZG13amfvsDcZw8tqXWBB8GQtEoVretf16
FzIjrTbz6W8xWRMre/gOJpS3nt/EE01deoDr42oYCa6GJ1re+jO+zx2H5936
M6aSZsDSLh4BByUe89S1F3gEPBRWHjfCeLB1KTDXvoyS9vxYdZ+SiZGs7OEj
/ArPgsnFBfFcQ7Z9MAl4EKhEfAGjwo1OXX+Bu2DLYagYMC6IjzhFc5v45gHc
qedvzt78Bm9i0aEqMULcEXKAkWDrYvkX1/8Rjw+VaxthY3LtEYaB58UVsDrS
cyaAUGPrM59KSn46sngHs0FVNbcxOMPR4i64MiZwYmUfz4hha85HF3bGLt7B
mPEmLoih2hWOYN40/7Om/PFo1CZzG/imJnNkYRtqQXrk4Ikrj3XLobktm1xp
tJd45p4D+LPnfV0Gv8BhPbX2GO9pMvDEmBttFtwTf0O1Yt0wXmjOxe2e/wlL
jMXFI2OeMUKOASps9T6eGu/gJnjMYfysuo85xL7Gj0coGPcwdZRAfDrPn+CR
z918NWwHBX6FAVFglrmauDi+P2TqC/ImRcRNMb8FDY6rSQtxX1T7GKWdKm+w
LTGHuN2pa881mZgTCP/Zm6+w7hBsbBwoEnyEl7buW/otZgGfQkFBrnAd/BDz
OXrxDnYExonb4dEGKZzYhg8wTbgFBs+bfvo9LoLnxYNganUyDZxfx9azdeib
wpac28AjYKJwHSjq6csPT1x9qlXCO6c//goLhefCmYs1oLR//rtjF7dz7dCe
/eg+Jg7Ch5vpSLm4+SdpyfY4jszqPm4u9WIH6g/hs1FaGI+kUvBf7NOT117o
s16cKNDp/NPG0gstgifLXl+8K2UXXmOuJTLh9djybvi+rgfdrskMn+PiuEV6
DRnDLTDC8Bo6UUdovN7F2nj6/f48XDf/hGXXc+BJMcenPvpK32toVrA6GJ2N
pIF7jNJShxS99ntBbdbulT9rG8YOpl/3wl0G5zbPfPwyPNfkpUcQPH/OBoSD
Ju2lh3GNyyd9H0KHL2E42JpU2PNbEhZsdwweD4J7Q6wgcdjcOmh6TPPwSrK1
wjixYbCefu9+n2NdzY7NP/AuM7fxETaNvkfL0p8H16CVbM8JkwajkbbH7zmn
W39O65/PfxuSK7UkuYIynqjuhzmZvvIUU5Z+e/rjlxhLmiNcCLsTj0mdam/j
ecdX9tOTHaseTJlt2F1a2rKg9ASYSew8l5zD0Jky/nisrN7TyuJjTC414ext
PHsjPtOAmTRhXlyGtc7YlnoeyBDELY0GF4b4pNcYCr7rr1v4rfQl7gdhOXH1
y7CnLu7W5hCLhTmGDsManb35mrbzr97EOVzD4ZvW+iAkeoiXoiblkWz2EG7c
XRfgY1kj2PvQUuGaOKRqe9Btk/C6/Jx3k2x3lQHTATe/Sa+hTKCHazpB1nv8
/vLeiQ+fpdfQimZsPQ/jg0EzXugEWc/x++Z3ZJ9H6zrMOwTSdQLXbHm3t9u4
DsIqOP7hF7g1NECYxYquN6yIMBLsiiCx3Z9cFl7+ZLs1bQitgN/jKnrdxDNC
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
c/AUlcsZK0LYT8wdZZ5/mYkwLNntKnr+MtLF8WlVgKFK9YhHOvHZRDypjBpk
S6Qk8AbP/+LbaFEXfBUQX7gNjh1r5Vn2zL4nNmTYXA9pE2ZTV/bGotV78ioz
+ixcWr3P58gqoiZWElKmabxMT6kbLH0R3oVVj4sp9elZzn7l2linsvknOT5Y
SnFzjS3u+LnZEoHXUQuzYMJxxMkiEQuzVjpFa0qWjJTfOhC0XK1W5DAmErtI
x1RgNTcskdAwRr/ypvuVShYIxVjS+pfRLq9KqSIxGDnZPv/DcbYz2C7rDLrq
hV4IX+CsU95/IONyxKUgG8cSg22R8yleN91/6BZJK/3wtlsGUq8hwhJHWTut
GUeD3UuZXqY/6CiqHa1XWinzPSKft44qWK+ivIZAUinMbx279DDmwT/9HmuL
//qJVVvLGk8nl9AK/YN/jhcQJE8ImEX5lGVsrL9fd/8f24N1/7GeeV9o/lBF
gDuPGOYbwqHTyVictscseFPFooIhK74Tr4PHIWTXQ35D9eLE8n6OZmdWamL5
nlw3X+vAq9hd3oSssXpIY+MYNGZxg6FtKeDj2YO8fuGw8xxC2Bx+gotBPuv1
TG35XixCMA+qhgovM92Whd2xpgUZLqZgijmiZ5i+/ESXg0FH5vXFAJszKCIz
yz3Rx8cpuJ4qA0tfrrC++/201hrjEXWqcyMbaWgc1W/+UONOKhk8CoRpQz4j
3ffA0Ni7tP5HkT4F75BZZTsjThldiq96GW0prKSDXudmw72ju9byFIU+CxYI
PWyLPmMlp4yn3xOIMW7YVG5RpdmjBc/a6cu7k2ZZOLKUIC0yf5F54dhq0CGt
nEsvqwrqOGVS9KVrpB8z/ANmPD1Vsm5LXSnJ86g5fgK5HDbOzh6vi/G6OMsv
bQbOhJU9+AjJcy5xLbSXzO7oUS1zwbH2jiPq8Ap7j0VJ7PeyibWF8rOqenIE
OEsi5zfHOJsHZuMUDwGhlsbVkJ4xn7PEi1mZWW1UG1vd80Dt6StfjCzdsQzP
79REINXrnIDrlFXAMUoD8Yg1NOsBeaIxFrVMbdl4BrTYMGRNsif7c43v0cQq
s87D/Yvaq3aeyxMuLu28stpZzO206GVnSI7cDY+R0xa89UGL2prDuBl5Tk0n
qlImVBnUOTD6dL+AQ6Zsbw9a1xv79APHKpFEYpno/6nqgTCwomWEohi3XRmY
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
YR6r+27VqsQbtl1P6OtKzf1D2juqHhdMQ2R/x688DjvfsZ7hmR3HXkWfMlrX
20o3G0E3Oc/kVYwZSlHhG6+MaR9jN7eHsgLEhuqR88MFo7/i56ooUJ/HiBgp
8VTvWw+uHWcZnl6j9y3qUks5MawYEnQsf9o5cSXkI2pnlzzIGN36UmGnsANx
a6FcVOOiCQ/+E4OBdIG/gDJPHRpPkfo2s/xZhWS91OE8sBuWe7t51VSvLNv0
upTogqHC2DcMm6N+n0HnqPWrItUhmmWJMvlUPG+X94RdVBA0rbJF/7bGjBhO
O1y/PxFr4gSaj4hPsngdt4OG9asxb5Cy+ILKqVOYR2lqfZE7+Go6uIEiTinl
1Y4arY8lJiE1tsGryEhovEt7woJ5D0P3OmqVm106+5269gIjofNjhbiGW9xS
KEX6P6BJ53eOWuNC52crPPKmdVW4I+akkYWNLpnpnJvc0QlVh83QmmA04Yl6
Z7NPReQOLDCHLbMhGSMfMagr5lzvWyYfJiXTVSc/JEuD5rmj14CR7VWRHfTo
hVQT2xLvN6SM+jaLAZdrVVbnS0dhLhRQNFzyJlSMy74ijoEplMjl2cidxZ4N
8nzIBKkK5CpmnhKXDON485ZllTwaFc1dmHNkUK3eEt1viyKl6soF7xznlfoJ
Gnipx6oIDpHs/EpiX9boMS0W5XnYNVte4z/NedwLtFWyJ3JShQlzEgViiHlV
I/YdNPo0rwhru4VVZSzdb4mD5txDzOBaSCSeCLErlWZmhLrlVTgRRLxa24m1
nt6qIFWLbhULeTS97ZGnEaNppjuDJwp9TqSqoqfZD50EE5tuYnSL9FBjbBad
WQWqnnQ+Sl7n4mbiYiv9j4Z6zOa9eAtc7EGvsldrataNWUrD79lUJ3txHI4v
bnWPlRkya1OVp8F/c8xFFX0kSUHBtl6uVcl0Zv1os24ETTILWWeuPPvYGlrY
FOWlQq2OJSi6O7Unq/uY43wfJLstxWEVxxAnJcauWmqTDCbLdRpUWSljiHQt
7li/jC2jgN4MV6X7uvrAmV2y2HDQIAUzAF7kltdhxQYFyCCKKRopqoMYJLzn
WVe8cbCX3E+ZXBUX3EFW1diMCsAybinN3PLvc/ZZ7WBiHI1a0rM4uvTPz/1G
8ow/cg+FZ6c6Fat6CjfxiMq5m0kDHPKITlXvJZzZJU1hO8nDObPOHZNi5lnv
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
RCfXMgopOYWRixhP/o8ffD+50isYMTjZm/ka7cZ6Nug2DHM0wVNKI6ia4xMC
H+eouIiokVzZ0kI9XQhqV23o986ZCvp4NqEagAv336aMqInFPuL10qqpq27/
vtDo9LErvVzUaAJ6BRUfS4pUBVWzWzw2v6fQ9adsaY2AFXZ8otCEhspreX/G
eyjW5erTN8ZP/nMDZRHv48CFbPjAgv1mOxD//nfyOpgAv+aNrWsLpieo2JcP
PVSZsWNpSayW+jj8UBKKUlRImIdBXXxL2oRVpoTqL7M38JjIiEIOe8lUV8Ok
cgWvaSbsjsbYUYdJw151Up1UtspR10Zhq6ugvWrjXXW8ouL8Sc2UVp9Sl/bI
1SLbSSZeeqe/4km3TfGsl0qcBORlwvZ9uCx04Jy+84IykRsU+LL/3j2gIxqx
MaEeHhUS+14fO5Uh6+owlfrJT6rsAzMg4h457biA/sa+S4F6+XqOK8um3r4U
FT4euxRQlU1FzmVGDXsp6bvbjXSIroWjjl+y/82CEbLtnNGZhGkeBWuH/re2
wRjQvBO4pi8G6Fy8u+9nmZDUaVc1EbwdqdpM0CtLhaDW7lBf1Tzm57YtZovd
hDPBBmHh5gt1vNGOIHfe+/uNV/9ntdaoi8eH3fG69iD7GBvScPJqkkoQ7dH4
X/v3QyuVaYGas7hV6E9s/y/7PstVCU55Qp5abx5rusdbaDe7WkAHmkaTO1KZ
cKqE0s/WlZaUxG1rwkz28vrcdaBJ9GGSuMu6/H2ZQKiZo5srT7CriV8Znbfi
+I5oRdjKIuQc+lmzFLBDV95v0wa6PSjzRPRMt3R6sg1iv7OkQnf5gFTbz99L
lQZ4f9eqLkU0FWc9al5oxGrlkcnlzUtCSHvN74C9zt//lb6DZhgn6hIIbxki
ifxiroJjiUU+S3/6F0jVQGp+4/Sdr1SBRBR080mOaHCUY7psrsWlo1v3Zs3z
CyifI3JeOiPg1Nru3NojGyTSlSHTUWryoVK6WrhfMUgACHam4efW8Z57RdrV
ycTqGfV4paK+nRYhL4d9O6fVKW/JXoNPwl5DX+R04Jqr7VnHUkFjL7Imj3hk
Y89B5Erv1I2nOmO5WLdPJ+WR98T3xVQwSFq89ZwOC9+JxnQS9qVAoJ26vg+m
S8r6oTKrUkbqP/IWBiDKkVXs+6YFolzddacaPmU29x9eWm9HaiKuLfmPkVNS
1jfI7NiqfXpr93fVsSaWN3z2qLACo1DvyNnHAu12aR2x06V1JcL2jHaonMoM
CmhP363zxJHzZMbNQCTkjd4aUZY0V6LKr3Zt6f2rKBX4GddGaGS3UevT3qvR
qQ4dmSOlyj524nJvLgl2/4um8lxCf8GHwW15QHejUJuqNJV0aiyvoGppoZrx
BXRpHa189DSggQAO64vLmnp8KYmvkF216XPRLbU5oD5XVgWjRqt9jORgG1l+
Ped+ylSJVbtXq5Zf+vzH8cJtJCrnDIr1deXL/928vY+fvQk1PoXrpz95Pcks
NrmyUAjh5LXHNjpJMTmfhokhr/f+jRxb7FkcVDNFL1poajEq0RaeuIy6uEYN
cDeE6ht1LhP6LLV3Agv+iImAOOOKeR/4Mcb0ExQSEjlmajU5Zp+69Qzri2hT
rrXt+qzEHCzDgDfV3e33TOd6wstIEsUeivW/rVM0KVY4ptrNJUcORh2y+hzS
z6G20glqVdnnZRDr8AbE4V3Vpj4h22OUkBX9T1e0qDLjYebKtn0Ne0Kx9OQ2
NkOJM9I3UVn2c9eWBo3mUaodJ65PY3GejjOEQqa1rsQuORkRtvnIfy0qsJAY
WcFy2PahhYHSa6Q2w9bs2o7rW8abodYZ0novMSMIda/tO7bi/6HOIFXeVlJM
eYrqmtP8R4cCVwVIX6fD3LV9XXnuGWWTL86UFq4CIym3zdCoxb6pZHssy9Dc
10gNPXnsGUfdqqh2E077QXQpKEDrroplfUjvrjEL8ekxUGqo6etfx0WOkuTh
Fz/1xezHLt3FvNh0inchxwe5GcxQvpfwUq8W/A8hLaRuKQsBG9KF2y8B3LBd
d/FL1IYkOkh/bzTUMwPDNoG0+zW3btkCgTeCTLIW+TE5Io+TSGVrxg4rVV+5
Op9yplAUytoeMe4BfkwVqIWbz9vjvHCLDkpBD3IICSffIZNhj7KVX8/y1m+t
l/RVamJ9DxoJ7ti9CtczzZd8cKucjZ6991pUa9mfnYeX+ZNJrOc3rRWQ0TOf
vEQxlCve6Q5qs525m16z8o//OlHUzqJmY9Kzg9x9ZvKi5q78njEraiil79qv
vKNQEWEpDLi92t5DdhvqL1P8BoXwWZ786dOouyU5P3ZBNwrNdEtjS+c/okc2
JK25cOupnRe1T609gxoo9s0PdMZOfl5Y3Ms9aK/k+nOD2zcgZmZ988KXbrn2
30aFYgFSiA/P3fuGBs0/td6qfczIWOezW5mGFPJD2fsw5fjHnIPNkOOxXZ22
8QXaRtPtzito6MLk6Gnc9Xzf47YppPs8QfMSu6A1EzIfEvOhaqvZDXkkr6HP
uMrCqafoD3RtpnzXorONbZHnzuLmBi4iVsWi+4itRwlakF4KmqpnkKWnzLDY
YvbdbAx0ghTdzwJ7qa4T+QMv61u+vaIXkXXTqztlVaDGIaiH506dE+CfiIU9
bNeBAgH7rc5D+2/3hrJXZawE/g8uYgu3nstTRbRrvstv0fa49ljXHhXU07vA
jYltLQmpSTcD83djX3MpctLlP/yUe12PG1rufSpXzZXZmGE7H06kvGNIdV+3
tkmvDq7IfdxYW2o2NPZXihR0OCY07Nm7b4S11WoQO9W+Fc4H4pUdLWD/bSvc
sWfD+tSkzQG8y3ahudh32st4/CNaP7XukqKClz/vZakqNOa1CxWlBU1CAHXD
HnnX49sjtotV3dTOoRwYkFO6Zk9SuW2As27n6BwLTtkHU2jv39oNYEvOnVbl
X6yCjJj1aqZKK8gWwbl72Mo6b6V9OJBn1cYdiFPP/Psd3uo9nuK1XLNoMPNr
9pKHWe11zFgRq3uLrft8rOTfKqMSYkgWbXaxpfg51v2iX0q4q8fc4KRqmugK
XOgK2chnbQIFaqxk5bO6qTg4r7y/LmPxXBYG4cuOHKpvAGJ9BoXiHYskFWTa
3Jy68VSwOikP2WWlKpPsFJO3StHNiOzRMqajOy1qDIJKKXRzxYeohgikSHnv
4BP5QYc8atHeqBp1rk7zE1F+0t/LKUQsauAv7qSabVRtizsqnqO1SqN21OLt
r9hooaIzQwIVraQh5p5+XSmwSnyrIoHJPbIjc7ZTzvsFxEd7KeZG+FlXBUaI
3+0JMYJ1x9gmKV1p1ktkpfSCoa+51FNL2P7UNgtkUqG1+U9oZ3KmJV6FWBlh
yZa7S6myk2adPZjW/XOk1A+FKsFSTxG3J0z2jeJo6pS1EbQgaC7fAC23+Rl6
NAuRXFcrA6d7yA544QWZzu8d0O+IKq+2wi+UN4ycbOs7Nvx95xQTSLmUqYvs
9/tkUe/r2jtMEqhuB4K01qZcpTKo4P1KcZIopbYl1SmevZZgA/NcYdDx4NRV
JMnZhemnf+N8uWDh53KRVSv5qPUVAjsf+PAyNh0tb1B3wLVxtlvFcRsRKxx5
OIFn8xvfX1Vu3cwwAgTWmQrW52kGh24BHYOFKLGoDJCvlcQ76BIGszF7fU/n
u8KlPCvcBuhjV09FKG+vVsROq+9CnSgiWZy+8yKzOxrZT0dlEwmHUsnzXfq7
gIWukQP9Wa6qYbov7eydr56IbqBQaOmPPwPAjMrkC2zZ6plIR4ltyrO9UkhV
u5mmKqqfk4Nae9MsZh3QD7q2X952Y45cqbKftrbWhU//HDH8gWnf3F1RVbh0
qChW7aCtR3EQmxX4kYt390UrkxKTil466lMV1NmktvPs3d1S3gYDnSeW2viX
H8BzlKc4SdbPxdiSkRigrETeKTYSNRbIXFoIpAiv1GEQNkzXu+uVZfSQumUP
pbh3GPILHRfell3t5c81432ciEU4PO+V4/e69L+xdY2wEnLFK5vsxqTT1yKq
hgdiXIGRm23va+/T8IkomQKo109Qa2iOckqZXd7PQw2sgNBRGiUGd4P3+tvp
hmdbb+HWS5124vhNZhYPhhaLFZaRcGRae2SnwQyir3dCo45fepiVJse8a1ZJ
ZXCVtUtWQ05SiiE9pxBC/pzDEzhd4NANPhe7mlq5+hYBh3YEZyT3U9VEcngE
cy73XWdWdxpcWhfSEx8ox0jK9tbtvLMpkAyUoDVe6bcXehekIy2GRGqy0zEr
YcDLKKixNRSy4i63qM6+b91diapVYI+jG/LlocMACnU+ytJEFbAFX9YuewGN
rKqk4xM6l37/o6BQNv2qy2mXKxLpr8u5nqS98dKf/kWQKiqVQFVYC7nonf+G
esG9pLtx+zl9ItEIsqWnuqhUVnWB6klF4C3RSeALWSSli9Y29tSVWjWs8KLX
KXPh0+91y2tdOIvLFp+4+7nz3sCZKZb3d1wgsbfdDzKisMeUSlUFeshmR/fR
JPySksfSAGt5WzNryUU3sq6GFecLlwdU3OZ/oMiZdDmOE+D7pPyUuetguoi3
ZM9Phoidm0D+pwo4qlVM1W30ZlnTVER9gopO7edPqBB1PY+3RWMvRZ/+8x/r
CKuBIwrICHvtnmU6No+uH0DNHXvkQyO2bOG7YXk9jaRVlrMYwE+C5Gd+df3f
XbzGDuP2bmMaO4nQqC4xyxXQXnuooyB9krTyqty3gpuPR/vxPI73qKLs+qml
n6tcEoIJZV9qDliWgx2c4DK+wGQRHOrN/wAX5fLDQ17RVxk4nde0H3qciJMW
9n7+g3QAzkF3Rp2bUegirmySsbIzXz1VYqw++8cPdNcOTrsBcJtqtOJdPV3K
m4mPt1Xz4aUvoZHiPfTST2GQTkNgVLhWEgFBbw88AUfLHpEUZOCMxz1gV8Jg
Xm+NiP7yH34aZ/xFq/A9CwZaUSKdM5S90mVT+H/3OZb6utDBIanYnDf9HbWV
NiQ2UxWuO4zZ0JWxtztJk0HFLHbwSZS4JP3af88SFTdDkQJHiltApGMs56mv
AKohh+IUPaWxf288Ua0a3hiq4rHz/EQ39Ukqmgy07eL+7kDY9QERGZVCOrIr
cdCGjXcrKuCIzZbCq4porXFoXGzasaGjXVibwbRPnrsiHcR4uAyLfnqJsJDQ
fT2fqq5c+vxHgIzXHrmOYNTHJetlS2bQEG/87LtWTbEm54bVGbjG8W//Vqol
l5Ph4TutUQo1bNr2kq1ygtIQO+OiR04ORxB78xmWHv0qve8kpRd3shpTAdUe
xNau7orE97/2WGbb4hp2qbuXOC4Y48vr3hcY8XOxypi9qi0vH7x4d08ueI4a
iZWUC59+p0Cvxlk2EPzRXSR6ZscORqiedYQlVT98igow6T4KXXbvXFYJR1L4
vkVWAUL8ldqz6Ki87SoXp2SHUDMio3uLseZuPBbqcEDl3NqBLbz7oL3VNEym
t/KYjdj8qu5qIyxN4knKmS/nGsRoiYKRd7RtD1sBs2z/a5WW9RfNn/4dKGD2
Zmav7al8EuOPNAp/+lflVWk1n2KznioRT8QSOv/p21x5CdzB6FjFDifCLPsE
qQ3Y8XKW3rlya3PNpD5/lAM1Wwby+V/m8x16N28LzAWQU2ZT2vCVmJOhs/fY
syf5qe6XhdXX5S8TY8rrcSkidBVXWxjyjrUPFq2czcVd12MJozOILhbAbb2s
aTpi4zNOzJqeEWpUSw9nrmyDdeS72DEw0vicWtlKFY7CK7qvPxvGc0hpKWJj
UiNq7GEZzw/DQ+zjlLVMUEcOAM2rjZv87E3ghdQlbM394RYl/xAHUpy34+zq
drsKUVDjGRLmHfdqcmtt+4wjXlmpsn72Iu3meSvDZLHUm5MMWDrFbRbAuL3x
hNXr+vYOd9RRNX2ns2fCRyxB646xa8nyaJtwPzu6ZVEGRYWrkAJPsVatQZnO
vpA7U1K8QAiGaviI+CZaA7Z/dAZpYbTHrw0Wk3aK16NKhNX7UGYj5FasdRt3
23R2rrpGpP273AnpDPOldy3Jyry66+Am3Voq6ObbEnzeRmM79lNad/qwWGvq
G9qxquQwa4KOkVufato2EPpyoMhTGACddsWqno0JLq2ZpZLLY/c9CnfQMUH8
bWDVAZHWhpJKoI9ZFZxY7mU11I56iXoWWw+WGyl6tZcsKXptj/EVzdbrIdyV
8DifyRmg5AUO55ErXYYaPc6i2xE5wB3f5ZUcd1ZUvR2EfwbdMptObl3Xfreo
CCxZDkI6GRsuLMT72uZKXjoq9Qq3ILpb6nxxRl3dYLSms/ENTq49EsbQhtd3
bejAHlFeTkUprB0UjK8/to2hhKTomx5RkVDN6eRJw26SiK2Fy+DA5OqmBX31
vITdEZG3XeihXN1N4Nnbz6cKL9RByhHvFE48fexq8fRdY6Rq9vlDpXzI9rmt
fypQFn3qkON3vI5TZSUwxQleh3cf1SqR31Dj1/P489mAATl697WgKKpfKYyS
vIII34fDnuHPY6WPgUyW7C9UPlBY3I5QGGZG8cIez85SMP8vWkTdWzvAd36A
McgmGd94SzydJpgOXk8zWmwMbqJcEDh2bj+zXWRnhNBeNo7OfRnWna7MWMfE
POqoL1pvpJSpzlDeZ+76YwmUpnm3VwNhuNy7lHsAIVscllrOhICGvK8Kh+6+
Ornt91mS623Q7bOypmznRFHv1F1/uG0/2t136feZ+RfZrlotfbn5sPfP0Rhk
gQWvzDri4TQZ88w6QS8JVdXGLLVQUr9QQccUBWek3zB79dHM2iOhsURwt38W
jbG9M9UFVPDqrgddumfrPkPCSutTbSFp36MrwK6VvjvKTdD6rN1y+l0TmuhM
y5NtBzou+qg0XC6xWCFtQ/UCtNGkGgS8pu5H+1mZa1IPg07wyw8LFehYgz0q
Bzt7cntOMWaE1bWgneH9t9oUyY0ttRmYydp/J8XOyCWJatgRFxYqWR3XO64a
KMwGn1q3We5KJAyqDPQy47DLUn5PoGkFke4EjZ0/WQirVIlhsd+qedUR8kaO
dNKb9ti64bMwfXVH3WkbKL9f1CyzBefK6bHnHGOA9y0c8vNZlOCPPvteJmb2
zt5zqphvX2SbP30vYSzkFwKn5DsvoJn1u29bz/djOoFqcPhK7xyrUaLLiLGm
TE4nOvU4e+PZ95yq30+0OvIZMeQ9zANxcIHJPLR465ltWMHV66wgxBmoK5Y7
o2NfTWV6iW25Z0tYfSNlHQRAs9WtCTRx1muMTp9GWZh9ZdxaRGpTtedriJCv
74vuBXLc7Rc1UyBWFniXwG82OUVPZCpDnY+Ie59OFFVApekCMtjSxgA1FWW6
Xc8oVKlRotuTiCLdn17yKsLyFSlMN766X9Aavm43fPJEI4/vseCpaizDDxfL
7ztdYCpKFlX12mt1YL56Zvdb7ZwWcS0B39bx27jKiYSyY5tZZRopuxhsO6lG
7WdPEVl0WT+RfQhzFWLE+yhVllahfsyGnYLtSvyNM0ZovlSFaWplNVywRXeV
/qZ9QSmPeEwVdX90r3DmKY1vl0qjpqA41QY2rSogKrI9JNRY6HmmGBbqeScL
vOExngw4j6X7AVYGqN49RNdrj2wEUC1gfqHxEc/YCQliJKUenfRZqZgKsHvG
aisGXp+7bnviDc4pjsI5FjSqNqfGszcfiVCZkVuW32/bU85zvBQaFA5FfTNi
F6uXp1UB1riUKlZKzzyXGaKJM6QpJUNx6DDBDws30W4r6g7Nu1aYJ3T90N1m
vJqrgE0Osq7A07mbcnTu2mMbUbieAXSP8o/OCmWxJD29IEaVczZfNZXN1L2s
fw6qHRZzrYu3av9buPUiR9dHg+OG1AAWqIhqHwaCJoq8O3WnpUSmdv3ME05s
6kqtDf9+qTckLbo8+i/mYITwLcldr+EgRY+keserCVqv9RBvH/N8WG8yubyp
IrZNlj22fqX90t/NFArOe12TS73abTYg5EZ058kcQQ9g8WhSAWq9ceEyZQMg
sIeyicG2NZJwVbXmVMTo6vaz0VVTUubAbAwdGlhkoljs9IDFDPyWzlwF+3bF
rmBEVkIdHHW1jUSuRMnkqT7PFrs6QrXXSPAu7qI6eWld70rdgQ2PeY94xqPz
wJINTM61RzY0NhW24sPeFj7m3O/eZuz6iO/EdBZU+zLDhGpBqyJfQ42nrBRr
dNCWI1N3OvXL3ivXhFQm1B796MH3LgoFsassJ6TIzBb/5c+zS9Effkwq9ZJr
RJiU7wNbwdNFN/OISB7s4u5zXzzWLQNTEPapM2pjRHm7hW3Joc8+BGO8hR7H
QNs375Y4rOhaE3GBUWUpYt7qTkWsVLd3QiJTEfrghFkupvyzO8fzGWrgN5+q
/ER1BFzIH8iSrspJpE5gNQgnqM1rz+6CNvB1ZZ7gmv52pj/3b17c/H07wOJu
C2Xsi6uvY/+hGpnfxlXyrUJUDktaInRg3n4LIuK2ADSLyhYX0H98RFoUmqvw
Pc6VW799gk5o0kL1CgHhD4B+QhMH/m0vUtwdtGWgpXYFLlgp2mvmwF3vG5Qn
7AH9n8DpHZBVdT2TdZ7afmIFdGeMwrqnkbumKq3qCLOrm+3sFewXaq8jbhEW
25/rqDo7qizpVhJCEkkCmy4qDdWKgmWU3uEOxwqz72Y7xtKKeL5q5qevbnvM
mDQel3v2ffAyiQUiSrKgV1y0o3KclU5jaRRLtieWaamo0ocvi2okob8BT/qp
5eSEKIijhv4w7axsZnTNtrt3d1Bv5MawG+NDAgtiD0CfAqYvdb8173r0+cxS
Cjo3xK8UlZI+9pRFK1JJOxTxB/z9ccs0TzDJSTazSxuzq8hq7QCWIqqURi3i
q6OL2JlHtWllw7VeB2bWHjWYmgFTM4Sk2fbnzaegXWQNhqgxcNR9VLRSz3D4
JonvY2Lz/UyBOz8KGc/bL2FwzEIcg4GHvjbdHzlh4y1wkoyF6v12hDHK5oeH
3ttR21FCqIMNmF2WLImdIwc3YBmjL0WH6mkbImfa21ja0Np7JGueKLMkBP7w
/0NMt7wh+K2+wlmoIhT64oqjaxa9Hb1zZTwW+Us2D7bZD2Sy0P8noTLQDyox
ul37HqDTqLDEhpSNxaHDNHkRoMIe5fynQid0pNupS4CVXHUnh86D8LkjCsdH
D97VPk+luu+ApqN+boSeqKp+W2dxZbVziF6jQPyXih0dYfgSKYaXRcz/dSJ6
rl4xxEpViRzRbpcd3yG7oaaTL9Q+P4nrHX2Y0pvYNpwFSaIf1LErf/d/UrJ7
X2mUCycl2Wk2vbRBbazx5CS92FGj4cE4XAXpXF1KIcRs4bN3972YzVXwn5+i
jGljrzaqb2s96NDaNNLSaNt7IRErHJSYOoLzAP5z7ZGNh3OnY/5rb9voM0Fd
iXe87KJsYAby5zXqrzqb7Wnl0jcBifrshRO+w3HBwbzoKTi+OHGCsqRk1xbo
/bceYTX2xqjXn6psz2WvY6/I7jN9t1GwX1BU7ukbQgXs0+8ow+ho1a64cstZ
NLpRY6b4yZbX8Y/bg567l+y6xPuWJymsqHg7Ete6f+4+BKlShGozO0dtcNVB
bF9ITEShpr6FzzRUj0JN7tI9xPCXqLNQV7Tp3fHQMTgD9T5IUcjKVsnlPKI6
gX1LnRxCqF7+w09K6zR3Ogl0mqprMkPJOL/phRSq84TUr2yPcEP/etCCLQhA
33hix7NG3mN3KvsAl11/v9DbGbJ0ITUJLNFyl7RQwRqy85SdvNfJlYY1uA5K
LvQsA3ABHAL1GMbotbWpHSHUFl3cd1Sw9B7Fb08UnVFbC0KGIGAiPXGe6Y8u
mcQCZ9kEmvw8Dew80veVKp8L386WzvVhFw4p7Kkyce0AdlLUiIlYNJjMPfiz
Zl3suKQn3fS6HbIvwFIiJN7pB5NncBaW2zkSieiRqPcQIp1uqYPE02J95R+z
E4ZALCpi4yjM2qshX+8sUHs15dgr7ukZ86fjdr2LinrashkCMiAJVYHAYXeK
5/vlHhm7+ACOxz7/9qenP3kl7wP7TNvfB0Sdlskm31vNlTPLVYhNtZT56plQ
khVrI6oOEje7AS2OP4CLgj5RqMbdUjUO1Q6tGvSIlnoKkqj4/wzsrBSJNlXg
upJ31WipFn3+d1lPKOgnv+8rrGK0Zk9DtErPBu0jmtIqH5euNAQpHnyfYjH4
xnM70phrb3oVZntpxTkHzA+keBqkquGtF46wU4akrEXobscdDghj4q8bKbVS
7SqWa4reID0dpAzXEKDblgx3IjzN564/Ua3u5DVI0ccczmt6rsWuilGOY5qe
YVHhJNxR76m/5+ZEriQLHaHrcHFOoMwcwGpmgirUFDGZNgm2ikBavLw+z5qe
vjhdXhJ7uHMZygppt6Cie+/NAEeR7LMCTRM9ZIF2Quc7GT3YZ9mt397n6Xr8
XF+3t1+29+87HvdVDTXHTnl3a2XovdHOYv2c2eBPZcVltOTeCZGsty40wnmj
4ORPFYCJyw9rRBfv+W3N/fzN53Xn4MGfG6z+qFPar7z4mNDRrNAUKjcj+j72
bIhhSP+5yOzgl3ptNY7SzxKbInG4LSuud3tDE+5gFoVGA9iXT75KkWgzR0pu
H56JDFMhBJRRmVZWGUqs7ySEpv3oBNXTaHZKXZ+YcBVdq4w5PZkrwcJd1DfN
1JV0F8uiM+UuQMUW1TK4N5yqnolFLBFh7Biqe7b3xdsqOJYaqVERPc7jDIdu
b4N/qcjVs57G7Rv75kFRBpiIEts7gu7mypYkMpQo2GPMru14feNX1JNOUdps
ZhNROB+6tCv/8K8y0ki66tSNykiFhu+q8CKxM5bPqHTup5GcgaZIrWvfsUvL
1rO9g4iLuX4KxNT0lW3RrpRbS9hQi0vqvQN941foOHds3G2nuUi9zYnjERoo
3ohKVb3FcRTtEVNRrW+t/HdKLqD2qL5/9AUAf6jkWNaewKrESmu4RI/H2m34
eZBdl71fQNTIQkbcz6nUWzkKlwVa8KggwvY/YHjuGKqlmc6GoOrRUbRrf05m
4UOvXcXTTB3Gen/O8hCo3Z+IVRxiyPtYOBILwNNto10qewxtUY00FKeZNYFM
vtTzcQoRyDBtRzelC2LPf+rWU3hQ3P2qnSUdu/78htuZwt9zVaAQrf2WbEDU
uuD/dH3Pvpo9qJ0d8pZx6jKyOKRpm76qRYU/m1QSR5T/2HwIxGd/bPsx8Rr1
F0Fl/cKnb21BqqLl+YllOTuCQ8I9NN8ojXNkxD7m0h8TjMmV5xXwtqOheSfT
dcUGBZAS9h3bK7lHdA/bcNm7iyRETNZXAiSgO58Uy0cFC5wgxlU0cx8qG0Wv
HpS7g3NPSLSSKGdixSq3OOjeZR+cpOkydc/e1TWD5SLqDtj+IbemxHWffcr+
tjx76LIKDRQ73QX50LzJP17p+Nzaro2OBI6Wv/hJYJ6UzAGJYXnRrrabLYdJ
yomlfFZOo32c9Oy6XKtGD1z6w4/lijwmCbrTd75SvVbUcg2thcXIiajrlpGx
3bXeXyYyfgp34tojOK6nfOnumwY6AexLwkv7VopHwBJ+rZrI0lBji9iR0bnq
qYzRqtw6szFzoFN6TROl2KfXEu7swXmmMlLm1okgOf7xLM1vf21DbDGNflt2
lWxToBW4up21pn6LDPNiAj7ZEhbxRUbawqqPsyYgFXlJO9mWlnBExRLSYYCU
x+wltsmTQE/vL0mp6f7bWWLH3N+gK32CjMnZK/OMrqKrWWJ07Byzv7N5OaDz
F2LmkXIFc11uCSxyOvujRC2YFDOKD3bq1jOb1gaDquSK93WXoIrHhFRrXleX
9tIH9pgXauQ4NoPKdeKznLrx5OzvvuYu2lIV1NOb9N4l7tjREHl93X2tqVIE
eFwlTameKflhZ/L5JCVpbXUyQLUcfauI47geWDPiF3YgRH2OSsXTvYapIfja
cQkj6J8sAyuRtrgl9uhTbno83sGBkH3moLh4+yU7rIOyrSHwTzHygZzWM9Uu
wUEPs45HAzVheZbtAa/pffjxP9YnHLjW1/aofva114ehGSx9YcFXUuyimEEQ
YhswlmIe2TtLIUWcQLlpT3tdI/a0I+6THdpCeVSKtggBVokLWXro6wwIZ5sb
m3FXsA/rvHOaV4wNkbfd+HcfONrQHsc2yhztYqDKSpikrTKSNjZd7lL1Nj/h
jqBfs7LpqkSSh2GCCPzAJOtvrf29Afmt13vjpKvi+/e3J6t1GSMyQjqogt3q
ftP8lsrLttzcwyD0KuB1UPakPU6m5x+AW6SreQW2I64m1D2IDJlNXKmjM6to
r9uj2Aer5WWxhQ42pciiwLbX4gvv38PhdFE37dTNZ7JcrJhJLeCA6blUH4Z4
pRjDqO+rFpUNK4pG1BPWevG5AG4NJKijk1AVRNTPsmxPUHhJcMg+qVTwQc4m
1J0QC4MTzEvkUtZ6rvaxBfo8De68PFXoaR+ZZWHFH1LZp5pqVRuOTve+9pDm
0d4BzQDGt4ozW9dRI27EB7CGqsMtZ/5BR1WfYm8i70o7GPnvY5KRFYHEvrwA
YUkw7/ZL1wnuKK8T1J2Ov1se0dsc2C0PlzqOz2Dey1RC+CFFusBAXkwwQGmD
2cGo7SBe65C9OkU0pYoZqVGFH12Js7ARXaSyR3rG8vZQv6615tmHZr8Ag/JW
n9OBtlOg4ZzAahvoPnWM6Y28GukaEByjyO/o9KQ8SFFCRVpNPuUaLDAxyQ9j
GDoe36N0zfOWf3/M6zX2STbbylqqZpqCoCBr1MU4z7k99j8RHgdbd0XUrgud
2lHv6lTJMXB75uojcSLnc4UhMhWRvxQ+YI24zQWZnc2vw6l+osVPXll0Xr9b
RCn372PAuOufY08kZFdd9XDHL2+ok9dfmRvxvBwxXE57J4lXS9gaO4oaGNiG
jmjdSxu0E+wEzQOy9lcDFRtw9n36os6hSdnjx+g7oDtvX9EmTd93mPz0beU3
2ghqJ7ef7uEzj6oRCLsj2hHbmrH3kNOkihH2Th4hDFv2Y2NtmwFapEuoCZzg
m/kabDBUg75DV+RYdcRsFlSyONTaTR6QFLszSY9OZG8531d0w93XIpcwMHRe
cs3ru5KH2k1x5f23gs1PEKKV9vjHuQtEqP6zpOYFo9pbz1Eq5oOwdbMuZE0l
LSnL7mzzHhqSdJNO4al8eg3K18dGsYWtliqWYV2HU+XX9pGqHUAKn6k34Mus
6WjtwVHk+mNaX8PTfZygUYuUXIEmyb55Lhj3upyM61jXrnkFFzav9vXsumtd
M32+1OE+i940w1Dqol68TjovuOnVl4AFfehduV/bWa8rVuMMXJBNLWvikDug
2KHASHL6gespARa5/iQkTJ27pq6YYnjNVkDQpbtb2j+qSNsbTJd6B4rT6x0/
A21sGMdQ53IzV4k66tdIg3WaiUTqi/3xZ9e8BjAxIw9jNBYUK46UCjXs0mwt
f/G/KCuxLiJIxjGgCzlLWQGFvOkWtZ+VLbBqtZ3xtsNE5vZY1KfabTaKTTlG
XptV1jkkSporW442eN/0HY6UCGGPcbE6mS2iyHJNGKq/taBBDmQVLjzor9Cz
tmdXI/wB77yQ0CN5+i+9EHcOsgmUAL/5FLTDG/v6D23b8797K629ZRqbJJYx
DBayuYF9QO6tvTdDfTQb1XO/+xaa1l/+b29psASFL2bbnAHrO1umrH92LcLW
eIgFa4Pntbgh3Sd1VqJxJz1zG83t+9+N12dkg79SVKF/c/4zFAvV5BPTa+pK
TzG8DvjZrI8tVe9ZdkyQCFzdqRHMoRo3ZjfGSdSM9lXsshNKsgDiIDgrzVbJ
nkojdiye/uR1jmCHaUiysXD7mYf/9hY5zxn2mpG6EvbvNEgQPvy4XAQu0ItU
F/oFynbOEAAjxLrNgw3fWdRGMKB/rb+z/525+1qEciUT9j2QxTKThxTx2q7M
N9Wy0o2rYQVCtqlEsXB9W5V1G1ntschOtkeYYi9FJWUbTrUfpcPqSB7oHp3O
vu62kexB2F2Fh4l9d8X5iOFyZzE41fQx5qLaqB24E5Rwbf/7jj3Y9OqOjdl5
qKdv5VwKO1+gZ5uNOmeInxb9jWsVQ+35cfSVn1DQ7fVMBsoeOoxS46AiyAlq
i+Y7oNFD+5XUwCEHQZVzlNtRadzXhUta9bY3i+ZEdb39wmMUXX51x7nRrZYd
prPou8qD5Wli/11mt0P2FRao52bTBsSCvptNzwnuloRYIH3zABxTwDaOejde
Gy9b7ILEnk8V9q2voJMBiuHabsliasSGOt1zLtSsttgvZkrOaewuSmfIUSdj
+oI6cu30mWIBhEVihCF1VcdWqlIePc9flX1CRX92giYt54tfOpPCoXjilM6T
NTnL+grGVTXX8r2w31d3xASZyTKrTutwlrLq7xUYPz9kzTjMcMPtbgolzFKZ
EtzTh157peJ78fOQdwxbVKeSphyRGrHCkeoqPMfUr0LWmXz/hgSRJY7oyWze
V0MLN59nxnqvPkFtqVsupgBH63OAvU37ipd+/2P9TaIWUlS39ni9KpR1cwUt
IzPtgVUnOJzPmYD9azqlg2O/Uu+f+HucH/PcQ4guc3cPDnt27QlEM8eug7ye
fJ92PYJ1GxN7m7qKtHDrmU3qAfF95MvEZ46o+DBnI54raeXNrQncB9/dwkGx
7EbUWB3dXqx1vHRevkrBNrKaZTsEx+kgqkZv2suwlJSEnoVZBESU927tc1Hq
+Z4Anf8HrzA28N3/mWNSwFQOyVFbb7p451U9v5arzLqSUFQiJBM8+Sxo3HVW
TjPDYFaxbVPtlTXwtPzVgza0vHV3MsOrVq6TbR5uecdlxOw8an338aC++Anu
b/+YEbeB693ohvhoHYimUURVO9bA2P5hAkpJaKF1nDuKwtVBgeZT6rw1MAO6
F7QOpFpRc9sT/74r78RZ2nCznVnvXqxgqI1ndZEh6nRu2xIVoyH9qzr2Qgtf
Xf/3Gss/S2cCnR2lrv0Y+5KJrMAlC8ME9cAsrLab/FD7KRFmZtDCVWx5cHNe
+ClcMiP6bqRYr7ATvYGqV61DBSygsSxGy/hP6d0+x2j4vJfd3hFPEgFVoy9O
lazIHI0a8AGUj9istUptc1pIJ8MDR2ZDdItZ2eE0jz/ptFUI6W7wrGkmrJjU
cJKehuMgqB+bvqfO6bXeX9SUkWxlnXOXXqKoOs+Xp1L4FkMnEdcib5FdZR3X
N1AbQZFtSOeS1qPv5NpRumr6qYc7Z8iut4Wbz4Spc6x7X+UIUfJKfRbGnf6r
kv0D5AAwMqD7KN4TSV0okapIKgf7drneV/2cmSu9cpcf0S5Puvr8tmSvbgpv
QDOSJ2k9Bcxu7EuUkUvh7dSnGFn+nWqnqg8Bsl49E3pezWSbf2my2DIDMjX5
r3fmgJV6hWp81uHQ7JQqjUX36EiqHNG9QscL4jrimU9/8gqAk8T070ohTBVK
tbouZF3PjuvxAMS99jhnZaNeV1a+ze4yHMpKPJNdFmcKRNh/95kWlVMqR1ql
ItIvEqStBpQtLhtPO3bsk0RPw3V5/bHlETZUqhtO6cbQ6uMlAmDT9NVt7+8M
S7tJxx3yA3SdvcIDjNp0tt2jS2CKhKCMfnn9Utbi7HhHGkSc2gu669lL1c8g
iujA2K8P5yZuV+UWs6jK7mYdtveTDiNsV9HRlI0iyUFot3/02fccmsfqcSi0
66uvqQaUFCmIubMLW614ue0ocHZ3j/hdomZcqYqxePvldOob1auiSno2dt8/
0pFtE8UZ+a39dhYg+S3ntoNds5Q2vUgwIsR9RALQFLUnaNylmu/3/KwPiB7Z
EtrIJs4uy7N334gaT1zjuqTB7IuqzCLeVIzqF2/sSHLDPQoh48XYqmqgNoc8
vyvxch3JLCekNK1PB/K/e/xdngsxMgsswtElYnw8ucH1dvOp2P7u6QYFxCtb
jnnqThAfVbX1AsbKc8fPMvGXJsBrfnmovcYQIkoqf11el6qdLR/QJByJUiNB
D+cTXBVnR0EBdUucLvQn2B1Al457eIJTnWsqneS6R0AWJe56qoOTdZxuXj2R
HEnVH2TLf2/h5ovkVC6l8JO54vIeOJbMaG2tUC5jG/qRWfnKVS7tnRZuvXSO
eOgADQpVO1E7cHS0T87d+6ap2TEQUSpBjylyRePvfy0WCl13N7NgN4zrLEDT
60CLRS3iS2HuEh96ZStXcd8bL7hG6EzyXkaQuLY7kYnldmSo4ZHjzo76G6fA
KdphVV/6OoO6BXRsc4QHhXcrNGb+GjrlBGrB3qEQKhPRseY4kcdALPLGPO0C
RHRF0XzFpiiNYPA//JV9VeeDa61K6EbCaLroVZRRGfygvroi8Vi50tqzW8cO
M+e2Ta9sKvf2Iz79HXdk+jso22clC/pprKsIPL60kZWqGrm4yLzAzmiN1dFP
Ztf0dCPWERu4wDkjHNCxnJ/lsM0rbxoJAR/AM4oRWPRu8DMIRbDbsOW1E+XS
58LfDM1ZAHn/24D7Hy4ZGcI2US8tKbIl/TBuz4oBD+pkuV71ppGRhxi0wGvq
72MGj9m/+GXDX8MH5UZ2I06/K/k3rFFtOiot6qSOlPW16/QvO3//63lMddJ+
GJpedf7f9ny1X+MLLMrBU3Jr5bgsYhLGC4e2ATaail5zzIgCywljUirIDNlm
nCaGc5ZH6gGsvoCbPKp5Ps0gsiQGwLf5BkzW4dX89z+k007sNNvJzgwOUcGQ
s2csVsFtkLt4Dz/++6Jv7qTGAzL3oEsQdVAbLIBCQ2RQkfhB+1xojNbTFqqX
k5ndZO9e463IyrXVA2V+4JF084/RpagnQvs42/AIozFlb6QEkfaRFDFtBOWw
ye7CtnsnXf78h7JfPCAFN9cQ7qurh8p4x46TiSWdnTBK8S5l6KJ2y52pmLjG
k0q7DG2T28+htQ0I4Nd1/2mOXDI7SxpV34aWkQ3WXIGq6Lg+edXQhI1ojOFS
A862JFhrK7UCa9zjAQkyZL//kJErBbIz3j3W+mzOLFvyn49IpX/2aipZSXhQ
Ccr17Emacqvrjy141IkuzXjlUGw87PJAxORbEE4RK7DYxW30TMD+7BQFv5Ii
bKHWO6Tox+IVieMesOfDPI4Sw7gv/jSarqvbag7RpanXvuMjc0hwY/8ZqlWW
qU1IjPbOS3uk+YxU6KKOnh14K+cJJKzU2iNbGK6i0X/SBDRQrEafZ1EUSOw/
/DOvvwI9GvEMIWtJCIiFm89mGrrRifWC7Ii2SKqkOE8A9sJLtbNNRP90pBg4
TTtSqWv4LrQw1R2a/q7U+1H1ZP4mOo5oGN9/O0EwjyOqXHVGHXbwOqhLJwi6
/fbS798hjb/zwj7e5sLuB+KVVdVNN5ktRKppQb3I3SB+6+4dgNiwPeL8Jyhy
UNZfOxrU/xtQrFLXjqAFj/BiBWhE6BCHR15d/3dbdOM8xdL4s+qPLnLu+ffl
CiHa/avQzVFwap8C5S7aLUqe0wbZqY36PvYqO7SBA89d8Y7fORBcoLOe+txT
qz1nfop1UTrW8Ane8QaDXJTNgkDhQtW5w0XHa0TT2eRTM6Goy16jCCEpGqnv
xfsJ40HhRRQPLF6+nI3a5NclVx0FckJRaSgobwVSQlr7i3caCBdUiSyXTvqz
sOvZTxXQe6+9pY3QmWlwOllZPX3ELfI0Ua6WN87ce52jk577c6hfLR2rk6Dp
v3bp+XF4PLj+85Ag6R4j5G7acoO3+F9nM85ZewMlHeLihWAkXgMWk+Cl3ACA
XPqJItCfAnEmKUnjlrqyhZ6Pbnb4M197fKp61lSKHz578xFtri09TBWiC9RJ
OEyhDbJaizpuZNNFhEyfi1BggsYzTk2K2rst9IUGxYGS8IG+B7Axl8H/z3Vi
eM5OkaNHI9c3szSUT3Nvud0M7V3lVZL7u0cd7WahgnZQKqgQlU1qHBT70rkm
i8lxjvrstb2MvMW7C5jgqi2qLgFHCREfCMB5We5MBs3INdWCIh0zE8t19Hec
6HJg5QQ3mKJTpM2yqqq29nlSbduYe4T0HrIIfhcbOftvhERSnLvz0hVLq0zK
ybHEcY/M52EmhbTCNvqFz76fZaEv9dwQvbJeHnMcrd3QL+2UzqNFFtunslXn
TqkLT1kQBVjTtZcjeQtQE93KSK0jUpG3o9T2pfzPsGKqfTJf4eKSK059lcFQ
OfwVcSWb0IkhC0hE8+mVLe0tIfVtrnXmegGoNX7reFSBSOLu13mM37PJOsGu
J705tu2S0+KssjD1xw9+EDxHpNXDWAjwsBinR99pWzE0Q7RnxzHDC1uHZ+GY
/f5klqi1BXv+02/kaovvcPe1SsH2Hc7d+0adu5Zq3aW7+/bKy1/8nLkQ6mSC
qQ8XM+8expwi+IV2yDLZlJIr3fkOiKeifneYqUHdPIBsZGdOPxNTFAf4aC9l
oPLXvrr+bzBCX922e26gbb4HqGpbPL0UDPykiHWpjs3Lwq3kGCvtK72ONbuH
F+6/TWpV06s7jYgzRl42Hv+vEB7a4QSqAGFj+0unn53supnOowS5rSi3Yp/m
0GFb/IeGHMBXIt0b/c9ChXFITWgRb0/fSdibES0gOzjkJGhfQ/jnmh1S+3O1
7vYubKNyDTfWsmM1JOajsXoS+eA13jZ3N/Oa8Vxm9tojVyAaY3dl3eZUI8Cr
FTgvsfEWb+e8OepBSkinriEmD0VHz0YvBy7lXZ3wNqiLt547F0MxBciFSw+z
I0fX17J068tu41FpU9vloemkmUiPSJnvdPSVmuWxjtZ1BHJVgHQTy8qezPkE
4OIQ2wzRJD5KXzZfa9QlrVutTO95eX2xSv4uSG5sNdpnqI+LopnGAdYROW5A
cfVWUo8q2VPsrT8Belu7t9QKEYnaTg6H5uYstPfRg6LeEdR+O9CkIOSULd26
dlwyK1Sp8dpxA+ESMulRH+2K0b805iraaWRFrD5MWFS+D7fhWCM7p6vJ4u2X
munEH4onlb6Da3hXOuczQy2cLEdcP6fKSjTuni0hrIyX6WPhCBHT0PM6Ubwz
O3DEckp7TQdDwt6r7oMgiaAi+1T3Vj5FCqBni8F1pM+lTq2Chq8qDuHcJe2r
WVGHck/MO100WmtlLcuetsRf/KcqWDB94/1q/0NWdWWzjkWjfmm8/yKGKSJG
oz9i9McL3ew+P7yyH1j0zI6U37dUjFZO9Au7vUTf/KZU+ZFS0ThM10CvvvgA
MAkZONvBLJajFmOtdKeTR5oJopwqVrFtJCqojbuQqvo24GuyzGdHhh2p9iBa
xcqdpTaYdQC2PfmX6pWfuQ1NwdwhgEZuBaMXiQ5YQtvKKO1SnXpHesgwULy0
7rf/kCTVUY26snXelRGXvvipzMG5Ikq1ESEf1Wo53HYGNPClpa5JqEUPk0yP
jvOlz3+UL6Xa8O0xxcLtF2VFqit8zjjVNkTJwCrmKLxnA3o667yBKWnju7qj
PjCpvNtKa2wARGROVejP3knxgXT/r1PMDJUNOkUo2aLK3ndAjVtAA02+5zB7
XdmwuFX38OyaV1SPSWNu4dYLXSGCr7JW9jRZw/M7uz96VJCp1cK0bqR/sfjJ
K0EkhIKdu55IMlKWaz8DdG4zf+JhAzW1EslNUBPs4ujs3rNHHiieoI4VIhL6
FDzTC0cP+RQfvP+jP5rXLnVBsKe3x7r0jlz4vDpt30CcwwMqlGfuvDh180mI
84fPVHAHJK+aiI7VLVqhbTrKd/FOcSOWt5cie+RYl9cnqfgkDQJBcsVIrSSk
t7wh0U29CtIDFtSupv50cNJ9H/2A5U0Z83FT/yToEAAVlHy0t1Zxk0j1WsPh
uL3fHHQbvhKlRoVD3UuAgaOS/OczaRmuq8s3IhYZgAmX8YIFLrzyxvkvc1nD
q4yAwHhe6olV+dGD78/dey2DT8kqqJ288g//iiIh6ugvpDGZPaIjlva/2Fpd
y7mLqhBAX7EtIQSXCqdqwat9YHkIEETc4bAMovYq3DWvPx7wc+lKja7DyrLH
8b3y3jLrpJMZZwBVKz4S4Ue7MgqoWNUkTU5I0lGdZbUPwcqG/YdMsKcy8kJK
MX7fHvnwUuIQiXgM5+ubz2y8gG64/bzwzobqnRzB8m3HHMt+RrN0FWhHrzDN
33jq7OiuaAv2DFpzyALuvknfWwp1fscNa0Em655Pvztz9438MA+z8HiCPoK+
Pz9QW8M+3obT23jydbY7bpyqj1LEdjInilHLPeEjhmRXwkwelZq67kAz24S9
/q82q4u3Xp4g4wVDQuNOy1qlPznD/AQmdSzuaVNQNhkBI5r91TORGaSQhIqy
xvMGPVdnV5ts2Yt3905VT6fZSF6mXbeoRQXydeMvMsRs54V2WPP+UetVN3Du
tDSjl4iCXPrjz/Y5v+ATFaoCygpqfZJURc5lzlJpHqrHQlQ4AlSrT3pZQP/d
eg540/1vJWNkfybFvqyr3BWXfCp3K8ub5Zg2v+0vsBh5MBFGsSGybZU15E+u
aff91nLsKWpKe2GvkrUzj1ldvtn7C2Wg2auPVLvWpb+QO6o3mp55o7a07VBT
bkSQ9yMtOjlqHW67U8akpueWR9OZKoS6IvOPA9AMsY4bqieIneS3XqkYVoxX
W8Wj/Jm9piWUP71+FjmpodN1RPpzAhbwIH9h+1HovDnW47Ou0MCN7FHVjr2F
irAGQxURO4xk70OKQJ2bNzCHoNmx16zf/d8q1c1dfyLbZ42A7WmJ1UinwX7U
Fcep/yc7BvUFpYyoNpqCazSwV3cUquLOoAK5zWGi5JAdW49trJ9To6Hm1oxd
QKIHp9QLn31v7+l+uQlEs9JrYdsUHeUuFOQpTa8OazkmDW8Z7U6Ncaz1RNxV
zHvqtaYT3K78RZI42Xf9uqGLHk6RsYZiGJVXNMaxExlz8xg9xmpgzLl57n6T
IErFKVcjxFtPx8LxhD8fLb1UJZkDTc2rO7ZCbYzgQUCYwKHD/MriX9bvFpkP
JR+1xAFEDUbuiJ+Q9F+sq0Kdck3boeSvjnlsHItxGtfo3FBOmusfjZpep1RG
KRHs0X0nskz+M5/42LO3NVCyckXbrxBuvptaba8xN5Dh5XwG3qXcQTbs4kSE
vQqD+8nah3hAvq91jTjeWTHDLFerKk61hrhGqHaXCCunD7kQ0Y3BJWTM10ol
r5jMPJpO19pGy85X947fZVjdWPsXnS8u4KnxK+toqmk6Lks+BWfuQjrJR0rf
zmsn8Gq1kw0Gohlfq6INtagzvhZp5/23OmNK3/E+fXki8LFiThbYmhbl72aX
Ke75iP+K91bfvvB6eJr9lebsxw5TXB3IyouIp+HhXZ6n4Tk7Fl2eu5fOkJKT
GvA8o+gusWQD1osdMev/Zk+k5MBrcNebfthwTT5Bn4BK3eW1Heiy5U4qHBGv
PVa/aopCkfXaj5GG4+DAEYdjRF3HlrR8u29PV7ykyzyuYHq19PA8VNl57YCE
YuHc/Yzeih6D1EvbEnJIxHWfScLEMzsmnv5R6zD8PKgA69SNp55hR0VMO/R/
iePTpz5WngSqe7bWcPvWUFDx73qNsco69fO5jt70wQoqynAmvRq9aQbP3dy1
BI/E/TdxTWmnWfzh3Eh0muSTOgmXqHpn/bWFKAu3n6lqOstKPAAPl9bneIah
brwGoF9SElhCA1ukb4F0JFGT6+qDGhO2qh9TH2KY6VDij2p5SbZJYwJ7F6rw
E5XRUyUpoRw0L9J9POyj3lJhV/ihwMc+V5VVf7Ul+ZTY3ZCeLzzoLWBkjJfi
ReI4RXGStJbHbIOifNtfZw2AuFreK9WzoLBCWkUCDSwnQVd5rcqM/XD6zD9b
LII+JkudMr1K683SjRM0VrAthcJIynNqvz+JhM/ffC7xeTWVHVWgJmquYv43
qacKs2AvF1nG3l+exsTxblvSKFkO+7iVf/hXOkSBYiwTBZsy+8bwxlwB1zLf
AvBjVWQvJQ9JhyUXXxikrW43sMTLf6rP0+Na/2pBJvcyy56qp5RleMlyFmUn
1nYXc9fzaOlyIbaDwge355oB6jh5Zg0Lc4VOVxbCgrv55z+UVbf6DIi6bx9+
/I/qIlTEE2Wdjr7TCPHx5VpV/n0m6Nuprw9FoWcTSz0VE+REY9ni2U9eKaRP
td0cKTVvOCDkrsRdP3rhDnwJLc1UfcEGWOw+SHxkPT6PrevzzObGPciGbB0u
3v5K4vwLGVPU9W9GGcxvxxHbZv4KbufljVqtbf7mEy0NObmkMQzn3/+ch8jc
jqC+p0hksOW19MefxXC2DEV6o/7BuYf0Wv6JIi5J99G+Gzg9qL1Axhb/Tula
HHm0FOHKo74x4qJbr2RKz+f4P6imtuvXjOv/4mLk1qnA0YK2Wcq0MnfSHo67
akMVKnptQbZP4K8cXx2T3UqVe6Cqfdv7UC9pY3YNUEN4SdySCsexM3ffCAYv
aNLZe6+hOCGgXLWv2mfp9l7eP4pLUqYAr609ycN79364jEyIuNzSWAg5IFQP
Snk8kiZ5eNnf24dJT3DQ3u8CKv84XxSzX+RK1cqQw7wufV0Dh9n8lPBqXZMI
Ud9R92qU2OwUzUZtqnQOoL20tkv6Rlr7/1TqMQwt3nlNsN8T3T+p62UPKI00
YTrB2aKQtBaaPWxJfODDPoZkxwosXnDzHsYHdGayDrsgMsA5IX75W5qa9oQW
mAEcF7zQ7Dy+Psv7WimTNBvlTMd60766MlNyQ7JgBKeABAuxAG13nYAhXMLi
YB7tFxyDR/QEwud3J4t7hbznjeBXdSzrX3/Heto7G02tRJaukqaIZEEG2uKa
IWUNPOx7S38qeNSNDkvMZaLziEdXVdY8SDlOQF94toalcWk9c386inB999jS
8pqhQFJazRc++x5joxW5cPvFNJv8drbbF0bkzMLg2btvMn5zBOowy5uSWGFX
8YloUDUvP4zHoAB6BPG8SBoBV3ryhJlgEyDVBbT9oZcLbeZ9W5OUG9gRaU73
7cKtFwdkKmF8h+CTvbLJynJxG4T8pdEnltAWUDSoZO3ZvE9T3qA9r1249VSK
63Xm4kgjzW2qw+Yc1udB7xcQXqPl+YIa7aWHqm3/QmR8TBjnSQIbXX0WJAd0
Qh5qEsrXR/dbr8RQF2vHNgxjywHYZl8GQTFzL3JlM52FupGEQUsmX83alwWn
9UykVhrVnfj2uaNYdgbHFu+8sHAJLlakBtvKmK+eCRVqC8VS6TTuF+xwL32Y
plDbTopsQtvxKY6Vlbmz976R4o0dRK7mYy/sd6/S3ldlRPulZLXoJrXcs91p
esiRvbp7MybwP6lihJ9HS3VtPeflL34GBBJtmv0cxTTri6HP2sijC3+hxr8L
u6F/d12XqlGnGg35OFWdv0dBcgmOHPrsgHEcLSty/pyOR0mnW3bP8rtE0dIs
4NdP1FHAS1Dezji1UO2JCrG2m3Tu+05UgFnEWkUlZLjc+RZ3nVx7JEU6/XXA
7h2ZKVyBz//ua3uB3YOzV5OIQFN/oanWWqrzRqeWUK9qzE75niE3aqhNyOWo
yqW+9tumUafWehzIc+X/LtCBfiwdq0P+OwCdFfZyWk4+vbc+s1TvuFF7Z0UN
oUYdsqjgNrA9Bf+uU3bdVUdvneFRH13d13PX9oSX7UP/DFy6t79AOb/0DaPO
+lwTedmx1e8rXF0h/bt7Ttj/7DV2d+j1QMutbDlWnj3YK9sn1x773WXxVcGN
sXNJeqO2Re09BW/XRd+OzWusHM2XZ/F+emmsBvKY1yyWQuW5HNsz8O1+lm+K
GnchnKH3P3wkpmsn0I4ctKqoXjmg96xHNvZFYt077pBaz5rWjrMWJ/PvQv54
1M9QwPYufmkxJZvyKAAwd3g0DZeGhNkZLk9cz7bsORi5wy8NZf1rabaG1K+C
yCAsurJi7yzrvfWTx8zXZ0zM95wFNGau3JmSz9G0yWeYOc3X0gzQZwRNsYjG
s/fYP3Pnld7evvPUCoAnYgl5TBB71IGdMjJLILaroVtCB3ENkqjSbijd/kr2
6y/5V6nK7mdt41SMtd7yBC3OgRgxDwk3Z586c/WRIyZHy09l/rNJrmRv6Q8/
BTers7fAr55y96TP3o0T9aEVRTncLeWbtkakVyxlAd1CGjh96m/oNJH0tQRK
mCML015DqcOtGQY649zlCHYZGinFrXlPNvZaA3W1fAb6COmUH5Yd8yRFFcWh
ITVsix7ZHUZcG07OyOdvV24+J2knXUEjfMPrLHEf2T39Eg6zxHDbd/fab/QM
nFndhrLnZ+9sD1gYlywe7Iy7lmKlQejJEsGfmStdOrs8JIhpU5imuscZYqbj
qnonKetVhLw2hmKQyeLYFuGFT0GMBVeU73EEpB2bH2bWc4THqPphg2WL197R
u3Gx9v3/M/bmz1FdWdYogZSZEgJPVdVfd/XX770f3z/ahSQkIQTCIDNIIAZd
EGBjU+0qdxSahRgNGLAxxuUuf93xuqKj/4S311rn7HPuzqTcERUVBqTMe8+4
hzUkyWb0IAnbWSBIws/nnthEx1hWYxXlDbC/jJ3h9abZgI5Pdnj/QI7vmmJp
/0KR8NKuPbNIVVrh6DDBYVm+SwfSmiPSi3DEtzoPjjIx7/e4kWuPW3ISkLRF
ngyUv+0QVNtCNL3B/bp/PHnzuaqk8zeBMYICg9TSuTZVnBbjTEemnvEIFKHB
j9HMaNHpaNnXf5vX3lLRtyns/v+1QHdrasZ+Nw0dlXWNE03h1xRTNnQIUU5q
/w940fKO8EwoAeVIvNxu+NKLW0dbvle/Vuwv1inNRHdZP9qevXxP1CC7P2w5
kECIpqCOCVvwlqnypuh5YcHfsfQ27T1kv1jiUZsWj6IQiZ0TmooImbnmsU/W
J3fecK7/X9IhoNFj4ytCF/SZCa6g+MGPNjeSlUZXEWarP1D1duMIyWva9Swf
bgvlBIYsf1e6AhKTUapkf7T45QhVrIgN/Gjm0q7jdH2WZNghUOAEUK67Og3p
JPIyq3Z1qM8PW/jkJKV9pIhTBs82EgLtZMT/F4Dn23uo8j0yQTSmlK3lr2qH
TO7hjRGd/cDr7SpHCm6Y6uf61IAeGKu7DH5fyWovIccGKvL0ajcM+ymJxKTP
hHb/+TU1dlifwrmjSVNopmf5gNXztQUSU4lyWxfkWOLoU5f2SF5+A8WAy/fm
k1aE7vy1pX9N62hMuMUJdpKOszWvg050x9JLj1wZnX86EYv7l059vwVQsFje
PZoyK3z37yqe1ns6B8BLX4SeBGuzj7QSpZUnP76zSWNpRA0WeQGLRqkGEbGG
XRVAAWWjxb39kZXn920ujjVPhLxX94wtqU1xu9V6oorntuuId+XkIBATcPaV
vlq6Z/Rn+EYvx25AYQMckwpLvpO+rdkBsS6fNMik1SaMm/23ipiOAejDWbe5
Vy0sj3gtithC7wH88Skq1AmUf+LG84Ed6PhnYtRYdVoGGfB5fedCf8zGVgeD
BUL2feo4a9d6lXDUU/nzhF2Owyfuno7HvjPcswRJANKLbifzGronVp/Mrz7V
hApWpbewJT+xtO7eSKizCByUeuDFDXpgxbGwiqgRiLd0Jyn9aK7htaOYsdrb
BOczF6cc+GxAgK0UwuMUXYCcvT+ZWJyt2fOotlF1rMa1RNZM7GjXWZW4lIt5
v0fN0jGi4LcE/Du28mgmq5Qr8YL6kd8/LR3PEPN0tVK0YrX7hqgE7FTLJrMz
BnuRffLFD/YcBfkfapXD6r4LH78f0kEd+S/KwnA+awFTywZh91uXUlPzKrta
fC3RucHIiYS1LisjVMs7sysP5V9Kx5PsRroALtc7TgEgxljs8nup7UYctPgP
1HV7qJ7YIchwapLazIO7nRGlExEQIUZqVc90rqc5DSixXzgNYnbdpwxZV4dq
9Fo4tXo85NZ1lQOLfu3JsRyFx3dr3y0wAk15sJifR1l3l++3V5ODemUL79Ln
phVRJnV+XWWPLdTI8WtPJytl+q7dowXhAduwpCvqJ3xGl1TeJHL+LErbgXFX
mFiVrktdNQ+ou/ge79dnQn22OJ6/EQflwtbC7YwBr7+rqv603FECT7Yrl43k
80I/Sv2OPeilvBbkn+saMUPixtlU9nUpczWoVIElqp5qD4ENGDHPEUH0C05o
4miuFWf7ELUdsKXlKtT2U5C2ZFvaDsbZS3Uu0D1z84E8eZa++vfaIXb+xjcJ
P+f1NeehareEmmiof6kvW0bO4jh7Yl95fdlQcDwallq5SOupEhjURmwWjl2r
/hwxkpHDXyNUVbGt4syKDRw02e0sedbSgQ6daax/rzyqNJKipsBwDfdZy1u0
RtbG95hrnkxBuSGNZM+JUVLd1VYvZ5Cd4R71HdB+lE8YTFxvf2sBrAVacsTV
70BTWmel1r/0PxJKnnl8iZxqFLF9qntLh85IL7CdJ6DClvF40Vch7IUDQdto
MptHT6CU9dPA74s6Zd2aH19X4MocpNVbI1u//DHn6lA+VUGB9c9XxPd/k5g9
EqWagx0yWuODb7JujcerTsW+m+uXToIQMb2He59+xdp18h099+VPyk3tj37M
+Yml3Z+wAmKZnc32tzUeYOzktfLMGilqRW3CtJWg8vQZR3jJq8/pblORNfIb
v7st1bWfPXX7O2E12YDYhE6eqi83nku+itaUzykQCwmf9F3SaYWi0e3vjmaW
/Id+1zbyKuJz8BADrFm5nhaRoq5TucPbm758z9Ib/QOlZovHZemRwwLlxjMC
HXcF6dEj2kOLDec17yyfvqXDrtJ/aq0txSNac8dXn9UslKzQNwZG8qXkH0Zh
n+35my8AJ2TlD0tvP47PMeEGJJSnQru4BVJmQOwuPgFT400/N4apCfhAapOD
c7QYgeA0sZdw/wLxa2YAfky4RAvuJcvJ1DMhtv9JkQpkp9lGZhMCszNz5b68
YKoh3nBxD6o1bhy5uOPigbbixF5BTpJ5mT15pKhOhmKtVEuUIwA7gbX1SAK7
qjTI7MfG4tjVHKtJqNDPgVHLn21ZksSJjoB9K6sGa14vft9CFlhUZCiQnq4R
ggEcQJzZZ754W/NXWqdQxTtoZT3KQLzHcJBub8lLbImGCvYRukwxgmQi6pyU
XrfMLbQYpSADq4p0tnf+hg/H0KlruA+qcxdQvCe6ItXzFT4OHNFLu/LPsnFS
76fJGARlJ7KzOtZUsXCdBx6yV7fVrgKUikCHuX4s/gVwanlLcuxpNvwGlP6x
IwVhPqzPA/ANaokPhCtF7Q9l6ockre7aOWEbnpVqVCt/M0FcnM25rK81WOLb
ofFAFxW1M8V0t+WmR607kWPyi5jDzbBZ6KAkao5XXmBAJAvVqhzBFoHjHlvd
SCF09Dvg4l+5P3UR5HWRwEr1RbG4x9vvSbtIBCIcBBe2RTLUYAkmDM5x8kYa
Ov3Z6zqSSzeVa5vDO6SOTXFOTAJrA37zULpdUfN2bNGhk7de2huq1SiXRyD4
IT+9pWKcxNX10x9akG3JKO+TXXV/NNbSa4Tu5SK+SnU0+1xLQgbjQX97Nvt/
qjhG4OK2y00cz9ximyiqHr5Q2fjMHfBFbd4o67klHK+jsS+t/XX8fHFH78Md
BhYP2Leo0+8cvwarbBr8bto7KEv/hxmqeI4nkB/UJ6QJrpsPzHwKfAGlSV09
kdRtImev7C1+9bNtBymblh5hcl/J33BAOEi0Rti6cfsuKf8p93fErAXdYdf3
zn/6iGOFXt7C5z8gGHPdC5tX5AIoJu/AQVcjIMVnu4u8EaHNkerOl1A/A7Zt
cJ0iMj7qHcBy5oZ3BuCPO2lb8opaQOCP2L/lOkzX2XZN24NdyprqCVR55gj3
FBudNApbYJk9Z7gHWxlj5akAy4bFTRvyiaRX+qEiOXs2lGQuQN1WVGAWBXHF
WICOzsMyNFJ1hSZfLvtngX1tlnTo2DPNU75wsDNO6x2l4yEcIdQkrkMqaobz
nXaqnEGnKFPjNRqLk6jtyUKOinn++SM6v93nRVV620RJ9SF4UJCra0sMEWvl
TN3KtlFnzf7QqmyWuS/YjZwrrtV8EvtZ1y47+/sfXc7e8TPxeabYe9Xqk9sq
a2XDOgjsEHZ/47CLR8IuhhkvibL8/o+OUNhe2r/wGFDmnB9HFhj2rzaRRLxu
2r2T8+RhmcfaX9q4pup5YDwu3PmhlQcGtMChOrOWwi2i2GuPLfKV9w6UQ9su
uL3M4Htq+1dd98LU9VzIaUDax9K4UyMBLgQXtqgduanGu1Q9yrkTtdLivu5T
hvYqa6p4XH1gp37pcwfucjfoxnvFLaqXRF0VddLKn2MmGPKnETv351efqQet
YEx7bqjvKeyqOJ4wsMUvVaeU/YqkgnVOEma1IxWO+VtZsQrIg0pDsCuwQ2pl
V2o/AQVy0OUkNRK23OZvvpy6mFSNxeb07kDNoujq3LKZX8kW3Xq+OWZYiBOk
1D+wIxg1dFp967o+ErUcYv4eswjl0eXPpfY1cCW16ofKdtMKauOK/p5+lffU
rT1x/RkgBrzulfOyK7uhViVySNyz6zpbJbphy1wnsc4cu2Xs3IZdB0RXkd4P
RLpWqKFULbn+9Vztf6mR8lEcUaeQc58ccbVTBr7TEEVI1mbAg83n99G+Lt2Y
drtrtyrs1Bwk5KfyCr9NmgywOJHVdYbokl70iKCaAUl28sckETj4/g6V8hE/
vaQgO07tmey61mUnPAXY9RqKdf6AjOx5vb6RoAY0wDOvyI+xhjHzuHREdPoK
oAvh9ISG7vo51rRZ8vFcCdW4YbK9NuSy7RUc4U09PNB+BTo4199IfHkqL+hp
gn4qh/Ge8uXDVD8joud+0bdTF6Cc2vXuq7k72P+sjUhoazEp5pRqpiti5/Py
XgvlFrFpXqVpcmUsjXJbh/EEBdqSRoNqTgpp1WYuHIjIk7abpVUdrXPdmi0Q
On8ZZ/kbdStsNiAVRCQHOF9f/TxLNoaExWzU3EpebZuoQBoVRYPG8JDfuYNH
aVg/T4iafEMPpqorYWwECyRUkP2/ACo2u84bQQufzsonbz4/Snk7EZ5KrdDC
8rDLhxau7ynUyJU6kruCNsmITmMbdeFddOx5Raf0vXTnQ1aEjDD4ddx8fvw6
AjIG+LCIttNyDs6OO/v222jtO+TlaAidsvDEQGldhC9XwkwzC2WdlceSQmXD
c00xpxIvZwsOHWm7k4wQu7GpA03M08qv89A8HLK3hCMBkoiq5Xaz2SDLoXCi
Uhzs2Dtpd0An2xGqkesfuPIJ0+JVcUudXNf4gJ+ySHtosmg/J9La0SvCGh+i
ei5AOvbBGjP5jasYwVoTax8DT9QWOrSKC7ruJ9lQMOtoRvyGqlx38Q8/kY68
KaSBrUSNux33dc8IOiC/O8No+9xdsPO0l1W71a8epxe113V7fjuJWihT0bSS
GN2sKXSUtqMdufYByprYjYZAUarDTZHO4DcR8VgP9NYKF0o9xGv9c6vPbH3m
aHGzpawSezneh7DPtPWUXWB7fluJ0gvcWa7uHrJ1aUex/SZsIT7/XrKTjXov
nHFdHWL1DQkX5d7jv7KFyHR7V88raoR9wCeM7uUw7qexPdU85YeDK+bw6dU9
O9cqZ8iuWsgEAr2seJZDKCpeue8eTNEBrk9TuSAtVCE/QjCrYC425OPUXBLh
TSmLBf+Hs9j5idVntqQS5sMW8iwRcjgIbj7PKr5DH996lepG1OwYVhtC/Mb9
SGl75LXtyVxeWvbFo/Q8/VsLHgk12uZxqXJJE7foeYSO6a+mWdNTB/rYygN7
SPY490i4g1stBD9QK1yrcc1FV/c066xld2jn2Tl6fPVxcVaKJ0Wqvd350cJA
Fb1nLu9mx5arD0+sPvUKcU+IDDh8ZF9BG9+0zonz2ciZ73perx2ptTME2yyc
BxS2r+x59bRL5PCOOtVwwcmdu1Af682ywydKs11B44uVuy3ed7FCGk0t79Sn
UgvNIQ6GAGwVQ+xXluLOsG4ABE4D6a0jF2i1AK7+tqqpiqAUGeIHluyceFRq
WS38e+SHReZhQG0wniITWo05W8H+WR+KbGDf6wbC5//wl5kMBTwB0cQ9KTcc
5uXsedqwHf8QhyRcOnVg2042PY+ZuKKgkeoYsRj/dBJ789pjOwwD3zb56dgo
zq4AI9numHelyqSi4gw5isPVGtTxwrvo4ZGLO8mrjkXATVcBqXxiBmftx+y0
aR4NUmsLMQfFb7PrWanDDPzUHpybmQR4EksiON9KjsWzxF0CYZKr0pE1oltO
+xtnW+L1vK9tBPNYwkcBd2SFW79sdyE8f778SdCFdIfjARbXT32aTCQyePOx
VDX1/TFrPdae86G5a1/X7/zhHFkNE/R1mkv35s9aaxYm2A6A/ghMi+7bIkn4
Xn2SVJKru4uVK3sXVbzdmT7iYuIITVPTIqsVrDteRXMuULOMecpJEhVlJoIj
H/RGEER+Ky9Qfb/Kdu5Qv3buX34qc622TpORNoer/mBv4c4PUpUQKwLKdhcz
T+8X9voIUXu7mn87yqHhfPV+1ggctRhFiFmJPgitK7XxFLGLIWLnUXYWQ26d
YnrPrceXKk5rzFyiW42d760VEeKwjlee+ntrqT5HNtymxAGA+/NMizk/elwL
t79PXrJZ1XrXG8MTxGGoR2NTa7df4e0F3OkvYcXGJrJ6StMuH6wEp/mj7q2h
z3FmY98sDuX1VFdLpMaD7ERWUwpocuUk1LpZ2doUtvTI0ub8u3BwQe0f8ygf
mJQRYeZZFbctyjrsS5Kefho4q+geq19La8cHtT587xLXs72gSmoqZNX10PXF
P/6c1iu7Cw8ULIhkQy/djdCrwMVPIF16Z3xDKoLPXEGeOJz3fovVbDMty1sd
yHmv92U2fSr07Rtz1G91tNvhYrMh993CvAp1kL66b8SjhBNkxO+GhpUbiBjC
fmZXKj6Sh7CEPvkoT1KYy85e8VeEqsiKPzD33CxaYRDYvbxXcLYBITYk5Hv5
s9Zq0fyQ4rS9j2L1cuOd/uL78awDDc6jzat/SmIL2FPYx9ugUVbtriLejjOT
Bu94HbY61ZKDdZq1tjLPCOgmF3d0XDdqhC4XD9DwnmAF2koDWJTwibpSef7L
6r4IyKKkaiv5G9QLeOCmt/QnItcImb7nZH0rIOx58LwnqHNFlt/d8cWCXhgS
PYaYE3np0noa08s57klBqclVn8nFzYII/IUoY4QaJnZMIOO3x3bna1+3NY5i
SDqzJd6lodnj4vIree0yWguffzdDc2OV2lqnYsRsxbssIAg78ze+EWpepdE0
bp6hNaxMQpQ+6yG3qmG1WlTUdAreR/i96pxYz84nncWvfkY+TvgNlWoGrhDF
4zoLBdy2heZqe22dzqh1GhGqxNm8IusL/zcm11cJq6GvvAT+oBQbsZqL5lNw
Pw1874gqG0YksLx9/DqSthR13IZXuy1D28pnodBaooIxiwGn6AYnys3hc+uy
dUeGZS9w502aG3v7E6vw6gME4dxdihc9Vg+1Q5H6pwN3/dDH19GEL1rUNnGz
K4/7zu0e3AhWHqS0jJSlslKDQu5vz9x5C8gX/RPsvnHHyxW4AH89nWWehAKQ
17etZDW/tSOkeDdFHJA6nLrnnZ3VsM9tB64MEy1qso2qPspZOlyiMrAiBQ54
RYleZ+ePWqD8oj1f2bb3sNdYR2S0InEZXwvAj7RUxD+582b2ckK6Kc93LxPn
qAm3eD5jrGaJ0bavdw+b1q0Uu4Bxpaufp+iyaJ7nfta7sNexV5FrU1u2wYsa
mmJ4hq1vpnP1tm8dL8C5+C7vHXLAYIhxaS95RvHgqnsGEmRTYRV3F9/60JRn
ACgKb7lsv2ry8zQZLOrXUQFI/BrbfyoKqZXtFFp7WPs6ZZyyTrQpE3JuXPp0
sZOjFf8O9H+suPdqdgLZuxAG0L99RChWqpzYUDqzR27RTbZ1wxLf+C9RlD1X
Vye7VP7juE+R18lz34bJ0Wp17tEBQpm2xXDOa3faoZhBP5mEbUS9ToKFkIdi
pU/f413cVmaN+tZA9dI+Tr+SVI2ac4RGBVJVoYoVxZ3InA88P+RBJ1kKsaNQ
u+okVc/ljiV9Kx2GgtjZMQoePSHkRyEH9RAZ0uDeTtS06L8XWwoLPdXYvOo1
Bb3Kl7p/wc9jFXtLwml2U57INWrs7lNV5kVEGms7HiOFenDco92pjFB2Nr+6
OF5VVBLOkxTlkFLjvypNF+jUpyLWxW05RLCiWpj6XS1KmK7C2d1xFinjcEeZ
7uGza1qBKsxlnMiwZk6oxFTnu7J3/PrX+kkLVnKdb5Tn7a4uMtfVVXlgX6kB
nM1ZDd0W7Zc1mn+H6ghBouNk5B+7+lDwuVkePIfP3p0keMl+01IHu6jUJrWH
sq11nCYXeq+owRH4YFFd+ENbibKHkbeFnWe2nmiOiSWFegorFZLWrGt5HXku
2FLUpt/n9ZGzf8vlPuqg2wjqsj9x4zli8YHa4B29hf0VLr5Lg+p1J64/+Zh6
005N9T7MNE+4hrapHpfbgLWQMNIHtNWTItFyd6WT8vdvxmn32Fdtq3NwjA7/
fUTOi8J/quB84gZcT3NV+n5LSaMomqXz+syfBvVde44GAePePrhVFQhKTx+T
PdJUiKXC+Dx+/YktQGhTKOMDoLPS3yGRLNX4D+m0O3o5tQGlVXDq9neoJy5u
yJTdK4nw1mzVY8L6+19+OjVZ4UkcTGwU4veS7UZu3FtaqI6uVEHTqTqw7jEq
KgCcFT63fGk3kV05fPv6GbHiDVtUxD7qroKpVOGBlS/MesQ6w0t6PbLVoQ55
ec81++x/trwg3pdd+FAVmJECg+YYKFRWYaQmmLEdPVXmbC8gkLi8d6Tux0SE
RuGXqj+gO9qenkvkbTEiLtiLYcD9lzZUd9WnFBV2v61TxWU471nk+K40a6u3
rXPfZrWO1VGEa1C5XZx7/wDlIFHpZoDjZc9Z75MUcLGZXsiM544dgLqwLGH8
5IuUHxwgv3VHiAMtZzIQNxduv3bP9tCh61iia5GMIvgSbcZoMlR5OzwXd6bY
bZzPaJFezRXTpvDZ7qtkB3fLEaHp7edVcp6AmR+IN/tRaunNZslG+x8joC3X
R+2evPWNGBRwq17ecR3QX/BsOOhPpPNBPop6chZ5NnLURIfrCyCyWDjrejJS
SrXRFRmDnlOP5prHBSVsh4pluDM8WEXjdybCAGbv+T+m80d9Hc+ci5Fu6cJ3
WPTbmVt9Bj/oy47Lcg1Or58oC7NXJV6+5HMDVN70ZFDuq+tX3HFrpUIxThco
f/KRWnxWYCtIpSXP2dKrb2oPnoGV1l/bwUdEN/uHy7B3t8+T3AxI/Rc27YqD
vAnbI+qjsiK046iiwkIb3FcKp0dHWsunPv1WjfEUzX5CDPHRFcBlbEnZ/YVe
aN3pFH4+9Z5LHeR9RoCbkvnRYY5iGGNLG/tJgiKbQRl6vMPbtbb36jEWlU6X
o4M/NIceIc+tPK7fOylhKLCH3na+GuS+6ZUpolNSdHsAdVgi5mFfAp2+F/rC
KqtBJx2+crmTUiOA+no6p4Nmk02ssGIkXd1PKAaNo/r5YFIv44tFyrCfs1TU
9lhDsMYxTEvB2AxwKm1FA1DoANWBC06NL/1ewI32HDcKCiKRrI5u6EpqCHHg
5b0Z6maklXw1RQJ9d/7AdfiuOhr0kASCwjV76V5GfndOAP4ESAclzbPibn9N
6klLm8/RYk1mmysy89sJ7O9rj6UF61ofzp3qy5Z0rnF37Cgqt2TEwgc1Nb3q
0PJ+ivjrkF+OSgFO8YL99zzTeNtefrqjVzC+WGpXQ3ZKtBxsY/YnlRa/d4bP
0w9VrM39mcnU8VTdlporCUK/d5xSgNpPjLhgWyDpcjTlqZ+TGQGoJtYVo1E6
fqeLytvmA+pxJ5t7ag9njFq+k5uMqdIpjx4SUHSvZ2GvkuLRjnJ4SG5x76e/
pRkO6uhqbKQ4QYEsCzGbXJ95BLqZ7vpKQuE+/1GDglrj5bb9yN+rSUWdB6zw
/6Q0FO1PAE4Q0UgJSBXsoYHn89w1S2Y3it8eGaxVryRWc7HHr1dqUTNXHsyu
PHC/O3sfRGLNQxgjXdwqZwOqs0tVDhidt2L8VqNMddPD0Y7u8+P0jEkoNd/H
9s+zAN8XLYrWHlfVnzrL3emLOwhscJjtQtghaTl9UGtIUCbnKfLs1ecSlFYZ
QQRLUHtWnyRkDrS8t3T2Oj77kPTwaiZ9I2E4VplOktpjv1Di8laXdgEH37qr
Tfd8tIS3O3x2zat3Pbun7cSyCZaPPWpLjuqIWLCI0I/uiiFC/MCjmSbznWxn
qmmq/SnpIoRrBBylfvmn3zLdfJzeLp5AlmzX+dmIeISWb0oOybaw3VT5rIy3
yvDUpR22vdemL27WiLmztx7aKFd3dtcORudP85z4WbqLguFV/u+HPJP2yriW
jG6YhnXF2czFGhZyWfUVPZOimKNUas614hb3oVfzROjusOtreNSSE8hFZZ9V
gPAylDbdI3bjoCxDszFRPIfCLtKfIVN1scoNw3x/cOya5dz3FM7SiwYYKTmx
UIdq114BfwP2N1L1VFWj4vbHn73Mf4MemGpB4uHXHcM+be+g7NTTKYEOw8pD
RfVeMx4Bg/jKntws7N18BvzOnmYl3E5Hi5IsE5DPkK2Fui7ftdvEdp1q+MB8
prh6zAbdRtVmT6KhE3RC0AkhSG3J6Sd5ragrMapDHixGlhu41V6MM5pLJ40F
lbZf5Sw6UVgco/TNWnMVQtmgTV0kB4vP9JvJbMBGBuL2DI6je+osHj57V8c5
PveLtzgjrt5X3cWyyVYc3+edSKcCzyU/XPj8+8msAaD4XUEUguzMdlJdmb23
+yXPDitomGIDz2fota7viv2/wOIZEYLeHlosfIp5WrIrdsJozefwe23pq59n
L7Wq60mFvvIw7eq/myp70lx4BN/mO4wGDfkZSFi+0vJKT+r5WKYNbKj9Npz2
2ktbQGWMw3v2YCFBXygs0+V7KZ/Jfa9/H69dbSOKw2ZmjlF109KettGBxL0K
HbqRpmE1XOFQgbVdLPnUmBgHsgGxfWGHlq1B3Zu2Ek9+9rL0pura40HbTNN0
3hPgW7eRPbAYwpKK8TuCncy8W4prgz7psGUna3/Vu3gS5fUtca08XrLTCvhM
Hjyp336S3anS9QwqjV31EIUGmry4Nb9a+awL0Vii0IrZ0ZVCjM4+4fr1FKjY
sGBuQ1SqXAGv1K3XqSplGm/EZoubVG5MSsNujKi1nD4vYJWST7F0PlfobYa0
UZU/C980CzNX7ongzyf9O7t1beRFZGskQbC4SbBO4k3YNaHRkk6qyNENAzM7
Duz/Y0+Un/tezTMQO7zJBtKZTPVau9jr1K1uTum8K3fUCiHdHiSY05RgEBIX
rug5onxnDi4MdFaNcRUSMZ++Z2P2deW61IG0CqHcYJlczbgEjTDuFuVcOn9F
JVEOqttTP20nel39HvWchgIBAG/CU4RG5GkGLUVTAySB2SljvS9/WiuajXWv
A2KBgF9MMR4bDxkLHQGZU95NYxbBW3BOq+pke2YjavN0CmreO6V/eDicv7Hj
Fdmc0bP5yIXt+uc/+uTOW1b+YDNs6xNFhIvb9rKqAZEJvCHYgY5TgecVjc9d
eyKqwBmytGv975QdMafbKv7jUe8sqBjFCLalzaWobWDXdPjsl0BXS4myE+Zg
cJbluyBVpiwQsTk6Qc5IGe3ouHEMYjA7QgNJLqmq2ZVaS+SR/Z2fak1WUHJV
AZXT5ihSYbkJ9IOVXlFD1RWnB9ZY+jqv0EVYXPd4ozNPTBZhPLv2OSkulGIu
Ucl7Wu3qCai+Z/+fqhXABr6wJaB4yleaPa7ElOx7xHSBk6FlN17z62exlXqb
VJtg/M62uFYLsNA8AxJqJj396lNJf09SSSTNlFaWRXqtLqB4k0j4tP+9jotM
kfOlIp6iA6aP6M5OSr/p2mP7p4TN09qe4VhAW/yL7y8SGVvuKJwthFkkJltA
naAvDQUeCsLmyP3ldN3vkIuha2EPU9d6077T792YRUUUsrgg714JEd/qf8Yv
ZqB4qqIIASIgMPhNF8QuhJ1n4bS0HHpqtqh3+po2szaeRIlD4PoyuL6rnKl7
5s7bKn8rOjVToE0/Ll1g4WqE+LAlkEaUhY9N52WlGN3O0GS7tLSR6vhc+zPk
YpbMOXqK2VDOrjwQWMnuZ+eeh33eq2v6BXGhbxJvQ7l/4bYobildmnhyRF8B
zySTvx3Mkn9M7hN6Vig4X9612JHogEe2xTgCH6h93WQlBVnHKY2VZvIxFtyB
jrcwJvtXxtwiZLYdGdULdx6rbKdX92Yu30dPk7875j3npo3bcsVOfeavaqUD
90I8BYhLItMWnE925NTdorl+j+CEJ4rhdVwL+w1rN4qSWRyiCtMvcfkHVqsO
EZOyJXzVUaAoUmWfUlypd+Znbh8euUS0fhYkTJqytfpuoI6ofc0D3fGY/OVt
cQWkZm8Tdi5jfFrOSsXbd+C8xXcehfLBF9+7SlOTFcc8gsI+s5xUIiYL2VOw
pSZL/8ZNoiHRd7JsW3VlaesVldhaHayg/3XyWVJnoyXIwn60rsfOZFn5hpST
Ezeei0tpe3n+xjfUw0dqBZ7FcTjobh1rHpfs3ZJBxWkKnHQHKKzIPbrce9bZ
1UJnDUZr+VxBu0O4ZXJ+UPRSjci+mjEwIqfBSMR373Nl2nCouPVCHnba1+7X
rvNwrpET0ZBLHnuu8bb1yYGldsCuWntmhSM4qxlUTGRB8oFc5I69J1DPVxCO
TF1oucSDjz55YXs2o8HaGdoFMOz0917l9AnQm7KH9kA+8spIFrIEpNw1VYDS
avXQiBJrOtmG5ALhlfi+/cwWfxXrFWyPnkygMRQeWdLMzzFih6DIjdTGZpOM
qg3DaZz/XOut0Xn4q8rlURrAdvFnpdd/JM/HhgXHHrzBaRapqtIc20DaeASl
bE6R5UqCR+Kn0SX7nnShsOqWd/YNXFstrGWVrXYJnNkeP4sQ3a5QSzH0/qry
2Gu3bzd44Nl/a6jgaXrl/lDG7dYMtC6V5u4LzSz6katRSRHpBABjmVmBM/uz
V57vDie1yMu7GSHR03wKa0Y04z1newzbZp6C6/rDjK8aKlz/VP+7+iBx7C7f
szHKeKvuFDT5t6RQrSh3iP10m/1J0Mh/TihkD0VL31KFJAmcufuxzoYzv0+V
kA8k8WmXoZDlDXMjNQ80r2oeCJid9cW6HiX4XOlUEovB9RskOp9WWnTnCXX7
A/SHeKSjzlaPzj/79Xkq/+t764itD/mS6m2VVly3VvYmiWnH+x8JB6Pqi1Zk
4Uc7O7B25R5RX43Ot6mioYzb93PNUY9Y3d4s1SbGqfYLbtbZSktTHpzCMJBr
8K0+Uyppfh/+06nbr4R2FMhLKVBbe3ajVmYS1tBOJhrePITSBPvfdhPaBQLD
gaWSk6CGXLt+v1ejMIRotGuMdacNezn7ABsQzZTe0L5zgr6+Kh7b33Gp8gND
znygVvM5edNukScSQ6108A+0Iqq7/98kaf32wjLjGh60qshFZ/Yndbzsw9ZV
5GaXk92ziiryHLf1sKNedtT4L74B/u8pShD+AX61dkKuPpsGLwkvaGsWdvaX
di0N1S5h7retkwfw2vNr2MeelaWeo55bbtiKSKap3Mnn+AfhOc5/9bMulnkK
+s4CUl5iIWhp0LRVxS9IDzFR9A6CqAqDY/Z4Ph+U35qbFMu3pElx8MbJG889
vw86A32VJFuhFpNNUClSLu0uYjt/88XfyL97XmsD9pZ+xECe6vmDSk73VIXj
rBGsupDKDJaaq/7dhjKh9nSfhhq8nVGTPFgV99qQ+1EpTz/9mD0mBQzX1Sax
L7VcDmrl7tEWUFdRvTt1iR27XevXjao2rzvO/ay1071H/rVM2DPqw3E1uQPS
RuwHBEbHfl/OWXU8/r5tU27Wp9IYkEgk2mIg76Wm0BTXWKlpTER3XRJwVDj0
26GjGdJdUnye4xhFh5Va18G+Ue1Rn/8X3p+o55/SQFX1DqTOasf1cUaDkhyY
l7bzLH9VWY9/u5+UL8lkHc8V1R7PhnXdQazkbrriTB+7QEoA/hQdouWfksZ7
f2Jp3evBf1G/1QnOc9efOOvfDrsWhpgbvnTKgd1zBXSds1ppfjbbfFoqNr5Y
qYZLNgYx3eLm6S9eqwunJ7elP31pL1ej+nKFiP2kJvK9OVAAviNn8t37PNXZ
VCPrq7NBE3X68h6pdy+qCHyIkJuXzoIcBYsTjDe45tnI2+8Df6QuqePJU2VU
NUU5S4iooyxGGgzCs9n1aWeV8rhJyM8pku9pbwnmAMITaaxpxmpFWAD7AAEs
PhTxdik6bnqjiES02W6dXfHMjiwG6RoVpG9Q4/TbVXU3z2ykBJ2reCMeF2jJ
LbWcteONedBr0mpx6Pt4UtwbR4a1bVOeMBZoDFVKJHN2NfNksEGEdqDi2VTx
whhvUUnoW3cC/LXvzTS6VOZRMCRgkTR8XMmJAcbuEZrEqCqifEgVUuhr5yhY
MkJnfo+LG35kA8+jrsZN1zilku/lddVmFSNiu/lSQxFqB3010YiPCPdC38kR
OlldVAXPryVXiaKe1kP/Xd6kF7ZsQwB1fP1p6f1YsOTZAzAAMyT8S8UcmItz
d7Pv+8CVVs4v7XbgxIjKxbCEvvipa/AQPcLLMK3rfI6XzF1qmFMXd50h+Gug
6sh50SY7nYUY5eMAiPynr7RN1W2QCpv0bzU2xD6CPXSY2L6M1B5GvY4lotzj
R0eqxXOJ3bEwSwctWbSVaAsNZbZFpEBEwCX92cohYYiI251yM0dGui2cieoE
jq7VH3i19jSS1k1OHSBIUBW8/hS6VZf3dJWrXlGq41lnEqiQK/fVVSy1toAL
7ZJCueGRtG1cj1DrrjDqDRNcGWrPq3njnDSphED6m41mGMMTeieqqtaHcjJV
ipT+ekUc8fwR6lFKlsYGL2WPd97ahHu0977Um6TdZj9kDzVFygubgCigqePZ
Gll89tJmweXVfTp5vcWKd6m1H8ea23KtTvjWTNGBMcU2lWYxdijezHsGSMDq
taV/L88V0AMRf37II1utcdS+KTVi76ealIWwlfaY11T35zuDUK0H+9hjHJlc
KvGtPtA+ARoXxCnZZMz8DZ+0jp5NMNygCDW8cOO+hYrCo3h2pp+GWSB7X6mW
VcXYlcNVX6cwKIS8J4yZprypQOp2cUM7npOpOsPAc3lIRMnWSJMjkhDlFVNK
zw+UbeaV20Tn2KcjtXiUqc6vLXz+Ju0MZd8zy6h7nbr9rZT5cmfpgDjqqm6p
sCwQHRKrdC5+ME/64MT55A/hcqAwi6XmnY0aHWm3iLrSW47oVjpPTU81os9Y
opcVF+0x7F+nnV/Frt6e9wG7tAFOCoyEvr+sx8JxbwfZLt0Uldr+wm5OISwF
G6tRSNSSfF0cFvxHG9bG9fIy5bB9a3vanm9meafgkFrnIzv7FX9WijnHKMc9
FG7U/BvtyqnUsHQmgAOabu2Dll87x47V3F0wlIlepE3IjvsORZaS/RdDjlcJ
DzTNQMSj/Y8oW78j/Br45yAqIzE4k4XhtZ5Q/mMXp4pqexy976Q+Q1vc0qUZ
sXUwS6s9gRsoxYr+dpqxtb+mzMVxx/JssP8t3EYfcwGalixBz68+/5/qP6U6
m27A/fVdId4fC4AaaUcQNa0Ysw8xEdVRQlVmGDXtC5vQDM/103I+pzm+dK/e
2aOzKxC+1hCLdWCvoyks9V9BFSWiM5sqRXH1fAgwm/SPaO89yyxbC1ZVcCFP
aCD+Vps6nU7caY8nllLBRQEB7cxRP7OBFQ3RMUqB24buuP2mZ9LD6nDrfNDa
QFxx7WuRjO1hjjUPijJbUL8C++jkzRc6Eyu83tDMlYf12HfJx/8WAe0yKm2Z
k1UpuHk2adeOhBzsKs4OkB0VnG3JTstVa+Ad1rerC2Y/RrnKQRyx12R6O9sY
qmqPitYLuxrWlaB8e/WhKlT55KYmzRxNZShh/qA+XRY+Tx33HgwQV5+qYtxk
Of0UxSvgOpKFklmR205zLQjJOIQqXgg4OE42gVIPm2iEdZUOWMj3Kz02z8IQ
T64+yUjiEZ0xtkZsGUi3Avl86kf19fjsPY6Ubu89C0ml8nSYorED9/WIM0c1
1W4QnDt0rTykM8kbQmpui1/l+mXMSEMfr8qgBuL6PnCskggUMDjJpzeNCXa1
+RZgUweygeZfwL9zX/4kLWVJFattUdf2Kw+/wHKybGjmYroRkUEtUEhXBZ0c
ofZx0xTNlDgvZnIhoh6VMojSBInV0jC5RKDDWhV2RPhNY9mP/RCVJaYShmnI
49S0tuctyGL+gw7S0mb2eejzJ46ZZezIxPc7gY5M9fOqlJ7/w19cz6/gRipP
Vu6pit87JH6j10Tel/OKtoj463ZTsVizg54lm29yJPPT+oCqbnbmovhIsHcj
uADrmElb4NpjcabziXflngUL6umiT5zmsfg3JgwYWFFZz7q/LtpSU+kb04A1
H529ej87juK3VCupkRUjn9x5g3htcV3P6sAjr0a26rRhrkdZ/nuRVTSAkxm4
l4d9L9sk7ofIW2+uSaFNk91iXe/vQ8eFNuxXeBVEymr2uCoT4QCkVkDRNbOA
olWhVcfKvVsPUtfpqY4i78CKU3T6829ht5R511G1XvpeBX8eGZfqt0oZlHzA
SnUq+q+GGm5f9BDw4H0+K74zmopNlTHOydNTWQF1uNYs/2io/uTYudjXsSGw
n5ulOLaq6tWT3q3YULRVKH3dOnaeo7cpf+6QZyqaXbBQ0TPAOW776zg1LxYc
axBr2vZ99uDzN75J+mL8qd/qzNRtCwpjtj5jz2NTWlpHmW+JZ4VuKPL7dP7C
OYDucfY5XqM9fv2ZuHc5bmuzCoaVC6t+M5ROoRaXClkV5MoJi9NxW3WgYxeo
L2+PuXXs98VcATYjN57ROR5CpxZm8u/HXOVLYGfhaeCRmfVH9/kZPFF1cJPS
hbjPgoq/05Vo1KPgJluEHyFNPKg4DR+/uqObGJgJvOqYI090SAJ7dTGJQSSE
P7/h/1bc7rjp46vPLNccz0JqZExBPQRH6PL2CZbZNHr2TyiP3sH9aJMFHCO3
K2pFl3Znah4Ju3VEnOTbq831DbH/Qd0ybiqmJHqOhnTi8Lvih06xudVn8jEQ
VDPFcRKlsX2tnHmeILPByJMO18DaSZpN0FcRpZiOvWsCi9dd0uB73NMep4rD
QxuRueah81zGQndKqj9QuYKM+3bhw0QkjLAh4xIAoPeWalwKiSSKt3A7Dbf9
sNRLxFQ4TTCAj/7f6TKi2N5f7Es1e5L3OP/lvzk9mdHkjsQHvL4gcon2pb0k
Tlse/TmCSgX2RI5noPcOTe2YkRf+lU4vghHgMqnOgagGTXanGoep4YZ7TgDX
qmyTloNPc0VlmHtkV1XcUhuve3tBHwluNxTo2bav1tAIi9AwKLSx8zpmjU5y
noVsXsmi3DuVGEJJs6zojCg2PXHjG8k/zCafjVhb6ujkOvcvf+7XahqQcbsT
UMD3LK//tcWy0/lW/jwTNJCVU57NGgQdt/xVRTmdubQ0XbO7yC1idaimvJRQ
N1lO6JTz+ca7UEDMo7+edO+gSsBeokL6fY5prTFaPXUw7dsF6hegWm/yG93J
XtaVr4oaP4pW5JJlS1mHKIpSYM/vUT09MzzU5xE6fzF7hfS53Ml9mPUdjr5u
bK2G2gGroOvoUtyxnwNqjampY8feY2VuS1ue58LD46tfSwMya5Q/nVjczPqa
bQ+xik2IqsUK1T7RI8bS0egrz3AZeYnylBFO3fih8OfBHcmSr+3Pcz196Z56
N8rMXamMxc37Ytr4StDaOI0g52vt46NeeZS2hlfJeupISpkRoNilrWNXH+p7
f8Odes9Wiho8KBsyB9ZwNzmWt2FQgmifIjjuxFLp9w7bIaWq5vzNlwOriyOz
zP/dMtdhqrFPpcjPVhPOYhK8fE0gQiItQyvMVW7fGaVXVeFhoTenKgxu9I2I
SI5Y044ZTMTshj//OrjZi0pOEGDKfAh6eSxmkqQAyK8qOQuKXnWPwP6hRtT0
pi/tiTIsKISKCmnO6zw8VKw+0DoSAkZ3lC2ixT/8xQ8OxyBV6hfoMRyGltdr
l8vNvfPM5PBIsO6jdlOg0TxRLzF7NkX1iQNSqbYhmL/xVFeFPSQnBW6kXis7
sfqs5BuhbzwaHDshDPcpHH9nsxJnn9JdzM1jLl/QFoP3daje/P0UbWObzNCy
A1GcEq/hy3tL6CU7PoBig3000niJzQg8m87L2y0X5hFqqKEJZs9Yg9eH8kiL
2Q2uPO8uzTciG/LrZV5VO5IdBcxoDeD5m9/YgFUsSDFp/uwr9x04vZMUmCo6
VkCwXdy27BU3C9PMgboPh45ff4xsnc8heIFUK8apavu3drUiRe1qOxjslBeL
JsWnsAR/6siFY4BXFu+d9o5+tx5VzHb1bnZ9yEoOA8dZ0m0qxgqM5igCjSaD
+52xZrMpUWvFPV4POVdpqfRqBC5rqvAYUyexo0atGunH3LUl3CDkfFVKo3AQ
sZ8vfw4Z3Bis0jL/RrWJhc/fHKV0kpp9GcfFBMRraQc+YV/MlahEyFBNM3vV
x2gelTQVNOX+45ixuLsOn73bOmPDDA1PL++oQu07ZKBrW6UlE55E9+zuJHdp
icAZ8fuJFlQrMIdHKElvUywja593KlHeY4uphc7r4qC/uA2nUIppWSzFN4YL
HLrE1x67fJjk7BtSbFgKQIE9sWzEUxev5HhGlXQ9ym/afpnB86LV/VWy5WMg
xQN7jP2gZvZcMTsjHoF3zV48tA6ycaZ4nitw9HUahDP3URux57XPtq+ARBT5
WX3I8n9SJ9uO9HEqYyAWv/VSP9xktfEmy1QAM8PJByaEys8WiRzN4mkqjrZ8
imw8bAEVNpHeDzF46UmBmupVN8yafYUNGpR+YG6z5xXZ0zlrHi+Ka116XkGT
w44dtZR0Tiu+nqAsisDqOk1jhpI+hWtY2jlAwSVH3j5dpNgDCGw8eLDZMgQS
8NNvK4TSwVP0P5XtIGoPgPN9a7tCqUhVTRurK8/ovV+GDgnDk12p+2QMYtBs
DtqNNWNiWB5tFtHl2vsHAMlwIlWQn2seqUcroq07qPreGKpWPeSF2Ww6fk3q
OiO2kX53Lh0b8vNR4XI/ttGHsFm6tGs/o6LL8RvPwUtn0GMDlSwLL267DI77
VyVdZb1TNXs9f/emSthS1EX812NdY6yPbzsPEdx6Wyulb+gVx+DFGp1sfsFT
G/1W2fbh/Fjy7Cbpzdiz2Kwr+zx25YEYDOk3a1yO7h+9BXO/e3Z1IxWgNV6p
uwWU3Ijjt5pMxFSaXfe/Fq7b3r03AXDnJjVvtqpMhhw/NtIypspypZ8PV54s
/xsnNL1DcPDfeTtH2b8ULkAgnNTVO2+0tEXQgCzexa0TN2BeQ2zpGwhv3Xiu
V/Nud+yexrEPvOnWiVpljCPe0mtyhmRDbxOuzgQ1LNYRtV17bCeti49oHdgg
z7DBT47K+kLuPEaGtDjspfPKth200eFDx5g93alBRUF+W+dzDt6RcyXUoaQv
rVudli5pB4tyZheRwCquqhKwer85Rn+KrKG0g/7Jpy9sRuycAnSILTBZCAnp
oYatdsep29+mPMmznI/JyUwqlJAWQkR64voT3kbfSsWedgV2bjyaKThr9ELr
+3pUlVk5oUPZngktpBN8n3qttLWHY0TvnapWV9DHt2l7FwC7UuksjWiaiSzZ
FHVRakSadUCqluFNJkXnuawVFuNrlq4qxX/l0WhSsVmQzpa4VlTBLWcNoqCL
2xbXiA1y8qZYi1DsY0r+dXLeWgaI+KqM0KG18CZjJdtKF0OCW88En9LEE2PB
Uj8X2c16qPI5MeI+tvK43m+jUs6buXJfdzxqFJSMKh0mW3T2V46BApbjBK2C
bULz3b1jryl0zjRrsRoTvz0beGc/tZFRzDUBV+J1mWUseH0HFf0LG76LemLD
2cIgfUdqbc+Tqreq/1l1+40Lx4lYb2shnZ0oAKw8nGHWDchavvvSN+Qx58n6
WoII73AHxnzDyuaB9H5sGw48rQ/YaE1l/J7l2OpNcpA3T3/+Wp8l7a9ZsjVR
GMxK1TjjSAsfXO2PeFrUI6X/Im8ZlU98PT2UEGU522xJzd/ILl5RmTLqXQSF
8O7p29hlmmN19jwjhn7Jp6/IRf02O6fZnflCdk0sh4Hc4mfnietVT0zaUE1x
Bl6v3HbHhCsSNWKJBrOqkeEWubjrDKqeXRPy4xCWScdA+reaTaNzt2gFlI5O
iueXtqYvg+lxYvVF7fobdDnJg7uwdVhlnT/CA/HkrYS0HxmvdDDVnX4X37Ou
zxX+RH2nlPmJ+7ggIFKdt8+FoV1liX0NV9+sel0X7P5+Jh+coQlKEZT1D9cI
3lXjtNp0RouqO7bAJU+Z60g9VQNZgLhLf5x7rrXft/aCNtD7aXTZ27OXhOyG
jf8f/qKUqlGb+M4PGv5UqdP4CEmiKlvBOC59hU6mayjEihSUruR+9skXP0hK
N46xzsqPb6WDKN2R159qJxfWV5yFsGP76iFkclfV+qgmFXE58fOQp50vnYU+
1HHE5UXGxSwYJk+EtZpgDT9F5nTxVUZYaX/1XKbMpshCv/HapTH1eTlxbLvu
zrqnZ0Erx9WoU9N+1yb3d+dSlfZjUkHP/ctPx4AMfKR3oVYu+h37vIc6wbWo
9nGtxQ23nSN4hC3vp0VPZtctTHexrZfNdPZ/UEft9i3IgQnQHyeSwLKTk7de
SnDwXTtbp6lWzanb34HJdOeHZAFEbJdgAl7/+V7Uo7KXa7xiX0U01qXU2QB8
V9HwSuUqZn8re2Vb/jpTvUPU5HaqPlxMEtdE6tO5CLz/lg6+0kbxpxO+94s3
tTaZZ/W5NtdWUbNHHJf7ZYy2vE5op49nvIdURVANw1I8rUlpqibJQV7tpTuj
6hKpzN/IfTJ9c7j3RuTZ0eSeAqO50iWLiA65yTvPe5bWRba09K+qXk2y72/D
I7OA7EVaIXdyxNfKKka1V9U5dwT9DIiSGSdLN41nXsvqCYM3m+3l7eFcC2go
KiTajVnXkhLnWH47IteosnHs6iNavH+rVpGNh4BbiU13cdsu5Mzw/DfLwdTG
1MNqOZWcqeJUUinNIrpbL/IJEaJy5GLn1y/mXOyQm/w0WV3I3gjX+fIWIWs2
Slu+fnrTtK/JpeS3NXq6QhApL5PbizaAPOhqmGm1t//hZHNPPTj7VBTMcDbu
qoRGms8TxdDC+Z2585b3HnrEyAAaKMfb3ws5WJBh9ixYjRrDw2fv1gikKdJZ
HE+vXpGNRNJ2XcZR6xVsiN1KzbYo5YJtzUEgTf25e17QomOncp2/uN26l6IK
lj2CTOkSQDhF75uDOFiDu7Vlfqu1+/TYSmLIdZCFNo/Aj10uuKIOarwEDmlW
slJB7gA1woNf3LbVu/D5D/YqnrEGFf+I3fn709n1wxaClAcsKplc3LTfQ5x7
580KpfKhP3DnR+8uYcFRvdQe3AYoK7rkvjUrDLbMqW+S85hai0L5iY32vv32
IcB5QllD/uQSRdbv2GdboqZp5sVT60Jd2hNmiqorKT/tiENOpbXNUxmV0M3O
cTAfQ1Eoq3yHmv2oS/7AZ2LlkVCCLW3zEi8O7isETAjiVwht5ds6qbFRwWDH
+WLD0KRbWhdfWZ872zy2A8xP+hJxoPZ2Add9wUqGKm/HvvAY+/n9na2u7mVi
Or+eWCrKgDEiO8FYwB0wfm0jcPz6EzuK7P60/04GKp+9kgg9q9sIFuB1RJUU
2BERi5VViOCDKvtuGAYTSIObfmDPrqM6NVKpT7+dyFqIiLEpgf9cgs4Wd+qU
kxu131U1LrRHlOZdWara59nx407no1J8hXo9TYgVYc6tPju++iShDeRRLJkD
rZAEFqQgLoBXLCeDtn4rKwXB7xX+31s21fyb0UlaiVB7BqKnolcdv/7YFlba
yeoVHbmw7eUnVVMnCJrSz7gajapXhGJsSupoLseGettSQyUJfsMZX13vNzUZ
J6UOHVAuWTVNWQPBjbhS2NfcLrgtWzcK+FQi9EqfGo92lsFVw0/XlsupR05N
H1KgW2MsRJKIt1SMAfV7Ipza/NqxNdc8zPtn5MglrL/xKvTCNZ10FoYVZ7PZ
mPgnFH3flQ4L2EbUMbZ5taFN87pENp4OEM2IcsskiEiVXEXX6A4lZ9sx5Vz2
YzabQpbqBGW2DGZ2Ohd4cq5TIupFQId2HAmuIuA7cO7RzSH2cM5S29S1gkZU
8bKozPayDXo7MgWHyA5liz9Jdt7KGVFvBjP9QvFHQcpqfmtFoJWss5j+TR6m
9pHiVWvoMtawrbOE7tLRbAEpQy59t6+FFRoIy+9DN8ivbflqNDxcJ157c+bS
PSkZS3VG2qxOolZ1XN/qfol+CWhv1BhQ+qxtHz6L/AxKE9Lv59N9VN9vQLxQ
pkkqWm6KaeNs+2+cQBzVq4gyQ747f6OqBMSKV6x6hEpBQicQoKD1n/oHNv72
TMeaJ5O50xeVBUOm3pH7jVjdC+75GPuDQR8ZzgxCBDR9vuldr7rjcGU+k6of
QRlWuYyF/rgiWLn3++HARFbRdWIWE7uEnuXvHxQPVSYLllmqiaPzBxWS689y
3+uAV7GanO2ltjjdp5Qd1v0X+2E0WfJItXwngsMM1mhSTmM/VsXbdC9bfGWz
P7vyaOby/amLGwPu5Ya2gXYvZ1ee4jSj1aeWeT5fA/sn+qxE3Fl0ygrRT59a
PHFNmxRgucsWTlG/6eqYtlC+aWG3es4PVxZq+20h9yV7Cb/pjDbmMX344lgH
VI9DHSFbWwItE8hz365az9Hh3nvr1eAot0vai+LShwLd6u8FEV64/fr0bViL
5GreQXsaMZTrU05rW63AnIuMeQ1CyAF7J9WibKCnlytcLNVWqwrX5FLLQQq9
ycm2N2WogQ0r5p4sEUGflyDd3R/l/sOuMws9Hoy9RT8MUvX489eHz61Jmw16
ghUKvevu3CpE5tgLPQyPwuczQhi4Fk1SqqIqCCmzG54o8uxGbPTmbLa3/ltG
hrblBcvX+1AboOL8h7XTVR9bWgpTJXZDjd5OqePXnxHO6+7zXb9Jm5ZuJU5d
3kB7Zb+d+qx8T1KAtt8AJBJ6sPm3+vWQPly4AQivfaWdMIIzCRIl5redV6AX
33mjDBkv5NyCuIujmoyfjaWG1OK3hQywm2SNWRqxD1rKXRf73MNVHVMYv8QO
BkH0D38ZGFcMw795MSH/Nc425Xbcah3K0Xu4OitZt0l6nht1z67VK7VvxzQ7
+zNoUcU5R7dS4SvkAK7seTb9tVzRpqXXMvB06NkXQeB3NWF9IDHo9aLQ7+zJ
VsJPhroS+L9ztrBpq0awV5sICauJAQZ765XiLk0P71fjaNQ9yh6NCTTgZSqP
61s4HnJHNnO9eiOj4bp+AzQgzGCedJ6pvi5ONPvB227mYdFcheAB10EYD9p0
b2QMbS9EQRPn5TrGeVSuU+nQh6qmzg4qFUg9hS3LsoIjo8s2SssfLKoRBtRc
R/NnBxOUe7K7WVfxrj20LUEd4H5X1L2AnjTVVJFGbsnG6OBuYGfpKztZ1kl0
lXfMu3f80Klr92p1wxESINak8SAGYqVfBP+g46uPJT9W916iindUu1TYDizR
fopqESz/s/98B7o/l+6x9b/pVQicCSdvlEigWytj19r54f171KN/KCIAo1v4
Qb7Db01PNrvyIClqHL/+tBVDxpg2Ri9hx3fnb6ZT35/Rv6dGmx5w2k/6ObpX
6UQ5nJTXh3Frn1uzm8AjAXegUcvEVaTCWhvznNZZOw3LWUrHXU1oSNgvZ1CP
nv8qcV0T2Ilnfq3v2NV+rW+hoUHv16c7LLSOnTSQpOUBrp2s8kHWCHcn76SQ
LgS4cMceqyddU8/uWjhTXv8vk/LP6lP7uZjlaz9ZRmkHriuw11FE/8kQuJth
p/dwt1xI51ms3Mdbf6rP1zhHxT+39I7YSdhxTGD5bTv6WNmC61DGTI3WOa33
o96JGFfSMrB2POQsm8SNUKWag/QSieqVeyKoyj1GOrnq46qJW3bJBXWnmITA
MLZm+0hPpvw56O8DA+aofNIV7uumhBVgqm7s2KPs88parepE9serrLNRuSrY
D82zrJ7OXpnR2wPaP1TqTSPobzEDEE+xEasgo9vtVtQpZV9rk1OjAVEfEqFU
HKWsT3NQ9VScSDRAFb1RHjIUdtl0NKV0yFRF5sF1v6ylUIHoLHzxRkgZ+0Fn
moH53MIOFLyWvmG88iSwz7ZXOJaVRA/MwMFoSxZ7dkctMM0F45Q4c/0MI79H
uqUtTphffSomlWhTHr35Kq+y6e5sQ729K/eFebRQUvNqP4NTQAAb748XpKff
0DWeu+drt8ntoFIDhNAG1aYEfs1owBGd50do6ps0wLmbU9zEin/S4Fl9JvLR
Pj+pbMZTvAi8sFQeDqL0eOme6Gi5dYQqnSoqdrNkT7cDnnWTxvmtLG+aFtYU
+96iFkY2948OxJMJ0e91kZrH2IfVi/hNm6O55ol3iQ+qgW8fqmUuIdSj9DKw
lSrhu+G8Iyco/kbfAuerjtXoP7q+IwpwzyNHaB2wFwTTm0BLCEr/4S86Ymtl
c2pSlCiiN097WTbX1mBQfmFrPmPKfuuaG/YPgEieXVMn1d5FpigCuUhRgCmv
XTI7J1YRP7lngA18rYF/9s6PIj2Lppm5KQft8+XlyTvv7fj5Da+WOT12KL/l
J18kQw75NJy5kxqO7mwsFIr0Emr34XgSo+5PHG9fz25gzDUmzrzaJtIaFgb6
9GevJxc3i8LpKTLj5Ml74vrTnDlXNhJVpaQPvRDztmNtjEuHYqY/EpWOFuE7
8EwBI4Eb1OZYFGy13I7m+vxv5+hSqv+5HaiAEhS6RXTDhs5D1sIts6Es682X
SGuY4uh4sLsjO5Ao994Uq1Lq7TodZEatywRYkgZWgfY+3gWt8TijEOz9Q0HN
2qk+g4Ng81jzOI2G9h9LhS+m27s5qSDpTKMf4F1RSNO4t/UP+3Z6zDRjF0Nx
rX2z/ZSQDThXfS8fJXpA7DpXUVNBRvuiWtV9COqgotplVgLHASk/OHaFMnE7
Nibq0dn32HtSGt52w6NSe63v79rlQRd56qsyzHDUTMeCbEubuc43vXY3Ih1x
5Uq2ot06SWNSYwtFc/BYII5fUvW2dQLRVxS0dNqP2gkyTmFv+1R1os/8/m2N
KvvIB89xww5+mWdVDkKIl3bseLDJJvtxM9d4euR14/ntW/HdzSPwjuJ+T6Ne
aengorlyP0dwLSxh57ztLUo8JBezVHmHKv4T5fM1FyfeuXqE8q22XoQ1c4Vu
nXxkwaGdbQcW0QM7bEtvH1nezbFmr9aodoRIWq/yeVJmKajE0SsPsrMd9jKE
k9mLSnXlEWW5aa55fakGpb6RGiynPnstkAxV0QoyKHShSryiK8PGS9+sOjFv
VfDA9u1HKN5xq9T+CHv0ZLOrtqdUW+0FUUcjjrzOKNcKmmP8fJLT+Z/t7D7m
fOx6lN6/Mk3XZbXJlsT/NDEhFc7XMuavbcQhzXPzm0WofJSM6ld1btGqMlc3
BlfNuryLG6q2HHXHo5p5rVg011Pa6MlQ9+/WuuHqWA7nVXSW4hWYKIap3ufo
SbNH1UCRwIuP/OAT0gJ9Ow7t82sFvj6PM6pNYaenLtrHn76APwrzE/vdk3B9
Bo/nOIv/Pji2UFDq/uLt7JW9M3feKGp3ehN+EQheCDZ0XYCnyQ1U1QBYGLxv
aUDWlo5VtvccD1sLaknDzp7LKUtH8vixQo/rxqZ7duVx7cX8kX2PXV6KcU9c
f6Z/A6ji2uNZkg7EOFDC0rT4Hl3PfJtsGT40aF6jBlbXTwVfqJpLTYjmGVfk
xS1oTpZzklUDKjA+0Nbuyxr0ORKJVRSoEprHJSN1vVBaNJa2fpJmanDFbPjs
LejBKNnQG5wls1hnoo2OPUBaRRyF//nOLv0Gfa5nxTiYiPDXHaTobjy78zQM
b1p4EouH5IMr/gPrmrnHEzrydrq+mGA+K9me9N11XK+caSifiPJZGz+3Xnp8
EfN6+vPXrZ5djBhqLke1t6NK4xA1bKt+W+y/xREs6melpltrUpfqnz5/duWh
5UOl5o46BT25c1cD5lovys+H9+xMM3twy5yCzm+hQYJKXIf1812KjzBG1o3s
HZSmVd1MDs6sMW3aRk8zrDVgG0vPo5L8PqpyDZE3UfkIB/bAsB0oAM5c3LIQ
ItXNc/+gqSi96aePUNTwMNHewwN3tHQWi1ZfyDq7zhrUJrdlrc9RrlBGN2rf
R1zjpbW/emHZlokkDKekLuBnupfpC4ZgyNdCdS8O3t0FxaJvSm8gTJfORaqh
JuSfqo8I45nMUgB1gy/GvtEkux+puzgOM8qfyv2DbGJxU2Ij1KXaPHkr61qR
nrHrqFeofwE3T+n1EzeeSxbH0VN/ZlkwI8EDC7pzlDBqIaXBdR3YzTjgt3FT
SWxf+NN/HCke63DcOP/HFL+JbUmHgzV7Olv8/VVdoZBA5vjiTa6+b0Y3mnpl
HlSGJfygTONtY9lhIhCNtCQSQhEOZaxH4DpKd3zy5lUEZ8OqupfKZu9gs0Qv
xyma1B2lkrPjvoalLYf3TCoJY/Ljsh+1RXr68++8VxVw+EmHT8ntJ3feKnTc
l+sdr2XSkmYZJN3lHUAewZRYb3UDtSJKFBkYEh2Ppy0rOnH9iccxLYbJAd+5
Te0iRSKbx2XSDS/r1H5OA4r1w+XvFbquzteF26+pDwDif8KFXnloa/6d6ovv
+d4ksPjr5J2+lOqeNqpn7vxYO17LNVNx3bT3h8SkR/ikrhIcyC5uhh096jva
C6GxV+G4oNKZVxV0nNxb6N0zxFQ/wTuI751YfX40e3Yi/6EUBvTlrzyYJLBe
KsHe05Per6+9nt9OEl3H3GftQJwO4+y9KZK1qKzw52qvUAcipnc5crGlI9uZ
v5U7hsBGp1rSB47vTkAkZizaxh5O2tPhWFp0t5mueB2iFqiir1UldP0chQkF
vIUsKORBNnIsdIjavFvaB0I6qpdpG12FtXpd/WoaWd0bVSiI43hy+vZrNSGA
mCaMVum1hGZsAc1c2XOeCPYrnCTJik8RyWff1ad/KyvRXvKVukQ42j7qJfRA
Z4Xg5lshSups44Df6+6+rJML5avL9zq60269TPs03fJVZfzsv/yYPbV6QFUQ
OC83tFmgGp+lXeZT4nDFHE/eb6ELVP0gxPRR8a/3bpmAIlKIU5fCjwBBFbXN
+dxdchO2JQldORKMWkphScLx1WcQKKDGgCbaVSZ5ElF3GPLzq8/TurRQY2q5
QsME3amDs6hVvlRwJuW+hhmNd3EtRVUviSpNfU5eZ2891MKUcKcdfDYIjvfy
Lm6TdbAKC/DEjWctL6zS3dP7QGq2eWx/pQwonaSO/GrkBW3j3jwiaH/91KdJ
US2cK0OhV3mwzqxtNsbtnsiGSnaE1P00sGLgVvNI2eKorMLsn+yoV4ERt4Yy
AN2EUxd3xDhwg84kG7+alEuHz9IFxF4ic9/iKX1IrCNJtCmRkTyKSrC2rtiF
3t63n1Qe3NHn14SaGBp0RyVXJEHcK9xHmh2QKmyQYXBVuEG/mry4efrz77XM
7Dg9deuVNJYk3aVC9lEax4PY/Nl3qpo7m5T+dtee2rPWGEe6+tR82oA+GpZe
unx0E7YT3aofFOaJbGJPM0cxBse/BGfWDxzzVJ/TTXa+RfHh3Bo/5evj9r+k
pv6e6ocnbnyDojCXvlIliWLXsFPNoxx9x8+7Sr26QLtHL6V7clgRodDFA6v4
HUcV23o6sfokzT88lRD1YKrJxXhi/2wPL06R7Wgbw1bu1HbwYecAkdd+hJ0H
XU6jYXkErWN0GzfUWlFV4G9E5iMfX9uThtD0pXv2XSSn7DrCb+rSzvHrz+xB
Fby+o2cS9rbFOruzkHPKaPXgIjBmccd49r+0w9IOVTXgdCq53mO3xuoqhvXT
3jaB2HcqRvF0HVXursWhMwsiRDefl15vUFoZlupj1cmMmI+RlexLaUMuf+dZ
uJvtdNKb3pMlXnrzwGAH8n2cUBmdSAoQKvTwhZJVd9VlBOiQ1BLX3H63y6D+
7G7OpZeEbtxnr1M1Zjpn29ov9gUTF+yyf5nX+X01ZnNtLGJzRmsXGOHYqHy9
5ej3XsJccv3S6GsbsXKu+L+Sfoyan/O5Z20LRk4dEGVgBSd1J/KZ4ViZpa9+
TqfvNC3ptCT0JigF0k4gvbszSdIOtLPWFlgZoaFBJ8qIsjSxe45e5qlHOM9w
viVsJX2ce6R9WKdjFAo6kzV4f6myjBGxL7Fh5LivOzv0BMCLpeL8P3LLVt5V
KtJE6apALjtnKWDNJM7jMBmla2qy7g97VyPmulhScS4Vo1av6lh7R3fRoWNn
FPJspAVqlu3wcYQwrDGaJ6WWU+u6k8DwOPux9iv4hupjt/bDq/X349ycYL+8
xEsuTZ32P0g+176evbKXFXOwm6bQHX/0Di3s4HMwVlcThTJzB0ol+VWV8m/4
pxd+S5Ug5C5arHBGf0rld5/Q9ES3DVarfjZq6lCToqhx48y88Kf/UJVWMJiI
/fJT2B7RQraZ5MIObX1hQfCqDP28w8D+5K4AL+57ErDMI8rL5T0Hl9g/pAZJ
rFnqU2umvXb1/kErs2cxiKipmgZBolLUMr18DxoBn75K2LtqbUGAJo12QE31
1eWCFmSqhOu+PRvcQUOFdojO2zuu99OxKdcG7GeFpB0unofXtoQjVGMblYlc
o/uwrjRJC/fkjW/UTbSBvkRNQrjLrD5HXimcq99R6jgJ21Hzdvvw5ZG342vD
FpTlLanK6xUzwT36xs1X7dTyrsS/ACWhO7mY3FX9KEeOTwktvJd5AGM1SkmK
cPZ9CiA0QCkb8JNGGwP1k63/prc3QCAS0/G5sWUM9ZdU2WzjEw/4uS4nYhYy
1kSNyYydEd2VK9mtVnUUR6GJcOqlPSWg+wb3c2JfTSggiDdxTmevPnSc+gc1
6tXSJMRqX/3s2mjSPkS5DDWg3dwJ6io31PSq6x3r6nrvWgfUu65N9kfximNL
JyPU6ntsFANZDvg0joU1PH0nnNmaazjHcKDmkvbiwToCUUlezGrRzWudfy9G
1eIYAiVoa7oDqcWgtsjKKRDOSakurQVEgtaXzGNSdHSVHs1ec8MYYzdX2F6d
XDRVA2Dl6PJW/y5XRKufD/mrK2PXuU5154HLSdNgsLPtQ/QQ2fete+qz76R1
B0zOxW0LqXKk1NaaCFlq18bnMKEnEB6gCYw+D1ylC5sZWbzu/pJR4Zqs9s2i
ZmLjoU2dzmLhtaQw51UOOYwCOe3qMr43gfS8kT2pSnzAf/8tvm1xQw6D5QC8
+ULYp2PXn9gVb2lGQytraeFpIOWHM04xNhBGaIPj+V4dNcJrWujZaV5t9kfp
XZLW95BaoZBZT08Y+LEjlF2E36btairOgDePzBELpSdhiSZr7aYzWDHbyVvf
6OzLTG9o/lHcFGemrU0Jz+QMpjuP8DVpAtXVjpW2x3PVT9K+m7/50v79n8/+
yXGl7gsp3El2KP0bWjz+TbWDLrqbM9KQpIT2vswegyGj7faZWvOVjOqnFk+W
cayRch/prIccEU/yhlnv0av353i221lCnw4MXxY1svvgvlegbeLmb32jkpyt
PH3H5c3/qk8rcEqkGq5eYBmvcRLehDABu6KpgvP67u7NN/eI21n3G8PWR+k5
1PfgsAXFArbMrjzIfME29iR6BgTUWke0EUXZrgY2NJ6d3L3jULryIcYjTujK
fVWGz//hL63INZwMo9QygMrGx5++sNejhYrCkQ2NzLAqWZVz8GjtrnCU1Hf1
z13PBDeELkZFurr+Sue3peClley4kkPHV5/AUIroY1V8ZSoC196N/1Jv/dyX
PyXMLHpft1/71aCzmnzwrdyBRNfYAoGEfyo4rvdZBNgivBHCC7KOR0uNFeaj
KSq4CwWirOoyJNZ8mS1VUyTUju5u2lM2GJX+Z0sxJZwlfQxs3TA2KVJeAcEn
c0+6noe0+Z5Sj9z06Ft0RoThf/wLl/9mxv4xjbTP01SDAQ9I5eYQUVaAZlBI
JK0N19JuqFxrY6K+GzQ+ayweSwJU3Khcn9jfqrM+ey/7FnYNOHMch9TbhSfn
py9AFmieIHzNbhZBE3B0Bn1aAJO18nRFCPaR4ps6uvDOaTMg5+6d+xTV8PNf
/oT1T6Qv0HRxV6euAdlHtlfU0uljbad11upbeBWq6zPcsEJmdx3Zdj0bDm1S
Fsy+S1hwj6cdBxgVNs7+/q2fEEcYL/EpP6jRZlJzsQkp9vOfp/gRZfRSkULV
TLK9Hv/FuotilUtrf5VFVVL60VLzp/eaW2Dl9fl6A39yoeKLyxKnjCIs1Cm5
hz145b7rLgfkQwsRqzPVM9YZoBpBY5wsrJE+JUGqrJacfUzuQ8xjMPQITS/t
6BskfLDPawotBmdd2akwXR/qVLaHsBlQCPPxrZeJBkIHJV4SjyRiMVX788Yb
I+Zpqp/ADHJ5i/oOBVdyAFmRnYHUltYC0JKsGBxDHJgNZ20MU09sl22HV/GO
quumi/8KmKiEvOTEzG7TsAZJu2Fg1bFPa9h+43DtrBjeuEvSwbYC4XplFnZL
Gpm2d3XHDoQZ3nwwK2vf4h/Wjrpqg83k+4nWmtsTzMCbirubxltqEo3yEFoz
uN5q1y6Wf65qYu4pHNU5lEMBm00OZW+KQZgi76O830qNRqePzSn/48FUqtEc
qO98P5tFhfdMKK7yWDGK6C6Itf2p3FSJo3gOuR9DvqhyJ7kgQgmEJyAgoSBt
4sxHlGhA3qDnmTyINPOu4mf/m75sYf4zjUnt+qkIItVcoMn/1PKbGRLgfQe1
VQniqOiMQgayH1unJ3C6pv7I8vZ41R3riVFrP2bDr3zR121HKnLJ8PFi5lUp
Rjmqc+zs3ePXnjp6zfaMqueQkryaXHNsG9thBIdxMMzXByu1wFd5ikpyoOSx
DdJQdAAxYuzcxGqa130FCyj3lcDfGUHw1GslEv0SZqTjygGzZJ7v805Gy88v
6veGiPWAnVq2d89m00OH4ULRL2HJu3WcpGM4dSiv3heTCeXv5UGMr0rtIWlw
/e5sctK0Y5eZ4CulJkPViUaE765Nipe7fJW3ECPOV3jHCR21ACNKr8R4GvkJ
AqPVk9VADKzQDXM3PARcKevpx5M0Vpr6PFXtxNRtnHqAdIqnkfBm0YIPrMGE
PVLWiaeERiYoHuMZAK/LMlfKhrxWvs9zWnrYouNjq/sEaYKuBBZ6XF1pDeIg
vPpgluqcmnV7e6ozWT6wUSp5sYMWWSkQYWweISOhwarzGUJee1B7VwJtNt9+
6DcVIzyPaQuF361dkBR8ljO/djaO2sTQ4lxMErZHqXkzeOdY7ALpYq8mhvpI
3z6PeL2y8/S98gLSXWMPUFfl658DM+9Y81i0U9mqSZdOTRd9V9ENV+ZBiYl0
XmtRQI9WukkXim5n7Bd0bT15L8meyfsN9Tnf3ycTgkVWyqnXFNDO9o0EU36f
6pGhulFUYcnrAvdPJ89xGA1mjv0SLEOGwtgOHPuEbrWfEpDTjvu5a49LZCga
p32XJTYZIzaskxPY4tynCijejmUJ8jxsmC/u2w/4Zk/gCht+ojq3Bb3IJ1D2
QE7PFfIHJaja7e/V2Dj8Nxz9sDHs0xIW/tzaOHuZugGllwcgBvTEHk7XN63U
745nxMx79laqQ0uI2f5ZaIBpti6lVVBrYIdqyAHEI/+KdSKZhUmWAQBkvm17
4P7QoDlNLicez0bEbEflYzonoEGQZkeRyMwVrIET1587uq3oTr6z0+FZntA6
3unsufNdVgZZL1G2/u0I9YX1TZF5DEBvlXdZtrsjSLmYnKhUXtqRIHTfCTOw
lpCUgPzZ/8E7r01RtktngD2xis2zVEudXXmoMZbhxJxUdfCvj1M10Oe/5Xd3
7NrXSujgS0U22lA6lb8pvWMLAzJfdDB/5CQrbpNFtSYq/XS0745kOlFV1dMZ
nyIrGh+Kjg2AjSNOlABIQ6fGNbb4owEJ05UITcJ2UgxZn2d/A1YMkedTBDmn
OCQ7/DgwSGK0h7G9NogI+xVbTsnngV7K2DIoa4O4teYGQXZsSZY11AJGFIlI
iFufcpS3lUd8rU5/6Lwf1L2trh2KYIAx7KhgYt9lN6n3e8XfcfRoF3SuK3uq
zE3QDm0onVxPCHpBljSbeYjvS3WqkUEYFWxIrsP8ZanZRGsuFXp35WuyMeYJ
QllRI2dXnTqrW+mctzyp5kN2Xb1OygxZHaPVj5levjefVRZRsaRimmoqWenq
7xQJamSPXXtShwju3WH/If6nlMYR+1/Zs2mESeeFTaIR3+fWT8aHQGdeRZsi
+07hxxRRTFf8gxGtcfdzRx8ehifP482kPweU/ggztTVb0Oqt4XajBIbvOxs8
KMoP5/2VdCs1vyq+SIUCXc8vVUU5UDuZuR4kLpjb3wYHr+K8eXHb2eI5bzvg
ew1F2MVNYRO1GRb/8JNO2lrXP0bkAbXWpSZx0rKoqlvJY6EolUktroxa0LE5
ULOuvP/f5AKa5kWCsyKWkey3KfJ2vol/gIuE1zZCfCoWAts5lW7ywYml9Rrp
oKPj9OevtYInGCENDdrDLR89drXsxsy+IKHr3WN95AFjs83py7t2KJVoNfK2
HLOhSybdz6jM8DjFkrqw4Y7e4ibHOFhzA+4TXR0ty50qXpiIo1OX4Iu3lWJn
R3d9k0HO6dnr6kc4BXtS4UqcVjpbFKaVzg5n7UVvrniHdlIisPFfdbRwCKY/
RE0rilVt0f5G6Zr9P0ylcgUgegqLmjQpN3LNN5MpuLhrzJVxzN98Ibttrafh
Qfu6z70UK7xW2wq5Z+L7zlzeFTuKh0Dmy0fn075e1JW9+dXnIm7Otutph7S/
WevY1IIGBK6yYUvKwJqhC3/6j8P0BdCItNhYAefVVT0yESiKk/OIMjhqj6Ar
yCMKhRT2qbrj5yHOLLWqY/BISye+Z8RNi1k3rCuVUhQPEzIr3JZBubRvJoJq
65ivSkr4b6mSISAi9Ajdi3V+FToxyj6OrTzOGG84WNjJUWppESkWngeYLbHl
GnqGTGe1S3h+i5mnn/NqGPcpJkXdFL8L63IMQA2Zl94XnU9dKBheKVec+uy1
sNaLX0mV41c16t+Lk03G9biC27s4iPCrBjmEQYRuU8v9c344rO4WpJfPrfWz
wvXduabcYgoPnVgFFns6I777+txRWybUROLsH9DoaRQsUmpYyULmu+RsIDBQ
BWuxB7MIOPHI9fnnvvyplbXE1Re/3/5Rw5/2dV0pJTqp9Oj7lFECCq6D85LE
o3fqnwkirm/63dniogo59aWNwlqLKHni4TftQdFtb5JmVlcZGSJkmk5+nKKu
sZrPq5vaNb1buuJR+8yyjBkSDWVgkPd6h4YbzyGHqhtgYO2hT1895pOhWnzQ
+2E6QWauQMBGVAHf8gM/6aD6QSKQzbL6SiPdF6Ll2kA6niMoOPeEX1NMLO3T
d9dSbA+qzuY0f92jS1/9u/K56fo+jFrRoafSU/MczAuCKmx1u/Z7RNzHE7Bj
n6XgYopsqlwl59/asE1c2PL+cE+5mg10srC/8uBkZqBCQcVDoaPFrR7VFtc1
VhPNnTc6LgJvGwPOBRqrhc9/mF6uNHYjAjgw/bv1za3IwDtgJ2889VCvyaG6
PiV0WQ5aKGMvas8yS7eT059BBtW+19Y4LsmljfNfSsPxoNfg/FScvrSXxV32
jhQ0XBzrpI2sS32a+kGaP3tq2zhgVhOG1L/Dhz5ZvY8o8dMXpWZWO50Mi91u
543Xw4OzU/IGVZ9NOWoe7ValsuvqDk0GMsd7ZWA0/4G9j138MoEUXk/ekiKb
wtaPEYZuldmECOr5NaYEi6zznwd3oQ+pxyGelcvpyMMezCtXrfcKbIv96qce
wpxbrzKXZfjs738AWmvJ3SikIg/BQCDMoHlX0FFj5K+uqxHgPjK6R2w3zGRs
1djRy5CaV9AqvIn9JoWRXiXMgHafpOns3rM83iOvCm/jUYraWGSF3Qc6jUR2
Ig/vz/nvVVq/1ALWyVL2+tw1qB75Aiixvs3WJ6Cjfa8gr8QyoTJVRxYDlLsV
DVROhuB0zFzZs6w9j+6Ye202UmSTIaoFhdRCKecW/LWu3HctjjGbTFhrX8wE
5kVoOchiwU6uonET8Go97wM1YiPWihHIUKk4Yqe83mkWdrtYCoIkZH3udLar
5EILHYhClj7xXPPE5/7XMma0c8OmzddPwxsfASyUWH7Adr+woVCO4w+/gpkW
MnXo9Ooe+LLXHg3uWI1otkFyPgfoo00BO4Jf+1PVfNCeejCqoFEJtOiqdKkD
gBBohsYAK9lxNKgCH3CZiiZ33HUrokWSnI1R3ZJbtABm9niTvFj4r/8ofQHV
R3WinLnz1ivYFCh/CUMXAdoubNayeCB7WnDGdEJ2iJ7rRa++LozXzq/jt0kQ
yyr0HVuYov0qgUkYpbqC4DOmo0ndZpxF44sbrtM4Nk7Dy6aKqm2xHuHzTgq7
p+c4eROFHAicX3+moop2Ae3svtNs2GV6+Oxd+3276MhefjwH9hZDQ/xbjRmN
DleObZYaR3eSTSg9lzDl6bTOGpbpRKkr4kICq8etgS+VkNgfC1iBji2xaUn9
L+868hGVRvszG7p/og2M2E8fWhblPBmN2slbL2cpSmGxw+zlPRGz03OcXwP/
iePQk4WQQIbIJq8+KGoQAUmNbqKMEVz8R3PvPpM1tvG92tneN72b+2mhH7v2
xGZo2M/m82slppei+5k7P9LBCO0oX1dwqZ44v0GT9QfeUQCpn2STGtmmCF68
mqaNETjoEZx9Nb0ed1QblEqHfN4dWTF1UZ3ircns+d6l/jwyugVKu3tVKswl
0FlSJfK+6sBeas/ZpA1bDWTS7+7zmnOt1IoT1hvQ3End31F1VI2BChUy5l7P
+lTFsCpJTCwB5q5vOGRP6flHFT28VSDQeBYysAcxbP94mPDQM79/W6KMmk2k
s9CyIYWsOjxy3B1wytAiu/US5VAh7XVKuoqXbmuLfnWokWKeNYIC2r9GxlU6
pV1Ru+SsIDF1ffMx0nvT37vys83DNME/9s6V17l9+ubJmy8UjVSqEF0h3VV/
sSWaWcfdOsKl6tLm4GqL9Lnc47RLs7eH+v4KCxKVorpyj2mI4pLhgeYW18Hv
f/Q1IGRkXelQmJHmNvSRh1l7txRozd51IOONXNjlHQsDlaE5CuD8H35qaQvp
kwvnXp+vqm1fh/ugo9Tm2HfXulGFGgajlfab4n/Joqg3V7j60Ru47npEZFqI
BGzvvFGzQTG2S3mjYl3jNoNzVR/yRPNZ6q4RqRJxorG6FtlqRXVdz6mOgCx5
F+78MEOrbntxqM6hfpS968Szg//IUN6TrpmIM+PsXe8qdBybrWClID4PV/dk
C/9xYvWbqeUtx3f5aVIhUiPHu1srDOnUGlzvCyPctcywwihses9Na4v35j3n
kaHmcsTiS5TzHlg+dTQ7pYZaygf1U1uCJl1hRR/QBCTYDxWRT79VPO9Vg9ob
LLKwh8hOfFY4ZIEB2ofiKZ0K/TmoDAz5iZ5mXw4t49lR3a57JSM4fFbg05L4
NnJ5P0JjMI1LjYwA1PGPiamFTI3tSCfg8eeRfdmYCPNUE9GEW8P97OfcoNkf
qbtYXjMcuOu1+rTolV0w5NmQLW1aI21NmIjV7vPaEDtp8Y8/J7xrut3HpPwp
8iOk9tf+02UQbdmVGC3cLXEe+tym7ZenaTgl+YYl2gF7fSCiQ+Oejx34iO4p
v+/367iksG0V3H5d15GHP6aTnuAYukst8Jm/8RQwzsV1dziWhVNmHBxwTnnD
pnvq/V7em7/5whlT0a1rirtLhXGNl2dNiRevn5uoHOB0eg8NGtOeRba+z2Xb
xghxEB63W3fFKv7rWK3jXFfbKSr1wm/5zuK//h/Ju9rC8ii4t/Sv/0e9eIF3
JP+d1vnC56/FW1Zx3k4yP1eBhIKexjZldeDZkM7gghLZn8/kFm4l9rTCWZ8c
aC65+ynozxdSB6XSZRv+BHWqe8evP87IqsQHkdK+5lw9t6q+PVZX0vVPNiNK
Im3vVJ3cdgUOuCgBKWma/edWR/IofCCfn/uXP9uHzF57bPlZrLN/fO0e8lnm
WJpLPwOb0M+hwkrLz0tkZeWuk8lVEzoKZHNuCsKX82Q4Kc+hfbnJ6PFV7vg7
ki9ldaEmRz9zyy72hAJuKa3qtNdTw6IDdMgNiZjbFMgJU87w/tSHfnemVFZp
s5McAkDJvQ2TcluvBc+Gfn6tCxX4jr9RRKpPO3PnzSxXj8OvgNa+/jVdtteO
X3ui57YvUqvq9O1vU3TtCB2bf8HppJkpkpNuEPgTX4M7OnA9NEmyu4C6Q2uO
zLefOX79iVgjE5ReUIhZM36pAIruKBC9q89nLu8OcUfDTWml9GB7un50Yp/j
qvIcYXgq+9TlKLqrKjq1Zu+S3nnf14gdBydWEUHYk/r9EZHK4UROvlAyiZDS
a8FceNyTaqif3HmbuLZUeEYTitmin+L4gEsp7hqZW32qH7XFQ4UKi8l2s+78
kNRD/TkGcKn4cx8KBd+k2As8RCWy9pf/fPZPNvuKMtQXkodj2TUShlOJwhW9
AlpwDFBJohVsqNRtdEUqYNCXEw9oRI4BkgA4tvIYF9+l3ZnlzTZeFZ0/OTgO
3GWJgZ3Oy8Lv7eletze3JWSn16S0Y1NdsaowCc+adiJNPWT/pRgz8dTavk5D
klZ37itOU8fDLYBDuSufL+cxp+jY41g5ZEpn7e9xCOEBN+2RSZ/A/FNKGgbw
bqAnMo+tLe7NpwLQUCcbsbljwwNmuqOClEzjfSWigjNJTq+Nuu2rFu+w4B/0
tnLOdl3spF/stUwgh2yAUs2Q0mvqQcyuPFaJlgLC/2HvZVvcPlmNu9O3v8s3
xObE0pYNtz+ZMs2zMJNE/LDgimqhttSZdHQiwQwpYoVuIHEJc81jf6O661Yc
zhyENjBfiLo7PdVedKvb+VJHSx3tlvAsY8KH2OxRu3RbTu++IyeXtsQF/ABA
gFuviPSHKV62dIClrwZh3gKMTHrL7r0xA+zY9pIolML1Un0VHR92MDxPNSol
atLZKFS1gPN6+pD1Qnnzi+/BuKBUk3/DIbHRNNMLX7w5kjsi/vvv7JIritPb
BCwNUBfTlyuUdb/L3VA6wd9OEg0iq0b38VJvw55kqu5kBD0P29s7Ud27dYsH
zEiHMlvb3E8VJipg1A5aBOX4c6L6gedXtGBLBpT+5d1UjWl7YZDlc+6uymTE
8SQ4qd1ytqTTWiMSBDFW5fDZHa88t/SpXgVU1VvMuWHp2tlUZ93BMVu7QAtf
AKeGC+i+YzTrkz07aVNVw0Ihex/PZVsdcPTrl+8dPpu8WmyZows2FMZz/6D3
j3nt+3W2WSNgXL9Tm0tXdNXJZskFQGXvSsSYOXSyoSAuDiJiUrLycv38m9mr
D+tgQj9fe7QKL1LqdWv/aT8mMKElPqpt13UCe8Lfnbu7QNquSmrZFemNjaTe
QoVfmy2Lg6ey51hfhheqEcP+logMEB91cKpdg8vhtHqnQ3l3HWbjFGaSyyiz
a5QiV0cdaM25bfocb3S8o92/t0eKGrLd7xK6XiyKnYHXBsyJbQjbJTqmS518
hiIxLEg8sH/Q6X7+K5y7OuASErCaB+hXXoBSrwtzV3oFMUsaC/z2KRp66XRu
9V1iXSlyWqJfVYwR45+V9wATuh/lptHU8B2E7/Ju79u6JjriGMwmKX48sNsW
VX1gdMFRIyAaRB/nOhQl6HwmFfX+tsoOn3ZgxT7WG7p+7iEmZAEx1U+//Ldx
SjiUmNyOA3Vh/WLIHW87AVigaXc6pLO/q5awTacmMu1wcEpvPKeU0ZZ7To2w
Zwoh0fO0l4GlGjuxyqdcMC09U32yBA+HrjsSNakjrJO3jz8dsUAh725VNNUt
VN6kPS8TRrH8bPKUOmf2Q6vmjAy26nUc9HHX/Nt/S9CAPactoWx0n6j4rxKT
rTu7T8SLnm0eOWvUNYTbsz/aqrfke7N/v3cUpdtpps6l7pkODSX+rH3s/S/c
XYLuivSQsEz1OIW56EiwChGkunk5NrHnR4xs973dyToDpdVNf7Z8XsYZCj2x
IXEnbfSkxd1VK6TJDNqifnB5L6ksDK63RpWG0AMfcZf7phJE97vkDHSSU1JR
aQtB/9NO/4wchNKI65ePepwuIR+Jh8KHwHUqwznVrZHuOl70cwF91as7TqEG
94Fr5TTJ2nDbLrgjBAFDfBYorW+kfaqeimZdlVlVxHEHOYfB/V9q1bYKkzQU
NAQPnrkDCPw8u8pYnzwF1YgdT26mDz2z90xXV4t30Scq5aIh/6E0SjWCTSM4
sCfU2tuVWsnIDLPBJqMR0P8p/hbS3F/XTMNvUj6+WiOnPv3WlpktkySdxmHM
vznqWptN1sBBhPw3cJpdMVgUGU+cdwbEqHu8NjnGG6y5qAobm/ypKoKnP79u
c217ARi9pLrWlWJ7UhFC5n1PtZlTn72uUUofOr7NfsHDTB1RfvHBGr55RAE5
wLzFTxq2HS0Pw6xI1luEm/G6apjQ3uYiTt+DWsPyjn+ktENoovWNva2oVPbT
WjQzbFan9cVe1d3FPyZkLACkS5BO0mdNE2Sj0bZMp1WLD7yS2K87WEwPtv7b
PvAw4BObQGdzKirM1mjN4pc+tpAsJd8IEQXwdK5oYy949s6PWm2e0TaZ8zHO
ky55x8xI21l3qhBmgi4X3wpbFkcu7oTxWZsl3UyvpyfXDaOq+cAqf0dsp+Qa
lWMrvOtpji7tv/YSd45DmfJ5m2fBeOcSqqkrjrJqdiI1aVSiqsDJG0/nrj9B
/UD1mHEOObTHuPPfP56HpkkRPGYzHbaL6+6zduLGc+ckI9ZTyL1v4FvGXsQh
W8qyP9DOEJrBFVKbLPsyGCGBbsU005iiv6uoWG/UlXSYouTKGxnuXdPLu2o+
0F1i2+UW35mF6wlC/gV1I8segJlaTeenqg5YQlpHalqUdeQoqMSO0t9aOjxz
6d4CHGZ2Tt7K/JmQvbznCCcb5gxFekgL1H/LRK4NgQ3zrdzCQPw/Xtm3g9uW
1cSFjQmqbqgUqnz63Jc/pQvq+tfcEGAR2YIHtXLloXiVgr/ZgOkIgE4n+x06
p1HzpQ6BbnRPI/Sv6jZYVGdzbR9of195m5Xuqf+WdwF0r3oNPtcj/lI7Ofbs
iz2OsKGbZkE74bIsjQr60ry3eRLbl6rBmqo9p4F5h76Dj2Xgb4x45CRmMxoU
l73e3FM1+JM7b1ROmLv2Nape4pJCL4HMrrSDJYFgx8bx1aeph56xi2mXqAvn
YGV1IFxUBj23G8/gTDFEJO1kG0mbYjh2WpD//HacMinulWTTazervR7RmXcn
l7aEehQ+w8KlSRKhQdpnR1OeyXbVQNrkM/lqj7BiuilMjB69ig5HpVgjrKmd
aKIsj8vhLNYS+efROrp3ixSR+Bx5n/qEequParynqqQ287KssbtOxtmq/R2j
2NK7VNLtn2x96DtKzS1nuvdbjK1QTY4+70P0pi/OM8O41gF+2JrJftu/4OtL
pRhFtcNpnGBzw7fm6TJO+4fy8zHXRsx0tdxiPXWofJIUPiYssMeb8uS2x1SY
izt2cTM4jrqT8HE0wuQ/CXaOnSALX7yW4Vi6w/p7LbzD/mNiKemfHqgV7LTB
LXZD1X+pODmGyg4ykVp1xB2eglZ6UrqXixN1gp9on0rhauDe7kNBBA11rAs2
JHe19obdjdb+X5plciOY4YWu+90SsY+paikpjeLaWKOQRiYqvxIqxm5VKMie
lCjkcgm+y2LFlOrjWraj3R6VelD4wd7f+m+V5FJ+6aqToKUCkLXhFeGD/jne
DaB0HVwgSDRczzM0bMN5+nO7VGARr5peHUn73dUkhiZ60xZ92fd9nOLkngvj
NKz11bjvOFJJFUGONVMXIRircfYbeoAzsDsUiX+iz1M4mdXzw0yXfFh/lmI8
zQSpXqpCqu0EZx3bHrebvenzUv34lhyKHgpNrkM6Vy19rvxbJVCabidWc4sq
aB/WLXqsvFsVTX+OSOngY9KR053sXVwvYIwupcCVE3vzSlfQ0lcpWXDl/Pec
Gak2OaPTdd0pUj+YYV7h+FB1VuT3UzgxkY9UnyJTxWW6D7MTqjVJTU//pj2f
lEnYLCpaJxFBFplcIfY8JLS7ChKpqMRkVTxDnY3udtTCsCOX583lXO/igV7q
JAPjzSHHJaQ/Rwfnd/uJpOpy4KPVWF7dHZoTcX2C4vbY2d//CEeQO+go2XzD
AIoBVsOUG606rQDfNQ2LTpx7eAMBwHv7W5kuC1Cqb7tov8ys337Mde768vU6
76t4xsOqx/Td5wek8gIcxfKOgOgSN7cVjHMavzsK6QsiRbz7BBO2K/ctr0tP
gfiBrovphPYODUFHW3aUn7zxTdYOGvMMvsl3JS3zXpEDtm3PkmLAuOPLjk5x
MMsXkMAm2yhHoSPOttKBDLEmWiGk3krFctKWHFib6Zz69NUUO6H27l4f6Xks
gqG0XKJydD5Y30tkA2/IWsAmEj997evcoR62W4vlujK7vvZr1KvlZg8dmV/X
kKPeWr1zNNMDqzkHAPKh9rA9pyRP0JlaeSDKu54NVInLdnNtem+OruJVBBfx
hxE5Rp2a8vMHfWTR4KYIEM0HtyaT6M49Z+BKPbp8U4gtu5J0tC/jkVLuDb+R
1DKbwc9krFzQfc5ZVKzDd86zo6LolykCP9l9eeyTKQGzfvb3P6Sedav6Dx4I
SC9qHNmigO7TubvF7zsiCOqsXohHveMR8smaSish1oZSVk1Gsk3V1MXNAdxx
1mb3p9F5eAIOcI9UFsaGRGyMRX2Qqsv0pYSC2HOljXofUbt8LcWOlYVo45Wa
f3ZlUKyxDPtRjv97dlbZWeCGN3PNo1QYYUhu46Nw214vcR6u2Awg+bZPOH37
lc23TiH7AXtAsk3gJQjNJMBcKpYSqWE7MsQgbVKVjAO6/bwv53oyqibF235g
hxEO7DaA0JgD7NEOyTU5iMYdoLGw22D6MlhuFPiG8pGeRMmZPI5ZFsQmowXY
k2O5tjy78uhEdXt1LXdQ9U5yNZ5rx7s4aI58QJ42xHARkixuWGwkCSM781D6
Xd6aA+Vuj1zekkFE/Erk6Qe3pg4RisjL7aM8Dn2fLlw/2zdNLKbCp/SO63KG
IH7uqvaROAELt19rtwp8aX9J3u8DXY8qaotmJsRwHu9vJPmgmc9aBAck9ysn
nqlss+IyRnrDyHEInYwRKcJJlR74hvPrx68/yarv8bd77hlm3+vky5Ql6K6z
mN2ez3bcLN8KSgTM0uwFMpd9ZPzc3XOEvyyx1GmDghz10gCfE8Um+9PJUTq6
tjFcBxmM9+Wd6hmJ28c9zxrcRIVri0rgcR90heU/+elLCGmW++t9sXItfAEZ
h7oF8tFAaWQpCRXZ8jy++tTZEZU+s96avhyorU7QecRGSZxt3SJC854kiEmC
lbYnJYB+ae2vFX4ceD7puU2wKJNvF+Bu5hruvssP/NQo7qbiHs+tQOpU8vxq
TjnrKepd0SkRqCFkaHY4pFjr//LqpUoINJrdTN7Ri5u6BOQiAKvhLDtnTypO
bJO7rCLL6YqUTbWv2JZWRqxZTy+D5ea78QD4BMxcIcPESMG+hSZbtuJ+iNm9
6hGWOZ/KtSX1y2BmRUBk6o84c1XnOojWfGkbNGmRqe0OR7Mv3kxXaL/4XSN2
VB4miUSQV3vbIxd3MkLtoDPq5XcIPPSlPbshQdZY+8/ZK3v2eJp3bodNxVy4
qNPKAa7OPtPm9sRqQcEc9JPOvoD/JpvnZCejZxyIl0l7XD0xbYOCDpYKFu6G
NFsf2JKxiccZRMswe01Y5AACtiWN/SPUFWkG+SNoj3vVTkM+uDNb1XS0OsH5
WE/RaMVAjEjUHrGUqBHYqec8zXKntGKW2hNt5sp9x+N8fOtlrZpZ0JFUtX7m
6k4wM2weFd5b0Dbqnbxl2TMKHsmzpOprdJzbCGGSJnPolRUVDCXcSqj9Zwcg
8Gqq3bjSrdjGSmX2De74REa2lFMKVrDOBiuM3CHPDOwXFNJMXkge51IiVa6Y
sAdCxEo2skmOWnBIwcFVKZ/HDL9Phzhg8sdYz99JDQyqzqgtIVTTTNZkGTtP
PVluFGDAvW22Ejzny+j4/V9X3Q/U+A53oJJXjft9Ru2fomSSIt6lTXsw+R5q
3+nvoXhg82XBPIUbHbMa9Lc/UG0E5b7Lu3bB4shd+0/x0KYv3/vnjIgQ+NVu
tyGf59rDVMWc8pTEvFU6O1E9A3lnXfeOVQU5QNr/pz2x8jedUE6s7EqVVSPV
4jzHymt0MI4a10coRiNfi8nipZfUquynbQxm6XBk10Ires8xMuLiXCVrq/YH
7WXp7K9LAce2rp+ZcTSCCmLfug5zOqyG/jRF5hKOpap/RyVK29/SrUx4jHG2
YcunB3Xvg94zFLlgkq6C9hN2Ytg/SVIw3/Gvjl7dE+T88Nm7ObLs80WNNVGY
ZWv1pOwteAAKUG9vievtAizq4ShOBRw7TD0bbuXV4TN+BerxvxbmvGo3CF9v
v/ZOuMWW01mvRBVOV2vq1ppaivsGxjl9+t0WG6jaA6WASlcg5lCBJR6VXKL2
MtCqUzQUFLkn3Qk1V9g7K+kmtqE6zP69hLcmlyqkf0BdH1R8paGCIAUdh5Jv
FlXqTyfNmMTqXqEVvYQXSu0xnmVX205aHa9RvRPTinCQcg/qteQ8ZGTu+tPj
1x83GYzHRyxuCKc+e9U+M6Fh9lJRESkxO9QLGRJiucxdYGJ0LN2wo1mtiVJH
/oVdHu9IsRi+F+9dEZAjshAtTS3f857j0Pi59TpDarlD1Wo6VS8UeE5JMkll
0jW+BIcu8UnchQEZ/h6duzeZMiaHwSaRhtcU+zmURO+lFSrdfRt6hTGlf/C7
StFxyK4s0XzS6lXsJMPxitl/54ekG1f2SMX8T1m6zaM8pr3+Qq+Trw+zLkca
y0tehXsDT5OIIBk+gyhoS+ioHOW03FiIW15cl1orQK5kGthEIP6GRlGOnOr7
PTx7j3q/91V/lTCMY3JSJ01qgyS/75U6jccQLmmksYn64jNYyzsSj3EN2r7u
bYyDQ52MjKyLqHCRsLqRXXpsB20fax6DU5gPFfUsxHXA8qOnbJNV0zQpQJQA
u5Rdys78/q0um7S/bExUqrH/n7nYckkZrTDtW7ocbXUdEdeHHJ6DIv7YbNqo
YS2vPpEirRQubMpzBy32OMRs3JD2spT0E3Y1IA6142wMVcJ3HfxfOgHCTuud
+/In9XRmklrQDthdXllFxnbrJT8GvwvxZ183XSo+QIdWEPJceR7Ey5MftoO0
45kWb3edMGfuvLXpts9PYJBl5K4AnZ31HkErbrW1NXv1vhTobIvn+POfpJFr
W0MCPJIJ+/9Le9PluK4rTZSXQGZiIqmpymW3b1f3j4r7o3/0c90HaRNjYgZn
YiRIHICTSNGmLFkikJgJEgQnSRQlWZZUiuoKhx/hrm99e6+9z8oDyx03wuEQ
SSDzDHuvvYZvMHSZdk4x4eHf5BIoUuVLDkWA9rRSLptaODE8pfllfren8dQW
tggcIn6RrS7mcVQFIiH05Fj02XQ+aAEJAfwH376baQZNRFMCl1s2wLcqvW7F
Xgl48rLuuP6Jt4h7F0RLlmfkPbKGl/+g1ACxPJgmLe/FLKoGg8LlPSr42Trp
yfMP1UJvXfgQ3T/qDVvvqpTruvqnhzD9ppK/L6tTJePnCOARxN305n16RoPx
1cOA37n1cih6CX4wBsDAvrw8KmrLhY5AleE/wRxYhIN9ckiNnGV+Yll1veSG
xKdJfTSec5ymsD+JftlCMvyWH5u6eaTi5C2L3E73sa0bYQpscpnno8FSyroh
IbS0TSRM5+8U/82ISt4pNzFDFj18K2uOBrl7dIkdUMnL8ejH2ZhQ/vtZzBDB
fJWvQ5dFmanAnhVZJp57H4EhVUIQpFm7Y8v04DUtbPL5saNIdImkMhHR2aZT
4bPWs9oLlmdt5rRhxnT3S/lsm3/30I0Cf6vMF859VK1iL6qj9wQ+nnbjuZWC
qmjqOvnKuW7z0yJOkbmj5FN03B/MTq0v7bNj404T6pViLbnnofJhwzk9Ba/Y
Qw8Jul7R940eaTyxzt2Jn+t5snK7hguU/Zm4qQPzoYswfeuIHF7VnoKmpc2+
6jqBeWSqOfGsLeX2qPjAaAguor0XJK+8GsphrCo1gpTHzL5Zqv18hPAZurw3
2boJw+C7p1f/+JeSmjJ4UsDhBZdi4jxwYk6QF3EyRtoKzxRiZ4jwC124jFHJ
GpiR2WUtndS2HUzMWT+J6c3zZpOzg2CMYgdQ95A7oMKjT8kkn334F2ARVL+L
u4B+p1winMNXdgU7JoqDET17T5xEudU7EC1rwn3MBhYYeG5z6Wl5XcJ6rqRA
9WybysqrRsE7+wiNiDuvuCLU72RrUg9NAl6SHoV/c14RNz/TM+xDqXMA3Lcc
5VF9DqgeyZQTTw/7KVcUleuXJ03sWmfcUcPXEn66g13jdFXHqzv4Kjl2rX/Q
Oe4uRzHxRK0bO7UoqcqUfIwTs4ZX7zBPdc6u5MeB5ZlvRR5Kg6etPAs09dEk
2kwcV++95HW/7SlrDrQtx0DoKMY3X2QiINQmPZsxa8+cU8lUTWc32c2VsAqU
jPoqSQSitwUnxKlTUGJc+Wfq97ybjTZy9X0q+46tROyKq6U6JdsZUFuJyEw5
Zq+fW92jf1/UjmnLxtzsrIPyqumbqFYrN21eywER/dE30dFduwSMzRfsDfmT
JUe0ZAqMbUxLWTlTa8/H1WBoIPN1Sjjj0FtYSg4DjK6VHc66RBrqlMj/4AcX
+b9un54ax8895qRbAZIHwMMuSUJ9ZHUg2HOVca+mvFWM8uSegfpHXhFYA2UM
d/DqkadDCV2mbYnZceeLgFrR7+lGOzxWeHRUwSBIN6+5f76mRwQ7GY0L4B1u
0h0EJa+Erah4Uc+ZVVnsCT0v5Y8ok1ouTa5C/lkens0nOsGYV3W/qGbT1j81
lGh49vkUgjkxczEoB+r4VS5wojgkGzj1InLcTn080/0k7KhyFljTxKZl4qux
K12+opCvJOcM4v0zzxfHOvdqpUxjzmqa0A9D812+5WE1KLefOwUe8NV1nhyM
l3bAcM8zuQpzTFMTLKJWDR7YvTej16pYLDpxaDGuyyPNOSmNMWWJKRcVGbDk
M+eih0uvYXLlf0Mauyin1FzeCa5n4YmXmTw2k/MzJ49I9Bpt7s997FlIeJf/
IEOFeseAEKqiSkTx1GfuvFYMAoZ4mZ+Sj6DUI92mbKF513ecvwchkay3NxuS
t3CdwyDvfpH+7M6OPk5H5TrlHc19/D1n3LLtVBN2g2hjonmhfJ1NXzqJKaMc
j/5Ntzy/sev7hpOUDcFSKilkkwOqyhSbKsq1aX24BnWUSNBjIWE5QUNesNy7
LG6OpHj4R8yh1FlrzwlWlAuKeV7HeFkrEW65cv1cLdYtqrPhJbWFkfO5fnK/
Fswb51sjSzuMoTlquK0z7/VOiKsmSXEg6SXUleeIGlHdXQ8kvlZWeUE5Xr7l
4r2vmZiH7/34L+RJhveuizpzS3Wz5wxbzfvDXCKCutXINmC/dfwilfXTE+R6
Shwkv5HRsnPq5nOJ0Tw5uA4m1C6RMB9Fl9fYu2DUB4+JZyu1qgGVXch1mWvW
g5P1gmmo3Q+UbR58w5yuS8Lw766oqOlHX7N5rbqbofdm+oR8at2yodAo2Agz
Fg750eyIWIlM34qrD1lo9LCAUQJ6+NvRZ6U8YW3b+xVO9MyV5a3K5wb8KPcb
9bGmVRbrrGrsG9dV/p27M3QKnCqB1wgh+iZlvWlnh2i/9mwkm0/0Di1smCsA
dTHk9JREYEgFCxNjwZ1zQQOftkOUfsomyVBZl2xdbpR5leRxAJVpE5vYxhPW
Mykp65NbBUEsFR40olxH1b32kfkbGJE6NJY4TlLCxOozHqlWkZT4FjkCmNFV
//6DPO7nLHWIeGnXAMLTt1/K+zl357U5DXJV8hqZIqXpQ9IE5TlHLpI84Mu/
/8aUzjmQP3ES1KgurdU3LLDJTXL3W+ZZUgvxHCvTpAvvnz26UgTgXYX3P1E8
VVDgLteqRKXJtUOGzWE1dz9RnedABypwFSMzlGd2RL2UV3+dvV+K7oMzOE8O
as1y2mN1o/IsTTIlQotDPBhe3Ao5qJ3PQBbh302B1E985bXJHRtj8R1iZ1Bt
qOqapLyRX4U3ILmvxQyu+ZM6QjP/Bfk464qHnWnxoYTA5FTfBBxiVECXsZUI
r9rgOwaJzMyNHQOy7cMdlhEPpwhGlEAu38QMQgpUCX5DWs7BeJXYIb9CT7o3
bf8u4d2uuN0VyCEPc4w7ZqXRY8zXgtS8Trhrzx70tWFwtFM0l+yLAfK6Yrb0
SjYMG6SESfIz/IyJSswS4UaQOmzGyNLNDgul9kgBkecmLyLFvyvqDmyzkW52
gTlbQEtbhfLQ37Hqz50lNfaCZj/5ke8w7D91AN9hocKzUIlge6owf2gZRYMd
BFpEX/3Dn5krB0Qu9yKnoZIpyR/liyTQA7+tXQbKDckF0AAFphfLe8bZK/Vq
jufchLfmnOA8Z8cppXbnSDTrDlTs9ZliRxVeU7Xrr8Rh0Op6cAONpC3gVD+6
/d4p+w5Bd3ErfnIXVx7GcGrbVJSqKjiVqLBMiyUOJ37d8sDk8m+oJa96dTzS
+XmmC5cQXp3xyVChOuaETmeeLGO2DdiSTuprnJYYHzT6Cbwr96JAxE36dZhi
nBIJMDmnMGsRXTYT/4gZqObVaBY25DOSqpBaBEtQDHk1O18UmSliO7SifmaW
G1R91FCGTsNAEc8nh70Gqx6ivkFiyvQE29Ba7tzoMeV+Lmz6iBTotCGPZ/dF
koVh5SbRFSqyUa0r6bsd+mfwHcgBkc03FMdR8hNq/rtFYqnsmtjxRAey5I7G
GZ5URydSFM7VpuWEGFrYCpZZi1tTt55bbTGgyhDon6FII1LplDqAbxPBpPo/
4XJVRBAl+hh7BB3xakYzRY8OtaPeM2ZX2+6ZufWihIIbUoFHU+1q64G5jKn7
QnRnRD2lyp/V+5j6ULlTp+c/kPebsCHGyLbJYVCYjhlteeLdYxGJRylNbdgy
iV1rX5cj37v0UeDqsL/BPFUuJBztGaRDfnkUjIANYBlYzYAPs3qImfNawM25
Hk1frpWElG3tqdRvbKwullTTPbKkYTNKeSQ6I5Ao/2NUHKl8duktztx+TRUY
uhB1YZ3dfIZrU6YdR0YxNwWvQZ70sDoNkaSi/ZtgXkF0IvcG1YSoqEZSyMAs
fljya0Zz3SetmF83yLEl2FtuVDaF/OsJQzoNZLrMbdxuhygM5yRkK9VwJqDC
LHoWcTZsdRzJq/IFlfsw5F1yg3LmW/XWm/dOqUgjET5E9az/0EkoCWqbj7+P
KjAl1mlv3ueXJ8xdIn+DelEFFUMUzDuBHr3bznku56zM2tPZwSmvBHsietBh
m9/g8+5kfw6SJnfpxtKnXLIWneuBzJ8LOFB5Bs3rQBZYHjQCE4yX5gs8sRoG
5GPXjlF9bC5tE1gyogwlngVAM2BYinXG52lPAackratCr1YNkVtUAcCu0xZY
ukvWwxTyZ/kXPsfnJR7D6FnjThvutG74HR6a8tka6w/GV5/Q8UAegmxLvr7Y
yy+r7Ls+Ul1pGhvktFGagOel/Byx7HKwYZp751Vl58XvdGiQSPHFPUxLnHy2
pY6EWynaM/pojk6Ovbbg7dPe51aia4Uqs7W0SYduzPynPzEtjcJqYBhq9qAK
nWHGtXrIu2CSa0hlZc+2iPyBp0SmvN+ASrl61PJcCVUPe/pSPQ/Og9BI3JgJ
Gs4+/P6EfbLh3kFhRnR5G3KQ3BOG68BP7Cp7pe+SYMzNa+ZGMJFSJMly66/y
IM4pY0qen7qKrbfN2pgjqmDQSz4P67qq55z2PvV1P7WuscOedkg5Jfdt3IGG
Yoz3+6OlPZsQoV9A15Ehfdl8kFwK2Al811iZOdJ7Yu35pPbtONOTuzmpQxs+
4SEFh1jtHSRwF1oOA5f6bwSwspvQp/iYN063lHEPG0DVcPks+GuMJP1qpUBn
TDqP2JNMPO1CWb/hpKiuPfzJ4TkWngMhB8NwnrFhYK0GB2nCy8Fd0FtSEdFD
9igSWjZUmJlbXcYmYZ/5hWKs0RqPZ223YcL5dFjd5VrqDc6NmXvLZUtyMX3r
eWDUJ+cSfntzOXczSugfP/PtV3dEtFikypt9dPXh9x3xbZBxaDoeNmmcXDsK
h5W24K0vV8IySSSQTZf0Zc/ffaXeR3thGJQp6PaYti2TFTOpZqfK9hP8vCM+
vIt+KKxuubrksiT+ha5vhHCFq/HuWQNl5LKfrnfS1Yoab8xm5cFYj5Wgvamb
R/RigzboNtemrSeu9tLsVf6B+Do9mHbGAnPq3dz5g+xAo/ViGSDHRP4kC4uq
zEBg1dxV8xsmi6f2zlX4498rZwEN66sUwZf2sTkY/j39mM6rdw4k9o2uHMzE
ykT5reu06ZOHMBHZYO6s6zDF3NSDLr0Pj/ByZ1vvRDxN6NoEfSWtkhByM2ZA
I2cuUgUhOdLDiPLWy7S323wbnDZIv8JyyXonKt5XhSfLO6UoOfZ5ZH335Y++
PauWNxPaK+duVavnTamwcQtj14Nwi/XN0ElM/YCgZW/u204Lt62DmmuV5ip+
brX35CvQOogWWiv7Ym3fBWzs/Abxg3DqMI1afX6c/5mEc1iHuZJs4mzx8z3n
cWLlCdd2BDSGWa7C5xPGo08WqKxCBKfl3X7NAzn24ss5qxuyEkPh0WYNm4zJ
rV348E3wiuXPOsx0Kb9gVcRO8cD8Ovc8AV3k8RCiNxI7MVE5YSO6hwX9o8Q8
RcdX2a/2Nnw14Hv6nlfmkfXubdbsnKzY9edW98p9ttSvZYkUe02Sgf1o+lzT
qiuZMivHvU8e30WpK/RbeQhScnE8K39x/sMvJL+Uy5O3I7/SjHGcqSdMxZe2
OR8COhlnDAK//KRcY1PbaaaqQEnz9Awct66nv6xrPKBcTT6SWKfUR5Z3WAjB
2lvbuMxO+3VwKQdg89oel7iW5kdDiwEH26mVyXZ2EvcSETSxikYNdWRmbh2N
Km0I9AtMJPTinAdd3eoWfTxfDkTVEz/xzfWcM3VxsFloH4j/Xzs6EbGqLfoM
yZ8YCVPGkzlrSuTeCZHdTjW5Z1bsZ5MrVvs059qOJLFUfJAvnolMOK+E6Jhx
71lvB+MWTXm1dG1JRDHfTkqG68OEfkhik64elnRaPPPBZYc1MmclaZOXkpxa
pcSjGjNhMoY9Z1bNpJ60dHlKN9TgXo7CcUPqp9yDnRLJJIwKIM979uF3bB+c
V+/fIHqczpGuvE/EJgrrKd6D5l2pq9Sj82eoj8oDkuuxVsNxeo88paorYsbk
xI/mHg4ZzLVdmyZ5ZRH8Xq6hPXb9cSnS/oLKARRUlen8ubWTuNf0Kk5Rv052
Fp+qtXgVfSiRYI944pjx33tT0h1yUf8d9qHkeaskKybtkRkR5rpM7iU8n/vw
S9PjINuCLDlY4t18YXE5X82dPPGmbx1FfdxG7oY3sQYs7ETU9AQeTnJkCshM
33oZdNDR/FjaJgYfdR+u9gfS0I1PTZf4oBuujRSt9D4Ihq2qUyOXiqx1LdhT
a5fg1YTSa1noseMOc/ss2/FMVe+TkjQ/47ssexzQsZAKEDQH6qiKav57uuRJ
NjWoUHNBs98votrAO6o4/LyIOfOwYveGdDfKo6D7YKGtPmWa7VTGpA+w4/Qs
RsvpGqpK3oppGMrNAtksie3KE/IGC9hTYGXY+y55vvv6k6gzVMMd8a4GFSR/
Q23V1PSpFWsrxaMv7+jRsjF2I3DET1HjW5YnvYLl/jDVXYTSE/FRsjTQdzmJ
RLCHrDvEWZ1NS8YZyVy7zZKaVOrIaZazryXgE+c3KZ9AJRmYcJpqp+ep6GJ8
xNooTSvtCclXjyzthN5uU3260350Tght08E0462cPfcRaSurjPkY82lI36s5
yKCKIlnHK39XiJSSgUhsIoZMjssZijTMrp+7TW+3hqYz+/Q+ovRYylBdxXvK
oqCluVxK4wquYJ6apsOu09THaa1chKxZRfMe8pOoNi61ZqxEteZSBz1ZRjRW
PImUupdMx7gnfmL5glcnmRBkWB6FU07uAEbEyI8SqqrBfQzxOJpz5n7XVL1P
CBKHMvD9eLjrGYNwRBdO0hJDjhYJMfJDl4MWfZsalaz3UvfUI7B9BTkHJezk
KfMvBMiw+SjXJ5ESKqUP/xzGHNf3mXzrsC1YE4BSrFAR9L0vf5Y5cKDnJAcL
tcnkE3JfhjbEpuWRLEAv3PtyTDJiZaNTFWYkdAs8TravCRmsI3l38k7J8ZfH
PDjXmvnwNYR/lux6uohklx+gIgkRgNGlqU7MobxLPd9fj1Tte/YVOBFX6Tu+
h4a5UFImDpLPawEJ3Uu3FkIG5JcRZv/4I3ufFGUL02BcvnrLa4/364Fc9cTP
KVzVnbFnKmewHkP3ns6dPmfIML/lsZWDiB/G/seLUNHDoqTy2bZu7Wwr6IG0
BORW+F537tXYD5LqJ69o4S2mULTHTehcH4eEctVanWGcY7VzYKw+rpxYdBom
J86xPWKoraZVJZPkUdjmR+ARh5L1UHCDY4S879o7/+lP8OIsDiRCEIlMaDam
1oqpC2+fLMhqj1P1MMn0JSMr4tsT1dob/v4cd03dJhcTQqL7kvKDMeDd+Cu5
fdpD2U4u0TaFLco9EYe9Qcd98O8oZdRkQ6K7BGnVHety1keQaR0wg+S9cFfl
PA7Xs+66/OCtzY+KTCi6slcDBeYSpsX2S1GR43dcvXswrErwMcovblEbAEJM
H72lsUrCK+VazzVJgZjkM2Sd8Oy2gAooM/sbM5jThB4k4X6am+jPysqQxQKH
DVbN9jaLIL19gMrwduaP7qecbkrf1dSxielNjihU0pCvHj/me1i+Z+34Xd3M
7qifdVnh/yGJXdqKXanMH5zuJnyn8kk6+97nL1A1KfZPGvkadLN934WqKWV4
A+SenO+RML2VXf02HVeHwcIuGFRcH5Nqy2exbT4CUC6sF07WJdYB34l0PMsK
/F501fQpsMaWdiYUHKmKmEE7Dfpx6hZByn3YBequvUk/W12JOwN0u9bIp724
DVm91l/wSgGOU6vaXvOZFpj7+RLLhqtK1+RpzNQU21lo+YC4rM6lc5/g3JDE
SYVHTDv1OFVm6KkNLe1wujsA8cuvqruOnt/m8xrmXqmeVezHNs4lW+PtDLaO
6WI371c27F2ROYLE6/ffnYhdO7DM5a3kVJq2qqw6S3N3c4r6p8Sb8uNGJQVc
2qbwuTrw7SrTCz99hnkiLa0DRpqQ4jWIY9BVkgPIlD9IOpWr5bRNdvyq9Ew5
AkiL4KwhVSTrnV6c5yrmIHsd/Ydr21O3XgAydWOfnZ3w+9R55e9nCp19QCnA
WU4TPEC+XxF6SrVbNRl5Vb0S83km9y37kbYybDzGNS6fa/4v3Nd4l9xFEEAC
hwm5vIl5x+lU3XxBAKJHRht69KxK5UkRRUqQeTr3wqTMMohSvZ/iP/79JIYT
p3jZ6DFcVzXUlQNTH4PD4KP/5Ms+cVL21YkaRSrkvUXfa4D94ZrBnrmVUgTa
nb8Taum22a1Gs2zm1NaBRCr7LDhRqX4c3zynedwVg2p0K69dvhg2tqr2Xt2H
bVMyIO3EMIszd18TzJWrJLrV2GCiKt8tP0pvX1mHYS/J88Ms8OaRfDAEICDw
vQ6KJ3CT4F+09+qhKnkBWzAIL3GBGlp6T/umb1O2S2dZ+BrNresefFHtW6VI
6quP2IsrotxYnKu5Ch0s6sXMgYTGGVOKlKb7DZbCg+/OJlekPgm52pN+IWuA
OjaLn/8HtcKwPDSFDOvRufu4uvADy9MIvKUMqyomHqiSBdJsWRZMduQ+sEWw
xTfMrSfHqxr7L6j2BSyNdgvsNG7kczZ/nru5Rw+kn64EL7YB3XRc//BGDNwt
zMMJKZUQqKwjeGKx+wNsBgbAp1UjHMWNCme1TOZ7An65h0W0Noo8lQ7HJ08K
cSSJT0XvJVerNIArVuwPiA6wzXqDN18Lq6RcuzmPu0760kqOZMoX3isXCjxL
aa30aYTbHtLWADV4+fDkeVIyKjpM/TN5vazv5YJj+vDEyvrBRbQ9KOusVKJN
xdkdXLj/FfOImOc/G1/NZuP5ee6mbL0qUB+ye3SPtOtICGOuLOBxe/KOrS/R
Rw8OeVKSGKGtq9IlQ2pVL4W2LHzjokkJHXg3zIFGFXyG8epSrhZdN5c2uDEu
bo2tsHrsYjdfrn5MMZ0AWmezEVVqUgyGvvf3hhe2JFoH3Rtl1k5r5cQ5xaRi
3CiiT5VxZpxcM4kvnPc1Eq7arxOHtOvTyPfIpOTZ0JVyU1YANsfCZvTZqqv6
2QaR6MDwSn4IrL1kAbvqaRwUObvOqz55EV0DODiy3NFXlS7nkj0KyNtZzB3f
UOAV7SOF8Ftd5uqeXsn1iZWUtyu/2R+FCyeKw1z/RvJOXDvl2MgI6nB7h29b
sVI7EwrOD7X8HWDF0lW7aZa6ay3vjq88mVw7DGzXsg9w8JeprAjek+scVpYZ
h9V2hCxpHB6EkcgGV1GS1ww5c5u3pec4e3RHunL9918DDWG+CJt/G0P7ZA96
2mtHwEgpFGZenSe5jADj1onI2MoTajxiZS7vJWTB5NpTVs0SPmlnb7jgtimg
R0NcvP+GbHgV2Nxh246QAylpKqfZvfL0CIKhtqPUPWCDKPxANnlih1o9W+jg
EgbFsc/f1u0h0uo45WjMk5e26fGa8K85kwqRW3bhZz8f27V/AedT3WNyzcOL
CWmG2ebY9YOBhRa7gMQ5nQUQGHi1lI2nbr3dQ6jXI+p0a+pmhkvw3FO3Ct8H
RgLd/CcMRGhHqU3kzK0jNkRnAZDa4YMmBXD42q7NV9rmL75r7KYLZyZi5NIb
3qNsBeH1rAZkZVBI0lg7Z+zdF5k5rc5vgf8zfWLwTO9+2YY1sirEsAbZXMuv
q3aNNO9Uha7E5jgcDLZTZT56/TFzjDB/bZbnr71kcoRUTu0TZPuxTUEDydCf
4WqSe2RMkxRKpyqJp1O180v9mrbulbufhL+lwpFcbq53IskMuXk8V3NfJUWF
Z+hu/02eG+ieXLfNKYvYqJ/QjZ68wQcXSry0Htc5pBk75/1y2XY/UmNgUuZr
lNDPKjO6uk3Fr8gyx/a8vkf2vPwqs4MiWmurqAmyOEN4552ELioS9EcjXg41
DUE0okJH6U0lZKz1u89q4kw2W40kaUqoWr8zKKMOLWzlak7wBqVSHE0CjAgZ
699XuSdjm8fc9C1UCpKQBvxFnl2z/1A5PfE1Sw+YR9cfU5iGmh06KAX2TtKI
6pPJdZHqo+oyy7yHaPrqzqLvJHruu+xQs0oDyqA4JGw1vovyzNN7OOZIHoP1
F1TzDh46HSYtGD7DzSsa3C88lYa1K5UqQ6/Y7Z7sb1EfrD0H6APApz1S61C6
KhSFSBwg5edbQzRG06sjs9pGlYWKswzMr7MxzMhki7+tr1ndLfOciuRpUnmW
vz8ObvtjLgt5AlMopjeZm7P5JGeamuXsso1fuNrWu/BBi1W725wSWkc3rxk9
KnOsjIU9za4idYERSj77metCB81bEwoOae/kn1vdYwISaivOveVhTd8iQrqP
uYWhHZnEyy/QoFfSN8lkeFdOP9vzs/+brWZ+DJxKYMnyTPJ29uswzF4MmQZF
G1mBWNZIEyDKAQRpAFjofs5a3PTZSnxEnCVcdcxefVWdOzbyGdozPUN/brkJ
+eKo07FPv2alQR7w7cBTau1ZVKO6/TJ3OO8eVMEutRI+sPHpFFBBmyd8xOFV
kMtif/7Xpvb9uIwsM7Ax7ECmx4m6dXZjYAEteB741HCQopBb5aLafzIX50g2
YYQoKDkIVZ1vI0Yt8wumXG3ItDV9Ts/Yo3kcyva3eeWK/a5oCGrVUe5AreYD
tp4mUADm6nCVfl9A7CxsqG7TD2wCV2d+1GKUj7BewZ+xyJR2V9m/8wrg748X
T8y9fu7j77kpcXKskfp6MAGII9ScrOskfwkngdjFKVdwEpTlCqhkIxub6Ait
0t6ezZX4PP4bR10sjIkx1Z87rWJoR9T+J2ZdPphoMm2RgX9eObGTwyK5iXLC
ZJNtCapUzJRlpQX+pnrqbMZJYxtLjIon6c+K0kn4Tc8haOQ6J4wosvHDO1pS
Wqo8U/kJ7QB1yd5oLu9w1ssoi7eyeqjYbChejKlAeOw61MjPk1KN2Xz1eXMG
3CXl2UcgSWjy0GTw4v2vg63q7Lrpb3VcvP9N7oTldbfgnkL6/UiUUCECQj5B
DglJl8NOsq57EZG/7BLTwIXWdFhGKudNPDdJTNXV5TvN5f1pNQ3kw5Avko+5
+vB79psH0JtqBTEaVR7jVbDzdO7Oa4WfWfezJsHeQH4TxdNqzm9QfpA7ZiUi
x7QUcwnLU6qI/ETHrQe4qYcsOGS0H74OeYZ+97+d//ArGp7JsoY33rWdxc//
Y0wFt2X5mLqrVPDy6uSGWG/K02T5gYW98piseiZf8vIH1F5TnpBV/JiCzT66
agikxI+rrPN6p28+71cEg9wLG37qzfaYokOzD2PV4LQEzlhMKHTsInmqXBSr
X+aPoV+rVJfqHKXzPDzKsS3K+lQBd2P+SWU+NHqlqEGKJ9alUmjiq/Tkr/4B
uuxWo/cAKIZhwxYJ2/IPSvtrsRFmO2sg8wVpe/uuE9Mx98kPeZe4k5qOtGLU
u/3v2INzLbL6VS5vfaw4UCW6DerJUeVLMmy4cnwKZViKsMkKkE9TSNGe7J7Q
H9Eq3p4GTTNiN9mhkV2t2Ws7NWfiUwR5KOcPO0zJmalbLwOKaeOv8kz7o3oa
VKBj5xx42tlH85/+lNYbA2OacZTyUJ9BewVFOmqlPwNy/DDrB+R66bRH5N/n
npYMBeSMWX0hD4k+1Yr1/Jw9R/oQUlwJMfva7kj0RmvL/ZyLSJtaIBE607df
5zinMEmUMIYzTxv2XC+oAuZasmTiuj6lmRoQUQt/+jlMu3T4RwWB8eIphbVj
ZxAMt4z36s5oX+P15qcVfQrnP/l3eVAcHKd97uqxXiqrEW2JTr6uR3l4I6Bv
7KQpifVpoGKbmC5te17+oXn9cZuTY+jVEZNPY1vca5qbZYxNPxf+DQc44zee
DGo4xFBIBSeLeDAzfyriqIts0X56CkY3A52pPm5eCz0CZPbXMg0K9ggkTWEK
z80kv8yUL0MwlTSa2LWzOnMk68B1y58x+NYRh/wFmE1XHw0rq7v6Hfr6yPtJ
9eR1gOzafoWEy4ahcjKfHacs9jtnbD/y6TRh3XJAWBtZowTGD+ROOR7JlH8G
memoHcLPljWL2uZafopGzJd8I8wvVffAvrcmoVKyodk/yje0rLN6yp63/OCE
+sTKK+oHf7ClOzxOJFn7aW17yHaPGme/YCjl7Q9D6CpUXazG0pWqbtB6en9E
MRURxcy8grKIx/RUj/cDi1XSj2dzZJ3/fY9dcs+ytMflvge0pJNzfbn1V6rm
n6jsyXs+VM/EKtLqZsjaHjG5l7co+yNWxqVeU7bKO2k3ohuOSKma9Veqp/Aq
f7nFbl1pdpzuLp7AX3D4HCcXq0+pw1AAUfZlf6av7ev0XlWyDiq/cjuMYhzY
SRSzzzxNIzIURepQyQ0xH7sEEvF1vWzLw7VTJ1dOMYykx1h5lqFHpfld4bFO
7n7OnI3RlshnjSN7VymiqW+a3iwjSzvJk8o6xuFkkuJJcUSvrV9a2dlr4yz5
a51ae8Fx1wmdt0OvhgMCoO4VH4+ZboeL5MfufoKB5IZ13K5ZnHVt9cUEzfIu
qoIQMkeKkdRYV/7wnX8DWb895Uj/DCUyeKCAM3D+3pcqkBv6QWoTCb1lOYUh
YnHrhbaQf+bJEcvJllXj8vDI16nWFZJiq5Tx+GztF7qzjeHMuUWB962xG8H5
sy6PiUm2XIYEI/Q4NfXiqS7Xn/TEx3O1wwuxQS2fTFRj6M5l/GaPz3DXeVov
5OCK4pYZCKWiJX1J1sO0JuTtVful249znC1yToJ/qLjRJ/dCP+FAJ77/ZgR6
yq8p3EVOeCXypk070c2uz5Q85WMiLC+X6nUrwdp+QzOjH2wSuDORORjWVAEW
/V3MLmwe6bUyfsGzsC1uW2+20DJPHgF6SWoZTokkThYakj4Q/wy1wY++lr9T
2Q98xruYuy9uk+km/xxkl5RvyWXMIaYkvGO67xNe383TT9tksOBkVK1Z2F+S
1zwSRRcufEinxDNUqlCz6G9YUcnTnVGOIKnaTMql3prGd+olUyUgPSE3/alB
PFxVEOT/k1sUrybN1Pwky2vB+L6pHAHyxbaie/BeVGeSnXgibvshsv/Eqk1O
vOR+5ct1TXRK3ByEnfGOYbKGlzavaBSTG9f3gNOFVVyhvfxmQND5PfSBndjy
mzp52WDaj/b0EtzD5OMGlVzG10rt8MnVw4iueEfqd8AvdLEUwd0aWBmJrPTy
bsKC+xuoDqs5PNe1U6A7TX0SbthJ9YXiC2cXavrWEfqVs+tXHhL51UAHeHnv
/Idfse/QfrJ3nFvdpe2qvavnRLtT07ZBwU1q2NAEXk8Qno6bf5OLmLD+s+c6
TBSHVOFpm+B0VEXgTqpB0kyjI35DSU9SEom8w91DzDUhChIAKEEzCq2yVvT6
AHLGzn4W6/RC4puVIHch9pnxFHVvyjkAb+Y5FCc3gl14i7RNeX0k6Fx79J+V
3dNTVmEx6MuVMf2JSwegs9T396e4yyVPEXYkG5q6OaBSFaHmNGMcWRXVVQLl
RSbUL1GuiREAfhaLWzrRVf6i4YdD7JTXHwSgFIsS6kaCqDENvonpyORq0AD0
82/VhFiX8JXmGsOKTwxvMNVG/rz3k7swFWr99eyVR8RR8vlSKR9BT1MDUk9Z
iBNaLS/fcvtfyZOj5Ln2Jjf4LAgtowFtxGfusG1CjB7nK4pUl7T6u1QXlCbw
zhfpFOdkwKfFtoBsIeYqGhDQDUrzzF9Q6uq5qvODKW0MoziQvVscDOkkIrq4
9OVTEtMbKaKy16UH35bd3tCxQwNGl1KRwQF5BX426bK+93I2Ges1bTl8K7c4
hmC7QbwxK3q5XmZkvr8Qa9NQnqfZhYQ/+64uqsGrOtoWd6HWj99a9cJeG5j+
6Mz/WiLB1M0XlAJE52NxU9VAIW0n18kuDjwv7n+t9Sa0LmRpXLwPFz7Zlldh
8AC9y6TKKiukVAV6bdP82WeZJs/pLE9ME13mYxb15LnLFpP74IOQFA9ETCBf
17OTozS/8JPYARdxPU6NTGvTnPPOqnX1VlKQt2pYROWuhvbIgi+N/GWOFuoE
02Z+g3pZWkl00U+OTn1KhNkfUndGi/ravYxdIu+/4PjSYIKOA/L7DL0BdP8O
Mtdb8AGIgLajVGE+dJR5V75o5s5rPiimNpyzMGvk7JR/BIQD6ls/p/VYYgH4
HoCL0w1jDPNFSpwALi32Uks4/tPG6ChUAYzcVhpF4CIBhn9Bu17+/vhKKa7U
c93PzHO+g1pVzaXNilqdw3K4gyy0mks71XMVrxj1z7JW+6+uU/CI+BiKWMq6
4TqDAAeAAgTC7A4ubRInoyHu21hXdzL/UfsQ6m+eIpyZvHOgrrVeCAx3LDCi
sH44BiWBz9M1ZxNLKYhT9xkKgUPKjQ4Kb5KYoA+b9bc9YtdX7p7DwpxUfkW+
dGLlqaxCn4V3uDOA57V6Ku+riCRqdolppIUjjGn0YNFR7dBdJ/SA2vv9CcGP
FTWUawyQMY8ZOpEFdFRnNSYrZIhdJN6Zw0Gl+FNEtwtZKyQryna7+NFbTidj
LOhlPlQklNj2+Eqcj+h/J3e6UhaPjFwngcGFQbLknCUKBadh9iMqkSnt2aKr
I73mit+xvv/heVW+p2HnMZtoJb0Av1oullUVe4YXt1FmrzyVK8ZwG2xy6NMD
n7V2VH19bm5B1lCLWCLJWUNOTAeORTkqlv1JTswsSrmPvuYBZ8pQrm5oc0zm
wT//SdRY9pwo1flOWd2vuC4JHJN9K9tVViDxpHwHQ4r2ke+gwYX1jyguijL0
3pu276rusSXkme/GVndFPaPWoyyGF0rv7v+WhT2ovFc2r+U0OXvl8+jgvksR
MyBEb4SMMiiQa/YucYfQBC3YkE0PAlCinKrKytFH3HfBirl5ZNIrzDh5fWaU
SdgF9b5sylBTB2Mgv9iGDXn5JZXrCWrFUiUEBDvYoOfvfknFAqnDIqayk5mK
rBWokXKfunm55xLIRcgHmALQKa1FtqNa8Z4SBPHwDEgvL3AQfNvgTrI9mqsV
+e5PQtGE+VTGK+eZa6vm7+3294yrW2haq0oHqLo4bFD45TOK31ALZFBFT1nj
Di8knRHitaUKDj0fTLHnWpIbyrJTfsa37Bmoju7m+Q/fpDqmhNN2vaZOqYhM
9u0kGq2Y9lJugFQgUtHYFT5WqZISwFxJwEpmHpbkV5F4h6JLVeTkjxS3YAoR
WE4pmvkdE7oGCxtz0Qr54v2vB+YyxaxhNRnnqFx9yraqWfQeHeX3RZo3h/6i
FG05NqCSNZyiRB9lqoxRC5q9JpFyY/KXE2tQ16Ry6iTKgsdWyb4/H3ploDrJ
g+KuM4iV3CkTeHnU8h3cuzxKqnd4ryw12TJUkZCFMbbymP4FGF5r5cm4976e
0dAxS2NJxbVRUIfhwEzm5UuogJVy/aTnwDdBARXuw4EFKXmf12LEWfj0p9KT
K02nfG7lujanJKsYUb1C+R9biAWzFoXMk5+WqiRXxXblkxa5A4KCotcAtLMk
d1TFJLUXirtbbrS8u5e2JaSm3X3l99/Jj8h5Rao97Fe1/8yRgmynca24KfaF
Toeed7byoKUPHwNsgV5KEI2p1d1otDXCLEHr8+QGwcZKuqbkT8/3rsc0wq6a
ou1Prj6nfCtxINY1aGjE3h5ER/ywqNSjnC52yUuLFcC7Y0qzopsHKy2Q6zSp
nLz5nFw7LjEeQdifxuQs7Tuc9JlLUJt7o19VlmUVUWOxsyqe/U9UjnpGsSdP
XNugSi7K76+oyTjzheBRIPXIknqyR8U2MLu1ZBy9EfDMnPpLmBxb3jVA5pC6
vwyrZEFwUlveo2QlGgRzyhXvqDzJKqoIap8fl9U5zLtDx9bp4ljo/FNetHxW
7Gk9zd0322IdFMOuqWKY/nztyu+/5ZuTlzUS3RgahrApMqxtOD0440HJGLlz
6iz6yBiJDcszTFU51T5OYaik8JDpeHdMrslmTUi4/5YjB4O5k6pJsTCXJXj1
4fcc8csikB/Q3tmmLFz5b/7ihQ+/mFh9YuaekoqNKf+PzUi4457oIm4GPVb0
7Z5rHQPaJq81r1byLouf1DK6JvbMBCbGWTXissAK5DNm+pblqCbpfKt5/bFi
7BBrqtnEzMDVVHiTQgvVDm7Ui2Z1PIoCcRcG8kvblXX5O3J3k2tPCf3izI48
pGZkhcKcQDWWVAkx8EdcRVFCuOS5VL+qd9jq+h+X//CdDao5XKPE1JBOV+VF
MTazCECDR2cWzIzA6Z0PSlTUYVPxuQ0uMN2/kuF+yavGQfLg7YBSr2Wny29x
0YfrHcs8fhlvrJIsuZT7igGTm7yj5JXo9CRFLiRPjebdCvrHnAsWZopbrvzk
bs5f2fYPIQuSqcmDvZM+c8zfOmx3xXqZqDj+PXsi/SoWL3vhYtBG7hm5tqcg
h895gKnY3xfWg+YdqLDtM4LixldkJcF4XD6ZEHZFD31rM5n+3BHd6yIzx5zS
08SwOXAFlRcZfIDh+IFVI2XRtRhDGnOf/sSA1YQY2RPC4QPTGocvVD+fBYVj
uAC0BuJMUb4FmCnt2DHOcx4Y1mg1Orltf/vZrO82DC22Su8cndKrjybXDuUX
JxQNxtgiT3Xhs58pE1F5AnaMLj8O/UrucDqgFCbGdn1vrLzD+6wWZ6ojq8zc
m12H3fUw/smyZJSXd1+Rkc6JAQVN+7PnevnBW2KgYEUkBU3UU603FaZKpgXz
cHzbSbmIEz2U8pW1h4cw1+I4YVBJTbbqUcxez2u0taeck6T9JmvWzoW2c5U6
H8l3OFfwymJ2yefCoxZm//gXOfjV0UNXJPkwLCiJVZIjZ0hHADEfUx0p0+Xs
0152i7kRN1qwM/v0Z0pOzn7yo17/b+RiL95/a+efLP4lRXirtMNTBq9cp4XQ
J2gTZrhcO6LtaoiHY7cLaklTMWFh7OUcOJ+hEMV0UR9JoPSh7tjVoLuvgYea
tarsqb11CUVsl4Iw8fl/yHsdOoZv36d4oKMiYCtbWhU9U9TO/ojqPtuq9HNb
X8t6RVNXL7adrV6VzGu1u/hc4kVNgGCS6YI5PNCviN8eiIbEHN0xnPNhq3r2
prxfjl+NLGfj15nbr0LO5HwZdQL/HasE9OBLOZ38bvOaV6UKvXY9pzcJVUU/
NPSxyvXDMewv69eV6h83IznD4QUws2oWzM1bKJ185taRfD/rLG3VhslrF3Ov
Ik4oZK+MF0+MvTTocMi+i+ZZEyly+dy6Otd2HcdSLkJeL+8MrteLWxIxKCc7
XoTSWdVtWqitlaYtoUMOkTAZ5R/seRMYZN2z6q6WdtP2UlRXIv4zzoXHVw9Z
dZdyQbv2GteG6TWEv6V7lpzGARNhuT7OUHPr7r9Sivj1HCXGfeS7nPw5cIqv
7zEp5KypUvPglFKR1xnT9VaesoMhwZT7gZs5nOLAbc8HjIoF5zZV9+pqyE8+
hsuuzr8UBf7NlMSpFA0abfG0iKx4FRmDXKhy8FqcPkrc1mZia2hhi0/ZxINU
MSO4+RpxABovt17QMaFtRt8R7lLqtk1DOtbHYMvdYubJgB/2w8d/oUFEeDrg
pixtVux/zcu2+Y4Z6GPdr7PahT/9DIcZVRpMV+W56b+w/72uayd5Y8CufPhF
Z1yj8g3sBozGnlPbO/XuUd7J1uE+OzV9wRzLnosW+uvGcuzgq8uY1+V1fFpF
erYnVNsJtInYcJm6eSRbF5FLdd+j6lyHIpl25RQIVwgk/0JZfxzOmTFP6OQZ
qgy0P/suAHc6T1y5YvZP5CXDWcyqaGoeHVO5o/9FTACfsjwfyZPlWB7RxscJ
eyYlHKHbo7XLmISpgigoDq3q2V9Z28bm/H6KwO6nrRea1LGfzXQRnOQs4/wF
lelGE8YmL/iVrPHP3XkdkLvq8PaKREiyW0d03sMnL2+QOuVpzyCHW7dT7V9g
2RpltuSB6EC+dXZunT5QCkTZlo1uKrGyUZBH8hiPXuQ2A/Wza/Iy0jNy2MQ+
qHVqKTNETNnGX1Vj/1CuRBsV5uDXzSSdoPVCUzGgNqXOLU/WO8avb+X313HW
eTqN0Dx99akseo0fralbL0gPJKDjmN1+6cG3zZzRmrgYHTEWhRwo50ZTVnQ4
c312GIZ/y3NNxT/vEPIkvwA/S2UAjt1I+ZGKBr408BIxHVItsVE6Ez28zI8g
gNq1V24svm7uIXnZzCnZJkDQvnXUdn9cgzmSxqsWu91c47u6cA8w8MSVZXu6
+hMZ45LCj1cwcZ2gTvXP2Eb2FnUrc/wFO/SXHrw1sk1HPGdkQ9inyLmyLykj
dUNHM/56qlriGipxRcKVs5CTl1fiabvo1FDvmWCwpVjMp8C9VfZCTzFG5WNL
HqtRZu85lQ54Fb+hbwdFDtQIDXkPGxg4QJc2qSt0XhsVYIBr+zy2IkLVL9th
YvWZYTml9CyhgH+pW+sRG251d8r36DD1WazBGpcffEuXqaLdXXaaaqy34/Nx
/YVuVkvsDuEW1Y91/tOfXDfvlJz44zcOCOEsQvm4SW1x7YkFdmPA0xC/Orry
RP6N0j9kasGCdPbRzK0X8gPy7IA+VCM1GFyqq5jEZBYIPCvotJW6m6lPdTKs
BHiwyONSQXtU/AmNpN2C9TFkz0hO+hIcSo2Pg1iDvklevvWS1JV6Xc7AEurE
8uReKgYSVA4PRyWCyFPlOWJOTNqbzU9Vj/TwyDr7M7bi0m50TDxlekVEIU3e
PFSvaHDOeQUMeNXn6/vAUyqYmcMJrRk3mY9Anvf6Xszh0GyU3S3vCEfCgzBd
CKc4BPBWDqR6SP3fUbq9L9CV4blVgL3KKd00zcYmhGuBeZIrPXf3S5sMdqkG
yzqDLrEFdHBIeXieC3pXX2rdQs9cp9no9k/neDqsFR3Q2zgT50ngt9aocXLp
o7cX7n+ZVJ48XkRif65F0KA2D56Zxi6288l+kAxjt8TH9eh/j3heMceZygzl
3bxDaJ0JQkvlj+Te0jONsoZQZ69GV1FFQO61KLkm1JBH36v2cg+9PSk4xlce
y1oYiS9Q1iIa3RrKO6vOkXfREZqHwjcHHNj+2nzh/gMebh462vS7Jx02dGPZ
yZpT3xnqhxexCOSdnSJzUs4KeafoB2l8Njkjcjunb744pl/HK8OEsnKm0YYi
df2fWlP9fM4rSiVNmRjr7M9ddPg1hV252wv33sRVXZcgSt0HusLGs/Z03ieg
ArUENvlQI9ABeTYPBhgnJTp/gZ0UM6pwKKw9p2614ZM0fW1FtnMN59gyHP0k
/TWf4dN5bc7uCVHIbP9yipWrhCrdKWU+veS9yE+QWUJN4yBafeOxzf8aspqY
ERPvCxC7Me8cHqZPQSYhjyBaT/6ZjAwkcDCJCzMk99Y6ObvPuA4er95WZbq6
BZodtJeUP+XcZHj0ZAqz6JdQSzlVVSHjYibOGRnBA1Jp40DSUmIUMkDAY0ds
f49yd4O+bhHbVoM68I8TwYBpNg2XOn4Irqg7lKSRgjus0riq23d13ZyilO7S
MiU34miSarRXcvOdUl+T+JPMfLtWolE0s1gKDeEMzicPTtE4ePZSn8z3ZCpz
pk4lV7YoplNZj7ftbcg1Zej039gd5OJX6gwPRMJANPEl92Lq5gsCF+TFwqli
KWjFywukRRLfRO6UjCOqkhd4ShkB/06jS6lBYCqIFP9r6m1AC1ktjsJ9tHEV
yjlFb+4pmSvMJa+SUA3cfhH4T/7M6HBvlGe6XTVm1pppMYOeuvUyVOz6Ob1N
lVPjr5KSTHkMWeGl2bxDlXShdTe3TtUL6hJzTOJ/muuIKG/o4qjERnVu6zUa
0X3qzxV+XL//v3LVctwlawD6QEq8k78c0uDKCSq1sUau7bGMvKIOtRIr5RdZ
Y6M9WzyR10KqaWRk+Z5EQCQzx5Vj8vID+EfKB9HiSu6R1lfWI3JuXX9vpycP
dw7HQx+HnHRJ+9i+iDXCredsSVbjJtqQq07lsCYnNj0LVSc3YLyhEDWgPAS5
zFSPQFmD04FjzujyuihpRlCrRFbKrOpKy2uJO2iTeUyh3dCxlcdUtiqYSRM+
ZCxNV0PUTB5B/h+5CCMKRdqHVfLXOnC/u/xZulIoGMwDgxy6E4Yfk5udgU/k
Uew9fpGvwq7c2Ro02JtHfL5x3lCu/tyzb3AWbpN5NjZDfoIrUmk6FekJ3ays
R2BdH8C2Y8EqDxXYh1mMCdtqaMtch/K5mHeNY6fBtIlQGwyrzzAWv+IkMl0Y
68Tyu9KMLJyxXkOk/LZKc3M6eHANWHdDnhYxkiw6oSKg23Rq7Wgs8gV9Pxg4
I3JmosdgJ08qug5bXx/KVX/M+AVAzEYWaGnK66twl/t35X5JWANrME2ImqSd
VOAcXjAfOEU36NVQB7gG8b75LblhFCiLrdIZP7WywwzzfyHJ3I+Tr94cNytl
L2leI4rbG8h7Sn4i5tFiA141LyoglWf+PVKqMBqz6IQItip8y4Fpq3324V/6
M6VIcC6mFclLA146sEkEk7+B+eLd0L/+ZwbGpg6LaeDMdJrglsCJ1hSCSTUl
c9l8hcZy5BmfVypf4miZ2nhbjyzUdLdk5WeR0kXCOmbMyo4nFc8it1M8rJrS
lbwwrVNoqzyaYIDiSVkM/c33x5R9QPQvQYcm9A0otHapGEDo3iERLlatQKEB
kzX3Mdy4Y2XRVmc7BGSX9egNhCNfJKcK36DUTKzCC0otXQMMXhF0eFGppycL
t5TRQaVYBTX1SAAr5BGtx1AIRE2b06iMJOVa3qOdiFzHWeW2UXxTLls+Qx5N
5OA1JAizL8MkjM2ONPMhQTmPCbnDXoSGnfDvsLqbe+nBW0Wq7eSmkzYVDvz1
Y95/UkHNO56G8ahBglUNq5vL+83yfu+xk74JdMQuFfhosxU75L0X7oOawKVK
VdVAmFpo8e9D5B5SUo29vbMgQr6ojmGNPJ5ox6xlqJZT5FGOXkeI5WFNlWSK
B47dOBi7kfxXe6XmJHqcRzXkUjV3mlQ8uWXOUA2Xt8/UHJpa1/fGVuKpfvFe
6ZSrk2EqH1j24gAPBJ3O5b2Z4AzbAZGtG5V9cT6T5jImpxJr2fPhgRQcnWU3
ya/zihiTZBWgKTy/EdVD/fkLTwp5AGarBdG1JaQNMx++ls0cfgesCdDPAipD
tposZZsk9EnqgwmTGvoyYSYyWN451aknowNNc2n7YjyV6IYl964M443zQSHD
c1O6CGrm4JkZAg0n/Hlga4baRXrf6FVrvxbXXTdKS6Etiqj4XWfGwOpebmws
xOM6eKy3MWhRFjU0YXzNxPWs6IlNVhk8yyR+cM0z4oR4Di+MxeM9xDpl2SFX
Ukptdb5FD0x5mezBywsfihoRYGM6x+yySggj7sjSTinbdviYmjFC2rP4buO0
DkTfeJUh2Ji6GbA8Pp96fxiIRlAtdKHvyJO9qHWkybiP6XEJQjTUHuFrIaHZ
VIxqEsIkiKDQmW9diDzLM/2Zy4FisloE6LJdofYaGGdSxvyYzN4zW3yF7n0A
XR7yL9ZPLaISnGzqSwiMAdHDDMF24qTy4E0CjbEluih1s2QrFNNOuRkKwyeU
vFfBufz7b5lJTqw+k5ggi1T2pzxE8F2IClWFoF4dE24D6Bx9M+XO8ZqWd2kR
HnaZnbMF1fB0RG9caIf7LOmZSc4pTypmICWkQ4986tjKAfWJR5T+UdAWYR6H
pMVAWqJJHcDIyizc+BXyQNJzcP3dPjanTDWckgvc6FqAoEfJ33SZQz3328gc
Ftv6cZ6TziuwK+phv5G+CUV01SuC9cf+SciC1Nk0oSaFZpUv+Hyo3GPAe2r5
KvPtmc3z6Z6e3jwrNkarMDd48I3pwmDuwc+2DMuiko1T5D9Yo9kqPhYxz1wh
nAOKIslyFqc55/tysoyB3pFKLK/MbHIFpRn5SMIHuK705N4gmwe9/eio7KcT
mPGspTOik1YQXNCV+72hfNNNPoHm9d0SguB4V9NQ9W3+bSBTu+1kJ2tUpabz
2DpOyfKPg9NeN6X9ZGWY/foohvn7NmPooQsnigQVuplW0jIRqFEhszdHsl9+
APwH/VUVP4A/xvivOJG0vvMKUF6h4fh9t1SVvDNWu9eS8U/D41JdRfZurooG
zo3muiMq2nLu7isEa7qS3XyhzzFp1tVztuS8Anv/sR2pahSge9HjsW60mgLS
7E9idVIHVkU7Q8rrtyfsY0o3Y8qwYnOhzqXQHrk4zCgqu6adUhWpzUIrOsvC
q55YQHmbdEqQxXwCaHC++asP/yy7mAHIkPEcP58P1+tP8B7VyN5ghqV9oj12
uYagnsQdfUqyXA67Lv/+GyIxqVc0rFld9U4/twbuQ+al0qW6XFsJM6TjvbEi
dA49Xs2/H4eTavCop2q2uh7tmN9EnRKgRVTalfUQdQh28454p0RBefw80iuv
oqGzwA1W6Je0wjA83CmcKJlKGy3Iz915zYAL1gdRhtYZ1Tl/1MHg+kA9YROC
UjTiuMv+fMbeWxH8pyEhx2b6UOxAO7fudpZb5grEeUNlnVfjZmKynWbZ8NhW
C3HyAgFQBx8oRFOHCW0Y2gcgiOU9eXLT5gNc4YZaQg2o7kvGz3QYyY7EMOD7
tuNRRcD2ZelXcq+CtmUQc4+dVuv4lrKM0hqir0Fg4119tLSO7JkERnlu2vlD
p6FmsjEMJuGTr378fXgycZ9DrDvdve89M1NK/+52LN4iR3+IRNf3LgfWeFu2
6abzNWanOm19inkzV3HebWSNLttFXWE3BznZufqoudQqM9bvYjo9sfpEQpR+
9mmrlA0BLAVgIHdEUU/WYHwGftrl3xR3rVwP9bGJQOLz62OnUM5bdlOooRHY
/1cfMdHhKSenEIdVRfQfKiJcrl8Ck+UcLm//tfUuIeOjoxDYEWnkpYSlju9k
gwSIjc1qClLp5gJr0GZacMAh7N0wUy737yRSRF60/IdVE/nMtjt3FIuqgJKm
A+RZPe2pW71RlBhYFbpTc3/8kbn9+3YOFnFSXkTTMTLIILX1EVCycg2yNFUq
81FCDmlWv3X2CtCIVAwZU+0ajoZRN1crCjrPs4ZyrtZJBda6BdUOVQ7gbcpm
AHA3sTaSG+QQP8Vc12mvExNsPuf2pJ3/VBZf+HuYHqAXAZYrKM2RaeGmbw0Y
A8DU9AlRQcMqYRfzUl1KEJF79L/5BNwMqpNtF1kBNhP2cdE76o3iPPtCXjHE
nu8FvYoSH4P61rw6a3IUmaJcWFs5DpIrRd5XO0auyzpxwyoVYwUf8w/H6NXO
1pZaXz7O2c1yD7DeNlZ7Ke/yGi/uRH5X8zLQuFiY07aX6gAxJO7LS5cfuHjv
6wGdDYe8mMhfuSh5pnJMUxRNLcR3ZCcGjxi07h6r99ohPw4u6/diF6nslHAG
Wa76lKG0Ck6jP3C0jjRdJTwN8tXWF+WTN/gAhKC0ALignbFUSTg+ZOcw+hc7
NKC3viXGgTaLcTo69QG1Z+E2YZbJn3MzotoluAc94pxBEow0c861Pnsl10BN
WBzIaUOh5kAcp0hr3OE98mgkOEhJJemFPEu5IWp6nNUr6IhXHlAY7LxL9JSH
zF4/Xs3ynuxh6xi4mVMfKSMcU0uOMKdtWNms5B4MpGy8B1FO1vQDyKhLEqtC
L1+yHTJz57Veb/fQ0jalQ4ZgzgwotXzfmKZ+1RP9UySlmHyavPm5T3+S3Bx2
sKuH5B+mrpibjXcxwzinhF/u2UEEyB8q11oPESRyW2i+RJ6YOs5ax8dXWbVL
SikD53hB1Uo4Hc27THZHx9bqxAOeVJGUIdffchHsA7lp7gTyyclo01btc0lU
iOdVD6MQsOhXo/25DSqcqFFYrsPpooFTDkNtP6BDD1rZGx7KdSDrVzig02Po
3J2XcqrxCWFQpOXz72RRWi7uXR783GRwfiPnR0Xv8MwPbOrWC3owc5qJupnN
Fdqrxbq5xlOxP8ptWS66I7mFZQ+/spgRtNwWN6F9ChPuZwQfXPnDd2odtm8A
n2j7R7m59Zm7r4NWGzdQdoaoGI7qaR+paKxegUeJupOursl/ixGSUyNmXHkf
V3WUWoQQyYKTCGTT6YZlKvIcL9z7KkxWuC8AD9JnwjFXEfvqpjGZ5ziq0oBU
DETD6ZsvSrHWTfFPXbj3NRtVYIRd2+blM5WSeE2eldTD1XP7OrjF994E9Zxb
EIim7pael48o8R363/feUMkyvP1+CLKFt8/rZ1SiItUAvTKWIIWvWeHWRJFc
6Fl7pPOC6G5ZBVfoNaCaAtzS4Zwje4Yaj/I42J+Ux8t2E9+6Pf8qPaq70KOS
0B21aEuOP6xTrWYtMb1xVl99ZLO2Xrl2osbkDq6ozuOQDnN4Jho6U1bDD6qn
FETXaR5UqpPTW7AZZRHdh2KXuOxL6qqmLvL2GZjYFmd3urLG6rJzSQHdr8nC
uhR0HTTPzvEDxMUkhRGqioThLiR6ftSfO23zRRPRVF33V6EVohJVhLPxfJm5
/YrakIV2veS35HFOwmj8NeVwBzMXFqAUhpZ2qBSJMiVg/RsOiVFCbfh97jKC
huUefPMBwxh/tzzxHQW4KGWrPcBgFU8opKQMo3UOCkaWtkeXuZu7mKnIkyOI
ZUI7ybKAK3Une3IFOdXMOygyQh1PN7uqQrMxAN4++ZEYvXCdbhaYfJPke+Hu
MLdB9WylyfwdHBex2PYs66PAAW3wrWsVyulrqrAhmnX75VltXMo3nFVdEK76
dPY4R5pOyoIDOLjQ6tCeLK1V7Sf6WJ0oVnGX+B55SE0lrMlTZRLvOnOQyNbO
HDM6WxWyuUj7MPQVG8XHPAGPRnR5Z5/dOdNiQ/7CqVjlFqMSaejFW+Tw1WGN
yuA8PBFXeT1OfxkrUFZWWqGuy5z2XxFErJ9ro+KxEtGfEI3Io4jPnvkln3dl
lKnn1TLPSLuSPI/pGkF3PejfBJMDnG+vsgln5l7hXYlcDVTPHXzpmmfd+vyp
9erocGtUi2R5d02VGDGLdOAYebXOXwbZyoX7b4pMyqNyXljnicmIA0O9cPd1
01UpSv3XTiz3xe0cwywnxHDuhOnyu84xEGuQljdvPK7WGGX/PdX8jstel5f8
v+hCubAh21NSJkaeUg9k829qR7gZdZx876yEfPNK3b5nnCv1s4OVVqzXukH+
PUvOoP6f83Hvs9OPn0WMzyVl+3AnjCxttufszBfDGlAYPrvu82rvRpDVBVWa
WYlu9r+kEN/WTWTPSx1+t23i28N5KPcZ0e1FmM0Cxk8fbcWObVpcrak0Dvxm
UCOsHVoEaJWYspowfGV/7rPuWDR+0Kh6Y59RTyo9WZnsF8ofZQ3JHrv04C27
RUz5LkZikPxK5QQmKL3IE7yg1sRWh/q4M3bjQP4qMeW9X5OvWkrOXcmzqs6e
YGCWXt+LM9J3pC6XvSVfyed5WYW22IlEfnL7BbXrUAypbymvngyX/iAhsWFo
IL+Lc25MfjUWDAudx8tW5STCoigq1gUkU9HF+rEsEuvHcdhwwu5M6YdvcSuL
wAqwoqRydHqSPAdwGubad0Q1TmrZaFlWxb7bH4LJ2EsMbaCfwJNIfu2kNlP6
I+El/L7rPNXV9GVLQ9k2Dbq90oKtzGkVHAufI5u9pIOrSLYsO/RoQ4/Z91hk
UCDb9Gi6rfPGpL9fPRIkrYIeL/cRIp/mASTZhPyBkqc83vj5flbr9VrlXJAP
uXj/LT+3O1cvIBFtbAV0x5Sz8AxK7oSy0cay2bc82eeU80ACiMyU2kfk+aIf
GzuxmJIOzcMmgag4rlO5Oute+F59DRn0HRjDDM5tzEV8d+f4yuPJNZg7S0QI
88QH35bOUFXYR7utqeBNO+Nc3DsD/Xm4lD1T01iIDgTsWOwByA9M3TySi7WO
HTLKqqygN8fDmLogk/mSl4OLxWc4CyRymAX/1C3MVUhAQuP79qvhGCBSDcJN
QMUrUwh0GtC1yZvPwxwF0+KAvuvK0blqyggL+FhR9FA1C+kmpkXBmQpUmCXz
hmhQFZkathS1srr8DJENE8VTiS9MFGRjqt7ABurmqBczpIEpnCz5nIqdNfkG
eCphN1JxrnPmzitAXuVhLKapJJtUIUaoZsQmsSCzH/+Qu1j6eHAGPu1LaCtw
CjqlxpZGk5L9P6Yezc3lnYQuBRpvadvkOuVUkKgUd0X7PpfM3O3zerbP96k3
z592mPSQy9qAim598lSMnwNgqDpL28RN3qLFhVrAi2/8VZ9YRMAm9arYnd8M
3QfGY3kIZ68CtgwMomKDsl1/H2xmi4tnxpSAuaI2aDygKFeG/psS5uUWgFW5
krQ5PQK3NLHmtD50dsonbE0lLTeV3b+hmA3NNAhRT/WAy9wanA9iHKB7sD94
i2IT/VqKS/O2JLhseGmHjkKoCRYgXStRdVwt/2hdhvWgAAf2xvGJ+dTbZa51
+FhANRWsyREVej9Wg6801WcbwNZtH2tWy/IH1HSV2C12CSaio5OLnd224lfU
kpWzvpIDqMfNsrcEwtgff0BZKoF6YcswL46FeibvAFApg1td6gNaSdJIL9dk
bJt2yxXI4mHSlvMNHL4Kpx8nEUQNhxXQr7ZFaY97hCb1FpUrgP9rqOD/N8zA
MC0kWlJ/9r+MrTy1bgy5U/LRzDJ4SLCLoA59kjc+JzyFown1M3pSBCrMs2Ei
3v5OHKhROZpiwun6XRbeleduaiP1RG4/TlegICardFBVq6lijhoCUWsnxvyE
7atzERBVKFFL/qEzntJahhlXp8F+wdzHP1AhTzaNnA6xJrdsJ1bMuImmzfsU
aP7EVnPJaynrLdaVc/6oef2xbBAO8dPZE1E3Erfkn+Thk6Ae8/M6RIAWMFMh
lCnWfPVhIFa3ueNmP/lRTq+OgHIu9cQ9FkRqxXUiNkIsWMh5VN1gY6OY/4Ki
t0qGBr4gIUBMHy1lrvmODp5XEociPyqbXFfiI9qUF4gHTH92KlN1Fb/ctN5g
7Dx0SkAlj0iO4Rgjdkrf7LE3UKfOFXpdvlTTCAFO04gaFAUUHpP6+NZeRmxv
d47rk+yDum/y1swbsyevgHnCscUBHE7A69eppkyvamYyvBd26NRnA/9XH1AT
OXboSPyojFtgi45lOO1OlRIOjpLs5OYVnDxDRjOalpELWFQ4r9bo9ED5V9MV
xCyFCDxZQtAbLw4qWf9dpv/LwR9jy+TaUcja5bzKlRymNK+T9w7/xKivWDcU
jI+mH5XZOr/ghlxjH8PCXvVa8DqD3XnPBWLxN58ph2vHWPk19mIl3EgkSiee
Y4wCdzsEo+FgOV46Hb3KlFfF9zp5Hn/gFbzkBs7fr/SkYWzQybKs9wOOv2Ud
EVLA3oOyc57ZCShvixo+zKvolFeNg/DcLOeV00ApoHABG36mGZ9yf5IyYu/E
2pEkbqoNs3U+JusgomvOgP5uyICdOplfBa4rW88nyTxZq5+5q3hr8rQmVp7C
vmbtEFLGPipyBfMTTcDHYnOpA9tgr5ScZPmLMeystxH/U54elxTn826tx9n4
eS8xI+nPLkOrG6KviIoAzD5GVFZSt36KAqctw2eya36Nuj6eqdnPgZSmki1Z
HJDFkfAgXrnCuyZdKftud9lpZni88x++jnMz7fJEzySeg8z0L0m9HHu7cgqH
KsoyBbrZFFG3J6yfxc0SU4MqF/JuuHtVlqyliw7CKx0xstBTgPizjqZyFdLM
wc/12nrVGZI9U/5pw6May5oq2xL+U//C+yJpa+34WeKp/EyintsAaJoSBfYZ
OyifFXRiJZcazJUdGEEI5FZVYr0+uIGpdApFhIK2q1fx4TuDzLvWe+DU3Qbf
MM1jWb1ZN4WQwyIIfRwoLY5MHv2kMbibPJUPZ+Ji+jfTysFKXsEDmkwUVf3v
kofh1T/+JV5NN5OyXCdD4lRTUdI2v9mjRVZ49+Nr6PCdM40W30d1aCFFf2Cj
YCh//u6XAxHn7bKlusV0tpeuPvyeO2N85Sm1rwrCeZeg4RmRBqUuLVcPcyZG
6rbTvTvf11ocoN2Fps3NqI7ozirqDMM9RH7cVkLH5NphSZ+5wmM7f8s+bmLG
wAUdztTm0rYEOPV1Ah04PXtGm6BqDrvn4gkrH2RoAZf/vunPmQkocS6sFppq
0SyXI/tp+tYLZWV/VZpnXlCEi60kvBuW/iE6Kf5tRz1iv+PIkW+Lvz378M/y
yQimRFI0YzOgCN0EYjD+aUSVpWkcK4txojhA0aVCLXI6s9GQNNKzUSQ8nA3f
5dFo7IbLvQRf+iWgouc+/j7k5OWspJeno3wmTJCUD6daJ3+W8KWA4/UTJyER
2zBDMhbuec+krTecJoEdbdGOtZ9NxeYyTHmv1FvQCbv98uL9tyPXUkOKBFLs
f+1y1Mko4StUSC27hNDLuvzRt5TlGlTKN49XdiLZVsB7OgarDN3T7K2flPAB
JYJXOVpMe0nA5H2TW0eEegHFii4tvkPTQXUn7/sX7n/FphyLbaJhON6UaCcL
q7kEABodSQolUE7ePNKKALEZyu1yTeTQqbpXQuzW2G8qKrVnzq3ucTeV+kvN
a7t5nnBadQHg4yX3Zt4b1LUfUhwEO6R2d5NrT3NUfF2WS1OhAth7OsJiBFIE
/HrGFeszHmIRBankgJAzi9pZlBo1fbShAPBvySsOPX7i9Li0zLBihJl5RzmG
FhEUUJl9gEc79/EP6pX6mKOb8ZXH8qBsF1DehWCXlNOVEA363AKSRQp2as0p
iuRlUxHHscPRqx45j2UNMSIPqb+pHBtc8PBS1KjTJd8IIKoq6hQRIDdyLbB+
fE1AvaL0HnL/pszxATivszlr84JOfhgsRvTFk3Kq8pmtk3JdulOnbmaaDK7e
qF386A17M1pV7Adfv/RT/KacrYw4SFtZKW+XWnGaGTIey74oshEyM5UXRipA
dc0iQpL0eXJiUkIZZBPlDkMsB2YS4x5l+1nCzNw6mlh9EjhRs+p7gabx1rFd
vg6V5ty2Sh37fF69WkNFo0nrl4nlqaFznfPPULfNb5QiENS2VBuTn3AaWCqd
ocCrZuOv5imQc0TaznR4M06tSaG1ORXUBjzmpU5UPQ05J3REQD55E5vnpYVM
5rC67raMvjAKzZ5nirQmvnZhq4T1Q1Eg9cxHbwn6I7Inx0o2LuosCjBz/XyW
6aEvnGep5gbMi5CFRe0Dnh7ImzNUQk++13NEZ8YhKbkBRiWhragj2HX1IXYQ
cPDReGiiOByLGA6JwmPaoua7adAFTp6GZNKyp0r+GUPOzSIh1rj6EMbidPKG
WskPapYiN5e7ALKMSPPKHGFfVzNs0DXUcAQwcV9DpNM30kChELkYaijtWz4a
Xz1USuBWzF561UMVmiZyBzkESopFPp0wrZR/o86h9WO8r4rvanjFIsf86eLK
Gb5G7ZqtC/ff8AywKTsP0upnXJNFLLcn18C5SMjU7GkUcZKjdQj7T92s+Tmp
RxtvaZPcgKRFx3uwXnuHnkQtZbBqncQcMN2TVyZyLMU2FqHL+jupBUIa2d/p
tAfMDO8uf++aYet2gvRs7prkYnZ33ldAh315FwpMmep2hybVr5ADajyvD+gT
poYBRR14zZwiDWb9WJ/9+16l96Khux2bUfJvF+9/nbC0yXGn+uzB0H1pW/EA
B6a51oZfWPjTzyX3bo8C5EmCLozxHb3eW6nD9gvqW37He111aDDkc9U6Zemn
bj4fUNGLuKf6yF8diKpwFPmQFUVQtlRdxmZPWAHrpucKbX53nrGeYJFZPct/
Yx59Y58dHUoKW0f+FBXezYGBOuwcLkj2JTEftqJFREN5frx/5hLtmjkGRVYJ
MiyrKxIesTKP7smnMJx7N68/1noYL9K/5/AZl8tzSufl16l6n5iUWtzxbhq+
c+XvykcAyalmbmV7weOw2E9Nf7740duB4Nyl+xjWCG3ImqQj2Y/Z/pchA4Hy
2ty6zpJZt5ZnRJgxja88KXwlGlxZ0+p3KhN103zTWUcravx2qgoPzgDDRno/
jzz+0nn2UszfOyg1lCJSPheMGj3blNUO1ar8xtWI8JAyh/YwYytPhq/tDGpm
Ep6Dw5R2UJcJXm2VPf8uEg0GJF9TyaGizMBv39ul2NKV55zK1txiGDsZ92Xo
bPjZFOstuTu5tqsPv6fDAomBdOujIhxB93GO2Ud9dbkgcO+WdIRzY59McnnA
OPyiLoBniLrrrpFZOhbtA9pObXa0VdWlReOFodjdq0Gqcp6M4S30ZyrnFF3G
2AxE0sBI+NY6r6Wz0e9FzKh0tiY/xfU7ffvFkHIWkHormZerjDwNpRW/pBFe
8iagE6u8jhRl8rMoOFCOqu+S9RjbZu7+ROO6Nq3tUndVu0zPRq/vsq8jLxi+
APMbslDDOpafkHJjZHHbJoNmHAfmOty6dP/C37LN5al2EVj43VE9coFWZGYC
46ccleziVn324x8GItK/XwMM97CcMOPFU3pG2b7Mo0bD2DxFGxejxxQJlFYK
IxLJ7rXltj55kxqgXZq7H0iyqhIJe/1XP6d6Mt/HnOaVth/eIdpJ/l+zjCDb
Q2cZQPiUdkh+Fo0PYpQGXFejJp7GqTy7kd3fVMFuSazHVYQJJu1ZP6+bMZ3q
Q3zzhMXYrvivVAIfjUZ3tFnoVwlxhcOh9UBAi9TCBtgFQHtpi601aADFkorc
O1nshpTSNXOEN2/ZXCnbpd4NzsYwA7//hpgd2xtof6jdEtji2d64qH4bQMfr
qRVUHpjDy9pTLvDG7MPvjsHZxjzHBrl8YpbX0ugFfS9lkjQRg+MdcEXTh6Gb
AE9aZahP4HNt06lKEPt3wCcoGlBuhbAenFEqPU1BS3l5IJ0t8tRqkLkp620S
iLpNpljhLKH8FX005TmTxSLvyLy1utgjLmyseGMfPKvooT116/nwUopFvdA8
hNkxenZy6fLTVPTnCQWfG/2598iOkw+m2Tw0t2GTuk0zHtqz8LHwAOLK+3uZ
/oWbe9AY1OhZmVc1bE8WsZrUvjyOzZ7zH35lnQJlBu/zaCE3hc/ROFhyNKGS
LamU3E+ePuT+Mt5R9b55bZc1mESz5hIVChBZpFY8q5o+4QqpvWATG3lZ9g01
ef9aR0KY2BA3DX1wgbsAbZFcl96hO+rshoBCECUeuAbksYE8cfMFzfkI2qTo
Bz/pV5c015pce27Yvqm1Q443JRPQrhfs++icoMjxLUpPy0a8gD7aI8MRvNNc
3jcpFWLL0aTWHrQebCisWGVQi52z9pwdxlgq1zSsIAf+jbx41Wmp8x0WmQ4O
V6byEEEiJoYLhi3aRQAKay6pJcBBnDvCBmzWR5CVTm0CKRjlyfLvjYdaRM8q
vWJMDOSfVCDyGYUpbDGPrx4aGle1dGYfjRWBopQ7WtbkJcid8jlIADL/0137
xnTOWJZcwr1Prh3BLgdo8pfUueN5dF7Vn+WMv/LwzzldYiCprp7Cclvek1DN
xLWgKtzSNhtMyOchE34YZ5yf/4ckhlLV8Kr0eAsIoUaOBJLL66ffaeyzfp2z
hOqGKymqUDYpn1c6R3UtUTP896DGlZCLSaykRRDhimHnGo6RAwn0cjX4yQtu
LmN2FX6bdaJUTpJAJKdGxyrp0HecTZcdquI04HSKGy0UbWYxxwzNi7/LWvHK
AZ6LFnzW1LAw6c/Vcq0Y7TMpeWNgdiOv3bvy/AWLH0zkJ6YsisWBzOFNdX7Y
Vu+5K/OOwA0JiAQyMyDTyCtNPaFVHjvKvXbaUhpTXh70O3UPBA5jJSakgxgF
zAC5Drn2SFvWHt9mwu2Z3nfcOVDvDVTO/qRqUWe1wPm87MSoFdemeidxrzTt
8/5JjgfYQ9w7o7M8Oy6FsiZ5m9NLzt3O6tSaPEzZuaj5bhwMmb+EU5DoHF0G
eJ+sY+74vB9MWaDm9T2qvzJay0MZNCdM94YT17bQE1w+qRrl4XU1TadCI8yX
zcVW5Y7Pdbd6WXnLM2Vgks0p6+K8KrI0FVsfVj57pRBRvg6gRphAGrdRFSO+
sArWPd8a3YYlHKgekymFODW7X+p5eXbdeUwx9+RTc73WElY2e3oNSoeQAlCU
81LkshSIBcBEJ6mxd1LKTqGFN7l6qKSDF5XnRJtXuEeHOS55I4/SmNfMpyrB
Y5hKeEpW5UTRUQWCmvAcYIWc/rOfuZTCd3slAv+8cUoqfDO8XTuRSRyYuBnc
o9SUgLT9Fs6tkCVJ8L+bqWCq1/IGB9QjkLgJV+WdHSoUJCz14KSfFciw6u31
ZwxD7z/hYzyxNYaLaFgrqmjH5+Re6Bn2Ft3e6duvzPg+vuWy3oR6guTVk0Mk
+K586otxxCjntnX/m1Bd3g3rTasKqAnGe9bJ9GILPOXlHefPejrb4aCnM1mR
qNOkkPPcBjsqhkD0Cl5Wocj/6BDDzMr1yfLcGL+jwsebmN6rtbDVCPJrVx9+
j8iAxtFOYqextJM6PE1WJvPJgWevaQSFjJncecLMSBQmkjmwGEbjNgo7Sy5I
qmttjOxR30UeWZiiQHkmU56r0ys3otSQefAsMTYSgTzjK09HgRlpURg57vDH
pX4tZe+gNGZPmWTOMHFcVD19A8ucv/N6JOIboQO3Aoq1rd/zML4PKvMdqsux
aRioTqLVMi5Dx1WNcWkvySKTD5QARdHCmIPU2MssdOKXNB/8/Mz18+qMRwH9
dOuFFOAdto5m121S2WEIgvB7Fv0V+G2+w1SPTZ/foG+Nwo8O5F2UPG2o11xE
glPq+FMxIzJZdChqn9ibr2ieYOeV6zeqRHbZFyfyXEReKRtnE6vP+P7z+a08
5JFlWcV7VK64Gn2ZufeRQwc2rtR1evesjPoz3eX/QqEUihkRL0sUQBGl4CY0
GRxE725frkh2DgWk5V9ZzWrT8MeiCm/TNb2KkfnZK7C+QBWo92lVPBFxdk7W
WHsVEZwaqiiLi0WbV1iv08yjTh6cXW8+z6fR/wSVRkXe8CiWCCY144p6rqIa
XdpFB08PTVU93CdHStYqzT/Clai24UbUNgoZfnWEqBPZxm+Ej8D1fWNUSIEU
kOVKsQxIHsWXy5PmASOXMfvJjyMZW/e38puyVOQqTdec/TzovmvdK7+JIeQC
FsuQiiwOKYUINM6l7cu//wa0SzWEk2gg2zaqCr3L2nRADZpkuc3cfo6k6PYL
NuIn4aF6yPcry2NQZ/QBfyQ3x9kchUdIr5LnlxArtF4gzp59D5Ka1BaUal51
IzUUJc2opIjoWA9egZ7OAMQdZbv518HrVxkakI5a3uVhTCdwyaponUH6KcEl
RFOzkiCLdPLmkXGtOsy3LvzZVSWNsZUnNNCkjBNL7rB6qHgh/0Ya6+BcyhC7
h68BcCPPRM5kgz/k+eBvJcqPF1CCkI+xQeWsAhAUMbfNbJldYnkD8vcUzwB4
9/q+/I16YwZ3aYrGswMqEYlqiOazgwI/6651X7z/dkAtxafhRbDPOz5WeS5T
2W7jRHp/NvbQhpTKhKwwIF8VaMP/NWM9XjdUcRH7cKFycjm5Y6/0sB9INCGL
YnIO5YvjhKqbuhz65h8FiVIFt9q8rCYrGqNmHbQ1o6atMsb/9DMTCnlEpovj
J88uRympmDAMydVIFK2cWrFHDYyzXA4/jz0e6y6i0yJXazUUfLfl+6g6WESA
feQGI8q/Tdem1XBSwWpM3zriFlBpeawZi3K9dmXUI0E3WVnVheLUFCMif615
QBExd/wWeUBnr6ZeIZz5mAmrftDbqjefnnLWIcz5H57j5qpgeODIch1VVxlu
GLXUQBM9Zq8Nzq7hn0lp89l10wOpqWrCFhHYg7FbFNBEIYlc3G5e2zPWWklV
lhkcl9vMndf9sxlzIcifXg+OhO/lXTR6DU9qF5aLhD5FNgkuQkvlWVz/WxL9
UiXgdS/8HnRPqTtXKLf3e+zuztwxalbd8PSFI9C2TjyLiDSi2wuRMrwazibT
uWl63bEuL54GNS4VKY9MCu9PXlaVgQNWSZc6IcCYAVmvjqARTtfC6aEdKZSr
LNut0k6nTNgnDuXgT6Fp+JbqpEYPXskoanG/Td96lTqaXiGfI/z0uR4z4vUH
HJMtY6ny83zN6ee2HnfD9FVeuDp84KysXjdNMA8Oj78uqyDD7jM1qRxaI98x
rRWgXTsn+bFjKyXb9cfTtLyZ37gc5+S+Awe53fz9y8KbXD1Kf3Yeum0MR3et
quCjFZFq0Fhm1GEjv3CGu243MsXoYFqX76Q0nPLAEiNLjm0K6MmOlQ9miyw6
YD74JlcgkXfzJp//+7Os7T58p1Yeb66b0cZLcPuoU14EMkUp3BdzPar3uNdt
pXGQKZ9MljkxLwoOB4x1ZHmfsx17ZvqZcSpPweb0rK0Hgv9d/ky+QTkNfXm/
Q5XwAJ+nkRH04RVHy4xF+cSbzIHDc7v3Jp+gd8hRmmv2etWBknYS43TY48Vh
SUeRcYRO7jj7l7aGbFZjTBxObKHh8ckPYR2zI676yp+TqEU3EhvIy3+wz23X
W4o1fm85pzb0jej0QFBKSdcMM86Vx+i4h72hnex07+yx9KvOOcfx1ftd9lTw
3q3u7dJ/jA4k4ytPo3p/nbWWub5FlYku8ljpPYzRt7JpofKkFboZ9oVPH0CD
ep/lCmTPgqdJBzHL+BXjvU/k3lzJ6ZxPihMX1luqqJyy93o+mZGUKOYV3eRW
amf1KQWyUV7k1Z7vW5qPQjhTrU5FVqHiPyoU+iShamfUbSFN937JIVoruLTz
35MnLiUcHTUpLSWLaXwF/mqy2Gcwu9/WDPdrMqpoasL9Qx7i+btfjl3Ld33f
ubU9edTBR2Zhi0PNmJ6iXjItKrgg0SXFKrWptedxcrITWSb13PsgQ+r+E5b/
QqgK5QmrRFhrBBIGX9AndERtPwsomAUesb0szXQAju0CjlCZPmYXC1OJsN5S
nEF5qM2+wDlTqxyG5EktKOQ9yifI4yf4iPRG+RuJjrID2CVyPlENohyMx82H
w3fzm2kVMYfi7c0XhKhc0pGpvAwARVTOUWWT1k2ynK4kpGZpL+s5YR6xj/Yu
3qXaMsyrXSVACdf3cI0aHSm7NQ5Vxi31XtwyV+l3nUcAtVHkYiHdqkG1iAAQ
eQLj6E/GWV3z+kEzj5r6708pUZM5BJUQEuOp+gPHG+Wmkhhh37a4ZW4HXVIu
jCsYL4zh4F+3DyQPHvH7RD1hbqZO5+h4xAVhlzqmVbbS8TdJzTcnoTAdVDSk
dlfPOmf76Tsv2akl44chgBYgeFVocO8lXeCJ4onNkQdht/7M2G5ydHINDCSd
4TMKbNo1uQApkeTcpHUyc10W94Q08zvOqKLk+rj6iqp92SZlP9H+05RiYvUZ
nSyUbaMxYPrWS+Lf5OHS3qNfWVQSAGSpsd0BFuRHX3MBVChb3D3gnA/BPM70
wfMIXY3K2WSbzqnLSCu0Yfi5E7Bb20/6Km7K2Em2i7yPc2GWpQwLeJ3j+3ki
a2fuUTPmCgRMhj1pM1O5IHlb/ZlTho/YDTYu2Q2ZVIiLVQQNTr2YC8vTzs+T
OvW4GOnO3/nCWFslF8SbL4JPoX7XB3I60MiRuSNZQdTbRAdnHlpH8goV1Ak/
c/oycHVqDfGOKoZu0+itUI1G9Gs+/gsXtayumbuvwKBUEn7MmruJK1Ki0WvZ
EdQ9yzGe3QAtQbQeElwwulkgJwnCQVl1kr2jRs6l8RoeHifustOG9eMi1OaZ
Uuv0TaMXfn2fJFdWgiwb4INK5is7EKPL+8y0iqBwt0lbK2rbpUmly5T78k4x
cfvyq+b/kblqIbJrw/9xLiBaqrV0rqAoawkTpTvMMbDQzlzaBbZH/+19uXvg
hVDWtqjoSmo2Jav61SQCr1QviHtZfv7YXmObN5/7c9eVB9/JLkUs0Uy0cv/b
fI4XHva/ktsyHR0yNLlwKmvYhJGUH5VvNGZsBYamNN8dc3pJo9CNyrhBfmqp
eXY2mR1VsAcppkzUw99nfGtORm1CV0IIe8cIX295Do3HhjoGkWMipev2yiN5
tMh6OXV5dmQLFpEnbs+hjIUtv+s6511sOsvNGrKYSOJUD44ul+pm1LOmFykR
gvEj5HS5/jx3ruV63Fmk284Flfw2J3mfwTp9k8xV1+6pVAu7vkVwZj6rztID
egzymeX9q5zRQQeg9P2+n+PebckjM+8yOkWStjXiHdNJe067h907PQDoWNOm
Jp2UXGN3t6wr3razs6x6BkC9o7ad/Svb2TqQ3CB7toimuENgjGF5obWskZG5
FrRsFJ8aUB/6fe9CbU+fPBn6EguGo2IM6Q08X+TVKQp8w/Kw7mngIQI6jYqS
ktnJ6rS8BytbHmiKPQQXph0+QZSjckxJnQlV5p+kytygWMdZmFe8rdwZvmqF
g26uTdI4d/uVSoo9k5ciW0EuZDaq0TYkdku+ZoOVsJNOxlVRyi/8KvEejvZO
i1Il1EUgC2ePTBGHZd1++EX13XiVRY7nWN1mSgMawVfzXqWLR7hTKtcyk4xO
s2iNm0oEM6zEwNGJEiRepbhUeF3MpI6oi1ho+C9xEOlpm3qfDBmT0cUQ1Trz
j3jyOP32fG9b7RJ7XZ/inuB4H9AWsQSxWL2f7//gbHnx3hv5BqQaatpkGG8o
dadyapHol4asnn6VlJYv5woYvxH9taTgDehW/tmx2DBXk4dFrmLoxj2EYpzl
oKeBloAhEKDgK+oTohSegBtlDBrWGpD7PtczYOcUTaZSDX9m8gamBKrEgJkH
PKbnoD9sTtiaYm5lvYeTEs1O/GsRINvbOkuGBgLXvTyNKMrwE9tfA3OtC/eA
g5DNp7NcqMyodCZ8onTUtEWxEcYp40a9J1clkUKbKp83MUaT7fw1jJ+1jUgR
wUsP3gbRiDuvKEjDmlriC/ExslXodyvnpll4YWE8+t8qY/MlzU65cjEXiOjs
YIiu7U5WgfQfXW79ldb1Us5dgAMQLl1uSf61CZnpPbqE/kb9Nbc4pg3vZik4
3wA+efNQWQ8HXAMq2JJEUuiWzSaiXOtEwHK9NwPtxB3WgkmJdBWwNbQsr+/p
yBwLM0jdygIOvZX3Zm6/GIrakFIunlVWBl8aKNTQkW5Ryx+7XYf782HCe4qg
yiu//1aVV0IfV9YKEQ5cZLpOUVwBXcdsimGEb/P/4SlG1WbUwGpPMEx7XxVj
twqNM2q27agpLTeqEJxDapuhDXn/a3A8bh0V0XBFJZiec+MRomLZ/Tu8YLZx
JHzT3LGIiBr5ShLa1VhyfWC+1YlO9Lvo7ah8obxmcFI0G5kFwX+H5gZq64Ma
iw5sGmvQrD8tn85ezgicn7/iiB6kruC5d0DaAfq8gJX/hoAJ+uHJtVMKB1U/
6PVfkB03onNYIq3AfdZ2MNublF6QK5tag1STdrtQl5y/+0VThY+pegwdGOYY
zNVA2irrYEgWMAM0125kraAOlid5MapYem+8Rl4nKWJue8rQsR5Zqo2yVJH0
5dmwfCHXdHAVUDkpyYA64lXQ6zwg0ORr6GDI6kC2pOwealXLjsl7TXKyaUuv
pbEVUBT9+w8QPLWlzYb0sPaE+tU+AyRrHclZ/Xz5wdux63vc/hGB1mWzkRW4
3X1NuGL8139VTvhjZjzsyVzWZBGD8JUDVQvG0jVbQAjKfPTWJgCytvmBshou
giTe4k7lNVjHvYQhOqN+clssOGjvTg1cSblltRijKdeofQ89utXDCXWY417j
I6WfCNuUmK5c2577+HvbLvx+iKxmSACPrKgTVNaWw3SoB27KJpCzjd2Inteb
f5OvYBzhLdNR+/yHgaXRKQmMbMzMhQ/qQHjH0VmNURfSRCtPcgQ4MKsjEWLJ
XZn3/KlHL0+Clik6NmqrxBoSRfUcDTpmYToXs69vCBIJeyNf3+jpzD6yPLaX
SEEJD1zvspU5AeGZObYS+ynjuliMLddJ9wcKdfGpz9x93cxdtCfXjoavpS5s
L48QuRlCgGUFGTzqH5nat80QE1aF/+5VFT1e3Ot5eJ6w1zz2ug8V6oClupB9
rPTvLpNu4yaYCkp5FbTPTq8/LtX6qV4NE5jVQ+Zex8yM/Rzd/9n3Nrx+xtB8
K99NHZwSJO8LskRI6w7VehmZX7rTTL+zZt0OlgsJFWc/3bx+EHOOLscYGlHH
n6gH0zZR9jGgnQlSPWn+JU0Ij9ryVbSbVDdyzVqPEj/umti1OP4a/MRTZYAy
ZIWv6XwV5btbvsuTqyLw1fDnvM4uphW5Mot/Nr4f4P7cmzu9ULhtZGmH2OSK
iHDns1dMnAZmH3VEjDL/5gT/LEEv/Plk5Z/74/j+hDlDlf7M8e/xv5/+vct9
nv65bv9OhID8M69roPw5tfzn4B3Q4z6t4xeutlH577909enPHe7n+eezVx5x
ihru7vi7z/88AEy9+/l69f3MxrfV+D/4/Pzt/aO/H+7Pvq/y+dV+dyWCOa58
pjysf+gqfumppqv8x+7q//D7avb5v1M7hV+86r6qq6wNxGch/5u/9yTsM0hH
/7//v//rxP/1/wGB4lU+\
\>", "ImageResolution" -> \
72.],ExpressionUUID->"0621bc3f-ee95-49e6-b285-a6bedf5f8c72"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "information", " ", "about", " ", "each", " ", "cell"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"range", "=", "450."}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"From", " ", "mesh", " ", "file", " ", "name", " ", 
     RowBox[{"(", 
      RowBox[{
      "side", " ", "length", " ", "of", " ", "grid", " ", "in", " ", 
       "\[Mu]m"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Get", " ", "distances", " ", "from", " ", "center", " ", "of", " ", 
     "mesh", " ", "to", " ", "each", " ", "cell", " ", "centroid"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distances", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"range", "/", "2"}]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{"range", "/", "2"}]}], ")"}], "2"]}], "]"}], "&"}], "/@", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
        "]"}]}], "*", "meshRatio"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"positions", "=", 
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Get", " ", "number", " ", "of", " ", "cells"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numCells2D", "=", 
     RowBox[{"Length", "@", "distances"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0VtI02EABfApNIMQBbELhpeh7iWKVHKTmn5KXooSjQWbYqTpw9BNKx9k
aOF80NGDCIoMHIK0/mSgaBdCwnlZm2vW0lQczi5egr6/Bnkb+gf7zvdw+L0c
zstJqjSVVofLZLIUFvjj27Ti+TIljjuX0mG8RZUPS9ytN2AotqAESqKHm6b0
NkLBtvmE93VNHfC+IdwKG7LT7Q5m29JVrlyXqT4foMRjTtJAwetyu5ivitI8
8Mvba37YnnAlAJv9GgkO3d7m5lZYx33Mwt0IJ7xb3+WFkxc88/C6c6j4MzPH
4tNDRd+HN4fM1WD3e1iTMfB9coUSp7lyA2bsHt/7w5Q0p6pg/t+lh7BQyHoE
Nc2v6ctflKROPd6Dwk7kETQMS2GDTHnV8gm47+iJhLXRyYaDdUoaQ2ruxE1x
JMQ07kWMQvl0nmnmiBL3rKoennQFrFClffEMznlrgnBMb+bajLmnPzFbjbe4
F4P+zg1mWXCeG1i9rP3NjF4s5vreadUUe5YKbv+aMvWsxH5Yy+Zan35tOse0
yda52q2ZmPJjSuy6f9zFna7QlEUkCx29hzBsa7OspVsktX115XBwVvkAmsbm
uHFRitifdpEkFpRy20Y/xkPhzD73P/sNYpU=
  "],
 CellLabel->
  "In[107]:=",ExpressionUUID->"4b690879-4f0f-42e3-b3a9-8e9f904de006"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interiorCells", "=", 
   RowBox[{
    RowBox[{"MeshCellIndex", "[", 
     RowBox[{"mesh", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "\"\<Interior\>\""}], "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7558908747022257`*^9, 3.7558908808270917`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"8889080d-4b69-4456-b838-0619045ebdc0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"areas", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Area", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"MeshPrimitives", "[", 
       RowBox[{"mesh", ",", "2"}], "]"}]}], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]], ")"}], "2"], "*", 
     SuperscriptBox["meshRatio", "2"]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Convert", " ", "from", " ", 
    SuperscriptBox["\[Mu]m", "2"], " ", "to", " ", 
    SuperscriptBox["dm", "2"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avgArea", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"areas", "[", 
     RowBox[{"[", "interiorCells", "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755887726310289*^9, 3.755887726466544*^9}, {
   3.7558877664658737`*^9, 3.755887772450096*^9}, {3.755888329946452*^9, 
   3.755888370520642*^9}, {3.75589089204731*^9, 3.7558908985641966`*^9}, {
   3.7559580555226*^9, 3.75595808229624*^9}, {3.826027365839105*^9, 
   3.8260273932734795`*^9}, {3.8364741105188494`*^9, 3.8364741396201873`*^9}, 
   3.8460233114357853`*^9},
 CellLabel->
  "In[112]:=",ExpressionUUID->"dff4fe50-5e5e-42db-bcce-9480400b60b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]x", "=", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"avgArea", "*", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["10", "5"], ")"}], "2"], "/", "\[Pi]"}]}], "]"}], 
      "]"}], "*", "2"}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Should", " ", "be", " ", "around", " ", "7.4"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.75589125299144*^9, 3.7558912665241327`*^9}, {
   3.755951466395742*^9, 3.7559514710918713`*^9}, {3.7559527986297684`*^9, 
   3.755952803457818*^9}, {3.8260274493686585`*^9, 3.8260274539423246`*^9}, {
   3.830600882988806*^9, 3.8306008832846584`*^9}, 3.8460233088654985`*^9},
 CellLabel->
  "In[114]:=",ExpressionUUID->"fce0a9ef-d634-4d95-b794-e835d573b576"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make Adjacency Matrix", "Chapter",
 CellChangeTimes->{{3.738231290116765*^9, 3.7382312924853034`*^9}, {
  3.7441017538295946`*^9, 
  3.744101769164069*^9}},ExpressionUUID->"c8dabf52-a575-4552-9a7b-\
63fce2e03e81"],

Cell["\<\
Create a nPts X nPts matrix that says whether or not a cell is adjacent to \
another cell. I cannot seem to find a built in function to do this, so I have \
to code it myself. Instead of making elements either 0 or 1, I make them 0 \
(not adjacent) or the length of the shared edge. This is because I will \
assume that the flux of ions/molecules through the gap junctions will be \
proportional to the length of the shared edge. The larger an edge is shared \
between cells, the more transfer we would expect due to more gap junctions \
being present. \
\>", "Text",
 CellChangeTimes->{{3.738231294509055*^9, 3.73823131727501*^9}, {
   3.73823324078627*^9, 3.7382332588831053`*^9}, {3.7385818477642565`*^9, 
   3.738581977384677*^9}, {3.738604658558565*^9, 3.7386047363802433`*^9}, 
   3.7396242549482255`*^9, 3.7396243909327908`*^9, {3.7439237325644693`*^9, 
   3.7439237369667315`*^9}},ExpressionUUID->"053550de-fb57-4776-a098-\
678a6c3298a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Determine", " ", "cells", " ", "\"\<labels\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ablatedPos", "=", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"distances", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{"x", "<", "ablatedRadius"}]}]}], "]"}], "//", "Flatten"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"woundPos", "=", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"distances", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
         "ablatedRadius", "\[LessEqual]", "x", "<", "cavRadMicrons"}]}]}], 
       "]"}], "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"highDamagePos", "=", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"distances", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
         "ablatedRadius", "\[LessEqual]", "x", "<", "radiusHighDamage"}]}]}], 
       "]"}], "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.743416584351347*^9, 3.7434166228549833`*^9}, {
   3.743416655819403*^9, 3.743416673602577*^9}, {3.7434167056354275`*^9, 
   3.7434167886346226`*^9}, {3.7434169539984264`*^9, 3.743417207245063*^9}, {
   3.743923897075699*^9, 3.7439238985048113`*^9}, {3.74392567712374*^9, 
   3.7439256846990314`*^9}, {3.755952324722122*^9, 3.755952364465838*^9}, {
   3.7559524079148846`*^9, 3.7559525040231667`*^9}, {3.7560349908587103`*^9, 
   3.7560350403111224`*^9}, {3.756035264553711*^9, 3.7560352941985955`*^9}, {
   3.7560356872890825`*^9, 3.75603583654488*^9}, {3.757847146091386*^9, 
   3.7578471617706747`*^9}, {3.7578471943534966`*^9, 3.757847226041871*^9}, {
   3.8306007420427947`*^9, 3.830600767539297*^9}, {3.83936867534803*^9, 
   3.839368679233549*^9}, 3.8474116323903923`*^9, {3.8480149851904936`*^9, 
   3.848014986056804*^9}, {3.848015145607032*^9, 3.848015188126569*^9}, 
   3.8480155625113645`*^9, {3.8484436138070793`*^9, 3.848443649576625*^9}},
 CellLabel->
  "In[425]:=",ExpressionUUID->"94fc1b76-9e5e-4e79-afe9-f6b059062e07"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stylesWound", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "#"}], "}"}], ",", "Black"}], "]"}], "&"}], "/@", 
      "ablatedPos"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "#"}], "}"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{
           RowBox[{"\[Mu]TDist", "@", 
            RowBox[{"distances", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], ",", 
           RowBox[{"1", "-", 
            RowBox[{"\[Mu]TDist", "@", 
             RowBox[{"distances", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}]}], ",", "0."}], "]"}]}], "]"}],
        "&"}], "/@", "woundPos"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"HighlightMesh", "[", 
   RowBox[{
    RowBox[{"HighlightMesh", "[", 
     RowBox[{"mesh", ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"{", "2", "}"}], ",", "Green"}], "]"}]}], "]"}], ",", 
    "stylesWound"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.851637514808234*^9, 3.8516375157641377`*^9}, {
  3.8516376683624535`*^9, 3.851637718446944*^9}, {3.8516377552042856`*^9, 
  3.851637778071204*^9}, {3.851638021316574*^9, 3.8516381288397465`*^9}, {
  3.851638159759898*^9, 3.8516382001592054`*^9}},
 CellLabel->
  "In[428]:=",ExpressionUUID->"ef1171fd-3a95-4d56-a92f-8d353c8bbc0e"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
6pP3NalP8qT+PwGEwO0=
   "], 
   {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], FaceForm[RGBColor[
    0, 1, 0]], 
    TagBox[
     PolygonBox[{{159, 57, 150, 175}, {169, 111, 60, 167}, {188, 43, 1, 
      184}, {200, 172, 90, 190}, {170, 45, 41, 166}, {201, 171, 96, 178}, {
      193, 132, 30, 179}, {180, 44, 27, 185}, {192, 97, 75, 191}, {195, 138, 
      168, 199}, {189, 110, 147, 197}, {198, 42, 174, 202}}],
     Annotation[#, "Geometry"]& ], 
    TagBox[
     PolygonBox[{{181, 17, 156, 29, 194}, {187, 35, 152, 53, 182}, {190, 90, 
      79, 80, 177}, {163, 2, 76, 96, 171}, {162, 18, 21, 142, 161}, {179, 30, 
      133, 139, 196}, {185, 27, 88, 110, 189}, {165, 77, 125, 2, 163}, {25, 
      94, 37, 65, 51}, {86, 38, 16, 87, 89}, {166, 41, 33, 74, 160}, {130, 
      141, 28, 47, 145}, {155, 100, 120, 6, 54}, {182, 53, 114, 3, 186}, {183,
       154, 11, 44, 180}, {131, 46, 72, 23, 140}, {186, 3, 101, 17, 181}, {78,
       125, 77, 8, 34}, {83, 157, 20, 68, 84}, {148, 149, 122, 9, 137}, {85, 
      115, 71, 118, 73}, {134, 56, 99, 69, 136}, {13, 156, 17, 101, 82}, {21, 
      18, 105, 5, 61}, {144, 95, 107, 106, 103}, {194, 29, 108, 132, 193}, {
      59, 144, 103, 93, 116}, {135, 9, 122, 117, 14}, {196, 139, 50, 138, 
      195}, {175, 150, 123, 146, 176}, {151, 114, 53, 152, 4}, {157, 83, 81, 
      158, 119}, {164, 39, 8, 77, 165}, {176, 146, 135, 14, 173}, {191, 75, 
      15, 35, 187}, {177, 80, 63, 43, 188}}],
     Annotation[#, "Geometry"]& ], 
    TagBox[
     PolygonBox[{{161, 142, 55, 12, 57, 159}, {24, 124, 67, 15, 75, 97}, {167,
       60, 112, 105, 18, 162}, {100, 13, 82, 113, 66, 120}, {160, 74, 140, 23,
       39, 164}, {70, 58, 106, 107, 7, 31}, {153, 62, 91, 98, 136, 69}, {4, 
      152, 35, 15, 67, 40}, {184, 1, 91, 62, 154, 183}, {50, 139, 133, 19, 64,
       49}, {126, 143, 127, 26, 102, 32}, {115, 59, 116, 37, 94, 71}, {129, 
      104, 5, 105, 112, 48}, {121, 128, 51, 65, 26, 127}, {70, 153, 69, 99, 
      92, 58}, {178, 96, 76, 24, 97, 192}, {63, 80, 79, 117, 122, 149}, {168, 
      138, 50, 49, 111, 169}, {119, 158, 36, 66, 113, 22}, {93, 102, 26, 65, 
      37, 116}, {86, 147, 110, 88, 109, 38}, {49, 64, 48, 112, 60, 111}, {173,
       14, 117, 79, 90, 172}, {24, 76, 2, 125, 78, 124}, {143, 61, 5, 104, 
      121, 127}, {128, 121, 104, 129, 54, 6}, {130, 85, 73, 46, 131, 141}, {
      52, 19, 133, 30, 132, 108}, {123, 10, 137, 9, 135, 146}, {98, 148, 137, 
      10, 134, 136}, {33, 28, 141, 131, 140, 74}, {142, 21, 61, 143, 126, 
      55}, {153, 70, 31, 11, 154, 62}, {174, 42, 89, 87, 45, 170}, {197, 147, 
      86, 89, 42, 198}}],
     Annotation[#, "Geometry"]& ], 
    TagBox[
     PolygonBox[{{31, 7, 109, 88, 27, 44, 11}, {28, 33, 41, 45, 87, 16, 47}, {
      55, 126, 32, 92, 99, 56, 12}, {157, 119, 22, 151, 4, 40, 20}, {52, 155, 
      54, 129, 48, 64, 19}, {8, 39, 23, 72, 84, 68, 34}, {123, 150, 57, 12, 
      56, 134, 10}, {78, 34, 68, 20, 40, 67, 124}, {83, 84, 72, 46, 73, 118, 
      81}, {93, 103, 106, 58, 92, 32, 102}, {114, 151, 22, 113, 82, 101, 3}, {
      158, 81, 118, 71, 94, 25, 36}, {128, 6, 120, 66, 36, 25, 51}, {85, 130, 
      145, 95, 144, 59, 115}, {43, 63, 149, 148, 98, 91, 1}, {155, 52, 108, 
      29, 156, 13, 100}}],
     Annotation[#, "Geometry"]& ], 
    TagBox[PolygonBox[{{95, 145, 47, 16, 38, 109, 7, 107}}],
     Annotation[#, "Geometry"]& ], {
     {RGBColor[0.9401386842389423, 0.05986131576105769, 0.], 
      PolygonBox[{{159, 57, 150, 175}}]}, 
     {RGBColor[0.879879593143301, 0.120120406856699, 0.], 
      PolygonBox[{{169, 111, 60, 167}}]}, 
     {RGBColor[0.9001253660536512, 0.09987463394634877, 0.], 
      PolygonBox[{{188, 43, 1, 184}}]}, 
     {RGBColor[0.5114046389505125, 0.48859536104948753`, 0.], 
      PolygonBox[{{200, 172, 90, 190}}]}, 
     {RGBColor[0.9305766327133103, 0.06942336728668974, 0.], 
      PolygonBox[{{170, 45, 41, 166}}]}, 
     {RGBColor[0.5212245144595451, 0.4787754855404549, 0.], 
      PolygonBox[{{201, 171, 96, 178}}]}, 
     {RGBColor[0.8847641130559871, 0.11523588694401288`, 0.], 
      PolygonBox[{{193, 132, 30, 179}}]}, 
     {RGBColor[0.9515051068836718, 0.04849489311632815, 0.], 
      PolygonBox[{{180, 44, 27, 185}}]}, 
     {RGBColor[0.7787101839504951, 0.22128981604950493`, 0.], 
      PolygonBox[{{192, 97, 75, 191}}]}, 
     {RGBColor[0.5401458113465473, 0.45985418865345273`, 0.], 
      PolygonBox[{{195, 138, 168, 199}}]}, 
     {RGBColor[0.9258981430819175, 0.07410185691808246, 0.], 
      PolygonBox[{{189, 110, 147, 197}}]}, 
     {RGBColor[0.664625033652784, 0.335374966347216, 0.], 
      PolygonBox[{{198, 42, 174, 202}}]}, 
     {RGBColor[0.9400867208940495, 0.05991327910595046, 0.], 
      PolygonBox[{{181, 17, 156, 29, 194}}]}, 
     {RGBColor[0.9208675532748243, 0.07913244672517572, 0.], 
      PolygonBox[{{187, 35, 152, 53, 182}}]}, 
     {RGBColor[0.6830422589543881, 0.3169577410456119, 0.], 
      PolygonBox[{{190, 90, 79, 80, 177}}]}, 
     {RGBColor[0.7298539006141096, 0.2701460993858904, 0.], 
      PolygonBox[{{163, 2, 76, 96, 171}}]}, 
     {RGBColor[0.9490429185823668, 0.05095708141763322, 0.], 
      PolygonBox[{{162, 18, 21, 142, 161}}]}, 
     {RGBColor[0.7832470262882549, 0.21675297371174507`, 0.], 
      PolygonBox[{{179, 30, 133, 139, 196}}]}, 
     {RGBColor[0.9542498517721719, 0.04575014822782808, 0.], 
      PolygonBox[{{185, 27, 88, 110, 189}}]}, 
     {RGBColor[0.8759806146300906, 0.12401938536990942`, 0.], 
      PolygonBox[{{165, 77, 125, 2, 163}}]}, 
     {GrayLevel[0], PolygonBox[{{25, 94, 37, 65, 51}}]}, 
     {RGBColor[0.9563625375919425, 0.04363746240805755, 0.], 
      PolygonBox[{{86, 38, 16, 87, 89}}]}, 
     {RGBColor[0.9526417517045557, 0.04735824829544433, 0.], 
      PolygonBox[{{166, 41, 33, 74, 160}}]}, 
     {GrayLevel[0], PolygonBox[{{130, 141, 28, 47, 145}}]}, 
     {RGBColor[0.9666486468835611, 0.03335135311643889, 0.], 
      PolygonBox[{{155, 100, 120, 6, 54}}]}, 
     {RGBColor[0.9404528245402293, 0.05954717545977073, 0.], 
      PolygonBox[{{182, 53, 114, 3, 186}}]}, 
     {RGBColor[0.9555158874105729, 0.04448411258942708, 0.], 
      PolygonBox[{{183, 154, 11, 44, 180}}]}, 
     {GrayLevel[0], PolygonBox[{{131, 46, 72, 23, 140}}]}, 
     {RGBColor[0.9445830781998825, 0.05541692180011748, 0.], 
      PolygonBox[{{186, 3, 101, 17, 181}}]}, 
     {RGBColor[0.9505253535174847, 0.049474646482515316`, 0.], 
      PolygonBox[{{78, 125, 77, 8, 34}}]}, 
     {RGBColor[0.9676738288669631, 0.03232617113303693, 0.], 
      PolygonBox[{{83, 157, 20, 68, 84}}]}, 
     {RGBColor[0.9494247352282668, 0.05057526477173324, 0.], 
      PolygonBox[{{148, 149, 122, 9, 137}}]}, 
     {GrayLevel[0], PolygonBox[{{85, 115, 71, 118, 73}}]}, 
     {GrayLevel[0], PolygonBox[{{134, 56, 99, 69, 136}}]}, 
     {RGBColor[0.9593389788478526, 0.040661021152147425`, 0.], 
      PolygonBox[{{13, 156, 17, 101, 82}}]}, 
     {RGBColor[0.9664459153164958, 0.03355408468350418, 0.], 
      PolygonBox[{{21, 18, 105, 5, 61}}]}, 
     {GrayLevel[0], PolygonBox[{{144, 95, 107, 106, 103}}]}, 
     {RGBColor[0.926269097888784, 0.07373090211121602, 0.], 
      PolygonBox[{{194, 29, 108, 132, 193}}]}, 
     {GrayLevel[0], PolygonBox[{{59, 144, 103, 93, 116}}]}, 
     {RGBColor[0.8654877955427351, 0.13451220445726486`, 0.], 
      PolygonBox[{{135, 9, 122, 117, 14}}]}, 
     {RGBColor[0.6957498763607283, 0.30425012363927173`, 0.], 
      PolygonBox[{{196, 139, 50, 138, 195}}]}, 
     {RGBColor[0.9296335167557443, 0.07036648324425565, 0.], 
      PolygonBox[{{175, 150, 123, 146, 176}}]}, 
     {RGBColor[0.9582612530182453, 0.041738746981754726`, 0.], 
      PolygonBox[{{151, 114, 53, 152, 4}}]}, 
     {GrayLevel[0], PolygonBox[{{157, 83, 81, 158, 119}}]}, 
     {RGBColor[0.939970053711742, 0.060029946288257974`, 0.], 
      PolygonBox[{{164, 39, 8, 77, 165}}]}, 
     {RGBColor[0.8629617233687519, 0.13703827663124812`, 0.], 
      PolygonBox[{{176, 146, 135, 14, 173}}]}, 
     {RGBColor[0.8797180619320009, 0.12028193806799914`, 0.], 
      PolygonBox[{{191, 75, 15, 35, 187}}]}, 
     {RGBColor[0.8353188953442865, 0.1646811046557135, 0.], 
      PolygonBox[{{177, 80, 63, 43, 188}}]}, 
     {RGBColor[0.9624399666265169, 0.037560033373483126`, 0.], 
      PolygonBox[{{161, 142, 55, 12, 57, 159}}]}, 
     {RGBColor[0.8956950968030983, 0.10430490319690167`, 0.], 
      PolygonBox[{{24, 124, 67, 15, 75, 97}}]}, 
     {RGBColor[0.946748808287829, 0.053251191712170964`, 0.], 
      PolygonBox[{{167, 60, 112, 105, 18, 162}}]}, 
     {RGBColor[0.9675773068402918, 0.03242269315970825, 0.], 
      PolygonBox[{{100, 13, 82, 113, 66, 120}}]}, 
     {RGBColor[0.9580936531747801, 0.041906346825219876`, 0.], 
      PolygonBox[{{160, 74, 140, 23, 39, 164}}]}, 
     {GrayLevel[0], PolygonBox[{{70, 58, 106, 107, 7, 31}}]}, 
     {RGBColor[0.9672681038849762, 0.032731896115023806`, 0.], 
      PolygonBox[{{153, 62, 91, 98, 136, 69}}]}, 
     {RGBColor[0.951032205106192, 0.04896779489380798, 0.], 
      PolygonBox[{{4, 152, 35, 15, 67, 40}}]}, 
     {RGBColor[0.9509962712935957, 0.04900372870640435, 0.], 
      PolygonBox[{{184, 1, 91, 62, 154, 183}}]}, 
     {RGBColor[0.8896154602130519, 0.11038453978694807`, 0.], 
      PolygonBox[{{50, 139, 133, 19, 64, 49}}]}, 
     {GrayLevel[0], PolygonBox[{{126, 143, 127, 26, 102, 32}}]}, 
     {GrayLevel[0], PolygonBox[{{115, 59, 116, 37, 94, 71}}]}, 
     {RGBColor[0.9648987195248973, 0.03510128047510275, 0.], 
      PolygonBox[{{129, 104, 5, 105, 112, 48}}]}, 
     {GrayLevel[0], PolygonBox[{{121, 128, 51, 65, 26, 127}}]}, 
     {GrayLevel[0], PolygonBox[{{70, 153, 69, 99, 92, 58}}]}, 
     {RGBColor[0.6915495237652108, 0.30845047623478916`, 0.], 
      PolygonBox[{{178, 96, 76, 24, 97, 192}}]}, 
     {RGBColor[0.860576320776405, 0.139423679223595, 0.], 
      PolygonBox[{{63, 80, 79, 117, 122, 149}}]}, 
     {RGBColor[0.7961285916476195, 0.2038714083523805, 0.], 
      PolygonBox[{{168, 138, 50, 49, 111, 169}}]}, 
     {GrayLevel[0], PolygonBox[{{119, 158, 36, 66, 113, 22}}]}, 
     {GrayLevel[0], PolygonBox[{{93, 102, 26, 65, 37, 116}}]}, 
     {RGBColor[0.9637429402784637, 0.036257059721536256`, 0.], 
      PolygonBox[{{86, 147, 110, 88, 109, 38}}]}, 
     {RGBColor[0.9312920485574887, 0.0687079514425113, 0.], 
      PolygonBox[{{49, 64, 48, 112, 60, 111}}]}, 
     {RGBColor[0.6838388340798426, 0.3161611659201574, 0.], 
      PolygonBox[{{173, 14, 117, 79, 90, 172}}]}, 
     {RGBColor[0.8902838496571018, 0.10971615034289817`, 0.], 
      PolygonBox[{{24, 76, 2, 125, 78, 124}}]}, 
     {GrayLevel[0], PolygonBox[{{143, 61, 5, 104, 121, 127}}]}, 
     {GrayLevel[0], PolygonBox[{{128, 121, 104, 129, 54, 6}}]}, 
     {GrayLevel[0], PolygonBox[{{130, 85, 73, 46, 131, 141}}]}, 
     {RGBColor[0.9319670271457803, 0.06803297285421972, 0.], 
      PolygonBox[{{52, 19, 133, 30, 132, 108}}]}, 
     {RGBColor[0.9525371678546857, 0.047462832145314326`, 0.], 
      PolygonBox[{{123, 10, 137, 9, 135, 146}}]}, 
     {RGBColor[0.9665645395911756, 0.03343546040882439, 0.], 
      PolygonBox[{{98, 148, 137, 10, 134, 136}}]}, 
     {RGBColor[0.9673020709990445, 0.03269792900095547, 0.], 
      PolygonBox[{{33, 28, 141, 131, 140, 74}}]}, 
     {RGBColor[0.9677043596303234, 0.03229564036967658, 0.], 
      PolygonBox[{{142, 21, 61, 143, 126, 55}}]}, 
     {GrayLevel[0], PolygonBox[{{153, 70, 31, 11, 154, 62}}]}, 
     {RGBColor[0.895156880680614, 0.10484311931938595`, 0.], 
      PolygonBox[{{174, 42, 89, 87, 45, 170}}]}, 
     {RGBColor[0.8502338768297332, 0.14976612317026683`, 0.], 
      PolygonBox[{{197, 147, 86, 89, 42, 198}}]}, 
     {RGBColor[0.9677090232198546, 0.032290976780145364`, 0.], 
      PolygonBox[{{31, 7, 109, 88, 27, 44, 11}}]}, 
     {RGBColor[0.9661395734324895, 0.03386042656751054, 0.], 
      PolygonBox[{{28, 33, 41, 45, 87, 16, 47}}]}, 
     {GrayLevel[0], PolygonBox[{{55, 126, 32, 92, 99, 56, 12}}]}, 
     {RGBColor[0.9667198446665712, 0.03328015533342876, 0.], 
      PolygonBox[{{157, 119, 22, 151, 4, 40, 20}}]}, 
     {RGBColor[0.9591471585333755, 0.04085284146662449, 0.], 
      PolygonBox[{{52, 155, 54, 129, 48, 64, 19}}]}, 
     {RGBColor[0.9663037566751178, 0.03369624332488219, 0.], 
      PolygonBox[{{8, 39, 23, 72, 84, 68, 34}}]}, 
     {RGBColor[0.9658479813401035, 0.03415201865989648, 0.], 
      PolygonBox[{{123, 150, 57, 12, 56, 134, 10}}]}, 
     {RGBColor[0.9587111427971913, 0.041288857202808726`, 0.], 
      PolygonBox[{{78, 34, 68, 20, 40, 67, 124}}]}, 
     {GrayLevel[0], PolygonBox[{{83, 84, 72, 46, 73, 118, 81}}]}, 
     {GrayLevel[0], PolygonBox[{{93, 103, 106, 58, 92, 32, 102}}]}, 
     {RGBColor[0.9647395230556062, 0.035260476944393826`, 0.], 
      PolygonBox[{{114, 151, 22, 113, 82, 101, 3}}]}, 
     {GrayLevel[0], PolygonBox[{{158, 81, 118, 71, 94, 25, 36}}]}, 
     {GrayLevel[0], PolygonBox[{{128, 6, 120, 66, 36, 25, 51}}]}, 
     {GrayLevel[0], PolygonBox[{{85, 130, 145, 95, 144, 59, 115}}]}, 
     {RGBColor[0.9487827592607532, 0.05121724073924683, 0.], 
      PolygonBox[{{43, 63, 149, 148, 98, 91, 1}}]}, 
     {RGBColor[0.9586615709771908, 0.04133842902280915, 0.], 
      PolygonBox[{{155, 52, 108, 29, 156, 13, 100}}]}, 
     {GrayLevel[0], 
      PolygonBox[{{95, 145, 47, 16, 38, 109, 7, 107}}]}}}]]], "Output",
 CellChangeTimes->{3.852198467220022*^9, 3.8531147516046705`*^9, 
  3.853534731565036*^9, 3.853536885601487*^9, 3.8535370933865366`*^9, 
  3.8535372123108387`*^9},
 CellLabel->
  "Out[429]=",ExpressionUUID->"2f977a3d-d7fa-4273-893f-2814f6617e95"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8516378539923635`*^9, 3.851637854026202*^9}},
 CellLabel->
  "In[430]:=",ExpressionUUID->"1b3bb1fc-9487-405f-9872-24701a85f26c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Produce", " ", "adjacency", " ", "matrix", " ", "with", " ", "shared", 
    " ", "edge", " ", "lengths", " ", "as", " ", "elements"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "conn", ",", "lengths", ",", "directions", ",", "positionVectors", ",", 
      "sines", ",", "edges", ",", "adj"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Get", " ", "connectivity", " ", "matrix"}], ",", " ", 
      RowBox[{
      "which", " ", "is", " ", "a", " ", "matrix", " ", "whose", " ", "rows", 
       " ", "represent", " ", "a", " ", "cell", " ", "and", " ", "column", 
       " ", "represents", " ", "an", " ", "edge", " ", "associated", " ", 
       "with", " ", "the", " ", "cell"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"conn", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"mesh", "[", 
         RowBox[{"\"\<ConnectivityMatrix\>\"", "[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], "//", "Unitize"}], "//", 
       "Normal"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Lengths", " ", "of", " ", "each", " ", "edge"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"lengths", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "@@@", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"mesh", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "direction", " ", "vectors", " ", "of", " ", "each", " ", "edge"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"directions", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "@@@", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"mesh", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "position", " ", "vectors", " ", "of", " ", "the", " ", "midpoints", 
       " ", "of", " ", "each", " ", "edge"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"positionVectors", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "2"], "-", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"range", "/", "2"}], ",", 
            RowBox[{"range", "/", "2"}]}], "}"}]}], ")"}], "&"}], "@@@", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"mesh", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "List", " ", "of", " ", "Sin", " ", "of", " ", "angle", " ", "between", 
       " ", "position", " ", "vector", " ", "of", " ", "edge", " ", 
       "midpoint", " ", 
       RowBox[{"(", 
        RowBox[{
        "relative", " ", "to", " ", "the", " ", "wound", " ", "center"}], 
        ")"}], " ", "and", " ", "the", " ", "direciton", " ", "of", " ", 
       "the", " ", "shared", " ", "edge"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"sines", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"Norm", "@", 
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"directions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "]"}], ",", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"positionVectors", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "]"}]}], "]"}]}], 
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{"directions", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", 
          RowBox[{"Norm", "[", 
           RowBox[{"positionVectors", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "directions"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "List", " ", "where", " ", "each", " ", "element", " ", "is", " ", "an",
        " ", "edge", " ", "and", " ", "tells", " ", "you", " ", "which", " ", 
       "cell", 
       RowBox[{"(", "s", ")"}], " ", "have", " ", "that", " ", "edge"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
         RowBox[{"Transpose", "[", "conn", "]"}]}], ")"}], "/.", 
       RowBox[{
        RowBox[{"{", "e_", "}"}], "\[Rule]", "e"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Initialize", " ", "matrix"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"adj", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0.", ",", 
        RowBox[{"{", 
         RowBox[{"numCells2D", ",", "numCells2D"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "Function", " ", "that", " ", "replaces", " ", "corresponding", " ", 
         "elements", " ", "in", " ", "the", " ", "initial", " ", "adjMat", 
         " ", "with", " ", "an", " ", "edge", " ", "length", " ", "if", " ", 
         "the", " ", "cells", " ", "in", " ", "the", " ", "row"}], "&"}], 
       "column", " ", "share", " ", "that", " ", "edge"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"alter", "[", 
       RowBox[{"pos_", ",", "edge_"}], "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "2"}], ",", 
        RowBox[{
         RowBox[{"adj", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"pos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pos", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"adj", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"pos", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"pos", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"lengths", "[", 
            RowBox[{"[", "edge", "]"}], "]"}], "*", 
           RowBox[{"If", "[", 
            RowBox[{"gjPolarize", ",", 
             RowBox[{"sines", "[", 
              RowBox[{"[", "edge", "]"}], "]"}], ",", "1."}], "]"}]}]}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"alter", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"First", "[", "#2", "]"}]}], "]"}], "&"}], ",", "edges"}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"adjMat", "=", 
      RowBox[{
       RowBox[{"SparseArray", "[", "adj", "]"}], "*", "meshRatio"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQHdE82VD21mvHjOfhRiDag/V78nEgzfBPOh1EP7Sd
3QSiu6wnNIPoo94M7meAtMk2CH3K1/nt4TuvHcMdDrwD0b/7p5UeAdJa8jfA
dILdPo6jQJpL7AqY3nxmdxHDk9eOETFxJSDaoF+oFkT/2RffD6Ktet/MBNHa
+pNmgeieb0W1P0F02nYwrV9k0QKid9Tbgun9Fr9bX/5+7Xi6V68dRC/7rjQf
ROe1OIBpjXvzrF8D6aBTu2xA9BXjMxcz/r92VLM5IZAJpN3KlWLbgPScVTbJ
IHrVuux0EP3huWsFiFZbqbb8afsbx6W1fzeB6MLXDkdB9JPmygsg+jEfb+wz
IJ2ZV5YMoo/dESgC0VqzPEtBtJSy9QQQbc8qOhFEn/N3mwai61J8V4Hoedu/
99RNfePIp9HZC6IBQLTk4g==
  "],
 CellLabel->
  "In[431]:=",ExpressionUUID->"3281255b-b719-4996-a16f-e10012a55dc9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
   "Check", " ", "to", " ", "make", " ", "sure", " ", "adjacencies", " ", 
    "are", " ", "correct"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"HighlightMesh", "[", 
     RowBox[{
      RowBox[{"HighlightMesh", "[", 
       RowBox[{"mesh", ",", 
        RowBox[{"Join", "[", 
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"adjMat", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", "\[NotEqual]", "0"}]}]}], "]"}], "//", 
             "Flatten"}]}], "}"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "i"}], "}"}], ",", "Red"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "numCells2D", ",", "1"}], "}"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.755955809417157*^9, 3.7559560104283314`*^9}, {
   3.755956713138179*^9, 3.7559567134439926`*^9}, {3.7578477292055774`*^9, 
   3.7578477327004123`*^9}, {3.757934525101997*^9, 3.7579345272556653`*^9}, 
   3.8365657673461933`*^9},
 CellLabel->
  "In[432]:=",ExpressionUUID->"1397072f-1070-44d5-bd3e-216cda0adb30"]
}, Open  ]],

Cell[CellGroupData[{

Cell["GJ Fluxes", "Chapter",
 CellChangeTimes->{{3.8237898295581965`*^9, 
  3.8237898319476123`*^9}},ExpressionUUID->"067300f4-98a0-4016-a62a-\
b0f969351fa3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"random", " ", "GJ", " ", 
    RowBox[{"values", ".", " ", "Make"}], " ", "sure", " ", "none", " ", "of",
     " ", "them", " ", "are", " ", "negative"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"randGJmults", "=", 
     RowBox[{"If", "[", 
      RowBox[{"gjRand", ",", 
       RowBox[{"Abs", "@", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"1.", ",", "\[Sigma]GJ"}], "]"}], ",", "numCells2D"}], 
         "]"}]}], ",", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1.", ",", "numCells2D"}], "]"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"randGJmults", "=", 
     RowBox[{"If", "[", 
      RowBox[{"gjRand", ",", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"LogNormalDistribution", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Sigma]GJ", "2"]}], "/", "2"}], ",", 
           "\[Sigma]GJ"}], "]"}], ",", "numCells2D"}], "]"}], ",", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1.", ",", "numCells2D"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8286138778976765`*^9, 3.828613891158036*^9}, {
   3.828614044456558*^9, 3.82861409859408*^9}, {3.829053413903801*^9, 
   3.829053439813758*^9}, {3.8323225045005045`*^9, 3.832322506499134*^9}, {
   3.8482711282015357`*^9, 3.848271143944538*^9}, {3.851127345285205*^9, 
   3.8511273649051137`*^9}, 3.8511274237981663`*^9, {3.8511281020827503`*^9, 
   3.8511281041293793`*^9}, {3.852154975101579*^9, 3.8521549799363327`*^9}},
 CellLabel->
  "In[433]:=",ExpressionUUID->"417bfe23-9230-42be-8a1c-a39028dce2cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\[Eta]", " ", "values", " ", "are", " ", "based", " ", "on", " ", "a", 
     " ", "single", " ", "\"\<ideal\>\"", " ", "cell", " ", "of", " ", 
     "diameter", " ", "\[CapitalDelta]x"}], ",", " ", 
    RowBox[{
    "with", " ", "flux", " ", "through", " ", "its", " ", "entire", " ", 
     RowBox[{"perimeter", ".", " ", "Therefore"}]}], ",", " ", 
    RowBox[{
    "in", " ", "order", " ", "to", " ", "properly", " ", "scale", " ", 
     "based", " ", "on", " ", "cell", " ", "volume", " ", "and", " ", 
     "shared", " ", "perimeter", " ", "between", " ", "two", " ", "cells"}], 
    ",", " ", 
    RowBox[{
    "the", " ", "GJ", " ", "fluxes", " ", "have", " ", "to", " ", "be", " ", 
     "scaled", " ", "by", " ", 
     RowBox[{"(", 
      RowBox[{"v0", "/", 
       SubscriptBox["v", "i"]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"aij", "/", "a0"}], ")"}]}], ",", " ", 
    RowBox[{
    "where", " ", "the", " ", "0", " ", "subscript", " ", "denotes", " ", 
     "the", " ", "\"\<ideal\>\"", " ", "cell"}], ",", " ", 
    RowBox[{
    "i", " ", "is", " ", "the", " ", "cell", " ", "in", " ", "question"}], 
    ",", " ", 
    RowBox[{
    "and", " ", "j", " ", "denotes", " ", "any", " ", "cell", " ", "adjacent",
      " ", "to", " ", 
     RowBox[{"i", ".", " ", "Since"}], " ", "all", " ", "cells", " ", "have", 
     " ", "the", " ", "same", " ", "height"}], ",", " ", 
    RowBox[{
    "volume", " ", "ratios", " ", "are", " ", "reduced", " ", "to", " ", 
     "ratios", " ", "of", " ", "PM", " ", "area"}], ",", " ", 
    RowBox[{
    "and", " ", "shared", " ", "areas", " ", "are", " ", "reduced", " ", "to",
      " ", 
     RowBox[{"lengths", ".", " ", "So"}], " ", "v0", " ", "becomes", " ", 
     "the", " ", "PM", " ", "area", " ", "of", " ", "the", " ", "ideal", " ", 
     "cell"}], ",", " ", 
    RowBox[{
    "and", " ", "a0", " ", "becomes", " ", "the", " ", "circumference", " ", 
     "of", " ", "the", " ", "ideal", " ", 
     RowBox[{
     "cell", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "a0"}], " ", 
     "and", " ", "areas", " ", "are", " ", "in", " ", 
     SuperscriptBox["dm", "2"]}], ",", " ", 
    RowBox[{
    "adjMat", " ", "lengths", " ", "and", " ", "\[CapitalDelta]x", " ", "are",
      " ", "in", " ", 
     RowBox[{"\[Mu]m", ".", " ", "So"}], " ", "the", " ", "ratios", " ", 
     "work", " ", "out", " ", "to", " ", "be", " ", "dimensionless"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fluxGJCaTerms2D", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJc", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"knockoutList", ",", "\"\<GJ\>\""}], "]"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}], "||", 
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}]}], ")"}]}], ",", 
              "knockoutVal", ",", "1."}], "]"}], "*", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"ablatedPos", ",", "i"}], "]"}], "||", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"ablatedPos", ",", "#"}], "]"}]}], ",", 
              "connectAblated", ",", "1."}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"a0", "/", 
                RowBox[{"areas", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"adjMat", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
              "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["c", "#"], "[", "t", "]"}], "-", 
                RowBox[{
                 SubscriptBox["c", "i"], "[", "t", "]"}]}], ")"}]}], ")"}]}], 
           "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fluxIP3Terms2D", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJIP3", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"knockoutList", ",", "\"\<GJ\>\""}], "]"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}], "||", 
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}]}], ")"}]}], ",", 
              "knockoutVal", ",", "1."}], "]"}], "*", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"ablatedPos", ",", "i"}], "]"}], "||", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"ablatedPos", ",", "#"}], "]"}]}], ",", 
              "connectAblated", ",", "1."}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"a0", "/", 
                RowBox[{"areas", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"adjMat", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["ip3", "#"], "[", "t", "]"}], "-", 
                RowBox[{
                 SubscriptBox["ip3", "i"], "[", "t", "]"}]}], ")"}]}], 
             ")"}]}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Unwounded", " ", "terms"}], ";", " ", 
     RowBox[{
     "only", " ", "difference", " ", "is", " ", "the", " ", "part", " ", 
      "with", " ", "ablation", " ", "connection"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fluxGJCaTerms2DUW", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJc", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"knockoutList", ",", "\"\<GJ\>\""}], "]"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}], "||", 
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}]}], ")"}]}], ",", 
              "knockoutVal", ",", "1."}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"a0", "/", 
                RowBox[{"areas", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"adjMat", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
              "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["c", "#"], "[", "t", "]"}], "-", 
                RowBox[{
                 SubscriptBox["c", "i"], "[", "t", "]"}]}], ")"}]}], ")"}]}], 
           "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fluxIP3Terms2DUW", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJIP3", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"knockoutList", ",", "\"\<GJ\>\""}], "]"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}], "||", 
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}]}], ")"}]}], ",", 
              "knockoutVal", ",", "1."}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"a0", "/", 
                RowBox[{"areas", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"adjMat", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["ip3", "#"], "[", "t", "]"}], "-", 
                RowBox[{
                 SubscriptBox["ip3", "i"], "[", "t", "]"}]}], ")"}]}], 
             ")"}]}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.744989624355424*^9, 3.7449896454543333`*^9}, {
   3.7449896772695875`*^9, 3.7449898276113024`*^9}, {3.7449898774373846`*^9, 
   3.744989879027397*^9}, 3.7449899288354883`*^9, {3.7468191533680162`*^9, 
   3.746819154558278*^9}, {3.7468194911067095`*^9, 3.746819502924386*^9}, 
   3.7468201212981615`*^9, {3.7486012147598615`*^9, 3.748601231129716*^9}, {
   3.7486013226080246`*^9, 3.7486013281635823`*^9}, {3.7486014084508247`*^9, 
   3.7486014113980007`*^9}, {3.748601531444604*^9, 3.7486015350513663`*^9}, {
   3.74860235387192*^9, 3.7486023691354604`*^9}, {3.755964984021002*^9, 
   3.755965148789323*^9}, {3.7559652074364877`*^9, 3.755965249714182*^9}, {
   3.75596530503138*^9, 3.7559653577331796`*^9}, {3.7559654357664976`*^9, 
   3.7559654620656843`*^9}, {3.7560340750123606`*^9, 3.75603407810847*^9}, {
   3.7560467420577135`*^9, 3.7560467637634516`*^9}, {3.757849011158785*^9, 
   3.757849019200803*^9}, {3.7578517055533648`*^9, 3.757851723062518*^9}, {
   3.7578518585814724`*^9, 3.7578518642769437`*^9}, {3.758020704597596*^9, 
   3.758020707036086*^9}, {3.823789840045166*^9, 3.8237898404480715`*^9}, {
   3.823790597311675*^9, 3.823790607663398*^9}, {3.8237908341960897`*^9, 
   3.8237908674135036`*^9}, {3.8237909823169155`*^9, 3.823790982921397*^9}, {
   3.8237911759769163`*^9, 3.8237911768337407`*^9}, {3.8237912310310836`*^9, 
   3.8237912468248386`*^9}, 3.8237913592807407`*^9, {3.823792526576125*^9, 
   3.823792541042704*^9}, {3.824316724894122*^9, 3.8243167338130865`*^9}, {
   3.824804959804517*^9, 3.824805079650198*^9}, {3.824805110060482*^9, 
   3.824805254620183*^9}, {3.8260214511961627`*^9, 3.8260214912257433`*^9}, {
   3.826032335119794*^9, 3.8260323678112803`*^9}, {3.8271795304046636`*^9, 
   3.827179535496957*^9}, {3.827180366360505*^9, 3.827180494545864*^9}, {
   3.82718107839067*^9, 3.8271811370938835`*^9}, {3.8271822184573493`*^9, 
   3.827182263257703*^9}, {3.828614243353843*^9, 3.828614292591341*^9}, {
   3.828614452322871*^9, 3.828614481762906*^9}, {3.8318020051682673`*^9, 
   3.831802087699815*^9}, {3.8323226519725113`*^9, 3.8323227169361205`*^9}, {
   3.832322750178913*^9, 3.832322754492408*^9}, {3.832322802606546*^9, 
   3.8323228452943172`*^9}, {3.8323238417482004`*^9, 3.832323842173833*^9}, {
   3.832717177689152*^9, 3.832717249389693*^9}, {3.846023842929147*^9, 
   3.8460238654894066`*^9}},
 CellLabel->
  "In[434]:=",ExpressionUUID->"1520779b-786a-4e71-8907-bfee283fd7fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making multi-cell equations (equilibrium tissue)", "Chapter",
 CellChangeTimes->{{3.8237918283478622`*^9, 3.8237918341469584`*^9}, {
  3.8237929436896863`*^9, 3.823792946841731*^9}, {3.826889153983074*^9, 
  3.8268891627194567`*^9}},ExpressionUUID->"24f2d6c3-a314-4cb0-a2c9-\
f052e4ed5f0e"],

Cell[CellGroupData[{

Cell["Randomization Test", "Subsection",
 CellChangeTimes->{{3.852197184876693*^9, 
  3.8521971886221714`*^9}},ExpressionUUID->"178d3021-6478-4cc9-969d-\
f7215f08f8a8"],

Cell["\<\
This sets up looking at varying parameters across the tissue for testing on \
ACCRE. This will be done one at a time, but to set this up to be more general \
I will make it possible to choose any number of parameters. Right now, use \
the same randomization for each parameter, but this could change in the \
future.\
\>", "Text",
 CellChangeTimes->{{3.85219719132734*^9, 3.8521972444430285`*^9}, {
  3.8521973025024147`*^9, 3.852197334461471*^9}, {3.852198233342246*^9, 
  3.8521982386377983`*^9}},ExpressionUUID->"47f28367-c574-42e3-bc55-\
212d02871c76"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getRandomCells", "[", 
     RowBox[{"numCells_", ",", "var_"}], "]"}], ":=", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"LogNormalDistribution", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", ".5"}], "*", 
         RowBox[{"Log", "[", 
          RowBox[{"var", "+", "1"}], "]"}]}], ",", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"Log", "[", 
          RowBox[{"var", "+", "1"}], "]"}], "]"}]}], "]"}], ",", "numCells"}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"randExtParams", "=", 
    RowBox[{"{", 
     RowBox[{"\[Alpha]", ",", "\[Eta]SERCA"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"randVals", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"randExtParams", "[", 
        RowBox[{"[", "param", "]"}], "]"}], "\[Rule]", 
       RowBox[{"getRandomCells", "[", 
        RowBox[{"numCells2D", ",", ".225"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"param", ",", 
        RowBox[{"Length", "@", "randExtParams"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.852198240515234*^9, 3.8521983040192986`*^9}, {
   3.8521984234602103`*^9, 3.8521984235993147`*^9}, 3.8521988669379883`*^9, {
   3.85219970969323*^9, 3.8521997429180117`*^9}, {3.852200534703274*^9, 
   3.852200576665824*^9}, {3.852205057600168*^9, 3.8522050625028305`*^9}, {
   3.852205413336631*^9, 3.8522054361118193`*^9}, {3.852205694222887*^9, 
   3.8522057021641006`*^9}, {3.8522060208073745`*^9, 3.852206091439164*^9}, {
   3.8522061287527275`*^9, 3.852206137886194*^9}, {3.8522062658997498`*^9, 
   3.852206266698843*^9}, {3.8535372006891513`*^9, 3.853537202456873*^9}},
 CellLabel->
  "In[438]:=",ExpressionUUID->"6523e7f7-ed9b-42b9-9218-301a91a656bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"randRules", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"#", "\[Rule]", 
          RowBox[{"#", "*", 
           RowBox[{"randVals", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Key", "@", "#"}], ",", "cell"}], "]"}], "]"}]}]}], 
         ")"}], "&"}], "@", 
       RowBox[{"randExtParams", "[", 
        RowBox[{"[", "param", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"cell", ",", "numCells2D"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"param", ",", 
        RowBox[{"Length", "@", "randExtParams"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.852198240515234*^9, 3.8521983040192986`*^9}, {
   3.8521984234602103`*^9, 3.8521984235993147`*^9}, 3.8521988669379883`*^9, {
   3.85219970969323*^9, 3.8521997429180117`*^9}, {3.852200534703274*^9, 
   3.852200576665824*^9}, {3.852205057600168*^9, 3.8522050625028305`*^9}, {
   3.852205413336631*^9, 3.8522054361118193`*^9}, {3.852205694222887*^9, 
   3.8522057021641006`*^9}, {3.8522060208073745`*^9, 3.852206091439164*^9}, {
   3.8522061287527275`*^9, 3.852206137886194*^9}, {3.852206179158469*^9, 
   3.8522062696858053`*^9}, {3.8522070015702267`*^9, 3.852207039902011*^9}},
 CellLabel->
  "In[441]:=",ExpressionUUID->"fb6f5fb5-e297-43af-9ea9-94c7d70fdb6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some set up stuff", "Subsection",
 CellChangeTimes->{{3.833535953114091*^9, 
  3.8335359549402437`*^9}},ExpressionUUID->"832c5a5a-133e-4398-b255-\
00baba97022f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gcampRandVals", "=", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{
      RowBox[{"LogNormalDistribution", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[Sigma]gcamp", "2"]}], "/", "2"}], ",", 
        "\[Sigma]gcamp"}], "]"}], ",", "numCells2D"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"plcRandVals", "=", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"LogNormalDistribution", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", ".5"}], "*", 
          RowBox[{"Log", "[", 
           RowBox[{"varPLC", "+", "1"}], "]"}]}], ",", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"Log", "[", 
           RowBox[{"varPLC", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
       "numCells2D"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"maxGCAMPVal", "=", 
    RowBox[{"Max", "@", "gcampRandVals"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Needed", " ", "to", " ", "determine", " ", "how", " ", "to", " ", "scale",
     " ", "video", " ", "output", " ", "later"}], 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8309919130316396`*^9, 3.830991989289157*^9}, {
   3.8309920745630107`*^9, 3.830992084912059*^9}, {3.8311210088033776`*^9, 
   3.831121039443756*^9}, {3.8323242271341715`*^9, 3.832324229548993*^9}, {
   3.833585777197764*^9, 3.8335858266129375`*^9}, {3.848271154826762*^9, 
   3.848271166726097*^9}, {3.8511274477071495`*^9, 3.851127469261868*^9}, {
   3.851128123533311*^9, 3.851128129628352*^9}, {3.852154987627339*^9, 
   3.852155012063956*^9}, 3.852201164562254*^9, {3.852205125325794*^9, 
   3.8522051552547283`*^9}},
 CellLabel->
  "In[442]:=",ExpressionUUID->"471b69e5-97fd-40c2-aaee-61c0528a8832"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single Cell", "Subsection",
 CellChangeTimes->{{3.8207469515829787`*^9, 
  3.8207469536533947`*^9}},ExpressionUUID->"9534e195-d349-4786-a2ef-\
c905dfe4f0b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deqsTissueEQ", "=", 
   RowBox[{"deqns", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r\[Mu]T", "\[Rule]", "0."}], ",", 
      RowBox[{"lr", "\[Rule]", "0."}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.815837355368222*^9, 3.8158373712013297`*^9}, {
   3.815837409793428*^9, 3.815837416449075*^9}, {3.8158503505520525`*^9, 
   3.8158503755201917`*^9}, {3.815850572918476*^9, 3.815850632644327*^9}, {
   3.8158507251941013`*^9, 3.8158507268747587`*^9}, {3.8158508092591686`*^9, 
   3.815850928292734*^9}, {3.8158511808681717`*^9, 3.815851217106206*^9}, {
   3.8158522542658677`*^9, 3.8158522603136187`*^9}, {3.815999668775794*^9, 
   3.8159996711020823`*^9}, {3.816000725021626*^9, 3.816000725374091*^9}, {
   3.816001672709465*^9, 3.8160016734619303`*^9}, {3.8171437386305275`*^9, 
   3.8171437391810026`*^9}, {3.8171438653103867`*^9, 
   3.8171438664446845`*^9}, {3.8172315327303925`*^9, 3.817231534041114*^9}, {
   3.818788932845103*^9, 3.8187889411816435`*^9}, {3.8187890515438766`*^9, 
   3.818789059444517*^9}, {3.8187891734017124`*^9, 3.8187891747360764`*^9}, {
   3.818789363545744*^9, 3.818789363661745*^9}, 3.818789451116909*^9, {
   3.818789484137412*^9, 3.8187894857306566`*^9}, {3.8189613581868153`*^9, 
   3.8189613589611473`*^9}, {3.819046395910932*^9, 3.819046457994269*^9}, {
   3.820746109312973*^9, 3.8207461115829306`*^9}, 3.820746454802818*^9, {
   3.8207465572111053`*^9, 3.8207465684314547`*^9}, {3.820746948110322*^9, 
   3.820746949333087*^9}, 3.826035776555591*^9, {3.826840360575862*^9, 
   3.826840368956185*^9}, {3.826889180520573*^9, 3.826889184925074*^9}, {
   3.827226873777075*^9, 3.827226874919515*^9}, {3.8272327021763687`*^9, 
   3.8272327164641423`*^9}, {3.8272370165369787`*^9, 3.827237024259626*^9}, 
   3.8272378016118298`*^9, 3.8272380459290466`*^9, 3.8272381057221365`*^9, {
   3.8272405932363963`*^9, 3.827240630844635*^9}, {3.830601122999578*^9, 
   3.8306011451107283`*^9}, {3.832072728344204*^9, 3.83207273521388*^9}, {
   3.8323274572204833`*^9, 3.8323274634371796`*^9}, {3.8323278361285076`*^9, 
   3.8323278367907963`*^9}, {3.8328890780332994`*^9, 
   3.8328891345375676`*^9}, {3.832890030998435*^9, 3.8328900358077154`*^9}, {
   3.83332727272081*^9, 3.833327274405338*^9}, {3.835806861794347*^9, 
   3.835806877372183*^9}, {3.8460253156565027`*^9, 3.8460253311243887`*^9}, {
   3.8460253972528467`*^9, 3.8460254412254844`*^9}, {3.847843981801846*^9, 
   3.847843981909847*^9}},
 CellLabel->
  "In[444]:=",ExpressionUUID->"55c84874-6b8f-4043-b351-70acde34c667"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Variable", " ", "replacements", " ", "for", " ", "multiple", " ", 
    "cells"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"depVars2D", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["spec", "i"], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"spec", ",", 
         RowBox[{"{", 
          RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"variableReplacements2D", "=", 
     RowBox[{"Flatten", "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"spec", "[", "t", "]"}], "\[Rule]", 
           RowBox[{
            SubscriptBox["spec", "i"], "[", "t", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"spec", "'"}], "[", "t", "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{
             SubscriptBox["spec", "i"], "'"}], "[", "t", "]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"spec", ",", 
          RowBox[{"{", 
           RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initReplacement2D", "=", 
     RowBox[{"Flatten", "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"spec", "[", "0", "]"}], "\[Rule]", 
          RowBox[{
           SubscriptBox["spec", "i"], "[", "0", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"spec", ",", 
          RowBox[{"{", 
           RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
       "]"}]}]}], ";"}], " "}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzG8o43EAx/HFA38WLS6mo6zt1DRSuj2YQ7+ROSF/T67FXLeuOyePjHNM
5ycyf3KG8q8YcqcrmXU/JYaW7LZbl51LWcyfFu7Hg7v8e3C67+f34N3r2Vv0
orZI68fj8SQkmFPsn9JSz1Ku58ecv+m9EqhM9KiheSdfB3ffjuphb3gWDUf6
Q3tgRM32AGTH3oxAYZNuAqpKFbPQ8NBhaifepSRMwcCj66+wmi1l4NazgcXP
xETdsAUyGnvgHNE0pQqGl3/UUigTVsrgUqw9Gf7MO+dMXVk4yGtmqb5faV54
W2eV5BMb2nIfwW6t4abvA/npzZxtIXz/j8Q5RhEAMzOLHsD74fQoqBBnxEDX
tSQO0uVJ8XDC65DDYL1PBU9uGp9Cu/J7CTRE/9XACqVYCzsEs5zOgslV+EVq
3IAv+e9bjUTr/k4nnBYEDUJfdtUoFO53m2Cj7NU0tBXKLR6apcJeuzmthm8W
L/H0XQcDJU56DzpnjBdQsL11Bbtq3JyRZfPiQ6JGuymFJ/yFcbjxY9kEi/81
RA71sJTncZwQblYzIpistnGGPYmO/dTLUvO+dhFcW7flwOyoM87/HSEz9g==

  "],
 CellLabel->
  "In[445]:=",ExpressionUUID->"1b32a21e-5031-43f7-a0c1-590f20a9e128"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Putting it all together", "Subsection",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, {3.826056084745327*^9, 
   3.8260560939701853`*^9}},ExpressionUUID->"0272f906-77d0-4015-ae2a-\
a68b1f635f9f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"multiCellReplacements2D", "=", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"variableReplacements2D", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"initReplacement2D", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Bx", "\[Rule]", 
         RowBox[{"Bx", "*", 
          RowBox[{"If", "[", 
           RowBox[{"gcampRand", ",", 
            RowBox[{"gcampRandVals", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Alpha]", "\[Rule]", 
           RowBox[{"\[Alpha]", "*", 
            RowBox[{"If", "[", 
             RowBox[{"plcRand", ",", 
              RowBox[{"plcRandVals", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}], 
         ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Alpha]0", "\[Rule]", 
           RowBox[{"\[Alpha]0", "*", 
            RowBox[{"If", "[", 
             RowBox[{"plcRand", ",", 
              RowBox[{"plcRandVals", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}], 
         ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"randRules", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"jGJIP3", "\[Rule]", 
          RowBox[{"fluxIP3Terms2DUW", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"jGJc", "\[Rule]", 
          RowBox[{"fluxGJCaTerms2DUW", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"r", "\[Rule]", 
         RowBox[{"distances", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, 3.826056084745327*^9, {
   3.827226893672307*^9, 3.8272269581060147`*^9}, {3.8272270028815317`*^9, 
   3.8272270142125435`*^9}, {3.827238363167718*^9, 3.8272383721227846`*^9}, {
   3.8272385091869297`*^9, 3.827238515491295*^9}, {3.827238564773803*^9, 
   3.8272385869548006`*^9}, {3.8272388441271563`*^9, 3.827238848641945*^9}, {
   3.827239830029871*^9, 3.8272398475545716`*^9}, 3.8272399319750137`*^9, {
   3.8306083521335697`*^9, 3.830608374418307*^9}, {3.830992027494193*^9, 
   3.8309920666514263`*^9}, {3.8309921018064322`*^9, 3.830992110081744*^9}, 
   3.830992145092105*^9, {3.832328499834278*^9, 3.8323285001576104`*^9}, {
   3.832717271186232*^9, 3.832717274393113*^9}, {3.8328899492962523`*^9, 
   3.8328899504664106`*^9}, {3.833585847551302*^9, 3.833585870430434*^9}, {
   3.8335859075026855`*^9, 3.8335859119178867`*^9}, 3.8419614346238217`*^9, {
   3.8423646347675667`*^9, 3.842364634907196*^9}, {3.846025568824628*^9, 
   3.8460255713581543`*^9}, {3.846189611309152*^9, 3.8461896132853*^9}, {
   3.847843735050784*^9, 3.847843803085275*^9}, {3.8478439708661933`*^9, 
   3.8478439712074914`*^9}, {3.8480152148817225`*^9, 
   3.8480152150166883`*^9}, {3.8522056528065863`*^9, 
   3.8522056553466454`*^9}, {3.8522062965125413`*^9, 3.8522063018780737`*^9}, 
   3.8522063771842194`*^9},
 CellLabel->
  "In[448]:=",ExpressionUUID->"bf9d8d72-b8e4-46b3-bff5-6eeddd69382f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tissueCellEquationsEQ", "=", 
   RowBox[{"deqsTissueEQ", "/.", "multiCellReplacements2D"}]}], 
  ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQvTr509a28jeO/df6doBoAw2rAyD6/L0lYPobX84t
EL2K5/IdEO0zTfUviO7oeMvQDuKvL4sE0cGKetEguu693ZZOIG1x5eYOEP1J
7saylUD6wtawtSB6020TsVVA+jPjWjB9xo3tqW/tG8fwH39fgujVgQmifkDa
yOuVGIh2W/TBFETPfvALTC98fnP95MY3jiWXr28E0VtmdqhOAdIsFy+D6Tjn
yWunAulXMdzrQfTbj4oND5vfOC7pXN0IouPe9Ugs733jeGJLuCKIPuj/av4q
IH0uo2AhiP6n88RvRd8bR410lkAQnXzy+Lfa/jeOPMWrfoJorlDPeRZT3jgy
7CiaD6JT5ro4bFv+xtEl96wLiHZbeuEniP7tdRlMAwB8AcOM
  "],
 CellLabel->
  "In[449]:=",ExpressionUUID->"31158d47-174e-43bc-a5c9-78c6d56f3e81"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"tissueModelEquationsEQ", "=", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"tissueCellEquationsEQ", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "/.", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"positions", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
             RowBox[{"range", "/", "2"}]}], ",", "knockoutRules", ",", 
            RowBox[{"{", "}"}]}], "]"}]}], "/.", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"positions", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
            RowBox[{"range", "/", "2"}]}], ",", "overExpressRules", ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}], "]"}], "/.", 
     "intParams"}]}], ";"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQvTr509a28jeO/df6doBoAw2rAyD6/L0lYPobX84t
EL2K5/IdEO0zTfUviO7oeMvQDuKvL4sE0cGKetEguu693ZZOIG1x5eYOEP1J
7saylUD6wtawtSB6020TsVVA+jPjWjB9xo3tqW/tG8fwH39fgujVgQmifkDa
yOuVGIh2W/TBFETPfvALTC98fnP95MY3jiWXr28E0VtmdqhOAdIsFy+D6Tjn
yWunAulXMdzrQfTbj4oND5vfOC7pXN0IouPe9Ugs733jeGJLuCKIPuj/av4q
IH0uo2AhiP6n88RvRd8bR410lkAQnXzy+Lfa/jeOPMWrfoJorlDPeRZT3jgy
7CiaD6JT5ro4bFv+xtEl96wLiG65xLoJRCeZZ4BpsYMKv0C0ZEchmAYAzn7K
mQ==
  "],
 CellLabel->
  "In[450]:=",ExpressionUUID->"ee9ac148-de74-4ef6-b747-1eba8294abda"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tLong", "=", "300."}], ";"}], " ", 
  RowBox[{"(*", "seconds", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"framesBeforeWounding", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tissueModelSolEQ", "=", "\[IndentingNewLine]", 
   RowBox[{"ParametricNDSolveValue", "[", "\[IndentingNewLine]", 
    RowBox[{"tissueModelEquationsEQ", ",", "\[IndentingNewLine]", 
     RowBox[{"depVars2D", "/.", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", "\[Rule]", "\[Tau]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", 
          RowBox[{"tLong", "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"framesBeforeWounding", "-", "1"}], ")"}], "*", 
            "\[CapitalDelta]t"}]}], ",", "tLong", ",", "\[CapitalDelta]t"}], 
         "}"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tLong"}], "}"}], ",", 
     "\[IndentingNewLine]", "extParams", ",", "\[IndentingNewLine]", 
     RowBox[{"DependentVariables", "\[Rule]", 
      RowBox[{"Flatten", "@", "depVars2D"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Method\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<EquationSimplification\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"\"\<TimeConstraint\>\"", "\[Rule]", "100"}]}], "}"}]}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.815850935510934*^9, 3.8158509460012465`*^9}, {
   3.8158509986653643`*^9, 3.8158510166096992`*^9}, {3.815851066479927*^9, 
   3.8158511479676313`*^9}, {3.8158512195440855`*^9, 
   3.8158512207495766`*^9}, {3.8158522658868513`*^9, 3.81585226666661*^9}, {
   3.81600032865289*^9, 3.816000360666057*^9}, {3.81878934590421*^9, 
   3.818789351796474*^9}, {3.8187895705395308`*^9, 3.8187895788954916`*^9}, {
   3.8188565544822245`*^9, 3.8188565748234215`*^9}, {3.8190464720907354`*^9, 
   3.819046479157522*^9}, {3.8190480772271214`*^9, 3.8190480780182157`*^9}, {
   3.819372300088422*^9, 3.819372300241935*^9}, {3.8195477083814197`*^9, 
   3.819547709395692*^9}, {3.820835105121843*^9, 3.8208351212771935`*^9}, {
   3.8208351840177712`*^9, 3.820835277606222*^9}, {3.82083531359741*^9, 
   3.820835316680043*^9}, {3.8208408226491494`*^9, 3.8208408250844173`*^9}, {
   3.823792407850629*^9, 3.823792416120907*^9}, {3.8237924585713205`*^9, 
   3.8237924658182554`*^9}, 3.8238557989759893`*^9, {3.8238566471965246`*^9, 
   3.8238566662893934`*^9}, {3.8238567131383*^9, 3.8238567154320154`*^9}, 
   3.8243015214546595`*^9, {3.8268893937794204`*^9, 3.8268894179500875`*^9}, {
   3.826889475424861*^9, 3.8268894789280543`*^9}, 3.8268895966063337`*^9, {
   3.846026738385331*^9, 3.8460267384758825`*^9}, {3.8460272240963063`*^9, 
   3.846027224196495*^9}, {3.8535351979697866`*^9, 3.8535352017064*^9}, {
   3.8535352429932203`*^9, 3.8535352969296646`*^9}, {3.853535427833643*^9, 
   3.853535430288046*^9}, {3.853535532501477*^9, 3.8535355606226063`*^9}, {
   3.853535831155071*^9, 3.8535358312601233`*^9}, {3.8535358648119397`*^9, 
   3.8535358868842125`*^9}, {3.8535368681228905`*^9, 
   3.8535368682490025`*^9}, {3.8535369904241095`*^9, 
   3.8535370361608734`*^9}, {3.853537081507413*^9, 3.853537083639147*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"4daecc63-bc8e-4685-9f36-71137ab09417"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newEQSoln", "=", 
   RowBox[{"tissueModelSolEQ", "@@", 
    RowBox[{"(", 
     RowBox[{"finalParamAssociation", "/@", "extParams"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.846026749637018*^9, 3.8460267817701683`*^9}},
 CellLabel->
  "In[454]:=",ExpressionUUID->"67c34c4b-a64f-4759-aca4-56bb6351c0f2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newEQs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ip30", "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"ca0", "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
         RowBox[{"cER0", "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "4"}], "]"}], "]"}]}], ",", 
         RowBox[{"h0", "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}], "&"}], "@", 
    RowBox[{"(", 
     RowBox[{"Last", "@", "newEQSoln"}], ")"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8268908006467023`*^9, 3.826890955315236*^9}, {
  3.8328900533654327`*^9, 3.832890069577631*^9}, {3.8535356910090823`*^9, 
  3.853535695110982*^9}},
 CellLabel->
  "In[455]:=",ExpressionUUID->"0a37bbfd-80e6-4641-a320-6242aac744c1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full Model (new)", "Chapter",
 CellChangeTimes->{{3.8237918283478622`*^9, 3.8237918341469584`*^9}, {
  3.8237929436896863`*^9, 3.823792946841731*^9}, {3.826889153983074*^9, 
  3.8268891627194567`*^9}, {3.8272420090647964`*^9, 3.827242010264106*^9}, {
  3.827242145663601*^9, 
  3.827242146558306*^9}},ExpressionUUID->"616db7f2-1ed1-4fee-abc8-\
1112ee545338"],

Cell["RUN EQUILIBRIUM TISSUE FIRST", "Text",
 CellChangeTimes->{{3.827242026493845*^9, 
  3.82724203440492*^9}},ExpressionUUID->"3e7ca121-aca4-432c-90a1-\
c3507eabf210"],

Cell[CellGroupData[{

Cell["Single Cell", "Subsection",
 CellChangeTimes->{{3.8207469515829787`*^9, 
  3.8207469536533947`*^9}},ExpressionUUID->"a351db8a-b40b-4eac-b4bd-\
df550e596a89"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deqsTissue", "=", 
   RowBox[{"deqns", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lr", "\[Rule]", 
       RowBox[{"lrSol", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ip3", "[", "0", "]"}], "\[Equal]", "x_"}], "\[Rule]", 
       RowBox[{
        RowBox[{"ip3", "[", "0", "]"}], "\[Equal]", "ip30"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", "0", "]"}], "\[Equal]", "x_"}], "\[Rule]", 
       RowBox[{
        RowBox[{"c", "[", "0", "]"}], "\[Equal]", "ca0"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"cER", "[", "0", "]"}], "\[Equal]", "x_"}], "\[Rule]", 
       RowBox[{
        RowBox[{"cER", "[", "0", "]"}], "\[Equal]", "cER0"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"h", "[", "0", "]"}], "\[Equal]", "x_"}], "\[Rule]", 
       RowBox[{
        RowBox[{"h", "[", "0", "]"}], "\[Equal]", "h0"}]}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.815837355368222*^9, 3.8158373712013297`*^9}, {
   3.815837409793428*^9, 3.815837416449075*^9}, {3.8158503505520525`*^9, 
   3.8158503755201917`*^9}, {3.815850572918476*^9, 3.815850632644327*^9}, {
   3.8158507251941013`*^9, 3.8158507268747587`*^9}, {3.8158508092591686`*^9, 
   3.815850928292734*^9}, {3.8158511808681717`*^9, 3.815851217106206*^9}, {
   3.8158522542658677`*^9, 3.8158522603136187`*^9}, {3.815999668775794*^9, 
   3.8159996711020823`*^9}, {3.816000725021626*^9, 3.816000725374091*^9}, {
   3.816001672709465*^9, 3.8160016734619303`*^9}, {3.8171437386305275`*^9, 
   3.8171437391810026`*^9}, {3.8171438653103867`*^9, 
   3.8171438664446845`*^9}, {3.8172315327303925`*^9, 3.817231534041114*^9}, {
   3.818788932845103*^9, 3.8187889411816435`*^9}, {3.8187890515438766`*^9, 
   3.818789059444517*^9}, {3.8187891734017124`*^9, 3.8187891747360764`*^9}, {
   3.818789363545744*^9, 3.818789363661745*^9}, 3.818789451116909*^9, {
   3.818789484137412*^9, 3.8187894857306566`*^9}, {3.8189613581868153`*^9, 
   3.8189613589611473`*^9}, {3.819046395910932*^9, 3.819046457994269*^9}, {
   3.820746109312973*^9, 3.8207461115829306`*^9}, 3.820746454802818*^9, {
   3.8207465572111053`*^9, 3.8207465684314547`*^9}, {3.820746948110322*^9, 
   3.820746949333087*^9}, 3.826035776555591*^9, {3.826840360575862*^9, 
   3.826840368956185*^9}, {3.826889180520573*^9, 3.826889184925074*^9}, {
   3.827226873777075*^9, 3.827226874919515*^9}, {3.8272327021763687`*^9, 
   3.8272327164641423`*^9}, {3.8272370165369787`*^9, 3.827237024259626*^9}, 
   3.8272378016118298`*^9, 3.8272380459290466`*^9, 3.8272381057221365`*^9, {
   3.8272405932363963`*^9, 3.827240630844635*^9}, {3.8272420212104354`*^9, 
   3.8272420240788965`*^9}, 3.827242103337795*^9, {3.830601300244814*^9, 
   3.8306013240471387`*^9}, {3.831804245828209*^9, 3.8318042470457635`*^9}, {
   3.8318043530376673`*^9, 3.8318043558058076`*^9}, {3.8320727642119455`*^9, 
   3.832072769083949*^9}, {3.8320756875270147`*^9, 3.832075687949498*^9}, {
   3.8323279222671394`*^9, 3.8323279254258156`*^9}, {3.832328692939189*^9, 
   3.832328694051138*^9}, 3.8328901571028786`*^9, 3.8328906599810886`*^9, {
   3.832890727134014*^9, 3.8328907346880865`*^9}, {3.833327617008458*^9, 
   3.8333276182832675`*^9}, 3.8358071630734034`*^9, {3.846026832357744*^9, 
   3.846026840793107*^9}, {3.8460268755730534`*^9, 3.8460269363329024`*^9}},
 CellLabel->
  "In[456]:=",ExpressionUUID->"d211a356-e09f-4c46-ad93-dba5a6d5e8b5"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Making", " ", "ablated", " ", "cells", " ", "have", " ", "constant", " ", 
    RowBox[{"calcium", ".", " ", "Use"}], " ", "Dispatch", " ", "to", " ", 
    "make", " ", "things", " ", 
    RowBox[{"faster", ".", " ", "Might"}], " ", "need", " ", "to", " ", 
    "modify", " ", "things", " ", "other", " ", "than", " ", "Calcium"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ablatedChanges", "=", 
    RowBox[{"Dispatch", "@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"ablatedPos", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "x_"}], "\[Rule]", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "0"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", "x_"}], 
             "\[Rule]", 
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", 
              "cExt"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "x_"}], "\[Rule]", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "x"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", "x_"}], 
             "\[Rule]", 
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", "x"}]}]}],
            "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}]}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0VtMkmEAxnGmrUyWsWpFBzcLatmQxZo2tdOHLu2AKwNbzBm1qKkxuwnM
yFa4XAjOQijUNkMcyTpMYNJq5GKtSQKVpjlhhoe5Vl+trDC5aL3Pd/Hsd/fc
/DeerilVJrFYLCEZPHgsOf+qhqbC8mnGr7qIFIqF0XLoGilRw7Hz7fWweeV+
HWy7nWaEq1VDrZDuqGqDXK26ExbJ8hxQv37QdoO4kJ/VBVOm4n2wmpZ54UBZ
q7uHKFRbPdCrCKQ4ibauolT4fa48Ewq4JwXwaUZgB/wg+cK429f7SXKFplpG
98Tg34v9/BJibcPhzdCg1M+3XCN/9S7GhmXs5FtEpzdvCSwsLF0F/1n3roV5
vIJ0GI7zt0Ddie3bYGdsMAem1s8WwZn5ugMwIA5JoX7DLwWsEPOUsJHjYAwe
uf8CPsw0+eEZ9uXrJmL/xMhNaOcsNcPZ4lPtkDthsME6wTk7fHU0xxPV0dSK
ymHGfv0bT4z4+VKjF/KDuggMdpu+Qc7QwB/YpBpmXHP8CW+SqFC+zoQz7N57
0P/uuQ1uvSB6OUVMe7yTcXHCHILZIlEYVs0ZsywGmvqdHsiGuzSat9ApsA9D
X5N7DMaN44zs8oIfMCnX/BOu872vvkPMUfXWwDJLpRoabE0a+OzRonaY6JEy
ys9W7LMYSacsF2PGJFUMP8pCEji6UNv9oJmmlh+SO6A/Nzje56CpTVphBLoT
2mkYvWudgf8Bq6iRBw==
  "],
 CellLabel->
  "In[457]:=",ExpressionUUID->"995da45f-598e-4622-ad3e-a2bec7401af5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Putting it all together", "Subsection",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, {3.826056084745327*^9, 
   3.8260560939701853`*^9}},ExpressionUUID->"2c0dd4b7-81cd-4fc4-9812-\
16ac0ebe15f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Comapred", " ", "to", " ", "the", " ", "equilibrium", " ", "tissue"}], 
    ",", " ", 
    RowBox[{
    "we", " ", "add", " ", "in", " ", "the", " ", "new", " ", "resting", " ", 
     "levels", " ", "from", " ", "the", " ", "previous", " ", "section"}], 
    ",", " ", 
    RowBox[{
    "and", " ", "we", " ", "take", " ", "out", " ", "the", " ", "initial", 
     " ", "condition", " ", "scaling", " ", 
     RowBox[{"(", 
      RowBox[{
      "since", " ", "we", " ", "already", " ", "have", " ", "the", " ", 
       "initial", " ", "conditions", " ", "for", " ", "each", " ", "cell"}], 
      ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"multiCellReplacements2D", "=", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"newEQs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"variableReplacements2D", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"initReplacement2D", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"r\[Mu]T", "\[Rule]", 
          RowBox[{"r\[Mu]T", "*", 
           RowBox[{"\[Mu]TDist", "[", 
            RowBox[{"distances", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Bx", "\[Rule]", 
          RowBox[{"Bx", "*", 
           RowBox[{"If", "[", 
            RowBox[{"gcampRand", ",", 
             RowBox[{"gcampRandVals", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Alpha]", "\[Rule]", 
            RowBox[{"\[Alpha]", "*", 
             RowBox[{"If", "[", 
              RowBox[{"plcRand", ",", 
               RowBox[{"plcRandVals", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}],
           ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Alpha]0", "\[Rule]", 
            RowBox[{"\[Alpha]0", "*", 
             RowBox[{"If", "[", 
              RowBox[{"plcRand", ",", 
               RowBox[{"plcRandVals", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}],
           ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"randRules", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"jGJIP3", "\[Rule]", 
           RowBox[{"fluxIP3Terms2D", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"jGJc", "\[Rule]", 
           RowBox[{"fluxGJCaTerms2D", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"r", "\[Rule]", 
          RowBox[{"distances", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, 3.826056084745327*^9, {
   3.827226893672307*^9, 3.8272269581060147`*^9}, {3.8272270028815317`*^9, 
   3.8272270142125435`*^9}, {3.827238363167718*^9, 3.8272383721227846`*^9}, {
   3.8272385091869297`*^9, 3.827238515491295*^9}, {3.827238564773803*^9, 
   3.8272385869548006`*^9}, {3.8272388441271563`*^9, 3.827238848641945*^9}, {
   3.827239830029871*^9, 3.8272398475545716`*^9}, 3.8272399319750137`*^9, {
   3.8272421646889706`*^9, 3.8272421708258486`*^9}, {3.8272425104004507`*^9, 
   3.827242546519987*^9}, {3.8306084531714983`*^9, 3.8306084533711023`*^9}, {
   3.8309921353104897`*^9, 3.8309921400477123`*^9}, {3.831805620871216*^9, 
   3.831805624165031*^9}, {3.831807208583192*^9, 3.8318072088043613`*^9}, {
   3.8323288408883753`*^9, 3.8323288410278077`*^9}, {3.8328906929266872`*^9, 
   3.8328906932331386`*^9}, {3.833585990152383*^9, 3.8335859903393974`*^9}, 
   3.841961584001182*^9, {3.842364645289173*^9, 3.842364645429821*^9}, {
   3.8460270772633553`*^9, 3.8460271097936373`*^9}, {3.8461896183506365`*^9, 
   3.8461896207922335`*^9}, {3.8478440140265512`*^9, 3.847844043860664*^9}, {
   3.8480152321118503`*^9, 3.8480152371727886`*^9}, {3.848103816751813*^9, 
   3.8481038169016495`*^9}, {3.852206404413262*^9, 3.8522064143177185`*^9}},
 CellLabel->
  "In[458]:=",ExpressionUUID->"ebece77b-1369-47ba-b876-2f12e2b7b16c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Break", " ", "into", " ", "separate", " ", "steps", " ", "to", " ", 
    "speed", " ", "up", " ", "ablation", " ", "replacements"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tissueCellEquations", "=", 
     RowBox[{"deqsTissue", "/.", "multiCellReplacements2D"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tissueModelEquations", "=", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"tissueCellEquations", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "/.", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"ablatedPos", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], 
                  "\[Equal]", "x_"}], "\[Rule]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], 
                  "\[Equal]", "0"}]}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", 
                  "x_"}], "\[Rule]", 
                 RowBox[{
                  RowBox[{
                   SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", 
                  "cExt"}]}]}], "}"}], ",", 
              RowBox[{"{", "}"}]}], "]"}]}], "/.", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"positions", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
              RowBox[{"range", "/", "2"}]}], ",", "knockoutRules", ",", 
             RowBox[{"{", "}"}]}], "]"}]}], "/.", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"positions", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
             RowBox[{"range", "/", "2"}]}], ",", "overExpressRules", ",", 
            RowBox[{"{", "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}], "]"}], "/.", 
      "intParams"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, {3.8260329402687626`*^9, 3.8260329426192646`*^9}, {
   3.8260360766019735`*^9, 3.826036088355092*^9}, {3.827239937060782*^9, 
   3.827239949360552*^9}, {3.831804365319412*^9, 3.831804367592826*^9}, 
   3.8318056079315333`*^9, {3.831807213949911*^9, 3.831807215496257*^9}, {
   3.831809869850851*^9, 3.831809886289317*^9}, 3.8318099220327415`*^9, {
   3.8318099855078697`*^9, 3.8318100218273015`*^9}, {3.8318103889443903`*^9, 
   3.8318104003876157`*^9}, {3.831810438481258*^9, 3.831810483882758*^9}, {
   3.8318105463800983`*^9, 3.8318105484102726`*^9}, {3.8318105860676727`*^9, 
   3.831810590051114*^9}, {3.832365157066003*^9, 3.8323651674711018`*^9}, {
   3.832370481844284*^9, 3.83237048974708*^9}, {3.8328907031117268`*^9, 
   3.8328907063524866`*^9}, {3.833327629451953*^9, 3.8333276409663305`*^9}, {
   3.8358076883272552`*^9, 3.835807692263531*^9}, {3.8460270592409954`*^9, 
   3.84602706469526*^9}, 3.8460640539003153`*^9},
 CellLabel->
  "In[459]:=",ExpressionUUID->"22ae26ac-87e0-4e8a-a57f-3a76e91d5ba1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tissueModelSol", "=", "\[IndentingNewLine]", 
    RowBox[{"ParametricNDSolveValue", "[", "\[IndentingNewLine]", 
     RowBox[{"tissueModelEquations", ",", "\[IndentingNewLine]", 
      RowBox[{"depVars2D", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "3"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "400."}], "}"}], ",", 
      "\[IndentingNewLine]", "extParams", ",", "\[IndentingNewLine]", 
      RowBox[{"DependentVariables", "\[Rule]", 
       RowBox[{"Flatten", "@", "depVars2D"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Method\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<EquationSimplification\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"\"\<TimeConstraint\>\"", "\[Rule]", "100"}]}], "}"}]}], 
        "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.815850935510934*^9, 3.8158509460012465`*^9}, {
   3.8158509986653643`*^9, 3.8158510166096992`*^9}, {3.815851066479927*^9, 
   3.8158511479676313`*^9}, {3.8158512195440855`*^9, 
   3.8158512207495766`*^9}, {3.8158522658868513`*^9, 3.81585226666661*^9}, {
   3.81600032865289*^9, 3.816000360666057*^9}, {3.81878934590421*^9, 
   3.818789351796474*^9}, {3.8187895705395308`*^9, 3.8187895788954916`*^9}, {
   3.8188565544822245`*^9, 3.8188565748234215`*^9}, {3.8190464720907354`*^9, 
   3.819046479157522*^9}, {3.8190480772271214`*^9, 3.8190480780182157`*^9}, {
   3.819372300088422*^9, 3.819372300241935*^9}, {3.8195477083814197`*^9, 
   3.819547709395692*^9}, {3.820835105121843*^9, 3.8208351212771935`*^9}, {
   3.8208351840177712`*^9, 3.820835277606222*^9}, {3.82083531359741*^9, 
   3.820835316680043*^9}, {3.8208408226491494`*^9, 3.8208408250844173`*^9}, {
   3.823792407850629*^9, 3.823792416120907*^9}, {3.8237924585713205`*^9, 
   3.8237924658182554`*^9}, 3.8238557989759893`*^9, {3.8238566471965246`*^9, 
   3.8238566662893934`*^9}, {3.8238567131383*^9, 3.8238567154320154`*^9}, 
   3.8243015214546595`*^9, {3.8268893937794204`*^9, 3.8268894179500875`*^9}, {
   3.826889475424861*^9, 3.8268894789280543`*^9}, 3.8268895966063337`*^9, {
   3.8272423242838273`*^9, 3.8272423469827924`*^9}, {3.8328907837486134`*^9, 
   3.8328907881606064`*^9}},
 CellLabel->
  "In[461]:=",ExpressionUUID->"f7f18b1f-0380-4c3e-935d-76670aa73571"],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"tissueModelSol", "@@", 
    RowBox[{"(", 
     RowBox[{"finalParamAssociation", "/@", "extParams"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8208353300834208`*^9, 3.820835334856078*^9}, {
   3.820835519795843*^9, 3.8208355902402844`*^9}, 3.820841280676635*^9, {
   3.820841389141342*^9, 3.820841389269723*^9}, {3.820841469548337*^9, 
   3.820841470340723*^9}, {3.8208415292324915`*^9, 3.8208415418677173`*^9}, {
   3.8208417023802767`*^9, 3.8208417027177057`*^9}, {3.820848483946121*^9, 
   3.82084848418559*^9}, {3.820848726382415*^9, 3.8208487265182843`*^9}, {
   3.820849827466297*^9, 3.8208498276031013`*^9}, {3.820849871664625*^9, 
   3.8208498717851133`*^9}, {3.823792483509634*^9, 3.8237924841185675`*^9}, 
   3.824301666114005*^9, {3.8243165917439127`*^9, 3.8243165947033243`*^9}, {
   3.824316655536581*^9, 3.8243166556971283`*^9}, {3.8243167501994925`*^9, 
   3.8243167514636164`*^9}, {3.824378616563017*^9, 3.8243786186499143`*^9}, {
   3.8260562048505993`*^9, 3.8260562162512856`*^9}, {3.8260562613445663`*^9, 
   3.826056268245102*^9}, {3.8260564090317717`*^9, 3.8260564142465906`*^9}, {
   3.82689122563451*^9, 3.8268912273206663`*^9}, {3.8271811985015483`*^9, 
   3.827181200673194*^9}, {3.8271816453311453`*^9, 3.8271816466495657`*^9}, {
   3.8271819662911997`*^9, 3.827181967112*^9}, {3.82724239535752*^9, 
   3.8272424027645364`*^9}, {3.8286152053602123`*^9, 
   3.8286152082844744`*^9}, {3.830601362033525*^9, 3.8306013633233547`*^9}, {
   3.846064068784148*^9, 3.8460640776660867`*^9}},
 CellLabel->
  "In[462]:=",ExpressionUUID->"bb66a1e4-be39-426f-8cea-17db3d08a56c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testG", "=", 
   RowBox[{"CtoF", "/@", "test"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8208356270472713`*^9, 3.8208356563281317`*^9}, 
   3.8208413418107004`*^9},
 CellLabel->
  "In[463]:=",ExpressionUUID->"1901acc0-e5d6-424c-be3e-974fc73dc7b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animation", "Subsection",
 CellChangeTimes->{{3.8237929524237785`*^9, 
  3.8237929546666975`*^9}},ExpressionUUID->"1500a668-c033-4a11-933f-\
4c366b03cb25"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Set", " ", "frames", " ", "before", " ", "wounding", " ", "to", " ", "be", 
   " ", "resting", " ", "calcium", " ", "levels"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8318108950298295`*^9, 3.8318109381141624`*^9}, 
   3.8323341730991573`*^9, {3.8324088708286533`*^9, 3.832408871283579*^9}},
 CellLabel->
  "In[464]:=",ExpressionUUID->"28be7e76-b8a9-4bc2-b00c-9f84f1565ef5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"animate2D", "[", "soln_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "timePoints", ",", "minF", ",", "maxF", ",", "styles", ",", "animList", 
      ",", "frames"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"timePoints", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"CtoF", "@", 
         RowBox[{"(", 
          RowBox[{"newEQSoln", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", ";;", ",", "3"}], "]"}], "]"}], ")"}]}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"soln", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", "\[Tau]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\[Tau]", ",", "0.1", ",", "400.1", ",", "\[CapitalDelta]t"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"minF", "=", ".12"}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxF", "=", "1."}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"styles", "=", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "i"}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"ablatedPos", ",", "i"}], "]"}], "&&", 
             RowBox[{"\[Tau]", ">", "framesBeforeWounding"}]}], ",", "Black", 
            ",", 
            RowBox[{"GrayLevel", "[", 
             RowBox[{"Min", "[", 
              RowBox[{"maxF", ",", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"gcampRand", ",", 
                  RowBox[{"gcampRandVals", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}], "*", 
                RowBox[{"Rescale", "[", 
                 RowBox[{
                  RowBox[{"timePoints", "[", 
                   RowBox[{"[", 
                    RowBox[{"\[Tau]", ",", "i"}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"minInt", ",", 
                    RowBox[{"maxInt", "*", "maxGCAMPVal"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"minF", ",", "maxF"}], "}"}]}], "]"}]}]}], "]"}], 
             "]"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Tau]", ",", 
          RowBox[{"Length", "@", "timePoints"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"animList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HighlightMesh", "[", 
         RowBox[{"mesh", ",", "#", ",", 
          RowBox[{"MeshCellStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Opacity", "[", "0", "]"}], ",", 
               RowBox[{"Antialiasing", "\[Rule]", "False"}]}], "]"}]}], 
            "}"}]}]}], "]"}], "&"}], "/@", "styles"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"frames", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Show", "[", 
          RowBox[{"#1", ",", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<t = \>\"", "<>", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]t", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "-", 
                    RowBox[{"(", 
                    RowBox[{"framesBeforeWounding", "+", "1"}], ")"}]}], 
                    ")"}]}], ",", ".1"}], "]"}], "]"}], "<>", "\"\< s\>\""}], 
                  ",", "White", ",", "18"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"75", ",", "35"}], "}"}]}], "]"}], ",", "White", ",", 
              RowBox[{"Thickness", "@", ".025"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{".75", "*", "range"}], ",", 
                   RowBox[{".1", "*", "range"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{".75", "*", "range"}], "+", "50"}], ",", 
                   RowBox[{".1", "*", "range"}]}], "}"}]}], "}"}], "]"}]}], 
             "}"}], "]"}]}], "]"}], "&"}], ",", "animList"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "frames", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ListAnimate", "[", 
     RowBox[{"frames", ",", "7"}], "]"}], "*)"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.758284567431217*^9, 3.7582846272947483`*^9}, {
   3.758284882128977*^9, 3.758284889286543*^9}, {3.758284919703703*^9, 
   3.758284981011743*^9}, 3.823792969383465*^9, {3.8237930235310607`*^9, 
   3.823793026170868*^9}, {3.823793213073285*^9, 3.823793248990878*^9}, {
   3.8237933313637085`*^9, 3.8237933339817624`*^9}, {3.8237933657848854`*^9, 
   3.8237933705583353`*^9}, 3.8237934063571815`*^9, {3.8238625363530283`*^9, 
   3.8238625379432516`*^9}, {3.8238625873087525`*^9, 3.823862659831546*^9}, {
   3.8285294518477087`*^9, 3.828529467764728*^9}, {3.8285295911344504`*^9, 
   3.8285295976542544`*^9}, {3.8285299651000395`*^9, 3.828529994724305*^9}, {
   3.828530106340125*^9, 3.8285301548588333`*^9}, {3.8285302676797733`*^9, 
   3.8285303237191105`*^9}, {3.8285311290820055`*^9, 
   3.8285311341809464`*^9}, {3.828531765137025*^9, 3.8285317725971146`*^9}, {
   3.8285328112274537`*^9, 3.8285328124521427`*^9}, 3.828533257346529*^9, {
   3.8306117443034797`*^9, 3.830611746782955*^9}, {3.830992352711447*^9, 
   3.8309923556951704`*^9}, {3.8309924290668383`*^9, 
   3.8309924499742365`*^9}, {3.8311210670282574`*^9, 3.8311210697226257`*^9}, 
   3.8311211707766314`*^9, {3.8318044040355177`*^9, 3.83180444267688*^9}, {
   3.8318046080702877`*^9, 3.831804647170457*^9}, {3.831810857609064*^9, 
   3.8318108837091713`*^9}, {3.8324087961018353`*^9, 
   3.8324087999053297`*^9}, {3.8328909647598467`*^9, 
   3.8328909648793955`*^9}, {3.847402466927994*^9, 3.8474024692801266`*^9}, {
   3.8484449248754854`*^9, 3.848444966353299*^9}, {3.8486542717404647`*^9, 
   3.8486542757218647`*^9}, {3.852206847121745*^9, 3.852206927300965*^9}, {
   3.853536717649434*^9, 3.85353674277582*^9}, {3.853536794951965*^9, 
   3.8535368329535055`*^9}, {3.8535370578674254`*^9, 3.853537072432684*^9}},
 CellLabel->
  "In[465]:=",ExpressionUUID->"a2779cad-e497-4e8a-98c5-569164824c36"],

Cell[BoxData[
 RowBox[{
  RowBox[{"frames2D", "=", 
   RowBox[{"animate2D", "[", "testG", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758285038257244*^9, 3.7582850536866913`*^9}, {
   3.7582868131838565`*^9, 3.758286825672124*^9}, 3.7585572694071145`*^9, {
   3.823793378580084*^9, 3.823793384618803*^9}, {3.8238626636694365`*^9, 
   3.8238626645344477`*^9}},
 CellLabel->
  "In[466]:=",ExpressionUUID->"859dd25a-c394-4ce4-a00b-c99f5bd77267"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"frames2D", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.7582854776272025`*^9, 3.758285513616075*^9}, {
  3.758286831006818*^9, 3.758286832502891*^9}, {3.8320729710319214`*^9, 
  3.832072973438443*^9}, {3.832075723440464*^9, 3.8320757252203693`*^9}},
 CellLabel->
  "In[467]:=",ExpressionUUID->"96455a68-f53c-44ed-8e72-0116caba5b08"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"FREE", " ", "CALCIUM"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"animate2Dcalc", "[", "soln_", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "timePoints", ",", "minF", ",", "maxF", ",", "styles", ",", "animList",
         ",", "frames"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"timePoints", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"newEQSoln", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", ";;", ",", "3"}], "]"}], "]"}], ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"soln", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "/.", 
             RowBox[{"t", "\[Rule]", "\[Tau]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
             "\[Tau]", ",", "0.1", ",", "400.1", ",", "\[CapitalDelta]t"}], 
             "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"styles", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "i"}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"ablatedPos", ",", "i"}], "]"}], "&&", 
               RowBox[{"\[Tau]", ">", "framesBeforeWounding"}]}], ",", 
              "Black", ",", 
              RowBox[{"HotColor", "[", 
               RowBox[{"Rescale", "[", 
                RowBox[{
                 RowBox[{"timePoints", "[", 
                  RowBox[{"[", 
                   RowBox[{"\[Tau]", ",", "i"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.0884695559645682`", ",", 
                   RowBox[{"1.4", "/", "2"}]}], "}"}]}], "]"}], "]"}]}], 
             "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", 
            RowBox[{"Length", "@", "timePoints"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"animList", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"HighlightMesh", "[", 
           RowBox[{"mesh", ",", "#", ",", 
            RowBox[{"MeshCellStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"Opacity", "[", "0", "]"}], ",", 
                 RowBox[{"Antialiasing", "\[Rule]", "False"}]}], "]"}]}], 
              "}"}]}]}], "]"}], "&"}], "/@", "styles"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"frames", "=", 
        RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Show", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{"White", ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"\"\<t = \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]t", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "-", "11"}], ")"}]}], 
                    ",", ".1"}], "]"}], "]"}], "<>", "\"\< s\>\""}], ",", 
                    "White", ",", "18"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"75", ",", "35"}], "}"}]}], "]"}], ",", "White", 
                ",", 
                RowBox[{"Thickness", "@", ".025"}], ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{".75", "*", "range"}], ",", 
                    RowBox[{".1", "*", "range"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{".75", "*", "range"}], "+", "50"}], ",", 
                    RowBox[{".1", "*", "range"}]}], "}"}]}], "}"}], "]"}]}], 
               "}"}], "]"}]}], "]"}], "&"}], ",", "animList"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "frames", "]"}]}]}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"ListAnimate", "[", 
       RowBox[{"frames", ",", "7"}], "]"}], "*)"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"frames2Dcalc", "=", 
     RowBox[{"animate2Dcalc", "[", "test", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8555216074331055`*^9, 3.8555216802639313`*^9}, {
  3.8555635980199337`*^9, 3.855563614616763*^9}, {3.855564231509268*^9, 
  3.8555642589446683`*^9}},ExpressionUUID->"423fde94-ef94-4c87-9121-\
daea368e0c7e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"FREE", " ", "CALCIUM", " ", "OLD"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"animate2Dcalc", "[", "soln_", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "timePoints", ",", "minF", ",", "maxF", ",", "styles", ",", "animList",
         ",", "frames"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"timePoints", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"soln", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/.", 
           RowBox[{"t", "\[Rule]", "\[Tau]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\[Tau]", ",", "0.1", ",", "400.1", ",", "\[CapitalDelta]t"}], 
           "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"styles", "=", 
        RowBox[{"Join", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "i"}], "}"}], ",", 
              RowBox[{"HotColor", "[", 
               RowBox[{"Rescale", "[", 
                RowBox[{
                 RowBox[{"newEQSoln", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0.0884695559645682`", ",", 
                   RowBox[{"1.4", "/", "2"}]}], "}"}]}], "]"}], "]"}]}], 
             "]"}], ",", "10", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "i"}], "}"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"MemberQ", "[", 
                 RowBox[{"ablatedPos", ",", "i"}], "]"}], ",", "Black", ",", 
                RowBox[{"HotColor", "[", 
                 RowBox[{"Rescale", "[", 
                  RowBox[{
                   RowBox[{"timePoints", "[", 
                    RowBox[{"[", 
                    RowBox[{"\[Tau]", ",", "i"}], "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.0884695559645682`", ",", 
                    RowBox[{"1.4", "/", "2"}]}], "}"}]}], "]"}], "]"}]}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Tau]", ",", 
              RowBox[{"Length", "@", "timePoints"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"animList", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"HighlightMesh", "[", 
           RowBox[{"mesh", ",", "#", ",", 
            RowBox[{"MeshCellStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"1", "\[Rule]", 
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"Opacity", "[", "0", "]"}], ",", 
                 RowBox[{"Antialiasing", "\[Rule]", "False"}]}], "]"}]}], 
              "}"}]}]}], "]"}], "&"}], "/@", "styles"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"frames", "=", 
        RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"Show", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"Graphics", "[", 
              RowBox[{"{", 
               RowBox[{"White", ",", 
                RowBox[{"Text", "[", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"\"\<t = \>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]t", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "-", "11"}], ")"}]}], 
                    ",", ".1"}], "]"}], "]"}], "<>", "\"\< s\>\""}], ",", 
                    "White", ",", "18"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"75", ",", "35"}], "}"}]}], "]"}], ",", "White", 
                ",", 
                RowBox[{"Thickness", "@", ".025"}], ",", 
                RowBox[{"Line", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{".75", "*", "range"}], ",", 
                    RowBox[{".1", "*", "range"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{".75", "*", "range"}], "+", "50"}], ",", 
                    RowBox[{".1", "*", "range"}]}], "}"}]}], "}"}], "]"}]}], 
               "}"}], "]"}]}], "]"}], "&"}], ",", "animList"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "frames", "]"}]}]}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"ListAnimate", "[", 
       RowBox[{"frames", ",", "7"}], "]"}], "*)"}], "]"}]}], "\n", 
   RowBox[{
    RowBox[{"frames2Dcalc", "=", 
     RowBox[{"animate2Dcalc", "[", "test", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8555216074331055`*^9, 3.8555216802639313`*^9}, {
  3.855563587603917*^9, 
  3.855563588078554*^9}},ExpressionUUID->"5006055b-5752-483e-8dac-\
f40b7f700935"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Jump The Gap", "Title",
 CellChangeTimes->{{3.8460192390145454`*^9, 3.8460192405544653`*^9}, {
  3.8521540950144253`*^9, 
  3.852154096788204*^9}},ExpressionUUID->"48700697-8b8d-4059-8ff3-\
236359ee1270"],

Cell["\<\
Originally copied from final model section above, so some comments might not \
apply or make sense\
\>", "Text",
 CellChangeTimes->{{3.8521541054164743`*^9, 
  3.852154128253834*^9}},ExpressionUUID->"b0a2aca6-edb0-4462-bcb5-\
091a3f36eae2"],

Cell["\<\
Final code for testing a parameter set chosen above. This code is tested \
using the \[OpenCurlyDoubleQuote]zoomed in mesh\[CloseCurlyDoubleQuote], but \
the goal is to move this to ACCRE to run on the full mesh. Ideally only the \
Initialization section as well as this section are the only things that will \
need to go to ACCRE; the other sections should be removed when making the \
ACCRE notebook, as they are just for the purpose of testing the parameters.\
\>", "Text",
 CellChangeTimes->{{3.8460192454057055`*^9, 
  3.8460193732380795`*^9}},ExpressionUUID->"fd74044c-acaf-41b3-b334-\
57f84d4dd2f8"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"finalParamAssociation", "=", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"r\[Mu]T", "\[Rule]", "41.14497773461118`"}], ",", 
      RowBox[{"\[Tau]Heal", "\[Rule]", "5.25`"}], ",", 
      RowBox[{"rPMCA", "\[Rule]", "0.12`"}], ",", 
      RowBox[{"kPMCA", "\[Rule]", "0.1`"}], ",", 
      RowBox[{"rSOC", "\[Rule]", "0.15000000000000002`"}], ",", 
      RowBox[{"\[Eta]NCX", "\[Rule]", "10.`"}], ",", 
      RowBox[{"nNCX", "\[Rule]", "2.5`"}], ",", 
      RowBox[{"kNCX", "\[Rule]", "1.6`"}], ",", 
      RowBox[{"rlkPM", "\[Rule]", "0.00025`"}], ",", 
      RowBox[{"\[Alpha]", "\[Rule]", "0.9`"}], ",", 
      RowBox[{"\[Alpha]0", "\[Rule]", "0.1`"}], ",", 
      RowBox[{"kl", "\[Rule]", "0.05`"}], ",", 
      RowBox[{"nl", "\[Rule]", "5.`"}], ",", 
      RowBox[{"Kc", "\[Rule]", "0.4`"}], ",", 
      RowBox[{"\[Eta]IPR", "\[Rule]", "4.`"}], ",", 
      RowBox[{"\[Eta]SERCA", "\[Rule]", "5.`"}], ",", 
      RowBox[{"kSERCA1", "\[Rule]", "0.1`"}], ",", 
      RowBox[{"kSERCA2", "\[Rule]", "0.`"}], ",", 
      RowBox[{"\[Eta]lkER", "\[Rule]", "0.01`"}], ",", 
      RowBox[{"Bx", "\[Rule]", "5.`"}], ",", 
      RowBox[{"\[Eta]GJIP3", "\[Rule]", "4.`"}], ",", 
      RowBox[{"\[Eta]GJc", "\[Rule]", "2.`"}], ",", 
      RowBox[{"connectAblated", "\[Rule]", "0.025`"}]}], 
     "\[RightAssociation]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    "FINAL", " ", "PARAMETER", " ", "DEFINED", " ", "IN", " ", "FINAL", " ", 
    "MODEL", " ", 
    RowBox[{"SECTION", ".", " ", "So"}], " ", "I", " ", "am", " ", "not", " ",
     "splitting", " ", "up", " ", "where", " ", "the", " ", "parameters", " ",
     "are", " ", "being", " ", "set"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8460205611047187`*^9, 3.8460205621633673`*^9}, {
   3.846189463608893*^9, 3.8461894638162403`*^9}, 3.846257318228273*^9, 
   3.8462573793525143`*^9, 3.8474114871378155`*^9, 3.8481036387075367`*^9, 
   3.848357489637735*^9, 3.850344656594291*^9, 3.85112818259721*^9, {
   3.8521541592178907`*^9, 
   3.8521541917013364`*^9}},ExpressionUUID->"aaf3afa6-2ed4-495e-8aee-\
a19d19e8a934"],

Cell[CellGroupData[{

Cell["Initializations", "Chapter",
 CellChangeTimes->{{3.846020674183674*^9, 3.846020691706911*^9}, {
  3.846064449751243*^9, 
  3.846064460420183*^9}},ExpressionUUID->"c206c33b-2caf-4ef2-9c37-\
f91c42336622"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "List", " ", "of", " ", "strings", " ", "to", " ", "specify", " ", 
     "model", " ", "components", " ", "to", " ", "knockout", " ", "by", " ", 
     "70", "%", " ", "in", " ", "one", " ", "half", " ", "of", " ", "the", 
     " ", 
     RowBox[{"tissue", ".", " ", "Current"}], " ", "options", " ", "are", " ",
      "GJ"}], ",", " ", "PLC", ",", " ", "SERCA", ",", " ", "SOC", ",", " ", 
    RowBox[{
     RowBox[{"PMCA", ".", " ", "Note"}], " ", "that", " ", "GJs", " ", "are", 
     " ", "handled", " ", "separately", " ", "when", " ", "GJ", " ", "terms", 
     " ", "are", " ", "made"}], ",", " ", 
    RowBox[{
     RowBox[{
     "since", " ", "the", " ", "GJ", " ", "parameters", " ", "are", " ", 
      "specific", " ", "to", " ", "cell"}], "-", 
     RowBox[{
     "cell", " ", "boundaries", " ", "rather", " ", "than", " ", "single", 
      " ", 
      RowBox[{"cells", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"knockoutVal", "=", ".3"}], 
    RowBox[{"(*", 
     RowBox[{
     "percentage", " ", "to", " ", "keep", " ", "for", " ", "knockout", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"so", " ", "1"}], " ", "-", " ", 
        RowBox[{"this", " ", "for", " ", "percent", " ", "knockdown"}]}], 
       ")"}]}], "*)"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"knockoutList", "=", 
     RowBox[{"{", "\"\<PLC\>\"", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "knockout", " ", "commands", " ", "that", " ", "do", " ", "not", " ", 
     "require", " ", "user", " ", "input"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"knockoutAssociations", "=", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"<|", 
        RowBox[{
         RowBox[{"\"\<GJ\>\"", "\[Rule]", "Nothing"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<PLC\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"{", 
            RowBox[{"\[Alpha]", "\[Rule]", 
             RowBox[{"#", "*", "\[Alpha]"}]}], 
            RowBox[{"(*", 
             RowBox[{",", 
              RowBox[{"\[Alpha]0", "\[Rule]", 
               RowBox[{"#", "*", "\[Alpha]0"}]}]}], "*)"}], "}"}], ")"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"\"\<SERCA\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"\[Eta]SERCA", "\[Rule]", 
            RowBox[{"#", "*", "\[Eta]SERCA"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<SOC\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"\[Eta]SOC", "\[Rule]", 
            RowBox[{"#", "*", "\[Eta]SOC"}]}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<PMCA\>\"", "\[Rule]", 
          RowBox[{"(", 
           RowBox[{"\[Eta]PMCA", "\[Rule]", 
            RowBox[{"#", "*", "\[Eta]PMCA"}]}], ")"}]}]}], "|>"}], "&"}], "@",
       "knockoutVal"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"knockoutRules", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"knockoutAssociations", "/@", "knockoutList"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.827179364005952*^9, 3.8271793874442997`*^9}, {
   3.8271805206337786`*^9, 3.827180522920491*^9}, {3.8271826943333845`*^9, 
   3.827182699387295*^9}, {3.827242903629511*^9, 3.8272429091104593`*^9}, {
   3.827358198836939*^9, 3.827358201665182*^9}, {3.8286131306548767`*^9, 
   3.8286131358358107`*^9}, {3.828614107548217*^9, 3.8286141079457483`*^9}, {
   3.82861532938661*^9, 3.8286153306630793`*^9}, {3.8286155217394276`*^9, 
   3.828615522104452*^9}, {3.8291257093025637`*^9, 3.8291257107616467`*^9}, {
   3.829345105269735*^9, 3.8293451112049875`*^9}, {3.8297783027246456`*^9, 
   3.8297783040396433`*^9}, {3.830601021843954*^9, 3.830601023517907*^9}, {
   3.830943914853161*^9, 3.8309440467628264`*^9}, {3.830944137793647*^9, 
   3.8309441881772747`*^9}, {3.830991825192729*^9, 3.8309918469699893`*^9}, {
   3.831730714236368*^9, 3.8317307900306883`*^9}, {3.831735364315231*^9, 
   3.831735364517955*^9}, {3.8322054569935813`*^9, 3.8322055333666453`*^9}, {
   3.83220563584507*^9, 3.8322056427360487`*^9}, {3.8322056872406645`*^9, 
   3.832205695436123*^9}, {3.832205729080778*^9, 3.832205734836997*^9}, {
   3.832205829781869*^9, 3.832205831295498*^9}, {3.83220596708339*^9, 
   3.8322062401184072`*^9}, {3.832206279993104*^9, 3.832206413419774*^9}, 
   3.832321905955312*^9, {3.8323225139465356`*^9, 3.8323225337338743`*^9}, {
   3.832334314848716*^9, 3.8323343308024244`*^9}, {3.8323344798873425`*^9, 
   3.832334496838752*^9}, {3.83233468235277*^9, 3.832334683007225*^9}, {
   3.8323696331148987`*^9, 3.8323696337365355`*^9}, {3.8323700042242556`*^9, 
   3.832370026003986*^9}, {3.8323701512921476`*^9, 3.8323702960196366`*^9}, {
   3.8324082388762913`*^9, 3.8324082448644094`*^9}, {3.8328010964159756`*^9, 
   3.8328010972552977`*^9}, {3.8328880955047293`*^9, 
   3.8328881056525197`*^9}, {3.8333273355576224`*^9, 3.833327393907683*^9}, {
   3.8333280530002775`*^9, 3.833328053746929*^9}, {3.833412071572592*^9, 
   3.833412077478315*^9}, {3.8334469770006247`*^9, 3.833447013624609*^9}, {
   3.833448848587971*^9, 3.8334488517528534`*^9}, {3.833535526756957*^9, 
   3.8335355367441006`*^9}, {3.83353574579655*^9, 3.8335358213297186`*^9}, {
   3.8335358582380733`*^9, 3.8335359065139694`*^9}, {3.8335360463314433`*^9, 
   3.8335360836378264`*^9}, {3.833536118707966*^9, 3.8335361224347525`*^9}, {
   3.8335856735031157`*^9, 3.833585739697442*^9}, {3.8335858010118504`*^9, 
   3.833585801510857*^9}, {3.8358069048170652`*^9, 3.8358069061418324`*^9}, {
   3.8359529852459373`*^9, 3.835952985555745*^9}, {3.838119520446247*^9, 
   3.8381195279826684`*^9}, {3.8460207140472884`*^9, 
   3.8460207246924686`*^9}, {3.8460644756920424`*^9, 
   3.8460644770071507`*^9}, {3.84606458778082*^9, 3.846064592568492*^9}, {
   3.846064776823372*^9, 3.8460647867122765`*^9}, {3.8461015359621954`*^9, 
   3.8461015708032537`*^9}, {3.846101714686349*^9, 3.846101715337779*^9}, {
   3.852154298451228*^9, 3.8521543168742476`*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"a734aa5e-5306-47d5-9359-591c843773f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"gjRand", "=", "True"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"True", " ", "=", " ", 
    RowBox[{
    "give", " ", "each", " ", "cell", " ", "a", " ", "random", " ", "GJ", " ",
      "parameter", " ", "the", " ", "tissue", " ", 
     RowBox[{"model", ".", " ", "Value"}], " ", "for", " ", "a", " ", 
     "border", " ", "determined", " ", "by", " ", "smallest", " ", "value", 
     " ", "of", " ", "the", " ", "two", " ", "cells", " ", "that", " ", 
     "share", " ", "that", " ", "border"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]GJ", "=", ".4"}], ";", 
   RowBox[{"(*", 
    RowBox[{
    "\[Sigma]", " ", "parameter", " ", "for", " ", "GJ", " ", "randomness"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"gjPolarize", "=", "False"}], ";", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"True", " ", "=", " ", 
      RowBox[{
      "multiply", " ", "GJ", " ", "params", " ", "by", " ", "sin\[Theta]"}]}],
      ",", " ", 
     RowBox[{
     "where", " ", "\[Theta]", " ", "is", " ", "the", " ", "angle", " ", 
      "between", " ", "the", " ", "radial", " ", "vector", " ", "to", " ", 
      "a", " ", "cell", " ", "edge", " ", "and", " ", "the", " ", "direction",
       " ", "of", " ", "the", " ", "cell", " ", "edge"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"gcampRand", "=", "True"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"True", " ", "=", " ", 
    RowBox[{
    "randomize", " ", "the", " ", "amount", " ", "of", " ", "GCaMP", " ", 
     "in", " ", "each", " ", 
     RowBox[{"cell", ".", " ", "The"}], " ", "random", " ", "scale", " ", 
     "will", " ", "also", " ", "scale", " ", "the", " ", "fluorescence", " ", 
     "values", " ", "of", " ", "the", " ", "model", " ", "output"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]gcamp", "=", ".1"}], ";", 
   RowBox[{"(*", 
    RowBox[{
    "\[Sigma]", " ", "parameter", " ", "for", " ", "gcamp", " ", 
     "randomizer"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"plcRand", "=", "True"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"True", " ", "=", " ", 
    RowBox[{"randomize", " ", "PLC", " ", 
     RowBox[{"(", 
      RowBox[{"parameter", " ", "\[Alpha]"}], ")"}], " ", "between", " ", 
     "cells"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"varPLC", "=", ".225"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
   "standard", " ", "deviation", " ", "for", " ", "PLC", " ", "randomizer"}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"connectAblated", "=", "0.015"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "parameter", " ", "to", " ", "connect", " ", "the", " ", "ablated", " ", 
     "region", " ", "to", " ", "the", " ", "rest", " ", "of", " ", "the", " ", 
     RowBox[{"tissue", ".", " ", "The"}], " ", "range", " ", "can", " ", "be",
      " ", "1", " ", 
     RowBox[{"(", 
      RowBox[{"full", " ", "connection"}], ")"}], " ", "to", " ", "0", " ", 
     RowBox[{"(", 
      RowBox[{"no", " ", "connection"}], ")"}]}], "*)"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"connectAblated", "=."}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.827179364005952*^9, 3.8271793874442997`*^9}, {
   3.8271805206337786`*^9, 3.827180522920491*^9}, {3.8271826943333845`*^9, 
   3.827182699387295*^9}, {3.827242903629511*^9, 3.8272429091104593`*^9}, {
   3.827358198836939*^9, 3.827358201665182*^9}, {3.8286131306548767`*^9, 
   3.8286131358358107`*^9}, {3.828614107548217*^9, 3.8286141079457483`*^9}, {
   3.82861532938661*^9, 3.8286153306630793`*^9}, {3.8286155217394276`*^9, 
   3.828615522104452*^9}, {3.8291257093025637`*^9, 3.8291257107616467`*^9}, {
   3.829345105269735*^9, 3.8293451112049875`*^9}, {3.8297783027246456`*^9, 
   3.8297783040396433`*^9}, {3.830601021843954*^9, 3.830601023517907*^9}, {
   3.830943914853161*^9, 3.8309440467628264`*^9}, {3.830944137793647*^9, 
   3.8309441881772747`*^9}, {3.830991825192729*^9, 3.8309918469699893`*^9}, {
   3.831730714236368*^9, 3.8317307900306883`*^9}, {3.831735364315231*^9, 
   3.831735364517955*^9}, {3.8322054569935813`*^9, 3.8322055333666453`*^9}, {
   3.83220563584507*^9, 3.8322056427360487`*^9}, {3.8322056872406645`*^9, 
   3.832205695436123*^9}, {3.832205729080778*^9, 3.832205734836997*^9}, {
   3.832205829781869*^9, 3.832205831295498*^9}, {3.83220596708339*^9, 
   3.8322062401184072`*^9}, {3.832206279993104*^9, 3.832206413419774*^9}, 
   3.832321905955312*^9, {3.8323225139465356`*^9, 3.8323225337338743`*^9}, {
   3.832334314848716*^9, 3.8323343308024244`*^9}, {3.8323344798873425`*^9, 
   3.832334496838752*^9}, {3.83233468235277*^9, 3.832334683007225*^9}, {
   3.8323696331148987`*^9, 3.8323696337365355`*^9}, {3.8323700042242556`*^9, 
   3.832370026003986*^9}, {3.8323701512921476`*^9, 3.8323702960196366`*^9}, {
   3.8324082388762913`*^9, 3.8324082448644094`*^9}, {3.8328010964159756`*^9, 
   3.8328010972552977`*^9}, {3.8328880955047293`*^9, 
   3.8328881056525197`*^9}, {3.8333273355576224`*^9, 3.833327393907683*^9}, {
   3.8333280530002775`*^9, 3.833328053746929*^9}, {3.833412071572592*^9, 
   3.833412077478315*^9}, {3.8334469770006247`*^9, 3.833447013624609*^9}, {
   3.833448848587971*^9, 3.8334488517528534`*^9}, {3.833535526756957*^9, 
   3.8335355367441006`*^9}, {3.83353574579655*^9, 3.8335358213297186`*^9}, {
   3.8335358582380733`*^9, 3.8335359065139694`*^9}, {3.8335360463314433`*^9, 
   3.8335360836378264`*^9}, {3.833536118707966*^9, 3.8335361224347525`*^9}, {
   3.8335856735031157`*^9, 3.833585739697442*^9}, {3.8335858010118504`*^9, 
   3.833585801510857*^9}, {3.8358069048170652`*^9, 3.8358069061418324`*^9}, {
   3.8359529852459373`*^9, 3.835952985555745*^9}, {3.838119520446247*^9, 
   3.8381195279826684`*^9}, {3.8460207140472884`*^9, 
   3.8460207246924686`*^9}, {3.84784210366005*^9, 3.847842105505391*^9}, 
   3.8481038006421633`*^9, {3.8521546059739676`*^9, 3.852154611939259*^9}, {
   3.852154705295911*^9, 3.8521547147717752`*^9}, {3.852154941787572*^9, 
   3.8521549418971324`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"c9f32219-5b5d-41a2-89c3-900e3d479db3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mesh", "Chapter",
 CellChangeTimes->{{3.8226599075851936`*^9, 
  3.822659908096011*^9}},ExpressionUUID->"66aba1a9-495c-4247-ae35-\
3e7e6c8bf226"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"mesh", "=", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<C:\\\\Users\\\\Greg Stevens\\\\Box\\\\Research Backup\\\\Current \
Work\\\\Older Calcium Modeling and Misc\\\\mesh_4826cells_450x450.m\>\"", 
      "]"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"meshRatio", "=", "1."}], ";"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"mesh", "=", 
    RowBox[{
    "Import", "[", 
     "\"\<C:\\\\Users\\\\Greg Stevens\\\\Box\\\\Research Backup\\\\Current \
Work\\\\Older Calcium Modeling and Misc\\\\mesh_100cells_450x450.m\>\"", 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meshRatio", "=", ".143"}], ";", 
    RowBox[{"(*", 
     RowBox[{"Just", " ", "for", " ", "testing", " ", 
      RowBox[{"purposes", ".", " ", "This"}], " ", "ratio", " ", "takes", " ",
       "the", " ", "100", " ", "cell", " ", "mesh", " ", "and", " ", 
      "changes", " ", "the", " ", "lengths", " ", "to", " ", "be", " ", 
      "comparable", " ", "to", " ", "the", " ", "4826", " ", "cell", " ", 
      "mesh"}], "*)"}], "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.739621047277499*^9, 3.7396210862113266`*^9}, {
   3.739621516171378*^9, 3.7396215270716095`*^9}, {3.7396231420362487`*^9, 
   3.7396231423380613`*^9}, {3.7396232577494*^9, 3.7396232581221695`*^9}, {
   3.7397866816720877`*^9, 3.739786681931926*^9}, {3.740309095596455*^9, 
   3.7403090975832243`*^9}, {3.740309219624446*^9, 3.7403092205148926`*^9}, {
   3.7439230049245567`*^9, 3.743923011719336*^9}, 3.7439255061219854`*^9, {
   3.7559450748103423`*^9, 3.755945085796426*^9}, {3.755948700588379*^9, 
   3.755948708343642*^9}, {3.7559505913784027`*^9, 3.755950591663229*^9}, {
   3.7560486657395988`*^9, 3.756048672687342*^9}, {3.756051392365344*^9, 
   3.7560514022025604`*^9}, {3.7577606527660847`*^9, 
   3.7577606598556967`*^9}, {3.757766371201997*^9, 3.7577663772242656`*^9}, {
   3.758019174596737*^9, 3.7580191760618305`*^9}, {3.7580279944598103`*^9, 
   3.75802799730205*^9}, {3.8226599213418117`*^9, 3.822659988677163*^9}, {
   3.8237895408722878`*^9, 3.8237895628648596`*^9}, {3.823855663719519*^9, 
   3.823855686675416*^9}, {3.8238560323876524`*^9, 3.823856033821536*^9}, {
   3.82385654983352*^9, 3.8238565574427624`*^9}, {3.823860538172841*^9, 
   3.8238605394794726`*^9}, {3.824294012447626*^9, 3.824294045164238*^9}, {
   3.824378002009613*^9, 3.824378003332076*^9}, {3.824804554918685*^9, 
   3.8248045569903536`*^9}, {3.8260560007012205`*^9, 
   3.8260560075649085`*^9}, {3.8284377333566713`*^9, 3.828437741542472*^9}, {
   3.8284391859843435`*^9, 3.8284391922832336`*^9}, {3.828613779586338*^9, 
   3.8286137865115166`*^9}, {3.8286138447492485`*^9, 3.828613852637532*^9}, {
   3.830600810807991*^9, 3.8306008148577113`*^9}, {3.8306009324260116`*^9, 
   3.8306009395545816`*^9}, {3.8306015427194953`*^9, 3.830601549937025*^9}, {
   3.830857585537733*^9, 3.830857594929878*^9}, {3.8318050775196266`*^9, 
   3.8318050849720135`*^9}, {3.8320756251669416`*^9, 
   3.8320756317040014`*^9}, {3.8364339933477573`*^9, 
   3.8364340019488487`*^9}, {3.8364737380145025`*^9, 3.836473819039795*^9}, {
   3.836474040374346*^9, 3.8364740616391273`*^9}, {3.8365106591927795`*^9, 
   3.836510662145822*^9}, {3.837035493527646*^9, 3.837035499411827*^9}, {
   3.841394232553795*^9, 3.841394266297035*^9}, {3.8417780814656057`*^9, 
   3.8417780853734446`*^9}, {3.841864980717204*^9, 3.841864989595215*^9}, {
   3.847842507823306*^9, 3.847842511601962*^9}, {3.84784383541053*^9, 
   3.847843849372938*^9}, {3.8516371232396784`*^9, 3.8516371290957375`*^9}, {
   3.8521579978178596`*^9, 3.8521580120421395`*^9}, {3.8521580486846056`*^9, 
   3.852158052750489*^9}, {3.8521585870931177`*^9, 3.852158593911908*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"098b7c69-2236-49ad-b996-945d46bbc028"],

Cell[BoxData[
 GraphicsBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     MeshRegion[CompressedData["
1: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
6pP3NalP8qT+PwGEwO0=
      "], {
       Polygon[{{159, 57, 150, 175}, {169, 111, 60, 167}, {188, 43, 1, 184}, {
        200, 172, 90, 190}, {170, 45, 41, 166}, {201, 171, 96, 178}, {193, 
        132, 30, 179}, {180, 44, 27, 185}, {192, 97, 75, 191}, {195, 138, 168,
         199}, {189, 110, 147, 197}, {198, 42, 174, 202}}], 
       Polygon[{{181, 17, 156, 29, 194}, {187, 35, 152, 53, 182}, {190, 90, 
        79, 80, 177}, {163, 2, 76, 96, 171}, {162, 18, 21, 142, 161}, {179, 
        30, 133, 139, 196}, {185, 27, 88, 110, 189}, {165, 77, 125, 2, 163}, {
        25, 94, 37, 65, 51}, {86, 38, 16, 87, 89}, {166, 41, 33, 74, 160}, {
        130, 141, 28, 47, 145}, {155, 100, 120, 6, 54}, {182, 53, 114, 3, 
        186}, {183, 154, 11, 44, 180}, {131, 46, 72, 23, 140}, {186, 3, 101, 
        17, 181}, {78, 125, 77, 8, 34}, {83, 157, 20, 68, 84}, {148, 149, 122,
         9, 137}, {85, 115, 71, 118, 73}, {134, 56, 99, 69, 136}, {13, 156, 
        17, 101, 82}, {21, 18, 105, 5, 61}, {144, 95, 107, 106, 103}, {194, 
        29, 108, 132, 193}, {59, 144, 103, 93, 116}, {135, 9, 122, 117, 14}, {
        196, 139, 50, 138, 195}, {175, 150, 123, 146, 176}, {151, 114, 53, 
        152, 4}, {157, 83, 81, 158, 119}, {164, 39, 8, 77, 165}, {176, 146, 
        135, 14, 173}, {191, 75, 15, 35, 187}, {177, 80, 63, 43, 188}}], 
       Polygon[{{161, 142, 55, 12, 57, 159}, {24, 124, 67, 15, 75, 97}, {167, 
        60, 112, 105, 18, 162}, {100, 13, 82, 113, 66, 120}, {160, 74, 140, 
        23, 39, 164}, {70, 58, 106, 107, 7, 31}, {153, 62, 91, 98, 136, 69}, {
        4, 152, 35, 15, 67, 40}, {184, 1, 91, 62, 154, 183}, {50, 139, 133, 
        19, 64, 49}, {126, 143, 127, 26, 102, 32}, {115, 59, 116, 37, 94, 
        71}, {129, 104, 5, 105, 112, 48}, {121, 128, 51, 65, 26, 127}, {70, 
        153, 69, 99, 92, 58}, {178, 96, 76, 24, 97, 192}, {63, 80, 79, 117, 
        122, 149}, {168, 138, 50, 49, 111, 169}, {119, 158, 36, 66, 113, 
        22}, {93, 102, 26, 65, 37, 116}, {86, 147, 110, 88, 109, 38}, {49, 64,
         48, 112, 60, 111}, {173, 14, 117, 79, 90, 172}, {24, 76, 2, 125, 78, 
        124}, {143, 61, 5, 104, 121, 127}, {128, 121, 104, 129, 54, 6}, {130, 
        85, 73, 46, 131, 141}, {52, 19, 133, 30, 132, 108}, {123, 10, 137, 9, 
        135, 146}, {98, 148, 137, 10, 134, 136}, {33, 28, 141, 131, 140, 
        74}, {142, 21, 61, 143, 126, 55}, {153, 70, 31, 11, 154, 62}, {174, 
        42, 89, 87, 45, 170}, {197, 147, 86, 89, 42, 198}}], 
       Polygon[{{31, 7, 109, 88, 27, 44, 11}, {28, 33, 41, 45, 87, 16, 47}, {
        55, 126, 32, 92, 99, 56, 12}, {157, 119, 22, 151, 4, 40, 20}, {52, 
        155, 54, 129, 48, 64, 19}, {8, 39, 23, 72, 84, 68, 34}, {123, 150, 57,
         12, 56, 134, 10}, {78, 34, 68, 20, 40, 67, 124}, {83, 84, 72, 46, 73,
         118, 81}, {93, 103, 106, 58, 92, 32, 102}, {114, 151, 22, 113, 82, 
        101, 3}, {158, 81, 118, 71, 94, 25, 36}, {128, 6, 120, 66, 36, 25, 
        51}, {85, 130, 145, 95, 144, 59, 115}, {43, 63, 149, 148, 98, 91, 
        1}, {155, 52, 108, 29, 156, 13, 100}}], 
       Polygon[{{95, 145, 47, 16, 38, 109, 7, 107}}]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "DeleteDuplicateCells" -> Automatic, "VertexAlias" -> 
        Identity, "CheckOrientation" -> Automatic, "CoplanarityTolerance" -> 
        Automatic, "CheckIntersections" -> Automatic, "BoundaryNesting" -> 
        Automatic, "SeparateBoundaries" -> Automatic, "TJunction" -> 
        Automatic, "PropagateMarkers" -> True, "ZeroTest" -> Automatic, 
        "Hash" -> 6785631028306987912}]]}, 
    TagBox[GraphicsComplexBox[CompressedData["
1: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
6pP3NalP8qT+PwGEwO0=
      "], 
      {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       TagBox[
        PolygonBox[{{159, 57, 150, 175}, {169, 111, 60, 167}, {188, 43, 1, 
         184}, {200, 172, 90, 190}, {170, 45, 41, 166}, {201, 171, 96, 178}, {
         193, 132, 30, 179}, {180, 44, 27, 185}, {192, 97, 75, 191}, {195, 
         138, 168, 199}, {189, 110, 147, 197}, {198, 42, 174, 202}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[
        PolygonBox[{{181, 17, 156, 29, 194}, {187, 35, 152, 53, 182}, {190, 
         90, 79, 80, 177}, {163, 2, 76, 96, 171}, {162, 18, 21, 142, 161}, {
         179, 30, 133, 139, 196}, {185, 27, 88, 110, 189}, {165, 77, 125, 2, 
         163}, {25, 94, 37, 65, 51}, {86, 38, 16, 87, 89}, {166, 41, 33, 74, 
         160}, {130, 141, 28, 47, 145}, {155, 100, 120, 6, 54}, {182, 53, 114,
          3, 186}, {183, 154, 11, 44, 180}, {131, 46, 72, 23, 140}, {186, 3, 
         101, 17, 181}, {78, 125, 77, 8, 34}, {83, 157, 20, 68, 84}, {148, 
         149, 122, 9, 137}, {85, 115, 71, 118, 73}, {134, 56, 99, 69, 136}, {
         13, 156, 17, 101, 82}, {21, 18, 105, 5, 61}, {144, 95, 107, 106, 
         103}, {194, 29, 108, 132, 193}, {59, 144, 103, 93, 116}, {135, 9, 
         122, 117, 14}, {196, 139, 50, 138, 195}, {175, 150, 123, 146, 176}, {
         151, 114, 53, 152, 4}, {157, 83, 81, 158, 119}, {164, 39, 8, 77, 
         165}, {176, 146, 135, 14, 173}, {191, 75, 15, 35, 187}, {177, 80, 63,
          43, 188}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[
        PolygonBox[{{161, 142, 55, 12, 57, 159}, {24, 124, 67, 15, 75, 97}, {
         167, 60, 112, 105, 18, 162}, {100, 13, 82, 113, 66, 120}, {160, 74, 
         140, 23, 39, 164}, {70, 58, 106, 107, 7, 31}, {153, 62, 91, 98, 136, 
         69}, {4, 152, 35, 15, 67, 40}, {184, 1, 91, 62, 154, 183}, {50, 139, 
         133, 19, 64, 49}, {126, 143, 127, 26, 102, 32}, {115, 59, 116, 37, 
         94, 71}, {129, 104, 5, 105, 112, 48}, {121, 128, 51, 65, 26, 127}, {
         70, 153, 69, 99, 92, 58}, {178, 96, 76, 24, 97, 192}, {63, 80, 79, 
         117, 122, 149}, {168, 138, 50, 49, 111, 169}, {119, 158, 36, 66, 113,
          22}, {93, 102, 26, 65, 37, 116}, {86, 147, 110, 88, 109, 38}, {49, 
         64, 48, 112, 60, 111}, {173, 14, 117, 79, 90, 172}, {24, 76, 2, 125, 
         78, 124}, {143, 61, 5, 104, 121, 127}, {128, 121, 104, 129, 54, 6}, {
         130, 85, 73, 46, 131, 141}, {52, 19, 133, 30, 132, 108}, {123, 10, 
         137, 9, 135, 146}, {98, 148, 137, 10, 134, 136}, {33, 28, 141, 131, 
         140, 74}, {142, 21, 61, 143, 126, 55}, {153, 70, 31, 11, 154, 62}, {
         174, 42, 89, 87, 45, 170}, {197, 147, 86, 89, 42, 198}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[
        PolygonBox[{{31, 7, 109, 88, 27, 44, 11}, {28, 33, 41, 45, 87, 16, 
         47}, {55, 126, 32, 92, 99, 56, 12}, {157, 119, 22, 151, 4, 40, 20}, {
         52, 155, 54, 129, 48, 64, 19}, {8, 39, 23, 72, 84, 68, 34}, {123, 
         150, 57, 12, 56, 134, 10}, {78, 34, 68, 20, 40, 67, 124}, {83, 84, 
         72, 46, 73, 118, 81}, {93, 103, 106, 58, 92, 32, 102}, {114, 151, 22,
          113, 82, 101, 3}, {158, 81, 118, 71, 94, 25, 36}, {128, 6, 120, 66, 
         36, 25, 51}, {85, 130, 145, 95, 144, 59, 115}, {43, 63, 149, 148, 98,
          91, 1}, {155, 52, 108, 29, 156, 13, 100}}],
        Annotation[#, "Geometry"]& ], 
       TagBox[PolygonBox[{{95, 145, 47, 16, 38, 109, 7, 107}}],
        Annotation[#, "Geometry"]& ]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  DefaultBaseStyle->{
   "MeshGraphics", FrontEnd`GraphicsHighlightColor -> 
    Hue[0.1, 1, 0.7]}]], "Output",
 CellChangeTimes->{
  3.852158014189537*^9, 3.8521580544414005`*^9, 3.85215819022108*^9, 
   3.8521583285429907`*^9, {3.8521585952015095`*^9, 3.8521586037124915`*^9}},
 CellLabel->
  "Out[176]=",ExpressionUUID->"99e25ead-5557-466f-92cc-0a7e5470e894"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Get", " ", "information", " ", "about", " ", "each", " ", "cell"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"range", "=", "450."}], ";"}], 
   RowBox[{"(*", 
    RowBox[{"From", " ", "mesh", " ", "file", " ", "name", " ", 
     RowBox[{"(", 
      RowBox[{
      "side", " ", "length", " ", "of", " ", "grid", " ", "in", " ", 
       "\[Mu]m"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Get", " ", "distances", " ", "from", " ", "center", " ", "of", " ", 
     "mesh", " ", "to", " ", "each", " ", "cell", " ", "centroid"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distances", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", 
             RowBox[{"range", "/", "3"}]}], ")"}], "2"], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "-", 
             RowBox[{"2", "*", 
              RowBox[{"range", "/", "3"}]}]}], ")"}], "2"]}], "]"}], "&"}], "/@", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
        "]"}]}], "*", "meshRatio"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"positions", "=", 
     RowBox[{"PropertyValue", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Get", " ", "number", " ", "of", " ", "cells"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numCells2D", "=", 
     RowBox[{"Length", "@", "distances"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0VtIk2EABuApNIOQhLADheUIdxOJB2rrMPuM1IoSjQlTMdKSGLqZ5YWM
Vfh7oaOLMA0ZOIJo/WRlODVCoqWuzTVraSqOZgcPQd+vQfMw5g/2vd/Fy3Pz
8t68qZXm4mvxCoVCzQJ/fB1RPZmhxHkpPQumCJo8WORtOgejyflFUJZ83Ey1
vwGK9sU7vG9obIVXjPE2eCMny+FkNk+f4CoNR7X7QpT4LKk6KPo9Xg/z+dlM
H/w8cDIIW/YfCUFrUCfDnovL3NwK27sAs2AlwQ1L6tr8cOiQbwKecfcUfmKe
EgKlUNX1tj/GnA13vIHV2Y+/D32jxG2pXIDZK5uX/zBl3bYqmPd3uh4WiMdu
Qp21jz77RUna8K1VKEYSN6DxlRzXzVRWzWyBa86HibAm6aBxfZ6ShqiW+/68
1BtlmlYTXFA5cto8ukGJd0xTB7d6Qjao0T+9B8f91WE4WGrh2k25Oz8ym0wX
uIfDwfsLzLLwBDc0m6H/zUyaKuQGXuu1FHtCBffRnDptt8x+mMvh2u5+adzD
tCvmufql0R3lm5Q4DP+4U5G26LAgkcnWzhiMW1osu90hkZqu2nLYPaa+Cs2D
49y921XJPx0SOZBfzG12fUiB4q41rhBZfnDdJZHO+vZ2eLwl8gLG1q0v4X+a
iXZf
  "],
 CellLabel->
  "In[178]:=",ExpressionUUID->"4c831165-1d68-4c43-b9f1-ce3f2f32e2cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interiorCells", "=", 
   RowBox[{
    RowBox[{"MeshCellIndex", "[", 
     RowBox[{"mesh", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "\"\<Interior\>\""}], "}"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7558908747022257`*^9, 3.7558908808270917`*^9}},
 CellLabel->
  "In[182]:=",ExpressionUUID->"72c3415a-9454-4eca-b187-45fb56e7c793"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"areas", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Area", "[", "#", "]"}], "&"}], "/@", 
      RowBox[{"MeshPrimitives", "[", 
       RowBox[{"mesh", ",", "2"}], "]"}]}], "*", 
     SuperscriptBox[
      RowBox[{"(", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]], ")"}], "2"], "*", 
     SuperscriptBox["meshRatio", "2"]}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Convert", " ", "from", " ", 
    SuperscriptBox["\[Mu]m", "2"], " ", "to", " ", 
    SuperscriptBox["dm", "2"]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avgArea", "=", 
   RowBox[{"Mean", "[", 
    RowBox[{"areas", "[", 
     RowBox[{"[", "interiorCells", "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.755887726310289*^9, 3.755887726466544*^9}, {
   3.7558877664658737`*^9, 3.755887772450096*^9}, {3.755888329946452*^9, 
   3.755888370520642*^9}, {3.75589089204731*^9, 3.7558908985641966`*^9}, {
   3.7559580555226*^9, 3.75595808229624*^9}, {3.826027365839105*^9, 
   3.8260273932734795`*^9}, {3.8364741105188494`*^9, 3.8364741396201873`*^9}, 
   3.8460233114357853`*^9},
 CellLabel->
  "In[183]:=",ExpressionUUID->"544cb5f4-723d-4b58-a1a9-2e8959df7cfb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]x", "=", 
    RowBox[{
     RowBox[{"N", "[", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"avgArea", "*", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           SuperscriptBox["10", "5"], ")"}], "2"], "/", "\[Pi]"}]}], "]"}], 
      "]"}], "*", "2"}]}], " ", ";"}], 
  RowBox[{"(*", 
   RowBox[{"Should", " ", "be", " ", "around", " ", "7.4"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.75589125299144*^9, 3.7558912665241327`*^9}, {
   3.755951466395742*^9, 3.7559514710918713`*^9}, {3.7559527986297684`*^9, 
   3.755952803457818*^9}, {3.8260274493686585`*^9, 3.8260274539423246`*^9}, {
   3.830600882988806*^9, 3.8306008832846584`*^9}, 3.8460233088654985`*^9},
 CellLabel->
  "In[185]:=",ExpressionUUID->"fd2dda5a-b204-4e89-8a2e-35a0e56b0a02"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make Adjacency Matrix", "Chapter",
 CellChangeTimes->{{3.738231290116765*^9, 3.7382312924853034`*^9}, {
  3.7441017538295946`*^9, 
  3.744101769164069*^9}},ExpressionUUID->"c1e3ff6e-8a38-4b8a-ac4c-\
f6231ff3845f"],

Cell["\<\
Create a nPts X nPts matrix that says whether or not a cell is adjacent to \
another cell. I cannot seem to find a built in function to do this, so I have \
to code it myself. Instead of making elements either 0 or 1, I make them 0 \
(not adjacent) or the length of the shared edge. This is because I will \
assume that the flux of ions/molecules through the gap junctions will be \
proportional to the length of the shared edge. The larger an edge is shared \
between cells, the more transfer we would expect due to more gap junctions \
being present. \
\>", "Text",
 CellChangeTimes->{{3.738231294509055*^9, 3.73823131727501*^9}, {
   3.73823324078627*^9, 3.7382332588831053`*^9}, {3.7385818477642565`*^9, 
   3.738581977384677*^9}, {3.738604658558565*^9, 3.7386047363802433`*^9}, 
   3.7396242549482255`*^9, 3.7396243909327908`*^9, {3.7439237325644693`*^9, 
   3.7439237369667315`*^9}},ExpressionUUID->"832c3165-9abd-4382-8374-\
f623cb7e0d75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Determine", " ", "cells", " ", "\"\<labels\>\""}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ablatedPos", "=", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"distances", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{"x", "<", "ablatedRadius"}]}]}], "]"}], "//", "Flatten"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"woundPos", "=", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"distances", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
         "ablatedRadius", "\[LessEqual]", "x", "<", "cavRadMicrons"}]}]}], 
       "]"}], "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"highDamagePos", "=", 
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{"distances", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
         "ablatedRadius", "\[LessEqual]", "x", "<", "radiusHighDamage"}]}]}], 
       "]"}], "//", "Flatten"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.743416584351347*^9, 3.7434166228549833`*^9}, {
   3.743416655819403*^9, 3.743416673602577*^9}, {3.7434167056354275`*^9, 
   3.7434167886346226`*^9}, {3.7434169539984264`*^9, 3.743417207245063*^9}, {
   3.743923897075699*^9, 3.7439238985048113`*^9}, {3.74392567712374*^9, 
   3.7439256846990314`*^9}, {3.755952324722122*^9, 3.755952364465838*^9}, {
   3.7559524079148846`*^9, 3.7559525040231667`*^9}, {3.7560349908587103`*^9, 
   3.7560350403111224`*^9}, {3.756035264553711*^9, 3.7560352941985955`*^9}, {
   3.7560356872890825`*^9, 3.75603583654488*^9}, {3.757847146091386*^9, 
   3.7578471617706747`*^9}, {3.7578471943534966`*^9, 3.757847226041871*^9}, {
   3.8306007420427947`*^9, 3.830600767539297*^9}, {3.83936867534803*^9, 
   3.839368679233549*^9}, 3.8474116323903923`*^9, {3.8480149851904936`*^9, 
   3.848014986056804*^9}, {3.848015145607032*^9, 3.848015188126569*^9}, 
   3.8480155625113645`*^9, {3.8484436138070793`*^9, 3.848443649576625*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"e455f575-72b0-4699-8e64-2eb39f9a403b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stylesWound", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "#"}], "}"}], ",", "Black"}], "]"}], "&"}], "/@", 
      "ablatedPos"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "#"}], "}"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{
           RowBox[{"\[Mu]TDist", "@", 
            RowBox[{"distances", "[", 
             RowBox[{"[", "#", "]"}], "]"}]}], ",", 
           RowBox[{"1", "-", 
            RowBox[{"\[Mu]TDist", "@", 
             RowBox[{"distances", "[", 
              RowBox[{"[", "#", "]"}], "]"}]}]}], ",", "0."}], "]"}]}], "]"}],
        "&"}], "/@", "woundPos"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"HighlightMesh", "[", 
   RowBox[{
    RowBox[{"HighlightMesh", "[", 
     RowBox[{"mesh", ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"{", "2", "}"}], ",", "Green"}], "]"}]}], "]"}], ",", 
    "stylesWound"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.851637514808234*^9, 3.8516375157641377`*^9}, {
  3.8516376683624535`*^9, 3.851637718446944*^9}, {3.8516377552042856`*^9, 
  3.851637778071204*^9}, {3.851638021316574*^9, 3.8516381288397465`*^9}, {
  3.851638159759898*^9, 3.8516382001592054`*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"5053fe03-1f3c-4ae4-bf98-cc1b7a19bde2"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
6pP3NalP8qT+PwGEwO0=
   "], 
   {Hue[0.6, 0.3, 0.95], EdgeForm[Hue[0.6, 0.3, 0.75]], FaceForm[RGBColor[
    0, 1, 0]], 
    TagBox[
     PolygonBox[{{159, 57, 150, 175}, {169, 111, 60, 167}, {188, 43, 1, 
      184}, {200, 172, 90, 190}, {170, 45, 41, 166}, {201, 171, 96, 178}, {
      193, 132, 30, 179}, {180, 44, 27, 185}, {192, 97, 75, 191}, {195, 138, 
      168, 199}, {189, 110, 147, 197}, {198, 42, 174, 202}}],
     Annotation[#, "Geometry"]& ], 
    TagBox[
     PolygonBox[{{181, 17, 156, 29, 194}, {187, 35, 152, 53, 182}, {190, 90, 
      79, 80, 177}, {163, 2, 76, 96, 171}, {162, 18, 21, 142, 161}, {179, 30, 
      133, 139, 196}, {185, 27, 88, 110, 189}, {165, 77, 125, 2, 163}, {25, 
      94, 37, 65, 51}, {86, 38, 16, 87, 89}, {166, 41, 33, 74, 160}, {130, 
      141, 28, 47, 145}, {155, 100, 120, 6, 54}, {182, 53, 114, 3, 186}, {183,
       154, 11, 44, 180}, {131, 46, 72, 23, 140}, {186, 3, 101, 17, 181}, {78,
       125, 77, 8, 34}, {83, 157, 20, 68, 84}, {148, 149, 122, 9, 137}, {85, 
      115, 71, 118, 73}, {134, 56, 99, 69, 136}, {13, 156, 17, 101, 82}, {21, 
      18, 105, 5, 61}, {144, 95, 107, 106, 103}, {194, 29, 108, 132, 193}, {
      59, 144, 103, 93, 116}, {135, 9, 122, 117, 14}, {196, 139, 50, 138, 
      195}, {175, 150, 123, 146, 176}, {151, 114, 53, 152, 4}, {157, 83, 81, 
      158, 119}, {164, 39, 8, 77, 165}, {176, 146, 135, 14, 173}, {191, 75, 
      15, 35, 187}, {177, 80, 63, 43, 188}}],
     Annotation[#, "Geometry"]& ], 
    TagBox[
     PolygonBox[{{161, 142, 55, 12, 57, 159}, {24, 124, 67, 15, 75, 97}, {167,
       60, 112, 105, 18, 162}, {100, 13, 82, 113, 66, 120}, {160, 74, 140, 23,
       39, 164}, {70, 58, 106, 107, 7, 31}, {153, 62, 91, 98, 136, 69}, {4, 
      152, 35, 15, 67, 40}, {184, 1, 91, 62, 154, 183}, {50, 139, 133, 19, 64,
       49}, {126, 143, 127, 26, 102, 32}, {115, 59, 116, 37, 94, 71}, {129, 
      104, 5, 105, 112, 48}, {121, 128, 51, 65, 26, 127}, {70, 153, 69, 99, 
      92, 58}, {178, 96, 76, 24, 97, 192}, {63, 80, 79, 117, 122, 149}, {168, 
      138, 50, 49, 111, 169}, {119, 158, 36, 66, 113, 22}, {93, 102, 26, 65, 
      37, 116}, {86, 147, 110, 88, 109, 38}, {49, 64, 48, 112, 60, 111}, {173,
       14, 117, 79, 90, 172}, {24, 76, 2, 125, 78, 124}, {143, 61, 5, 104, 
      121, 127}, {128, 121, 104, 129, 54, 6}, {130, 85, 73, 46, 131, 141}, {
      52, 19, 133, 30, 132, 108}, {123, 10, 137, 9, 135, 146}, {98, 148, 137, 
      10, 134, 136}, {33, 28, 141, 131, 140, 74}, {142, 21, 61, 143, 126, 
      55}, {153, 70, 31, 11, 154, 62}, {174, 42, 89, 87, 45, 170}, {197, 147, 
      86, 89, 42, 198}}],
     Annotation[#, "Geometry"]& ], 
    TagBox[
     PolygonBox[{{31, 7, 109, 88, 27, 44, 11}, {28, 33, 41, 45, 87, 16, 47}, {
      55, 126, 32, 92, 99, 56, 12}, {157, 119, 22, 151, 4, 40, 20}, {52, 155, 
      54, 129, 48, 64, 19}, {8, 39, 23, 72, 84, 68, 34}, {123, 150, 57, 12, 
      56, 134, 10}, {78, 34, 68, 20, 40, 67, 124}, {83, 84, 72, 46, 73, 118, 
      81}, {93, 103, 106, 58, 92, 32, 102}, {114, 151, 22, 113, 82, 101, 3}, {
      158, 81, 118, 71, 94, 25, 36}, {128, 6, 120, 66, 36, 25, 51}, {85, 130, 
      145, 95, 144, 59, 115}, {43, 63, 149, 148, 98, 91, 1}, {155, 52, 108, 
      29, 156, 13, 100}}],
     Annotation[#, "Geometry"]& ], 
    TagBox[PolygonBox[{{95, 145, 47, 16, 38, 109, 7, 107}}],
     Annotation[#, "Geometry"]& ], {
     {RGBColor[0.42153423276170354`, 0.5784657672382965, 0.], 
      PolygonBox[{{159, 57, 150, 175}}]}, 
     {RGBColor[0.615124252285989, 0.384875747714011, 0.], 
      PolygonBox[{{169, 111, 60, 167}}]}, 
     {RGBColor[0.22460001034188465`, 0.7753999896581154, 0.], 
      PolygonBox[{{188, 43, 1, 184}}]}, 
     {RGBColor[0.012810333202430024`, 0.9871896667975699, 0.], 
      PolygonBox[{{200, 172, 90, 190}}]}, 
     {RGBColor[0.9470066678126998, 0.05299333218730018, 0.], 
      PolygonBox[{{170, 45, 41, 166}}]}, 
     {RGBColor[0.9599461660523216, 0.04005383394767836, 0.], 
      PolygonBox[{{201, 171, 96, 178}}]}, 
     {RGBColor[0.9085115975189115, 0.09148840248108847, 0.], 
      PolygonBox[{{193, 132, 30, 179}}]}, 
     {RGBColor[0.5762449152428875, 0.42375508475711254`, 0.], 
      PolygonBox[{{180, 44, 27, 185}}]}, 
     {RGBColor[0.9673925046927037, 0.03260749530729634, 0.], 
      PolygonBox[{{192, 97, 75, 191}}]}, 
     {RGBColor[0.37259242580312923`, 0.6274075741968708, 0.], 
      PolygonBox[{{195, 138, 168, 199}}]}, 
     {RGBColor[0.6580364833821475, 0.3419635166178525, 0.], 
      PolygonBox[{{189, 110, 147, 197}}]}, 
     {RGBColor[0.5161087259045111, 0.48389127409548893`, 0.], 
      PolygonBox[{{198, 42, 174, 202}}]}, 
     {RGBColor[0.9642301411539073, 0.03576985884609274, 0.], 
      PolygonBox[{{181, 17, 156, 29, 194}}]}, 
     {GrayLevel[0], PolygonBox[{{187, 35, 152, 53, 182}}]}, 
     {RGBColor[0.03943930981837701, 0.960560690181623, 0.], 
      PolygonBox[{{190, 90, 79, 80, 177}}]}, 
     {RGBColor[0.9667980893503542, 0.03320191064964584, 0.], 
      PolygonBox[{{163, 2, 76, 96, 171}}]}, 
     {RGBColor[0.6528312210999112, 0.3471687789000888, 0.], 
      PolygonBox[{{162, 18, 21, 142, 161}}]}, 
     {RGBColor[0.7468047585390871, 0.2531952414609129, 0.], 
      PolygonBox[{{179, 30, 133, 139, 196}}]}, 
     {RGBColor[0.6890809029502043, 0.3109190970497957, 0.], 
      PolygonBox[{{185, 27, 88, 110, 189}}]}, 
     {GrayLevel[0], PolygonBox[{{165, 77, 125, 2, 163}}]}, 
     {GrayLevel[0], PolygonBox[{{25, 94, 37, 65, 51}}]}, 
     {RGBColor[0.9108217750025951, 0.08917822499740491, 0.], 
      PolygonBox[{{86, 38, 16, 87, 89}}]}, 
     {RGBColor[0.9663697212849376, 0.03363027871506241, 0.], 
      PolygonBox[{{166, 41, 33, 74, 160}}]}, 
     {GrayLevel[0], PolygonBox[{{130, 141, 28, 47, 145}}]}, 
     {RGBColor[0.9661230826568007, 0.03387691734319931, 0.], 
      PolygonBox[{{155, 100, 120, 6, 54}}]}, 
     {GrayLevel[0], PolygonBox[{{182, 53, 114, 3, 186}}]}, 
     {RGBColor[0.5517680832233522, 0.44823191677664775`, 0.], 
      PolygonBox[{{183, 154, 11, 44, 180}}]}, 
     {GrayLevel[0], PolygonBox[{{131, 46, 72, 23, 140}}]}, 
     {RGBColor[0.9676898169860704, 0.03231018301392963, 0.], 
      PolygonBox[{{186, 3, 101, 17, 181}}]}, 
     {GrayLevel[0], PolygonBox[{{78, 125, 77, 8, 34}}]}, 
     {GrayLevel[0], PolygonBox[{{83, 157, 20, 68, 84}}]}, 
     {RGBColor[0.3997204184919265, 0.6002795815080735, 0.], 
      PolygonBox[{{148, 149, 122, 9, 137}}]}, 
     {GrayLevel[0], PolygonBox[{{85, 115, 71, 118, 73}}]}, 
     {RGBColor[0.8773055273812849, 0.12269447261871513`, 0.], 
      PolygonBox[{{134, 56, 99, 69, 136}}]}, 
     {RGBColor[0.96768541629551, 0.03231458370449003, 0.], 
      PolygonBox[{{13, 156, 17, 101, 82}}]}, 
     {RGBColor[0.9114865493878241, 0.08851345061217586, 0.], 
      PolygonBox[{{21, 18, 105, 5, 61}}]}, 
     {RGBColor[0.9675098494720445, 0.03249015052795545, 0.], 
      PolygonBox[{{144, 95, 107, 106, 103}}]}, 
     {RGBColor[0.9528485843490158, 0.04715141565098424, 0.], 
      PolygonBox[{{194, 29, 108, 132, 193}}]}, 
     {GrayLevel[0], PolygonBox[{{59, 144, 103, 93, 116}}]}, 
     {RGBColor[0.14572717619267095`, 0.854272823807329, 0.], 
      PolygonBox[{{135, 9, 122, 117, 14}}]}, 
     {RGBColor[0.5616644201586563, 0.43833557984134375`, 0.], 
      PolygonBox[{{196, 139, 50, 138, 195}}]}, 
     {RGBColor[0.3239594733632706, 0.6760405266367294, 0.], 
      PolygonBox[{{175, 150, 123, 146, 176}}]}, 
     {GrayLevel[0], PolygonBox[{{151, 114, 53, 152, 4}}]}, 
     {GrayLevel[0], PolygonBox[{{157, 83, 81, 158, 119}}]}, 
     {GrayLevel[0], PolygonBox[{{164, 39, 8, 77, 165}}]}, 
     {RGBColor[0.1504598788942091, 0.8495401211057909, 0.], 
      PolygonBox[{{176, 146, 135, 14, 173}}]}, 
     {GrayLevel[0], PolygonBox[{{191, 75, 15, 35, 187}}]}, 
     {RGBColor[0.1190751276976062, 0.8809248723023938, 0.], 
      PolygonBox[{{177, 80, 63, 43, 188}}]}, 
     {RGBColor[0.6876360972815263, 0.3123639027184737, 0.], 
      PolygonBox[{{161, 142, 55, 12, 57, 159}}]}, 
     {GrayLevel[0], PolygonBox[{{24, 124, 67, 15, 75, 97}}]}, 
     {RGBColor[0.769198701161506, 0.23080129883849398`, 0.], 
      PolygonBox[{{167, 60, 112, 105, 18, 162}}]}, 
     {GrayLevel[0], PolygonBox[{{100, 13, 82, 113, 66, 120}}]}, 
     {GrayLevel[0], PolygonBox[{{160, 74, 140, 23, 39, 164}}]}, 
     {RGBColor[0.9574125958780801, 0.04258740412191986, 0.], 
      PolygonBox[{{70, 58, 106, 107, 7, 31}}]}, 
     {RGBColor[0.7691298741942948, 0.2308701258057052, 0.], 
      PolygonBox[{{153, 62, 91, 98, 136, 69}}]}, 
     {GrayLevel[0], PolygonBox[{{4, 152, 35, 15, 67, 40}}]}, 
     {RGBColor[0.4557286933953799, 0.5442713066046201, 0.], 
      PolygonBox[{{184, 1, 91, 62, 154, 183}}]}, 
     {RGBColor[0.8355495383496416, 0.16445046165035837`, 0.], 
      PolygonBox[{{50, 139, 133, 19, 64, 49}}]}, 
     {RGBColor[0.9655541465890679, 0.03444585341093209, 0.], 
      PolygonBox[{{126, 143, 127, 26, 102, 32}}]}, 
     {GrayLevel[0], PolygonBox[{{115, 59, 116, 37, 94, 71}}]}, 
     {RGBColor[0.9361650911813704, 0.06383490881862963, 0.], 
      PolygonBox[{{129, 104, 5, 105, 112, 48}}]}, 
     {GrayLevel[0], PolygonBox[{{121, 128, 51, 65, 26, 127}}]}, 
     {RGBColor[0.9438202481818512, 0.056179751818148826`, 0.], 
      PolygonBox[{{70, 153, 69, 99, 92, 58}}]}, 
     {RGBColor[0.9661926317986211, 0.03380736820137886, 0.], 
      PolygonBox[{{178, 96, 76, 24, 97, 192}}]}, 
     {RGBColor[0.1404659423819133, 0.8595340576180868, 0.], 
      PolygonBox[{{63, 80, 79, 117, 122, 149}}]}, 
     {RGBColor[0.5926189975093984, 0.4073810024906016, 0.], 
      PolygonBox[{{168, 138, 50, 49, 111, 169}}]}, 
     {GrayLevel[0], PolygonBox[{{119, 158, 36, 66, 113, 22}}]}, 
     {GrayLevel[0], PolygonBox[{{93, 102, 26, 65, 37, 116}}]}, 
     {RGBColor[0.8830542731520232, 0.11694572684797677`, 0.], 
      PolygonBox[{{86, 147, 110, 88, 109, 38}}]}, 
     {RGBColor[0.8275307107814829, 0.17246928921851712`, 0.], 
      PolygonBox[{{49, 64, 48, 112, 60, 111}}]}, 
     {RGBColor[0.03941818487953186, 0.9605818151204681, 0.], 
      PolygonBox[{{173, 14, 117, 79, 90, 172}}]}, 
     {GrayLevel[0], PolygonBox[{{24, 76, 2, 125, 78, 124}}]}, 
     {RGBColor[0.9603296938384074, 0.03967030616159262, 0.], 
      PolygonBox[{{143, 61, 5, 104, 121, 127}}]}, 
     {RGBColor[0.9654024704448827, 0.0345975295551173, 0.], 
      PolygonBox[{{128, 121, 104, 129, 54, 6}}]}, 
     {GrayLevel[0], PolygonBox[{{130, 85, 73, 46, 131, 141}}]}, 
     {RGBColor[0.9296013862595323, 0.07039861374046774, 0.], 
      PolygonBox[{{52, 19, 133, 30, 132, 108}}]}, 
     {RGBColor[0.4406070972747796, 0.5593929027252205, 0.], 
      PolygonBox[{{123, 10, 137, 9, 135, 146}}]}, 
     {RGBColor[0.7110445363371285, 0.2889554636628715, 0.], 
      PolygonBox[{{98, 148, 137, 10, 134, 136}}]}, 
     {GrayLevel[0], PolygonBox[{{33, 28, 141, 131, 140, 74}}]}, 
     {RGBColor[0.8948681913025087, 0.10513180869749128`, 0.], 
      PolygonBox[{{142, 21, 61, 143, 126, 55}}]}, 
     {RGBColor[0.8491603297058357, 0.15083967029416434`, 0.], 
      PolygonBox[{{153, 70, 31, 11, 154, 62}}]}, 
     {RGBColor[0.8624663492365794, 0.1375336507634206, 0.], 
      PolygonBox[{{174, 42, 89, 87, 45, 170}}]}, 
     {RGBColor[0.6411845467803884, 0.3588154532196116, 0.], 
      PolygonBox[{{197, 147, 86, 89, 42, 198}}]}, 
     {RGBColor[0.8971427197334187, 0.10285728026658125`, 0.], 
      PolygonBox[{{31, 7, 109, 88, 27, 44, 11}}]}, 
     {RGBColor[0.965334126213391, 0.034665873786609014`, 0.], 
      PolygonBox[{{28, 33, 41, 45, 87, 16, 47}}]}, 
     {RGBColor[0.9477758406429324, 0.05222415935706759, 0.], 
      PolygonBox[{{55, 126, 32, 92, 99, 56, 12}}]}, 
     {GrayLevel[0], PolygonBox[{{157, 119, 22, 151, 4, 40, 20}}]}, 
     {RGBColor[0.9427198314148639, 0.05728016858513607, 0.], 
      PolygonBox[{{52, 155, 54, 129, 48, 64, 19}}]}, 
     {GrayLevel[0], PolygonBox[{{8, 39, 23, 72, 84, 68, 34}}]}, 
     {RGBColor[0.714512674839783, 0.285487325160217, 0.], 
      PolygonBox[{{123, 150, 57, 12, 56, 134, 10}}]}, 
     {GrayLevel[0], PolygonBox[{{78, 34, 68, 20, 40, 67, 124}}]}, 
     {GrayLevel[0], PolygonBox[{{83, 84, 72, 46, 73, 118, 81}}]}, 
     {RGBColor[0.9659597871872869, 0.03404021281271308, 0.], 
      PolygonBox[{{93, 103, 106, 58, 92, 32, 102}}]}, 
     {GrayLevel[0], PolygonBox[{{114, 151, 22, 113, 82, 101, 3}}]}, 
     {GrayLevel[0], PolygonBox[{{158, 81, 118, 71, 94, 25, 36}}]}, 
     {GrayLevel[0], PolygonBox[{{128, 6, 120, 66, 36, 25, 51}}]}, 
     {GrayLevel[0], PolygonBox[{{85, 130, 145, 95, 144, 59, 115}}]}, 
     {RGBColor[0.40368183779256633`, 0.5963181622074336, 0.], 
      PolygonBox[{{43, 63, 149, 148, 98, 91, 1}}]}, 
     {RGBColor[0.9638509829478764, 0.03614901705212359, 0.], 
      PolygonBox[{{155, 52, 108, 29, 156, 13, 100}}]}, 
     {RGBColor[0.9638245388053163, 0.03617546119468373, 0.], 
      PolygonBox[{{95, 145, 47, 16, 38, 109, 7, 107}}]}}}]]], "Output",
 CellChangeTimes->{{3.852158182306751*^9, 3.852158209448392*^9}, 
   3.8521583357536826`*^9, 3.852158608221331*^9},
 CellLabel->
  "Out[190]=",ExpressionUUID->"9c26c599-2a9c-4144-9491-bcf1132d1840"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8516378539923635`*^9, 
  3.851637854026202*^9}},ExpressionUUID->"50b99206-7b69-4b77-8d77-\
4e0d36c661fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Produce", " ", "adjacency", " ", "matrix", " ", "with", " ", "shared", 
    " ", "edge", " ", "lengths", " ", "as", " ", "elements"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "conn", ",", "lengths", ",", "directions", ",", "positionVectors", ",", 
      "sines", ",", "edges", ",", "adj"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Get", " ", "connectivity", " ", "matrix"}], ",", " ", 
      RowBox[{
      "which", " ", "is", " ", "a", " ", "matrix", " ", "whose", " ", "rows", 
       " ", "represent", " ", "a", " ", "cell", " ", "and", " ", "column", 
       " ", "represents", " ", "an", " ", "edge", " ", "associated", " ", 
       "with", " ", "the", " ", "cell"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"conn", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"mesh", "[", 
         RowBox[{"\"\<ConnectivityMatrix\>\"", "[", 
          RowBox[{"2", ",", "1"}], "]"}], "]"}], "//", "Unitize"}], "//", 
       "Normal"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Lengths", " ", "of", " ", "each", " ", "edge"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"lengths", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "&"}], "@@@", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"mesh", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "direction", " ", "vectors", " ", "of", " ", "each", " ", "edge"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"directions", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "@@@", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"mesh", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "position", " ", "vectors", " ", "of", " ", "the", " ", "midpoints", 
       " ", "of", " ", "each", " ", "edge"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"positionVectors", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "2"], "-", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"range", "/", "2"}], ",", 
            RowBox[{"range", "/", "2"}]}], "}"}]}], ")"}], "&"}], "@@@", 
       RowBox[{"MeshPrimitives", "[", 
        RowBox[{"mesh", ",", "1"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "List", " ", "of", " ", "Sin", " ", "of", " ", "angle", " ", "between", 
       " ", "position", " ", "vector", " ", "of", " ", "edge", " ", 
       "midpoint", " ", 
       RowBox[{"(", 
        RowBox[{
        "relative", " ", "to", " ", "the", " ", "wound", " ", "center"}], 
        ")"}], " ", "and", " ", "the", " ", "direciton", " ", "of", " ", 
       "the", " ", "shared", " ", "edge"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"sines", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"Norm", "@", 
          RowBox[{"Cross", "[", 
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"directions", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "]"}], ",", 
            RowBox[{"Append", "[", 
             RowBox[{
              RowBox[{"positionVectors", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "0"}], "]"}]}], "]"}]}], 
         RowBox[{
          RowBox[{"Norm", "[", 
           RowBox[{"directions", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", 
          RowBox[{"Norm", "[", 
           RowBox[{"positionVectors", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}]], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "@", "directions"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "List", " ", "where", " ", "each", " ", "element", " ", "is", " ", "an",
        " ", "edge", " ", "and", " ", "tells", " ", "you", " ", "which", " ", 
       "cell", 
       RowBox[{"(", "s", ")"}], " ", "have", " ", "that", " ", "edge"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}], "/@", 
         RowBox[{"Transpose", "[", "conn", "]"}]}], ")"}], "/.", 
       RowBox[{
        RowBox[{"{", "e_", "}"}], "\[Rule]", "e"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Initialize", " ", "matrix"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"adj", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0.", ",", 
        RowBox[{"{", 
         RowBox[{"numCells2D", ",", "numCells2D"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "Function", " ", "that", " ", "replaces", " ", "corresponding", " ", 
         "elements", " ", "in", " ", "the", " ", "initial", " ", "adjMat", 
         " ", "with", " ", "an", " ", "edge", " ", "length", " ", "if", " ", 
         "the", " ", "cells", " ", "in", " ", "the", " ", "row"}], "&"}], 
       "column", " ", "share", " ", "that", " ", "edge"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"alter", "[", 
       RowBox[{"pos_", ",", "edge_"}], "]"}], ":=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "pos", "]"}], "\[Equal]", "2"}], ",", 
        RowBox[{
         RowBox[{"adj", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"pos", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pos", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "]"}], "=", 
         RowBox[{
          RowBox[{"adj", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"pos", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"pos", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"lengths", "[", 
            RowBox[{"[", "edge", "]"}], "]"}], "*", 
           RowBox[{"If", "[", 
            RowBox[{"gjPolarize", ",", 
             RowBox[{"sines", "[", 
              RowBox[{"[", "edge", "]"}], "]"}], ",", "1."}], "]"}]}]}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"alter", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"First", "[", "#2", "]"}]}], "]"}], "&"}], ",", "edges"}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"adjMat", "=", 
      RowBox[{
       RowBox[{"SparseArray", "[", "adj", "]"}], "*", "meshRatio"}]}], 
     ";"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQHdE82VD21mvHjOfhRiDag/V78nEgzfBPOh1EP7Sd
3QSiu6wnNIPoo94M7meAtMk2CH3K1/nt4TuvHcMdDrwD0b/7p5UeAdJa8jfA
dILdPo6jQJpL7AqY3nxmdxHDk9eOETFxJSDaoF+oFkT/2RffD6Ktet/MBNHa
+pNmgeieb0W1P0F02nYwrV9k0QKid9Tbgun9Fr9bX/5+7Xi6V68dRC/7rjQf
ROe1OIBpjXvzrF8D6aBTu2xA9BXjMxcz/r92VLM5IZAJpN3KlWLbgPScVTbJ
IHrVuux0EP3huWsFiFZbqbb8afsbx6W1fzeB6MLXDkdB9JPmygsg+jEfb+wz
IJ2ZV5YMoo/dESgC0VqzPEtBtJSy9QQQbc8qOhFEn/N3mwai61J8V4Hoedu/
99RNfePIp9HZC6IBQLTk4g==
  "],
 CellLabel->
  "In[191]:=",ExpressionUUID->"6f8ff307-f1f4-4ee3-98ec-5501baed5d6e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
   "Check", " ", "to", " ", "make", " ", "sure", " ", "adjacencies", " ", 
    "are", " ", "correct"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"HighlightMesh", "[", 
     RowBox[{
      RowBox[{"HighlightMesh", "[", 
       RowBox[{"mesh", ",", 
        RowBox[{"Join", "[", 
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{"2", ",", 
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"adjMat", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", "\[NotEqual]", "0"}]}]}], "]"}], "//", 
             "Flatten"}]}], "}"}], "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "i"}], "}"}], ",", "Red"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "numCells2D", ",", "1"}], "}"}]}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.755955809417157*^9, 3.7559560104283314`*^9}, {
   3.755956713138179*^9, 3.7559567134439926`*^9}, {3.7578477292055774`*^9, 
   3.7578477327004123`*^9}, {3.757934525101997*^9, 3.7579345272556653`*^9}, 
   3.8365657673461933`*^9},
 CellLabel->
  "In[784]:=",ExpressionUUID->"57626a10-499e-4594-aa03-991a66f04ddb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["GJ Fluxes", "Chapter",
 CellChangeTimes->{{3.8237898295581965`*^9, 
  3.8237898319476123`*^9}},ExpressionUUID->"8f92bf70-aad8-4bd3-9d99-\
b123a5767763"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"random", " ", "GJ", " ", 
    RowBox[{"values", ".", " ", "Make"}], " ", "sure", " ", "none", " ", "of",
     " ", "them", " ", "are", " ", "negative"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"randGJmults", "=", 
     RowBox[{"If", "[", 
      RowBox[{"gjRand", ",", 
       RowBox[{"Abs", "@", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"NormalDistribution", "[", 
           RowBox[{"1.", ",", "\[Sigma]GJ"}], "]"}], ",", "numCells2D"}], 
         "]"}]}], ",", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1.", ",", "numCells2D"}], "]"}]}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"randGJmults", "=", 
     RowBox[{"If", "[", 
      RowBox[{"gjRand", ",", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"LogNormalDistribution", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Sigma]GJ", "2"]}], "/", "2"}], ",", 
           "\[Sigma]GJ"}], "]"}], ",", "numCells2D"}], "]"}], ",", 
       RowBox[{"ConstantArray", "[", 
        RowBox[{"1.", ",", "numCells2D"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8286138778976765`*^9, 3.828613891158036*^9}, {
   3.828614044456558*^9, 3.82861409859408*^9}, {3.829053413903801*^9, 
   3.829053439813758*^9}, {3.8323225045005045`*^9, 3.832322506499134*^9}, {
   3.8482711282015357`*^9, 3.848271143944538*^9}, {3.851127345285205*^9, 
   3.8511273649051137`*^9}, 3.8511274237981663`*^9, {3.8511281020827503`*^9, 
   3.8511281041293793`*^9}, {3.8521546310385885`*^9, 3.8521546405534387`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"f06fa619-1c07-47d1-9f4c-dd35d2ab8a56"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\[Eta]", " ", "values", " ", "are", " ", "based", " ", "on", " ", "a", 
     " ", "single", " ", "\"\<ideal\>\"", " ", "cell", " ", "of", " ", 
     "diameter", " ", "\[CapitalDelta]x"}], ",", " ", 
    RowBox[{
    "with", " ", "flux", " ", "through", " ", "its", " ", "entire", " ", 
     RowBox[{"perimeter", ".", " ", "Therefore"}]}], ",", " ", 
    RowBox[{
    "in", " ", "order", " ", "to", " ", "properly", " ", "scale", " ", 
     "based", " ", "on", " ", "cell", " ", "volume", " ", "and", " ", 
     "shared", " ", "perimeter", " ", "between", " ", "two", " ", "cells"}], 
    ",", " ", 
    RowBox[{
    "the", " ", "GJ", " ", "fluxes", " ", "have", " ", "to", " ", "be", " ", 
     "scaled", " ", "by", " ", 
     RowBox[{"(", 
      RowBox[{"v0", "/", 
       SubscriptBox["v", "i"]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"aij", "/", "a0"}], ")"}]}], ",", " ", 
    RowBox[{
    "where", " ", "the", " ", "0", " ", "subscript", " ", "denotes", " ", 
     "the", " ", "\"\<ideal\>\"", " ", "cell"}], ",", " ", 
    RowBox[{
    "i", " ", "is", " ", "the", " ", "cell", " ", "in", " ", "question"}], 
    ",", " ", 
    RowBox[{
    "and", " ", "j", " ", "denotes", " ", "any", " ", "cell", " ", "adjacent",
      " ", "to", " ", 
     RowBox[{"i", ".", " ", "Since"}], " ", "all", " ", "cells", " ", "have", 
     " ", "the", " ", "same", " ", "height"}], ",", " ", 
    RowBox[{
    "volume", " ", "ratios", " ", "are", " ", "reduced", " ", "to", " ", 
     "ratios", " ", "of", " ", "PM", " ", "area"}], ",", " ", 
    RowBox[{
    "and", " ", "shared", " ", "areas", " ", "are", " ", "reduced", " ", "to",
      " ", 
     RowBox[{"lengths", ".", " ", "So"}], " ", "v0", " ", "becomes", " ", 
     "the", " ", "PM", " ", "area", " ", "of", " ", "the", " ", "ideal", " ", 
     "cell"}], ",", " ", 
    RowBox[{
    "and", " ", "a0", " ", "becomes", " ", "the", " ", "circumference", " ", 
     "of", " ", "the", " ", "ideal", " ", 
     RowBox[{
     "cell", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", "a0"}], " ", 
     "and", " ", "areas", " ", "are", " ", "in", " ", 
     SuperscriptBox["dm", "2"]}], ",", " ", 
    RowBox[{
    "adjMat", " ", "lengths", " ", "and", " ", "\[CapitalDelta]x", " ", "are",
      " ", "in", " ", 
     RowBox[{"\[Mu]m", ".", " ", "So"}], " ", "the", " ", "ratios", " ", 
     "work", " ", "out", " ", "to", " ", "be", " ", "dimensionless"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"fluxGJCaTerms2D", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJc", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"knockoutList", ",", "\"\<GJ\>\""}], "]"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}], "||", 
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}]}], ")"}]}], ",", 
              "knockoutVal", ",", "1."}], "]"}], "*", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"ablatedPos", ",", "i"}], "]"}], "||", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"ablatedPos", ",", "#"}], "]"}]}], ",", 
              "connectAblated", ",", "1."}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"a0", "/", 
                RowBox[{"areas", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"adjMat", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
              "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["c", "#"], "[", "t", "]"}], "-", 
                RowBox[{
                 SubscriptBox["c", "i"], "[", "t", "]"}]}], ")"}]}], ")"}]}], 
           "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fluxIP3Terms2D", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJIP3", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"knockoutList", ",", "\"\<GJ\>\""}], "]"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}], "||", 
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}]}], ")"}]}], ",", 
              "knockoutVal", ",", "1."}], "]"}], "*", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"ablatedPos", ",", "i"}], "]"}], "||", 
               RowBox[{"MemberQ", "[", 
                RowBox[{"ablatedPos", ",", "#"}], "]"}]}], ",", 
              "connectAblated", ",", "1."}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"a0", "/", 
                RowBox[{"areas", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"adjMat", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["ip3", "#"], "[", "t", "]"}], "-", 
                RowBox[{
                 SubscriptBox["ip3", "i"], "[", "t", "]"}]}], ")"}]}], 
             ")"}]}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Unwounded", " ", "terms"}], ";", " ", 
     RowBox[{
     "only", " ", "difference", " ", "is", " ", "the", " ", "part", " ", 
      "with", " ", "ablation", " ", "connection"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fluxGJCaTerms2DUW", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJc", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"knockoutList", ",", "\"\<GJ\>\""}], "]"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}], "||", 
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}]}], ")"}]}], ",", 
              "knockoutVal", ",", "1."}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"a0", "/", 
                RowBox[{"areas", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"adjMat", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
              "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["c", "#"], "[", "t", "]"}], "-", 
                RowBox[{
                 SubscriptBox["c", "i"], "[", "t", "]"}]}], ")"}]}], ")"}]}], 
           "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"fluxIP3Terms2DUW", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"\[Eta]GJIP3", "*", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{"knockoutList", ",", "\"\<GJ\>\""}], "]"}], "&&", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}], "||", 
                 RowBox[{
                  RowBox[{"positions", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", "1"}], "]"}], "]"}], ">", 
                  RowBox[{"range", "/", "2."}]}]}], ")"}]}], ",", 
              "knockoutVal", ",", "1."}], "]"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"randGJmults", "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"a0", "/", 
                RowBox[{"areas", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"adjMat", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "#"}], "]"}], "]"}], "/", 
                RowBox[{"(", 
                 RowBox[{"\[Pi]", "*", "\[CapitalDelta]x"}], ")"}]}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SubscriptBox["ip3", "#"], "[", "t", "]"}], "-", 
                RowBox[{
                 SubscriptBox["ip3", "i"], "[", "t", "]"}]}], ")"}]}], 
             ")"}]}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"Flatten", "@", 
            RowBox[{
             RowBox[{"adjMat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<NonzeroPositions\>\"",
              "]"}]}], ")"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.744989624355424*^9, 3.7449896454543333`*^9}, {
   3.7449896772695875`*^9, 3.7449898276113024`*^9}, {3.7449898774373846`*^9, 
   3.744989879027397*^9}, 3.7449899288354883`*^9, {3.7468191533680162`*^9, 
   3.746819154558278*^9}, {3.7468194911067095`*^9, 3.746819502924386*^9}, 
   3.7468201212981615`*^9, {3.7486012147598615`*^9, 3.748601231129716*^9}, {
   3.7486013226080246`*^9, 3.7486013281635823`*^9}, {3.7486014084508247`*^9, 
   3.7486014113980007`*^9}, {3.748601531444604*^9, 3.7486015350513663`*^9}, {
   3.74860235387192*^9, 3.7486023691354604`*^9}, {3.755964984021002*^9, 
   3.755965148789323*^9}, {3.7559652074364877`*^9, 3.755965249714182*^9}, {
   3.75596530503138*^9, 3.7559653577331796`*^9}, {3.7559654357664976`*^9, 
   3.7559654620656843`*^9}, {3.7560340750123606`*^9, 3.75603407810847*^9}, {
   3.7560467420577135`*^9, 3.7560467637634516`*^9}, {3.757849011158785*^9, 
   3.757849019200803*^9}, {3.7578517055533648`*^9, 3.757851723062518*^9}, {
   3.7578518585814724`*^9, 3.7578518642769437`*^9}, {3.758020704597596*^9, 
   3.758020707036086*^9}, {3.823789840045166*^9, 3.8237898404480715`*^9}, {
   3.823790597311675*^9, 3.823790607663398*^9}, {3.8237908341960897`*^9, 
   3.8237908674135036`*^9}, {3.8237909823169155`*^9, 3.823790982921397*^9}, {
   3.8237911759769163`*^9, 3.8237911768337407`*^9}, {3.8237912310310836`*^9, 
   3.8237912468248386`*^9}, 3.8237913592807407`*^9, {3.823792526576125*^9, 
   3.823792541042704*^9}, {3.824316724894122*^9, 3.8243167338130865`*^9}, {
   3.824804959804517*^9, 3.824805079650198*^9}, {3.824805110060482*^9, 
   3.824805254620183*^9}, {3.8260214511961627`*^9, 3.8260214912257433`*^9}, {
   3.826032335119794*^9, 3.8260323678112803`*^9}, {3.8271795304046636`*^9, 
   3.827179535496957*^9}, {3.827180366360505*^9, 3.827180494545864*^9}, {
   3.82718107839067*^9, 3.8271811370938835`*^9}, {3.8271822184573493`*^9, 
   3.827182263257703*^9}, {3.828614243353843*^9, 3.828614292591341*^9}, {
   3.828614452322871*^9, 3.828614481762906*^9}, {3.8318020051682673`*^9, 
   3.831802087699815*^9}, {3.8323226519725113`*^9, 3.8323227169361205`*^9}, {
   3.832322750178913*^9, 3.832322754492408*^9}, {3.832322802606546*^9, 
   3.8323228452943172`*^9}, {3.8323238417482004`*^9, 3.832323842173833*^9}, {
   3.832717177689152*^9, 3.832717249389693*^9}, {3.846023842929147*^9, 
   3.8460238654894066`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"2d4e8350-6af5-4dde-916c-af355e1532d2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making multi-cell equations (equilibrium tissue)", "Chapter",
 CellChangeTimes->{{3.8237918283478622`*^9, 3.8237918341469584`*^9}, {
  3.8237929436896863`*^9, 3.823792946841731*^9}, {3.826889153983074*^9, 
  3.8268891627194567`*^9}},ExpressionUUID->"3fc7b827-5668-49b1-aa2f-\
e38d338226fd"],

Cell[CellGroupData[{

Cell["Some set up stuff", "Subsection",
 CellChangeTimes->{{3.833535953114091*^9, 
  3.8335359549402437`*^9}},ExpressionUUID->"86d53952-f142-43c4-bfc0-\
6e97bd9666ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"gcampRandVals", "=", 
     RowBox[{"Abs", "@", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"1.", ",", "\[Sigma]gcamp"}], "]"}], ",", "numCells2D"}], 
       "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"plcRandVals", "=", 
     RowBox[{"Abs", "@", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"1.", ",", "\[Sigma]PLC"}], "]"}], ",", "numCells2D"}], 
       "]"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"gcampRandVals", "=", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"LogNormalDistribution", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Sigma]gcamp", "2"]}], "/", "2"}], ",", 
         "\[Sigma]gcamp"}], "]"}], ",", "numCells2D"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"plcRandVals", "=", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{
       RowBox[{"LogNormalDistribution", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", ".5"}], "*", 
          RowBox[{"Log", "[", 
           RowBox[{"varPLC", "+", "1"}], "]"}]}], ",", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"Log", "[", 
           RowBox[{"varPLC", "+", "1"}], "]"}], "]"}]}], "]"}], ",", 
       "numCells2D"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maxGCAMPVal", "=", 
     RowBox[{"Max", "@", "gcampRandVals"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "Needed", " ", "to", " ", "determine", " ", "how", " ", "to", " ", 
      "scale", " ", "video", " ", "output", " ", "later"}], "*)"}], 
    "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.8309919130316396`*^9, 3.830991989289157*^9}, {
   3.8309920745630107`*^9, 3.830992084912059*^9}, {3.8311210088033776`*^9, 
   3.831121039443756*^9}, {3.8323242271341715`*^9, 3.832324229548993*^9}, {
   3.833585777197764*^9, 3.8335858266129375`*^9}, {3.848271154826762*^9, 
   3.848271166726097*^9}, {3.8511274477071495`*^9, 3.851127469261868*^9}, {
   3.851128123533311*^9, 3.851128129628352*^9}, {3.852154668665597*^9, 
   3.852154686647889*^9}, 3.852158798432726*^9},
 CellLabel->
  "In[212]:=",ExpressionUUID->"16691f3d-023b-4ec5-a391-da3498e528e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Single Cell", "Subsection",
 CellChangeTimes->{{3.8207469515829787`*^9, 
  3.8207469536533947`*^9}},ExpressionUUID->"4d33db51-750b-4fe0-90d1-\
9a435f73354b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deqsTissueEQ", "=", 
   RowBox[{"deqns", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r\[Mu]T", "\[Rule]", "0."}], ",", 
      RowBox[{"lr", "\[Rule]", "0."}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.815837355368222*^9, 3.8158373712013297`*^9}, {
   3.815837409793428*^9, 3.815837416449075*^9}, {3.8158503505520525`*^9, 
   3.8158503755201917`*^9}, {3.815850572918476*^9, 3.815850632644327*^9}, {
   3.8158507251941013`*^9, 3.8158507268747587`*^9}, {3.8158508092591686`*^9, 
   3.815850928292734*^9}, {3.8158511808681717`*^9, 3.815851217106206*^9}, {
   3.8158522542658677`*^9, 3.8158522603136187`*^9}, {3.815999668775794*^9, 
   3.8159996711020823`*^9}, {3.816000725021626*^9, 3.816000725374091*^9}, {
   3.816001672709465*^9, 3.8160016734619303`*^9}, {3.8171437386305275`*^9, 
   3.8171437391810026`*^9}, {3.8171438653103867`*^9, 
   3.8171438664446845`*^9}, {3.8172315327303925`*^9, 3.817231534041114*^9}, {
   3.818788932845103*^9, 3.8187889411816435`*^9}, {3.8187890515438766`*^9, 
   3.818789059444517*^9}, {3.8187891734017124`*^9, 3.8187891747360764`*^9}, {
   3.818789363545744*^9, 3.818789363661745*^9}, 3.818789451116909*^9, {
   3.818789484137412*^9, 3.8187894857306566`*^9}, {3.8189613581868153`*^9, 
   3.8189613589611473`*^9}, {3.819046395910932*^9, 3.819046457994269*^9}, {
   3.820746109312973*^9, 3.8207461115829306`*^9}, 3.820746454802818*^9, {
   3.8207465572111053`*^9, 3.8207465684314547`*^9}, {3.820746948110322*^9, 
   3.820746949333087*^9}, 3.826035776555591*^9, {3.826840360575862*^9, 
   3.826840368956185*^9}, {3.826889180520573*^9, 3.826889184925074*^9}, {
   3.827226873777075*^9, 3.827226874919515*^9}, {3.8272327021763687`*^9, 
   3.8272327164641423`*^9}, {3.8272370165369787`*^9, 3.827237024259626*^9}, 
   3.8272378016118298`*^9, 3.8272380459290466`*^9, 3.8272381057221365`*^9, {
   3.8272405932363963`*^9, 3.827240630844635*^9}, {3.830601122999578*^9, 
   3.8306011451107283`*^9}, {3.832072728344204*^9, 3.83207273521388*^9}, {
   3.8323274572204833`*^9, 3.8323274634371796`*^9}, {3.8323278361285076`*^9, 
   3.8323278367907963`*^9}, {3.8328890780332994`*^9, 
   3.8328891345375676`*^9}, {3.832890030998435*^9, 3.8328900358077154`*^9}, {
   3.83332727272081*^9, 3.833327274405338*^9}, {3.835806861794347*^9, 
   3.835806877372183*^9}, {3.8460253156565027`*^9, 3.8460253311243887`*^9}, {
   3.8460253972528467`*^9, 3.8460254412254844`*^9}, {3.847843981801846*^9, 
   3.847843981909847*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"71a36746-cdb7-4699-bd35-085ffc2614a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Variable", " ", "replacements", " ", "for", " ", "multiple", " ", 
    "cells"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"depVars2D", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["spec", "i"], "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"spec", ",", 
         RowBox[{"{", 
          RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"variableReplacements2D", "=", 
     RowBox[{"Flatten", "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"spec", "[", "t", "]"}], "\[Rule]", 
           RowBox[{
            SubscriptBox["spec", "i"], "[", "t", "]"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"spec", "'"}], "[", "t", "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{
             SubscriptBox["spec", "i"], "'"}], "[", "t", "]"}]}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"spec", ",", 
          RowBox[{"{", 
           RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"initReplacement2D", "=", 
     RowBox[{"Flatten", "/@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"spec", "[", "0", "]"}], "\[Rule]", 
          RowBox[{
           SubscriptBox["spec", "i"], "[", "0", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"spec", ",", 
          RowBox[{"{", 
           RowBox[{"ip3", ",", "h", ",", "c", ",", "cER"}], "}"}]}], "}"}]}], 
       "]"}]}]}], ";"}], " "}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzG8o43EAx/HFA38WLS6mo6zt1DRSuj2YQ7+ROSF/T67FXLeuOyePjHNM
5ycyf3KG8q8YcqcrmXU/JYaW7LZbl51LWcyfFu7Hg7v8e3C67+f34N3r2Vv0
orZI68fj8SQkmFPsn9JSz1Ku58ecv+m9EqhM9KiheSdfB3ffjuphb3gWDUf6
Q3tgRM32AGTH3oxAYZNuAqpKFbPQ8NBhaifepSRMwcCj66+wmi1l4NazgcXP
xETdsAUyGnvgHNE0pQqGl3/UUigTVsrgUqw9Gf7MO+dMXVk4yGtmqb5faV54
W2eV5BMb2nIfwW6t4abvA/npzZxtIXz/j8Q5RhEAMzOLHsD74fQoqBBnxEDX
tSQO0uVJ8XDC65DDYL1PBU9uGp9Cu/J7CTRE/9XACqVYCzsEs5zOgslV+EVq
3IAv+e9bjUTr/k4nnBYEDUJfdtUoFO53m2Cj7NU0tBXKLR6apcJeuzmthm8W
L/H0XQcDJU56DzpnjBdQsL11Bbtq3JyRZfPiQ6JGuymFJ/yFcbjxY9kEi/81
RA71sJTncZwQblYzIpistnGGPYmO/dTLUvO+dhFcW7flwOyoM87/HSEz9g==

  "],
 CellLabel->
  "In[216]:=",ExpressionUUID->"a4c54188-7a58-487b-a2e1-8c872ebc2a43"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Putting it all together", "Subsection",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, {3.826056084745327*^9, 
   3.8260560939701853`*^9}},ExpressionUUID->"faa1cb31-646c-4e40-a2d4-\
f5350f7edef4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"multiCellReplacements2D", "=", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Join", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"variableReplacements2D", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"initReplacement2D", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Bx", "\[Rule]", 
         RowBox[{"Bx", "*", 
          RowBox[{"If", "[", 
           RowBox[{"gcampRand", ",", 
            RowBox[{"gcampRandVals", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\[Alpha]", "\[Rule]", 
         RowBox[{"\[Alpha]", "*", 
          RowBox[{"If", "[", 
           RowBox[{"plcRand", ",", 
            RowBox[{"plcRandVals", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Alpha]0", "\[Rule]", 
           RowBox[{"\[Alpha]0", "*", 
            RowBox[{"If", "[", 
             RowBox[{"plcRand", ",", 
              RowBox[{"plcRandVals", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}], 
         ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"jGJIP3", "\[Rule]", 
          RowBox[{"fluxIP3Terms2DUW", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"jGJc", "\[Rule]", 
          RowBox[{"fluxGJCaTerms2DUW", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"r", "\[Rule]", 
         RowBox[{"distances", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
      "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, 3.826056084745327*^9, {
   3.827226893672307*^9, 3.8272269581060147`*^9}, {3.8272270028815317`*^9, 
   3.8272270142125435`*^9}, {3.827238363167718*^9, 3.8272383721227846`*^9}, {
   3.8272385091869297`*^9, 3.827238515491295*^9}, {3.827238564773803*^9, 
   3.8272385869548006`*^9}, {3.8272388441271563`*^9, 3.827238848641945*^9}, {
   3.827239830029871*^9, 3.8272398475545716`*^9}, 3.8272399319750137`*^9, {
   3.8306083521335697`*^9, 3.830608374418307*^9}, {3.830992027494193*^9, 
   3.8309920666514263`*^9}, {3.8309921018064322`*^9, 3.830992110081744*^9}, 
   3.830992145092105*^9, {3.832328499834278*^9, 3.8323285001576104`*^9}, {
   3.832717271186232*^9, 3.832717274393113*^9}, {3.8328899492962523`*^9, 
   3.8328899504664106`*^9}, {3.833585847551302*^9, 3.833585870430434*^9}, {
   3.8335859075026855`*^9, 3.8335859119178867`*^9}, 3.8419614346238217`*^9, {
   3.8423646347675667`*^9, 3.842364634907196*^9}, {3.846025568824628*^9, 
   3.8460255713581543`*^9}, {3.846189611309152*^9, 3.8461896132853*^9}, {
   3.847843735050784*^9, 3.847843803085275*^9}, {3.8478439708661933`*^9, 
   3.8478439712074914`*^9}, {3.8480152148817225`*^9, 3.8480152150166883`*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"0f83979b-3ec2-4841-a49f-566a9207a2eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tissueCellEquationsEQ", "=", 
   RowBox[{"deqsTissueEQ", "/.", "multiCellReplacements2D"}]}], 
  ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQvTr509a28jeO/df6doBoAw2rAyD6/L0lYPobX84t
EL2K5/IdEO0zTfUviO7oeMvQDuKvL4sE0cGKetEguu693ZZOIG1x5eYOEP1J
7saylUD6wtawtSB6020TsVVA+jPjWjB9xo3tqW/tG8fwH39fgujVgQmifkDa
yOuVGIh2W/TBFETPfvALTC98fnP95MY3jiWXr28E0VtmdqhOAdIsFy+D6Tjn
yWunAulXMdzrQfTbj4oND5vfOC7pXN0IouPe9Ugs733jeGJLuCKIPuj/av4q
IH0uo2AhiP6n88RvRd8bR410lkAQnXzy+Lfa/jeOPMWrfoJorlDPeRZT3jgy
7CiaD6JT5ro4bFv+xtEl96wLiHZbeuEniP7tdRlMAwB8AcOM
  "],
 CellLabel->
  "In[220]:=",ExpressionUUID->"0d181d96-6e60-44e5-aae3-01da7eedc43e"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"tissueModelEquationsEQ", "=", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"tissueCellEquationsEQ", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/.", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"positions", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "<", 
            RowBox[{"positions", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "knockoutRules", 
           ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}], "]"}], "/.", 
     "intParams"}]}], ";"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQvTr509a28jeO/df6doBoAw2rAyD6/L0lYPobX84t
EL2K5/IdEO0zTfUviO7oeMvQDuKvL4sE0cGKetEguu693ZZOIG1x5eYOEP1J
7saylUD6wtawtSB6020TsVVA+jPjWjB9xo3tqW/tG8fwH39fgujVgQmifkDa
yOuVGIh2W/TBFETPfvALTC98fnP95MY3jiWXr28E0VtmdqhOAdIsFy+D6Tjn
yWunAulXMdzrQfTbj4oND5vfOC7pXN0IouPe9Ugs733jeGJLuCKIPuj/av4q
IH0uo2AhiP6n88RvRd8bR410lkAQnXzy+Lfa/jeOPMWrfoJorlDPeRZT3jgy
7CiaD6JT5ro4bFv+xtEl96wLiG65xLoJRCeZZ4BpsYMKv0C0ZEchmD7/2+F9
xuY3jk0rsr6AaADTbdSr
  "],
 CellLabel->
  "In[221]:=",ExpressionUUID->"4c99524d-97dd-4da4-8053-e40d75e5c2d8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tLong", "=", "6000."}], ";"}], " ", 
  RowBox[{"(*", "seconds", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tissueModelSolEQ", "=", "\[IndentingNewLine]", 
   RowBox[{"ParametricNDSolveValue", "[", "\[IndentingNewLine]", 
    RowBox[{"tissueModelEquationsEQ", ",", "\[IndentingNewLine]", 
     RowBox[{"depVars2D", "/.", 
      RowBox[{"t", "\[Rule]", "tLong"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tLong"}], "}"}], ",", 
     "\[IndentingNewLine]", "extParams", ",", "\[IndentingNewLine]", 
     RowBox[{"DependentVariables", "\[Rule]", 
      RowBox[{"Flatten", "@", "depVars2D"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Method\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<EquationSimplification\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", 
          RowBox[{"\"\<TimeConstraint\>\"", "\[Rule]", "100"}]}], "}"}]}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.815850935510934*^9, 3.8158509460012465`*^9}, {
   3.8158509986653643`*^9, 3.8158510166096992`*^9}, {3.815851066479927*^9, 
   3.8158511479676313`*^9}, {3.8158512195440855`*^9, 
   3.8158512207495766`*^9}, {3.8158522658868513`*^9, 3.81585226666661*^9}, {
   3.81600032865289*^9, 3.816000360666057*^9}, {3.81878934590421*^9, 
   3.818789351796474*^9}, {3.8187895705395308`*^9, 3.8187895788954916`*^9}, {
   3.8188565544822245`*^9, 3.8188565748234215`*^9}, {3.8190464720907354`*^9, 
   3.819046479157522*^9}, {3.8190480772271214`*^9, 3.8190480780182157`*^9}, {
   3.819372300088422*^9, 3.819372300241935*^9}, {3.8195477083814197`*^9, 
   3.819547709395692*^9}, {3.820835105121843*^9, 3.8208351212771935`*^9}, {
   3.8208351840177712`*^9, 3.820835277606222*^9}, {3.82083531359741*^9, 
   3.820835316680043*^9}, {3.8208408226491494`*^9, 3.8208408250844173`*^9}, {
   3.823792407850629*^9, 3.823792416120907*^9}, {3.8237924585713205`*^9, 
   3.8237924658182554`*^9}, 3.8238557989759893`*^9, {3.8238566471965246`*^9, 
   3.8238566662893934`*^9}, {3.8238567131383*^9, 3.8238567154320154`*^9}, 
   3.8243015214546595`*^9, {3.8268893937794204`*^9, 3.8268894179500875`*^9}, {
   3.826889475424861*^9, 3.8268894789280543`*^9}, 3.8268895966063337`*^9, {
   3.846026738385331*^9, 3.8460267384758825`*^9}, {3.8460272240963063`*^9, 
   3.846027224196495*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"178e524a-d803-49fd-b22c-146eb267ed0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newEQSoln", "=", 
   RowBox[{"tissueModelSolEQ", "@@", 
    RowBox[{"(", 
     RowBox[{"finalParamAssociation", "/@", "extParams"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.846026749637018*^9, 3.8460267817701683`*^9}},
 CellLabel->
  "In[224]:=",ExpressionUUID->"c7650c15-a4d9-4637-813c-47e759538d98"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newEQs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ip30", "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"ca0", "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
         RowBox[{"cER0", "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "4"}], "]"}], "]"}]}], ",", 
         RowBox[{"h0", "\[Rule]", 
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}], "&"}], "@", 
    "newEQSoln"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8268908006467023`*^9, 3.826890955315236*^9}, {
  3.8328900533654327`*^9, 3.832890069577631*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"a2c0c720-5931-48a2-b428-12d9c6b7d034"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full Model (new)", "Chapter",
 CellChangeTimes->{{3.8237918283478622`*^9, 3.8237918341469584`*^9}, {
  3.8237929436896863`*^9, 3.823792946841731*^9}, {3.826889153983074*^9, 
  3.8268891627194567`*^9}, {3.8272420090647964`*^9, 3.827242010264106*^9}, {
  3.827242145663601*^9, 
  3.827242146558306*^9}},ExpressionUUID->"24bc27d0-9780-4456-a388-\
db846147ab7a"],

Cell["RUN EQUILIBRIUM TISSUE FIRST", "Text",
 CellChangeTimes->{{3.827242026493845*^9, 
  3.82724203440492*^9}},ExpressionUUID->"9fb99737-bd24-4afe-8c1e-\
d60d09ca908e"],

Cell[CellGroupData[{

Cell["Single Cell", "Subsection",
 CellChangeTimes->{{3.8207469515829787`*^9, 
  3.8207469536533947`*^9}},ExpressionUUID->"cff28f88-da29-45cf-b788-\
7ae3b9206917"],

Cell[BoxData[
 RowBox[{
  RowBox[{"deqsTissue", "=", 
   RowBox[{"deqns", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lr", "\[Rule]", 
       RowBox[{"lrSol", "[", 
        RowBox[{"r", ",", "t"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"ip3", "[", "0", "]"}], "\[Equal]", "x_"}], "\[Rule]", 
       RowBox[{
        RowBox[{"ip3", "[", "0", "]"}], "\[Equal]", "ip30"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"c", "[", "0", "]"}], "\[Equal]", "x_"}], "\[Rule]", 
       RowBox[{
        RowBox[{"c", "[", "0", "]"}], "\[Equal]", "ca0"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"cER", "[", "0", "]"}], "\[Equal]", "x_"}], "\[Rule]", 
       RowBox[{
        RowBox[{"cER", "[", "0", "]"}], "\[Equal]", "cER0"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"h", "[", "0", "]"}], "\[Equal]", "x_"}], "\[Rule]", 
       RowBox[{
        RowBox[{"h", "[", "0", "]"}], "\[Equal]", "h0"}]}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.815837355368222*^9, 3.8158373712013297`*^9}, {
   3.815837409793428*^9, 3.815837416449075*^9}, {3.8158503505520525`*^9, 
   3.8158503755201917`*^9}, {3.815850572918476*^9, 3.815850632644327*^9}, {
   3.8158507251941013`*^9, 3.8158507268747587`*^9}, {3.8158508092591686`*^9, 
   3.815850928292734*^9}, {3.8158511808681717`*^9, 3.815851217106206*^9}, {
   3.8158522542658677`*^9, 3.8158522603136187`*^9}, {3.815999668775794*^9, 
   3.8159996711020823`*^9}, {3.816000725021626*^9, 3.816000725374091*^9}, {
   3.816001672709465*^9, 3.8160016734619303`*^9}, {3.8171437386305275`*^9, 
   3.8171437391810026`*^9}, {3.8171438653103867`*^9, 
   3.8171438664446845`*^9}, {3.8172315327303925`*^9, 3.817231534041114*^9}, {
   3.818788932845103*^9, 3.8187889411816435`*^9}, {3.8187890515438766`*^9, 
   3.818789059444517*^9}, {3.8187891734017124`*^9, 3.8187891747360764`*^9}, {
   3.818789363545744*^9, 3.818789363661745*^9}, 3.818789451116909*^9, {
   3.818789484137412*^9, 3.8187894857306566`*^9}, {3.8189613581868153`*^9, 
   3.8189613589611473`*^9}, {3.819046395910932*^9, 3.819046457994269*^9}, {
   3.820746109312973*^9, 3.8207461115829306`*^9}, 3.820746454802818*^9, {
   3.8207465572111053`*^9, 3.8207465684314547`*^9}, {3.820746948110322*^9, 
   3.820746949333087*^9}, 3.826035776555591*^9, {3.826840360575862*^9, 
   3.826840368956185*^9}, {3.826889180520573*^9, 3.826889184925074*^9}, {
   3.827226873777075*^9, 3.827226874919515*^9}, {3.8272327021763687`*^9, 
   3.8272327164641423`*^9}, {3.8272370165369787`*^9, 3.827237024259626*^9}, 
   3.8272378016118298`*^9, 3.8272380459290466`*^9, 3.8272381057221365`*^9, {
   3.8272405932363963`*^9, 3.827240630844635*^9}, {3.8272420212104354`*^9, 
   3.8272420240788965`*^9}, 3.827242103337795*^9, {3.830601300244814*^9, 
   3.8306013240471387`*^9}, {3.831804245828209*^9, 3.8318042470457635`*^9}, {
   3.8318043530376673`*^9, 3.8318043558058076`*^9}, {3.8320727642119455`*^9, 
   3.832072769083949*^9}, {3.8320756875270147`*^9, 3.832075687949498*^9}, {
   3.8323279222671394`*^9, 3.8323279254258156`*^9}, {3.832328692939189*^9, 
   3.832328694051138*^9}, 3.8328901571028786`*^9, 3.8328906599810886`*^9, {
   3.832890727134014*^9, 3.8328907346880865`*^9}, {3.833327617008458*^9, 
   3.8333276182832675`*^9}, 3.8358071630734034`*^9, {3.846026832357744*^9, 
   3.846026840793107*^9}, {3.8460268755730534`*^9, 3.8460269363329024`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"93d44c69-219e-4eb9-9186-356e18a57d16"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Making", " ", "ablated", " ", "cells", " ", "have", " ", "constant", " ", 
    RowBox[{"calcium", ".", " ", "Use"}], " ", "Dispatch", " ", "to", " ", 
    "make", " ", "things", " ", 
    RowBox[{"faster", ".", " ", "Might"}], " ", "need", " ", "to", " ", 
    "modify", " ", "things", " ", "other", " ", "than", " ", "Calcium"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ablatedChanges", "=", 
    RowBox[{"Dispatch", "@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"ablatedPos", ",", "i"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "x_"}], "\[Rule]", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "0"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", "x_"}], 
             "\[Rule]", 
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", 
              "cExt"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "x_"}], "\[Rule]", 
             RowBox[{
              RowBox[{
               RowBox[{
                SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]", 
              "x"}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", "x_"}], 
             "\[Rule]", 
             RowBox[{
              RowBox[{
               SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", "x"}]}]}],
            "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}]}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwd0VtMkmEAxnGmrUyWsWpFBzcLatmQxZo2tdOHLu2AKwNbzBm1qKkxuwnM
yFa4XAjOQijUNkMcyTpMYNJq5GKtSQKVpjlhhoe5Vl+trDC5aL3Pd/Hsd/fc
/DeerilVJrFYLCEZPHgsOf+qhqbC8mnGr7qIFIqF0XLoGilRw7Hz7fWweeV+
HWy7nWaEq1VDrZDuqGqDXK26ExbJ8hxQv37QdoO4kJ/VBVOm4n2wmpZ54UBZ
q7uHKFRbPdCrCKQ4ibauolT4fa48Ewq4JwXwaUZgB/wg+cK429f7SXKFplpG
98Tg34v9/BJibcPhzdCg1M+3XCN/9S7GhmXs5FtEpzdvCSwsLF0F/1n3roV5
vIJ0GI7zt0Ddie3bYGdsMAem1s8WwZn5ugMwIA5JoX7DLwWsEPOUsJHjYAwe
uf8CPsw0+eEZ9uXrJmL/xMhNaOcsNcPZ4lPtkDthsME6wTk7fHU0xxPV0dSK
ymHGfv0bT4z4+VKjF/KDuggMdpu+Qc7QwB/YpBpmXHP8CW+SqFC+zoQz7N57
0P/uuQ1uvSB6OUVMe7yTcXHCHILZIlEYVs0ZsywGmvqdHsiGuzSat9ApsA9D
X5N7DMaN44zs8oIfMCnX/BOu872vvkPMUfXWwDJLpRoabE0a+OzRonaY6JEy
ys9W7LMYSacsF2PGJFUMP8pCEji6UNv9oJmmlh+SO6A/Nzje56CpTVphBLoT
2mkYvWudgf8Bq6iRBw==
  "],
 CellLabel->
  "In[227]:=",ExpressionUUID->"fa7da232-4153-4e5f-a8d2-5cd5ae48ae25"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Putting it all together", "Subsection",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, {3.826056084745327*^9, 
   3.8260560939701853`*^9}},ExpressionUUID->"ed771f5b-e2ce-451e-ab3c-\
04d76262a748"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Comapred", " ", "to", " ", "the", " ", "equilibrium", " ", "tissue"}], 
    ",", " ", 
    RowBox[{
    "we", " ", "add", " ", "in", " ", "the", " ", "new", " ", "resting", " ", 
     "levels", " ", "from", " ", "the", " ", "previous", " ", "section"}], 
    ",", " ", 
    RowBox[{
    "and", " ", "we", " ", "take", " ", "out", " ", "the", " ", "initial", 
     " ", "condition", " ", "scaling", " ", 
     RowBox[{"(", 
      RowBox[{
      "since", " ", "we", " ", "already", " ", "have", " ", "the", " ", 
       "initial", " ", "conditions", " ", "for", " ", "each", " ", "cell"}], 
      ")"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"multiCellReplacements2D", "=", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"newEQs", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"variableReplacements2D", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"initReplacement2D", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"r\[Mu]T", "\[Rule]", 
          RowBox[{"r\[Mu]T", "*", 
           RowBox[{"\[Mu]TDist", "[", 
            RowBox[{"distances", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"Bx", "\[Rule]", 
          RowBox[{"Bx", "*", 
           RowBox[{"If", "[", 
            RowBox[{"gcampRand", ",", 
             RowBox[{"gcampRandVals", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", "\[Rule]", 
          RowBox[{"\[Alpha]", "*", 
           RowBox[{"If", "[", 
            RowBox[{"plcRand", ",", 
             RowBox[{"plcRandVals", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Alpha]0", "\[Rule]", 
            RowBox[{"\[Alpha]0", "*", 
             RowBox[{"If", "[", 
              RowBox[{"plcRand", ",", 
               RowBox[{"plcRandVals", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}]}]}], "}"}],
           ","}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"jGJIP3", "\[Rule]", 
           RowBox[{"fluxIP3Terms2D", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"jGJc", "\[Rule]", 
           RowBox[{"fluxGJCaTerms2D", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"r", "\[Rule]", 
          RowBox[{"distances", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, 3.8260329402687626`*^9, 3.826056084745327*^9, {
   3.827226893672307*^9, 3.8272269581060147`*^9}, {3.8272270028815317`*^9, 
   3.8272270142125435`*^9}, {3.827238363167718*^9, 3.8272383721227846`*^9}, {
   3.8272385091869297`*^9, 3.827238515491295*^9}, {3.827238564773803*^9, 
   3.8272385869548006`*^9}, {3.8272388441271563`*^9, 3.827238848641945*^9}, {
   3.827239830029871*^9, 3.8272398475545716`*^9}, 3.8272399319750137`*^9, {
   3.8272421646889706`*^9, 3.8272421708258486`*^9}, {3.8272425104004507`*^9, 
   3.827242546519987*^9}, {3.8306084531714983`*^9, 3.8306084533711023`*^9}, {
   3.8309921353104897`*^9, 3.8309921400477123`*^9}, {3.831805620871216*^9, 
   3.831805624165031*^9}, {3.831807208583192*^9, 3.8318072088043613`*^9}, {
   3.8323288408883753`*^9, 3.8323288410278077`*^9}, {3.8328906929266872`*^9, 
   3.8328906932331386`*^9}, {3.833585990152383*^9, 3.8335859903393974`*^9}, 
   3.841961584001182*^9, {3.842364645289173*^9, 3.842364645429821*^9}, {
   3.8460270772633553`*^9, 3.8460271097936373`*^9}, {3.8461896183506365`*^9, 
   3.8461896207922335`*^9}, {3.8478440140265512`*^9, 3.847844043860664*^9}, {
   3.8480152321118503`*^9, 3.8480152371727886`*^9}, {3.848103816751813*^9, 
   3.8481038169016495`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"089bc372-56cf-4df3-8ff2-cd04789954d3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Break", " ", "into", " ", "separate", " ", "steps", " ", "to", " ", 
    "speed", " ", "up", " ", "ablation", " ", "replacements"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tissueCellEquations", "=", 
     RowBox[{"deqsTissue", "/.", "multiCellReplacements2D"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tissueModelEquations", "=", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"tissueCellEquations", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "/.", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"ablatedPos", ",", "i"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]",
                  "x_"}], "\[Rule]", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   SubscriptBox["c", "i"], "'"}], "[", "t", "]"}], "\[Equal]",
                  "0"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", "x_"}],
                 "\[Rule]", 
                RowBox[{
                 RowBox[{
                  SubscriptBox["c", "i"], "[", "0", "]"}], "\[Equal]", 
                 "cExt"}]}]}], "}"}], ",", 
             RowBox[{"{", "}"}]}], "]"}]}], "/.", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"positions", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "<", 
             RowBox[{"positions", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", "knockoutRules", 
            ",", 
            RowBox[{"{", "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}], "]"}], "/.", 
      "intParams"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8207625435746665`*^9, 3.820762564463691*^9}, {
   3.8207626258174057`*^9, 3.8207626291521983`*^9}, {3.8207628353768263`*^9, 
   3.820762854595296*^9}, {3.820763113174597*^9, 3.8207631434229164`*^9}, {
   3.8207638517088985`*^9, 3.820763865441568*^9}, {3.820768673966735*^9, 
   3.8207687108071556`*^9}, {3.8208341027537775`*^9, 3.820834154709694*^9}, {
   3.8208349936518183`*^9, 3.820834997406488*^9}, {3.823791912196142*^9, 
   3.823791951936565*^9}, {3.823792299009969*^9, 3.823792311321557*^9}, {
   3.823792559519809*^9, 3.8237925598399177`*^9}, {3.826031998809525*^9, 
   3.826032014744562*^9}, {3.8260329402687626`*^9, 3.8260329426192646`*^9}, {
   3.8260360766019735`*^9, 3.826036088355092*^9}, {3.827239937060782*^9, 
   3.827239949360552*^9}, {3.831804365319412*^9, 3.831804367592826*^9}, 
   3.8318056079315333`*^9, {3.831807213949911*^9, 3.831807215496257*^9}, {
   3.831809869850851*^9, 3.831809886289317*^9}, 3.8318099220327415`*^9, {
   3.8318099855078697`*^9, 3.8318100218273015`*^9}, {3.8318103889443903`*^9, 
   3.8318104003876157`*^9}, {3.831810438481258*^9, 3.831810483882758*^9}, {
   3.8318105463800983`*^9, 3.8318105484102726`*^9}, {3.8318105860676727`*^9, 
   3.831810590051114*^9}, {3.832365157066003*^9, 3.8323651674711018`*^9}, {
   3.832370481844284*^9, 3.83237048974708*^9}, {3.8328907031117268`*^9, 
   3.8328907063524866`*^9}, {3.833327629451953*^9, 3.8333276409663305`*^9}, {
   3.8358076883272552`*^9, 3.835807692263531*^9}, {3.8460270592409954`*^9, 
   3.84602706469526*^9}, 3.8460640539003153`*^9, {3.852158915274187*^9, 
   3.8521589273680525`*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"e47add34-c091-4630-873e-af6e57d855e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"tissueModelSol", "=", "\[IndentingNewLine]", 
    RowBox[{"ParametricNDSolveValue", "[", "\[IndentingNewLine]", 
     RowBox[{"tissueModelEquations", ",", "\[IndentingNewLine]", 
      RowBox[{"depVars2D", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "3"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "400."}], "}"}], ",", 
      "\[IndentingNewLine]", "extParams", ",", "\[IndentingNewLine]", 
      RowBox[{"DependentVariables", "\[Rule]", 
       RowBox[{"Flatten", "@", "depVars2D"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<Method\>\"", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<EquationSimplification\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"\"\<TimeConstraint\>\"", "\[Rule]", "100"}]}], "}"}]}], 
        "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.815850935510934*^9, 3.8158509460012465`*^9}, {
   3.8158509986653643`*^9, 3.8158510166096992`*^9}, {3.815851066479927*^9, 
   3.8158511479676313`*^9}, {3.8158512195440855`*^9, 
   3.8158512207495766`*^9}, {3.8158522658868513`*^9, 3.81585226666661*^9}, {
   3.81600032865289*^9, 3.816000360666057*^9}, {3.81878934590421*^9, 
   3.818789351796474*^9}, {3.8187895705395308`*^9, 3.8187895788954916`*^9}, {
   3.8188565544822245`*^9, 3.8188565748234215`*^9}, {3.8190464720907354`*^9, 
   3.819046479157522*^9}, {3.8190480772271214`*^9, 3.8190480780182157`*^9}, {
   3.819372300088422*^9, 3.819372300241935*^9}, {3.8195477083814197`*^9, 
   3.819547709395692*^9}, {3.820835105121843*^9, 3.8208351212771935`*^9}, {
   3.8208351840177712`*^9, 3.820835277606222*^9}, {3.82083531359741*^9, 
   3.820835316680043*^9}, {3.8208408226491494`*^9, 3.8208408250844173`*^9}, {
   3.823792407850629*^9, 3.823792416120907*^9}, {3.8237924585713205`*^9, 
   3.8237924658182554`*^9}, 3.8238557989759893`*^9, {3.8238566471965246`*^9, 
   3.8238566662893934`*^9}, {3.8238567131383*^9, 3.8238567154320154`*^9}, 
   3.8243015214546595`*^9, {3.8268893937794204`*^9, 3.8268894179500875`*^9}, {
   3.826889475424861*^9, 3.8268894789280543`*^9}, 3.8268895966063337`*^9, {
   3.8272423242838273`*^9, 3.8272423469827924`*^9}, {3.8328907837486134`*^9, 
   3.8328907881606064`*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"b0f9be33-4c44-47da-9036-e08ee5d8f18a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"tissueModelSol", "@@", 
    RowBox[{"(", 
     RowBox[{"finalParamAssociation", "/@", "extParams"}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8208353300834208`*^9, 3.820835334856078*^9}, {
   3.820835519795843*^9, 3.8208355902402844`*^9}, 3.820841280676635*^9, {
   3.820841389141342*^9, 3.820841389269723*^9}, {3.820841469548337*^9, 
   3.820841470340723*^9}, {3.8208415292324915`*^9, 3.8208415418677173`*^9}, {
   3.8208417023802767`*^9, 3.8208417027177057`*^9}, {3.820848483946121*^9, 
   3.82084848418559*^9}, {3.820848726382415*^9, 3.8208487265182843`*^9}, {
   3.820849827466297*^9, 3.8208498276031013`*^9}, {3.820849871664625*^9, 
   3.8208498717851133`*^9}, {3.823792483509634*^9, 3.8237924841185675`*^9}, 
   3.824301666114005*^9, {3.8243165917439127`*^9, 3.8243165947033243`*^9}, {
   3.824316655536581*^9, 3.8243166556971283`*^9}, {3.8243167501994925`*^9, 
   3.8243167514636164`*^9}, {3.824378616563017*^9, 3.8243786186499143`*^9}, {
   3.8260562048505993`*^9, 3.8260562162512856`*^9}, {3.8260562613445663`*^9, 
   3.826056268245102*^9}, {3.8260564090317717`*^9, 3.8260564142465906`*^9}, {
   3.82689122563451*^9, 3.8268912273206663`*^9}, {3.8271811985015483`*^9, 
   3.827181200673194*^9}, {3.8271816453311453`*^9, 3.8271816466495657`*^9}, {
   3.8271819662911997`*^9, 3.827181967112*^9}, {3.82724239535752*^9, 
   3.8272424027645364`*^9}, {3.8286152053602123`*^9, 
   3.8286152082844744`*^9}, {3.830601362033525*^9, 3.8306013633233547`*^9}, {
   3.846064068784148*^9, 3.8460640776660867`*^9}},
 CellLabel->
  "In[234]:=",ExpressionUUID->"772b08b9-39d1-4131-9b17-6006c8f671c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testG", "=", 
   RowBox[{"CtoF", "/@", "test"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8208356270472713`*^9, 3.8208356563281317`*^9}, 
   3.8208413418107004`*^9},
 CellLabel->
  "In[235]:=",ExpressionUUID->"011ba853-5f97-4867-9708-207502636ace"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animation", "Subsection",
 CellChangeTimes->{{3.8237929524237785`*^9, 
  3.8237929546666975`*^9}},ExpressionUUID->"b6e00980-da73-426d-a2b5-\
fa16ee7891e4"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Set", " ", "frames", " ", "before", " ", "wounding", " ", "to", " ", "be", 
   " ", "resting", " ", "calcium", " ", "levels"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8318108950298295`*^9, 3.8318109381141624`*^9}, 
   3.8323341730991573`*^9, {3.8324088708286533`*^9, 3.832408871283579*^9}},
 CellLabel->
  "In[812]:=",ExpressionUUID->"1708433c-cb82-4a60-aec3-4e5569b567a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"animate2D", "[", "soln_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "timePoints", ",", "minF", ",", "maxF", ",", "styles", ",", "animList", 
      ",", "frames"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"timePoints", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"soln", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "/.", 
         RowBox[{"t", "\[Rule]", "\[Tau]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\[Tau]", ",", "0.1", ",", "400.1", ",", "\[CapitalDelta]t"}], "}"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"minF", "=", ".12"}], ";", "\[IndentingNewLine]", 
     RowBox[{"maxF", "=", "1."}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"styles", "=", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "i"}], "}"}], ",", 
            RowBox[{"GrayLevel", "[", 
             RowBox[{"Min", "[", 
              RowBox[{"maxF", ",", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{"gcampRand", ",", 
                  RowBox[{"gcampRandVals", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}], "*", 
                RowBox[{"Rescale", "[", 
                 RowBox[{
                  RowBox[{"CtoF", "[", 
                   RowBox[{"newEQSoln", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"minInt", ",", 
                    RowBox[{"maxInt", "*", "maxGCAMPVal"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"minF", ",", "maxF"}], "}"}]}], "]"}]}]}], "]"}], 
             "]"}]}], "]"}], ",", "10", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "i"}], "}"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"MemberQ", "[", 
               RowBox[{"ablatedPos", ",", "i"}], "]"}], ",", "Black", ",", 
              RowBox[{"GrayLevel", "[", 
               RowBox[{"Min", "[", 
                RowBox[{"maxF", ",", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{"gcampRand", ",", 
                    RowBox[{"gcampRandVals", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "1."}], "]"}], "*", 
                  RowBox[{"Rescale", "[", 
                   RowBox[{
                    RowBox[{"timePoints", "[", 
                    RowBox[{"[", 
                    RowBox[{"\[Tau]", ",", "i"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"minInt", ",", 
                    RowBox[{"maxInt", "*", "maxGCAMPVal"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"minF", ",", "maxF"}], "}"}]}], "]"}]}]}], "]"}], 
               "]"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", 
            RowBox[{"Length", "@", "timePoints"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "numCells2D"}], "}"}]}], "]"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"animList", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"HighlightMesh", "[", 
         RowBox[{"mesh", ",", "#", ",", 
          RowBox[{"MeshCellStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", "\[Rule]", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"Opacity", "[", "0", "]"}], ",", 
               RowBox[{"Antialiasing", "\[Rule]", "False"}]}], "]"}]}], 
            "}"}]}]}], "]"}], "&"}], "/@", "styles"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"frames", "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Show", "[", 
          RowBox[{"#1", ",", 
           RowBox[{"Graphics", "[", 
            RowBox[{"{", 
             RowBox[{"White", ",", 
              RowBox[{"Text", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<t = \>\"", "<>", 
                   RowBox[{"ToString", "[", 
                    RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"\[CapitalDelta]t", "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"First", "[", "#2", "]"}], "-", "11."}], ")"}]}], 
                    ",", ".1"}], "]"}], "]"}], "<>", "\"\< s\>\""}], ",", 
                  "White", ",", "18"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"75", ",", "35"}], "}"}]}], "]"}], ",", "Yellow", 
              ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"range", ",", "range"}], "}"}]}], "}"}], "]"}], ",",
               "White", ",", 
              RowBox[{"Thickness", "@", ".025"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{".75", "*", "range"}], ",", 
                   RowBox[{".1", "*", "range"}]}], "}"}], 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{".75", "*", "range"}], "+", "50"}], ",", 
                   RowBox[{".1", "*", "range"}]}], "}"}]}], "}"}], "]"}]}], 
             "}"}], "]"}]}], "]"}], "&"}], ",", "animList"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "frames", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"ListAnimate", "[", 
     RowBox[{"frames", ",", "7"}], "]"}], "*)"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.758284567431217*^9, 3.7582846272947483`*^9}, {
   3.758284882128977*^9, 3.758284889286543*^9}, {3.758284919703703*^9, 
   3.758284981011743*^9}, 3.823792969383465*^9, {3.8237930235310607`*^9, 
   3.823793026170868*^9}, {3.823793213073285*^9, 3.823793248990878*^9}, {
   3.8237933313637085`*^9, 3.8237933339817624`*^9}, {3.8237933657848854`*^9, 
   3.8237933705583353`*^9}, 3.8237934063571815`*^9, {3.8238625363530283`*^9, 
   3.8238625379432516`*^9}, {3.8238625873087525`*^9, 3.823862659831546*^9}, {
   3.8285294518477087`*^9, 3.828529467764728*^9}, {3.8285295911344504`*^9, 
   3.8285295976542544`*^9}, {3.8285299651000395`*^9, 3.828529994724305*^9}, {
   3.828530106340125*^9, 3.8285301548588333`*^9}, {3.8285302676797733`*^9, 
   3.8285303237191105`*^9}, {3.8285311290820055`*^9, 
   3.8285311341809464`*^9}, {3.828531765137025*^9, 3.8285317725971146`*^9}, {
   3.8285328112274537`*^9, 3.8285328124521427`*^9}, 3.828533257346529*^9, {
   3.8306117443034797`*^9, 3.830611746782955*^9}, {3.830992352711447*^9, 
   3.8309923556951704`*^9}, {3.8309924290668383`*^9, 
   3.8309924499742365`*^9}, {3.8311210670282574`*^9, 3.8311210697226257`*^9}, 
   3.8311211707766314`*^9, {3.8318044040355177`*^9, 3.83180444267688*^9}, {
   3.8318046080702877`*^9, 3.831804647170457*^9}, {3.831810857609064*^9, 
   3.8318108837091713`*^9}, {3.8324087961018353`*^9, 
   3.8324087999053297`*^9}, {3.8328909647598467`*^9, 
   3.8328909648793955`*^9}, {3.847402466927994*^9, 3.8474024692801266`*^9}, {
   3.8484449248754854`*^9, 3.848444966353299*^9}, {3.8486542717404647`*^9, 
   3.8486542757218647`*^9}, 3.85215927813258*^9, {3.852159347933921*^9, 
   3.852159357558527*^9}, {3.852159451049398*^9, 3.852159469582755*^9}, {
   3.852159506647462*^9, 3.852159508870758*^9}, 3.8521595490730686`*^9, {
   3.852159636003169*^9, 3.8521596465855484`*^9}, {3.852159714340246*^9, 
   3.8521597144507585`*^9}, {3.852159807992288*^9, 3.8521598257020903`*^9}, {
   3.85215985937783*^9, 3.85215988673291*^9}, {3.852196971999152*^9, 
   3.8521970014052057`*^9}},ExpressionUUID->"805b7ee7-41ff-418c-a7c7-\
700a0928040e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"frames2D", "=", 
   RowBox[{"animate2D", "[", "testG", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.758285038257244*^9, 3.7582850536866913`*^9}, {
   3.7582868131838565`*^9, 3.758286825672124*^9}, 3.7585572694071145`*^9, {
   3.823793378580084*^9, 3.823793384618803*^9}, {3.8238626636694365`*^9, 
   3.8238626645344477`*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"22120550-ab8f-46c3-9b8c-1ea732104bbc"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"frames2D", ",", "7"}], "]"}]], "Input",
 CellChangeTimes->{{3.7582854776272025`*^9, 3.758285513616075*^9}, {
  3.758286831006818*^9, 3.758286832502891*^9}, {3.8320729710319214`*^9, 
  3.832072973438443*^9}, {3.832075723440464*^9, 3.8320757252203693`*^9}},
 CellLabel->
  "In[266]:=",ExpressionUUID->"cc49b885-43ba-4212-ba51-52d48e6e6cb4"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Old Cells", "Title",
 CellChangeTimes->{{3.843823572554579*^9, 
  3.8438235755374975`*^9}},ExpressionUUID->"7d8b2a8c-190d-4914-851e-\
817ddda20b08"],

Cell[CellGroupData[{

Cell["\<\
Old Manipulate that uses sliders rather than direct value entry\
\>", "Chapter",
 CellChangeTimes->{{3.8438235773976307`*^9, 
  3.843823592377554*^9}},ExpressionUUID->"f2c4449b-3b91-4c34-94e9-\
90d04f1985c7"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "paramAssociation", ",", "\[IndentingNewLine]", "healTimeContour"}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"paramAssociation", "=", "\[IndentingNewLine]", 
       RowBox[{"Association", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r\[Mu]T", "\[Rule]", "r\[Mu]TP"}], ",", 
          RowBox[{"\[Tau]Heal", "\[Rule]", "\[Tau]HealP"}], ",", 
          RowBox[{"rPMCA", "\[Rule]", "rPMCAP"}], ",", 
          RowBox[{"kPMCA", "\[Rule]", "kPMCAP"}], ",", 
          RowBox[{"rSOC", "\[Rule]", "rSOCP"}], ",", 
          RowBox[{"\[Eta]NCX", "\[Rule]", "\[Eta]NCXP"}], ",", 
          RowBox[{"kNCX", "\[Rule]", "kNCXP"}], ",", 
          RowBox[{"rlkPM", "\[Rule]", "rlkPMP"}], ",", 
          RowBox[{"\[Alpha]", "\[Rule]", "0."}], ",", 
          RowBox[{"\[Alpha]0", "\[Rule]", "\[Alpha]0P"}], ",", 
          RowBox[{"kl", "\[Rule]", "klP"}], ",", 
          RowBox[{"nl", "\[Rule]", "nlP"}], ",", 
          RowBox[{"Kc", "\[Rule]", "KcP"}], ",", 
          RowBox[{"\[Eta]IPR", "\[Rule]", "\[Eta]IPRP"}], ",", 
          RowBox[{"\[Eta]SERCA", "\[Rule]", "\[Eta]SERCAP"}], ",", 
          RowBox[{"kSERCA", "\[Rule]", "kSERCAP"}], ",", 
          RowBox[{"\[Eta]lkER", "\[Rule]", "\[Eta]lkERP"}], ",", 
          RowBox[{"Bx", "\[Rule]", "BxP"}]}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"updateContour", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"getHealContour", "[", 
          RowBox[{"paramAssociation", ",", "100.", ",", 
           RowBox[{"{", 
            RowBox[{"4.5", ",", "10.", ",", ".5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".02", ",", ".14", ",", ".02"}], "}"}]}], "]"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        "\"\<Contour has not been generated\>\""}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Column", "@", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Model Parameters\>\"", ",", "16", ",", "Bold"}], "]"}],
          ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r\[Mu]TP", ",", "5."}], "}"}], ",", ".1", ",", "10.", 
            ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Tau]HealP", ",", "5."}], "}"}], ",", "1.", ",", 
            "100.", ",", "1."}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rPMCAP", ",", ".1"}], "}"}], ",", ".01", ",", "1.", ",",
             ".01"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"kPMCAP", ",", ".1"}], "}"}], ",", ".01", ",", "10.", 
            ",", ".01"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rSOCP", ",", ".1"}], "}"}], ",", ".01", ",", "10.", ",",
             ".01"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Eta]NCXP", ",", "50."}], "}"}], ",", "1.", ",", 
            "100.", ",", "1."}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"kNCXP", ",", "8."}], "}"}], ",", ".1", ",", "10.", ",", 
            ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"rlkPMP", ",", ".04"}], "}"}], ",", ".001", ",", ".1", 
            ",", ".001"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Alpha]P", ",", "2."}], "}"}], ",", ".01", ",", "10.", 
            ",", ".01"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Alpha]0P", ",", ".1"}], "}"}], ",", ".01", ",", "1.", 
            ",", ".01"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"klP", ",", ".05"}], "}"}], ",", "0.", ",", "1.", ",", 
            ".01"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"nlP", ",", "3."}], "}"}], ",", "1.", ",", "10.", ",", 
            "1."}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"KcP", ",", ".4"}], "}"}], ",", ".1", ",", "1.", ",", 
            ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Eta]IPRP", ",", "24.1"}], "}"}], ",", ".1", ",", 
            "100.", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Eta]SERCAP", ",", "20.1"}], "}"}], ",", ".1", ",", 
            "100.", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"kSERCAP", ",", ".1"}], "}"}], ",", ".01", ",", "10.", 
            ",", ".01"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\[Eta]lkERP", ",", ".03"}], "}"}], ",", ".001", ",", 
            ".1", ",", ".001"}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"Control", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"BxP", ",", "5."}], "}"}], ",", ".1", ",", "10.", ",", 
            ".1"}], "}"}]}]}], "\[IndentingNewLine]", "}"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Dynamic", "@", "\[IndentingNewLine]", 
       RowBox[{"Column", "@", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Heal Contour Settings\>\"", ",", "16", ",", "Bold"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"updateContour", ",", "False"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Control", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Tau]Min", ",", "4.5"}], "}"}], ",", "1.", ",", 
             "100.", ",", ".5"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Tau]Max", ",", "10."}], "}"}], ",", "1.", ",", 
             "100.", ",", "5."}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Tau]Step", ",", ".5"}], "}"}], ",", ".1", ",", "1.", 
             ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r\[Mu]TMin", ",", ".02"}], "}"}], ",", ".01", ",", 
             "1.", ",", ".01"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r\[Mu]TMax", ",", ".14"}], "}"}], ",", ".01", ",", 
             "1.", ",", ".01"}], "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"Control", "@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r\[Mu]TStep", ",", ".02"}], "}"}], ",", ".01", ",", 
             ".1", ",", ".01"}], "}"}]}]}], "\[IndentingNewLine]", 
         "}"}]}]}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.843815898778635*^9, 3.8438159045685215`*^9}, {
   3.8438159428237514`*^9, 3.8438159630640545`*^9}, {3.8438160542507057`*^9, 
   3.8438161415282516`*^9}, {3.843816179804641*^9, 3.8438163081173706`*^9}, {
   3.8438163570894938`*^9, 3.843816614668515*^9}, {3.843817085681676*^9, 
   3.843817375345074*^9}, 3.8438175379658103`*^9, {3.8438176506483107`*^9, 
   3.8438176606347275`*^9}, {3.8438178135949974`*^9, 3.843817858504219*^9}, {
   3.8438182066594877`*^9, 3.8438182101424675`*^9}, {3.8438183843632*^9, 
   3.8438183846288223`*^9}, {3.8438184240825443`*^9, 
   3.8438184590313916`*^9}, {3.843818774546809*^9, 3.8438188062478514`*^9}, {
   3.8438189469619102`*^9, 3.8438189534659033`*^9}, {3.8438193435768585`*^9, 
   3.843819348726983*^9}, {3.843820533318985*^9, 3.8438205933216915`*^9}, {
   3.8438206728651314`*^9, 3.8438206972382064`*^9}, {3.8438207327261257`*^9, 
   3.8438207662594585`*^9}, {3.8438209509936724`*^9, 
   3.8438209625201015`*^9}, {3.8438210256447906`*^9, 
   3.8438210577792854`*^9}, {3.843821269744338*^9, 3.8438213659735136`*^9}, {
   3.843822012003831*^9, 3.8438220692449303`*^9}, {3.8438221172148933`*^9, 
   3.843822179224832*^9}, {3.8438224875050077`*^9, 3.843822515286862*^9}, {
   3.8438225861595974`*^9, 3.8438226359848595`*^9}, {3.843822667225129*^9, 
   3.843822670989041*^9}, {3.84382282541455*^9, 3.843822917561928*^9}, {
   3.843822947688384*^9, 3.843822982253627*^9}, {3.8438231073419065`*^9, 
   3.843823125841571*^9}, {3.8438231831223373`*^9, 3.843823209333853*^9}, {
   3.8438233860294476`*^9, 3.843823461809049*^9}, {3.843823532366933*^9, 
   3.8438235336937847`*^9}, {3.8438236452021956`*^9, 3.843823646655613*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"e2e8b852-878c-48b1-874b-04994890129b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Old Manipulate where each test was a different column", "Chapter",
 CellChangeTimes->{{3.8442976462198987`*^9, 
  3.8442976554714727`*^9}},ExpressionUUID->"c6f05e82-17c1-40bc-a2fc-\
5d010b2e1f49"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Initializations", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"contourInfo", "=", "\"\<Contour has not been generated\>\""}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"updateContour", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"info1D", "=", "\"\<1D Model hsa not been updated\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"update1D", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"info2D", "=", "\"\<2D Model hsa not been updated\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"update2D", "=", "False"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Block", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "paramAssociation", "\[IndentingNewLine]", "}"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "r\[Mu]T", " ", "value", " ", "is", " ", "irrelevant", " ", "before", 
         " ", "contour", " ", "is", " ", "set"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"paramAssociation", "=", "\[IndentingNewLine]", 
         RowBox[{"Association", "@", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"r\[Mu]T", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"!", 
                RowBox[{"(", 
                 RowBox[{
                 "contourInfo", "===", 
                  "\"\<Contour has not been generated\>\""}], ")"}]}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"contourInfo", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "[", "\[Tau]HealP", "]"}], 
                "/", "\[Mu]TConversion"}], ",", "5."}], "]"}]}], ",", 
            RowBox[{"\[Tau]Heal", "\[Rule]", "\[Tau]HealP"}], ",", 
            RowBox[{"rPMCA", "\[Rule]", "rPMCAP"}], ",", 
            RowBox[{"kPMCA", "\[Rule]", "kPMCAP"}], ",", 
            RowBox[{"rSOC", "\[Rule]", "rSOCP"}], ",", 
            RowBox[{"\[Eta]NCX", "\[Rule]", "\[Eta]NCXP"}], ",", 
            RowBox[{"kNCX", "\[Rule]", "kNCXP"}], ",", 
            RowBox[{"rlkPM", "\[Rule]", "rlkPMP"}], ",", 
            RowBox[{"\[Alpha]", "\[Rule]", "\[Alpha]P"}], ",", 
            RowBox[{"\[Alpha]0", "\[Rule]", "\[Alpha]0P"}], ",", 
            RowBox[{"kl", "\[Rule]", "klP"}], ",", 
            RowBox[{"nl", "\[Rule]", "nlP"}], ",", 
            RowBox[{"Kc", "\[Rule]", "KcP"}], ",", 
            RowBox[{"\[Eta]IPR", "\[Rule]", "\[Eta]IPRP"}], ",", 
            RowBox[{"\[Eta]SERCA", "\[Rule]", "\[Eta]SERCAP"}], ",", 
            RowBox[{"kSERCA", "\[Rule]", "kSERCAP"}], ",", 
            RowBox[{"\[Eta]lkER", "\[Rule]", "\[Eta]lkERP"}], ",", 
            RowBox[{"Bx", "\[Rule]", "BxP"}], ",", 
            RowBox[{"\[Eta]GJIP3", "\[Rule]", "\[Eta]GJIP3P"}], ",", 
            RowBox[{"\[Eta]GJc", "\[Rule]", "\[Eta]GJcP"}]}], "}"}]}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "Update", " ", "heal", " ", "contour", " ", "for", " ", "\[Tau]Heal",
           " ", "and", " ", 
          RowBox[{"r\[Mu]T", ".", " ", "Update"}], " ", "r\[Mu]T"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"updateContour", ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"if", " ", "update", " ", "contour"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"contourInfo", "=", 
            RowBox[{"getHealContour", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{"paramAssociation", ",", 
                RowBox[{
                 RowBox[{"Key", "@", "\[Alpha]"}], "\[Rule]", "0."}]}], "]"}],
               ",", "maxTimeRangeDKO", ",", 
              RowBox[{"{", 
               RowBox[{"\[Tau]Min", ",", "\[Tau]Max", ",", "\[Tau]Step"}], 
               "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"r\[Mu]TMin", ",", "r\[Mu]TMax", ",", "r\[Mu]TStep"}], 
               "}"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"updateContour", "=", "False"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"paramAssociation", "=", "\[IndentingNewLine]", 
            RowBox[{"Association", "@", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"r\[Mu]T", "\[Rule]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"contourInfo", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", "\[Tau]HealP", "]"}], 
                 "/", "\[Mu]TConversion"}]}], ",", 
               RowBox[{"\[Tau]Heal", "\[Rule]", "\[Tau]HealP"}], ",", 
               RowBox[{"rPMCA", "\[Rule]", "rPMCAP"}], ",", 
               RowBox[{"kPMCA", "\[Rule]", "kPMCAP"}], ",", 
               RowBox[{"rSOC", "\[Rule]", "rSOCP"}], ",", 
               RowBox[{"\[Eta]NCX", "\[Rule]", "\[Eta]NCXP"}], ",", 
               RowBox[{"kNCX", "\[Rule]", "kNCXP"}], ",", 
               RowBox[{"rlkPM", "\[Rule]", "rlkPMP"}], ",", 
               RowBox[{"\[Alpha]", "\[Rule]", "\[Alpha]P"}], ",", 
               RowBox[{"\[Alpha]0", "\[Rule]", "\[Alpha]0P"}], ",", 
               RowBox[{"kl", "\[Rule]", "klP"}], ",", 
               RowBox[{"nl", "\[Rule]", "nlP"}], ",", 
               RowBox[{"Kc", "\[Rule]", "KcP"}], ",", 
               RowBox[{"\[Eta]IPR", "\[Rule]", "\[Eta]IPRP"}], ",", 
               RowBox[{"\[Eta]SERCA", "\[Rule]", "\[Eta]SERCAP"}], ",", 
               RowBox[{"kSERCA", "\[Rule]", "kSERCAP"}], ",", 
               RowBox[{"\[Eta]lkER", "\[Rule]", "\[Eta]lkERP"}], ",", 
               RowBox[{"Bx", "\[Rule]", "BxP"}], ",", 
               RowBox[{"\[Eta]GJIP3", "\[Rule]", "\[Eta]gGJP3P"}], ",", 
               RowBox[{"\[Eta]GJc", "\[Rule]", "\[Eta]GJcP"}]}], "}"}]}]}], 
           ";"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"If", " ", "not", " ", "update", " ", "contour"}], "*)"}], 
          "\[IndentingNewLine]", "\"\<Contour has not been generated\>\""}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Update", " ", "1", "D", " ", "model"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"update1D", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"info1D", "=", 
            RowBox[{"get1DSol", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{"paramAssociation", ",", 
                RowBox[{
                 RowBox[{"Key", "@", "\[Alpha]"}], "\[Rule]", "0."}]}], "]"}],
               ",", "maxTimeRange1D"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"update1D", "=", "False"}], ";"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\"\<1D Model is not Updated\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Update", " ", "2", "D", " ", "model"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"update2D", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"info2D", "=", 
            RowBox[{"getIP3SpikeSol", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{"paramAssociation", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Key", "@", "\[Alpha]"}], "\[Rule]", 
                   RowBox[{"plcScale", "*", 
                    RowBox[{"paramAssociation", "[", "\[Alpha]", "]"}]}]}], 
                  ",", 
                  RowBox[{
                   RowBox[{"Key", "@", "r\[Mu]T"}], "\[Rule]", "0."}]}], 
                 "}"}]}], "]"}], ",", "maxTimeRange2D", ",", 
              "ip3SpikeScale"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"update2D", "=", "False"}], ";"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\"\<2D Model is not Updated\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Main", " ", "Display", " ", "Switch"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Switch", "[", 
         RowBox[{
         "mainView", ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Display", " ", "of", " ", "the", " ", "heal", " ", "contour"}], 
           "*)"}], "\[IndentingNewLine]", "\"\<Heal Contour\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
              "contourInfo", "===", 
               "\"\<Contour has not been generated\>\""}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Switch", "[", 
             RowBox[{
             "contourView", ",", "\[IndentingNewLine]", "\"\<25 s\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Show", "[", 
               RowBox[{
                RowBox[{"contourInfo", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], ",", 
                RowBox[{"Graphics", "[", 
                 RowBox[{"{", 
                  RowBox[{"Red", ",", 
                   RowBox[{"PointSize", "@", "Large"}], ",", 
                   RowBox[{"Point", "[", 
                    RowBox[{"{", 
                    RowBox[{"\[Tau]HealP", ",", 
                    RowBox[{
                    RowBox[{"contourInfo", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "[", "\[Tau]HealP", 
                    "]"}]}], "}"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", "\[IndentingNewLine]", "\"\<All\>\"", 
              ",", "\[IndentingNewLine]", 
              RowBox[{"contourInfo", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "contourInfo"}], 
           "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Display", " ", "of", " ", "1", "D", " ", "model"}], 
           "*)"}], "\[IndentingNewLine]", "\"\<1D model\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
              "info1D", "===", "\"\<1D Model hsa not been updated\>\""}], 
              ")"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Switch", "[", 
             RowBox[{
             "view1D", ",", "\[IndentingNewLine]", 
              "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) Rad\>\"", 
              ",", "\[IndentingNewLine]", 
              RowBox[{"info1D", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
              "\[IndentingNewLine]", "\"\<GCaMP\>\"", ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"info1D", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "ring"}], "]"}], "]"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"ring", ",", "1", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"info1D", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "}"}]}], 
               "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "info1D"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Display", " ", "of", " ", "IP3", " ", "Spike"}], "*)"}], 
          "\[IndentingNewLine]", "\"\<IP3 Spike\>\"", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"(", 
              RowBox[{
              "info2D", "===", "\"\<2D Model hsa not been updated\>\""}], 
              ")"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"Manipulate", "[", 
             RowBox[{
              RowBox[{"info2D", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "i"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "@", 
                 RowBox[{"info2D", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], ",", "1"}], "}"}]}], 
             "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            "info2D"}], "\[IndentingNewLine]", "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Display", " ", "of", " ", "the", " ", "full", " ", "single", " ", 
            "cell", " ", "model"}], "*)"}], "\[IndentingNewLine]", 
          "\"\<Single-Cell\>\"", ",", "\[IndentingNewLine]", "\"\<TBF\>\""}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Row", "[", 
      RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Column", "@", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"mainView", ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Heal Contour\>\"", ",", "\"\<1D model\>\"", ",", 
                "\"\<IP3 Spike\>\"", ",", "\"\<Single-Cell\>\""}], "}"}]}], 
             "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Model Parameters\>\"", ",", "16", ",", "Bold"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Tau]HealP", ",", "7.5"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"rPMCAP", ",", ".1"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"kPMCAP", ",", ".1"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"rSOCP", ",", ".1"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]NCXP", ",", "50."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"kNCXP", ",", "8."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"rlkPMP", ",", ".04"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Alpha]P", ",", "2."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Alpha]0P", ",", ".1"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"klP", ",", ".05"}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"nlP", ",", "3."}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"KcP", ",", ".4"}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]IPRP", ",", "24.1"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]SERCAP", ",", "20.1"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"kSERCAP", ",", ".1"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]lkERP", ",", ".03"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"BxP", ",", "5."}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]GJIP3P", ",", ".5"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Eta]GJcP", ",", "10."}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Column", "@", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Heal Contour Settings\>\"", ",", "16", ",", "Bold"}],
             "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Update Contour\>\"", ",", 
             RowBox[{
              RowBox[{"updateContour", "=", "True"}], ";"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"maxTimeRangeDKO", ",", "100."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Tau]Min", ",", "4.5"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Tau]Max", ",", "10."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"\[Tau]Step", ",", ".5"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"r\[Mu]TMin", ",", ".5"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"r\[Mu]TMax", ",", "2.5"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"r\[Mu]TStep", ",", ".5"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"contourView", ",", 
              RowBox[{"{", 
               RowBox[{"\"\<25 s\>\"", ",", "\"\<All\>\""}], "}"}]}], 
             "}"}]}]}], "\[IndentingNewLine]", "}"}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Column", "@", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
            "\"\<Radial Cell Line Settings\>\"", ",", "16", ",", "Bold"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Update 1D Model\>\"", ",", 
             RowBox[{
              RowBox[{"update1D", "=", "True"}], ";"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"maxTimeRange1D", ",", "400."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"view1D", ",", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\) Rad\>\"", 
                ",", "\"\<GCaMP\>\""}], "}"}]}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Column", "@", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<IP3 Spike Settings\>\"", ",", "16", ",", "Bold"}], 
            "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Button", "[", 
            RowBox[{"\"\<Update Ip3 Spike Model\>\"", ",", 
             RowBox[{
              RowBox[{"update2D", "=", "True"}], ";"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"maxTimeRange2D", ",", "400."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"plcScale", ",", "1."}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Control", "@", 
            RowBox[{"{", 
             RowBox[{"ip3SpikeScale", ",", "1000."}], "}"}]}]}], 
          "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "}"}], 
      "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.843815898778635*^9, 3.8438159045685215`*^9}, {
   3.8438159428237514`*^9, 3.8438159630640545`*^9}, {3.8438160542507057`*^9, 
   3.8438161415282516`*^9}, {3.843816179804641*^9, 3.8438163081173706`*^9}, {
   3.8438163570894938`*^9, 3.843816614668515*^9}, {3.843817085681676*^9, 
   3.843817375345074*^9}, 3.8438175379658103`*^9, {3.8438176506483107`*^9, 
   3.8438176606347275`*^9}, {3.8438178135949974`*^9, 3.843817858504219*^9}, {
   3.8438182066594877`*^9, 3.8438182101424675`*^9}, {3.8438183843632*^9, 
   3.8438183846288223`*^9}, {3.8438184240825443`*^9, 
   3.8438184590313916`*^9}, {3.843818774546809*^9, 3.8438188062478514`*^9}, {
   3.8438189469619102`*^9, 3.8438189534659033`*^9}, {3.8438193435768585`*^9, 
   3.843819348726983*^9}, {3.843820533318985*^9, 3.8438205933216915`*^9}, {
   3.8438206728651314`*^9, 3.8438206972382064`*^9}, {3.8438207327261257`*^9, 
   3.8438207662594585`*^9}, {3.8438209509936724`*^9, 
   3.8438209625201015`*^9}, {3.8438210256447906`*^9, 
   3.8438210577792854`*^9}, {3.843821269744338*^9, 3.8438213659735136`*^9}, {
   3.843822012003831*^9, 3.8438220692449303`*^9}, {3.8438221172148933`*^9, 
   3.843822179224832*^9}, {3.8438224875050077`*^9, 3.843822515286862*^9}, {
   3.8438225861595974`*^9, 3.8438226359848595`*^9}, {3.843822667225129*^9, 
   3.843822670989041*^9}, {3.84382282541455*^9, 3.843822917561928*^9}, {
   3.843822947688384*^9, 3.843822982253627*^9}, {3.8438231073419065`*^9, 
   3.843823125841571*^9}, {3.8438231831223373`*^9, 3.843823209333853*^9}, {
   3.8438233860294476`*^9, 3.843823461809049*^9}, {3.843823532366933*^9, 
   3.8438235336937847`*^9}, {3.8438236174962378`*^9, 
   3.8438236242902803`*^9}, {3.8438236620800457`*^9, 3.843823741012968*^9}, {
   3.8438237905172443`*^9, 3.8438238089872274`*^9}, {3.843824118153765*^9, 
   3.8438241442834077`*^9}, {3.8438245175909433`*^9, 3.843824522650078*^9}, {
   3.8441175652312574`*^9, 3.8441175676612806`*^9}, {3.8441186985833545`*^9, 
   3.8441187310723877`*^9}, {3.844118781048031*^9, 3.84411878305225*^9}, {
   3.8441188360228806`*^9, 3.8441188724225326`*^9}, {3.844118978383685*^9, 
   3.8441190999730463`*^9}, {3.8441191319362974`*^9, 3.844119165470493*^9}, {
   3.8441192901245766`*^9, 3.84411938325988*^9}, {3.8441194238604703`*^9, 
   3.844119470511012*^9}, {3.844119511041647*^9, 3.844119577492264*^9}, {
   3.8441197901044817`*^9, 3.8441198034468203`*^9}, {3.844119839540701*^9, 
   3.8441198465066595`*^9}, {3.844119876607153*^9, 3.8441199512437763`*^9}, {
   3.8441200389458723`*^9, 3.844120176127071*^9}, {3.844120234412332*^9, 
   3.844120311488877*^9}, {3.8441203437102613`*^9, 3.8441203729844823`*^9}, {
   3.844120408240523*^9, 3.8441204308983617`*^9}, {3.8441206487457976`*^9, 
   3.844120889524843*^9}, {3.844120929834691*^9, 3.844120930294032*^9}, {
   3.844212369935813*^9, 3.844212391014431*^9}, {3.8442125971487427`*^9, 
   3.8442126440492487`*^9}, {3.844212810032943*^9, 3.8442128161312127`*^9}, {
   3.8442140076494637`*^9, 3.8442140081786585`*^9}, {3.844214064589904*^9, 
   3.844214164282734*^9}, {3.844214273450955*^9, 3.844214522011698*^9}, {
   3.844214604380192*^9, 3.844214690144476*^9}, {3.8442148670810328`*^9, 
   3.8442148932527447`*^9}, {3.8442424528982143`*^9, 3.844242453897354*^9}, {
   3.8442425271430297`*^9, 3.844242529043105*^9}, {3.844242770660857*^9, 
   3.844242784787385*^9}, {3.8442428289555593`*^9, 3.8442428508292556`*^9}, 
   3.8442441305038853`*^9, {3.8442450296236563`*^9, 3.844245049956544*^9}, {
   3.8442963520681734`*^9, 3.844296498291395*^9}, {3.844296529444977*^9, 
   3.8442965628959126`*^9}, {3.844296655405017*^9, 3.844296666113083*^9}, {
   3.8442967862033896`*^9, 3.8442968327253995`*^9}, {3.844296880272318*^9, 
   3.844296890856458*^9}, 3.844296945566719*^9, {3.8442971582379847`*^9, 
   3.844297210734641*^9}, {3.844297408724305*^9, 3.8442974125058737`*^9}, {
   3.844297498088236*^9, 3.844297508445451*^9}, {3.844297560048293*^9, 
   3.8442975682011633`*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"5546e5b9-cf51-404a-81a4-b2e8aaef2fa3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Old single cell function", "Chapter",
 CellChangeTimes->{{3.8449771881580973`*^9, 
  3.8449771926257954`*^9}},ExpressionUUID->"c559d81b-cdfd-4eab-b790-\
55f633b04edb"],

Cell[BoxData[{
 RowBox[{"getSingleCellSol", "//", "ClearAll"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getSingleCellSol", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"paramAssociation_", "?", "AssociationQ"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"maxTime_", "?", "NumberQ"}], ",", "\[IndentingNewLine]", 
    RowBox[{"dist_", "?", "NumberQ"}]}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Block", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"params", "=", 
       RowBox[{"Prepend", "[", 
        RowBox[{
         RowBox[{"paramAssociation", "/@", "extParams"}], ",", "dist"}], 
        "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"solution", "=", "\[IndentingNewLine]", 
       RowBox[{"ParametricNDSolveValue", "[", 
        RowBox[{"modelEqnsSingleCell", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ip3", "[", "t", "]"}], ",", 
           RowBox[{"c", "[", "t", "]"}], ",", 
           RowBox[{"cER", "[", "t", "]"}], ",", 
           RowBox[{"h", "[", "t", "]"}], ",", 
           RowBox[{"CtoF", "[", 
            RowBox[{"c", "[", "t", "]"}], "]"}], ",", 
           RowBox[{"Append", "[", 
            RowBox[{"fluxes", ",", 
             RowBox[{"Total", "@", "fluxes"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
         RowBox[{"Prepend", "[", 
          RowBox[{"extParams", ",", "r"}], "]"}], ",", 
         RowBox[{"DependentVariables", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ip3", "[", "t", "]"}], ",", 
            RowBox[{"c", "[", "t", "]"}], ",", 
            RowBox[{"cER", "[", "t", "]"}], ",", 
            RowBox[{"h", "[", "t", "]"}]}], "}"}]}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "singleCellOutput"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"singleCellOutput", "=", 
      RowBox[{"solution", "@@", "params"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"singleCellOutput", "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{".9", "*", "minInt"}], ",", 
             RowBox[{"1.1", "*", "maxInt"}]}], "}"}]}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<t (s)\>\"", ",", "\"\<GCaMP Fl\>\""}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Epilog", "\[Rule]", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"Gray", ",", "\[IndentingNewLine]", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"35", ",", 
                  RowBox[{".9", "*", "minInt"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"35", ",", 
                  RowBox[{"1.1", "*", "maxInt"}]}], "}"}]}], "}"}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"140", ",", 
                  RowBox[{".9", "*", "minInt"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"140", ",", 
                  RowBox[{"1.1", "*", "maxInt"}]}], "}"}]}], "}"}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"Mean", "[", 
                   RowBox[{"{", 
                    RowBox[{"minInt", ",", "maxInt"}], "}"}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"1000", ",", 
                  RowBox[{"Mean", "[", 
                   RowBox[{"{", 
                    RowBox[{"minInt", ",", "maxInt"}], "}"}], "]"}]}], 
                 "}"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", "Black", ",", "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<None\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"20", ",", 
                 RowBox[{"1.05", "*", "maxInt"}]}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<Second Exp.\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"80", ",", 
                 RowBox[{"1.05", "*", "maxInt"}]}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<Flares\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"230", ",", 
                 RowBox[{"1.05", "*", "maxInt"}]}], "}"}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"singleCellOutput", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<t (s)\>\"", ",", 
             "\"\<[\!\(\*SuperscriptBox[\(Ca\), \(\(2\)\(+\)\)]\)] (\[Mu]M)\>\
\""}], "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"singleCellOutput", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<t (s)\>\"", ",", 
             "\"\<[\!\(\*SuperscriptBox[\(Ca\), \
\(\(2\)\(+\)\)]\)\!\(\*SubscriptBox[\(]\), \(ER\)]\) (\[Mu]M)\>\""}], 
            "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"singleCellOutput", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<t (s)\>\"", ",", 
             "\"\<[\!\(\*SubscriptBox[\(IP\), \(3\)]\)] (\[Mu]M)\>\""}], 
            "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"singleCellOutput", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<t (s)\>\"", ",", "\"\<h\>\""}], "}"}]}]}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"Evaluate", "@", 
           RowBox[{"singleCellOutput", "[", 
            RowBox[{"[", "6", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "0", ",", "maxTime"}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<t (s)\>\"", ",", "\"\<GCaMP Fl\>\""}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLegends", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<jIPR\>\"", ",", "\"\<jSERCA\>\"", ",", "\"\<jlkER\>\"", ",", 
             "\"\<jSOC\>\"", ",", "\"\<jPMCA\>\"", ",", "\"\<jNCX\>\"", ",", 
             "\"\<jlkPM\>\"", ",", "\"\<j\[Mu]T\>\"", ",", "\"\<jTotal\>\""}],
             "}"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]}], "Input",ExpressionUUID->"1121ff06-b848-\
4cca-a560-d744cebf3719"]
}, Closed]],

Cell[CellGroupData[{

Cell["Saved Parameters ", "Chapter",
 CellChangeTimes->{{3.8442424003125877`*^9, 
  3.844242404076375*^9}},ExpressionUUID->"1f67e4b5-8032-41fc-82ef-\
97ff50d2fa40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Tau]HealP", ",", "7.5"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"rPMCAP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"kPMCAP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"rSOCP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]NCXP", ",", "50."}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"kNCXP", ",", "8."}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"rlkPMP", ",", ".04"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]P", ",", "2."}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]0P", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"klP", ",", ".05"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"nlP", ",", "3."}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"KcP", ",", ".4"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]IPRP", ",", "24.1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]SERCAP", ",", "20.1"}], "}"}]}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"kSERCAP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]lkERP", ",", ".03"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"BxP", ",", "5."}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]GJIP3P", ",", ".5"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]GJcP", ",", "10."}], "}"}]}]}]], "Input",ExpressionUUID->\
"4578f355-64bb-42ee-bca7-998d91dc0831"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Tau]HealP", ",", "100."}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"rPMCAP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"kPMCAP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"rSOCP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]NCXP", ",", "50."}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"kNCXP", ",", "8."}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"rlkPMP", ",", ".0002"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]P", ",", "2."}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Alpha]0P", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"klP", ",", ".05"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"nlP", ",", "3."}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"KcP", ",", ".4"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]IPRP", ",", "24.1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]SERCAP", ",", "20.1"}], "}"}]}], ",", 
  "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"kSERCAP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]lkERP", ",", ".03"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"BxP", ",", "5."}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]GJIP3P", ",", ".5"}], "}"}]}], ",", "\[IndentingNewLine]", 
  RowBox[{"Control", "@", 
   RowBox[{"{", 
    RowBox[{"\[Eta]GJcP", ",", "10."}], "}"}]}]}]], "Input",ExpressionUUID->\
"f64e9097-8ed6-402e-b069-8e97fcd441ef"],

Cell[BoxData[
 RowBox[{"(*", "testing", "*)"}]], "Input",
 CellChangeTimes->{{3.8448934012647142`*^9, 
  3.844893406063201*^9}},ExpressionUUID->"3b01acf6-0905-4a45-b10f-\
f0a3d2921af0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Column", "@", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"mainView", ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Heal Contour\>\"", ",", "\"\<1D model\>\"", ",", 
          "\"\<IP3 Spike\>\"", ",", "\"\<Single-Cell\>\""}], "}"}]}], "}"}]}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Model Parameters\>\"", ",", "16", ",", "Bold"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"\[Tau]HealP", ",", "7.5"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"rPMCAP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"kPMCAP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"rSOCP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"\[Eta]NCXP", ",", "50."}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"kNCXP", ",", "8."}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"rlkPMP", ",", ".04"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]P", ",", "2."}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"\[Alpha]0P", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"klP", ",", ".05"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"nlP", ",", "3."}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"KcP", ",", ".4"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"\[Eta]IPRP", ",", "24.1"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"\[Eta]SERCAP", ",", "20.1"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"kSERCAP", ",", ".1"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"\[Eta]lkERP", ",", ".03"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"BxP", ",", "5."}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"\[Eta]GJIP3P", ",", ".5"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Control", "@", 
      RowBox[{"{", 
       RowBox[{"\[Eta]GJcP", ",", "10."}], "}"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ","}]], "Input",ExpressionUUID->"8cc35c84-db34-4fde-9d1b-\
4331d0706be9"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test Cells", "Title",
 CellChangeTimes->{{3.843660519555705*^9, 
  3.8436605208730884`*^9}},ExpressionUUID->"51d5d1d9-d0d7-46ba-8eff-\
1129e587444e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "\[Eta]\[Mu]T", ",", "\[Tau]Heal", ",", "\[Alpha]", ",", "\[Alpha]0", ",", 
    "Kc", ",", "\[Eta]IPR", ",", "\[Eta]SERCA", ",", "kSERCA", ",", 
    "\[Eta]lkER", ",", "\[Eta]PMCA", ",", "kPMCA", ",", "\[Eta]SOC", ",", 
    "\[Eta]NCX", ",", "kNCX", ",", "\[Eta]lkPM", ",", "Bx", ",", "kl", ",", 
    "nl"}], "}"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
  "0.25`", ",", "10.`", ",", "0", ",", "0.1`", ",", "0.4`", ",", "24.1`", ",",
    "20.1`", ",", "0.1`", ",", "0.03`", ",", "5.`", ",", "0.1`", ",", 
   "5.2565`", ",", "50.`", ",", "8.`", ",", "0.00001`", ",", "5.`", ",", 
   "0.05`", ",", "3.`"}], "}"}]}], "Input",
 CellChangeTimes->{{3.842567353406246*^9, 3.8425674019057417`*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"0abc7e42-7114-41c0-b43f-06b83937e311"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "r\[Mu]T", ",", "\[Tau]Heal", ",", "\[Eta]NCX", ",", "kNCX", ",", "rPMCA", 
    ",", "kPMCA", ",", "rlkPM", ",", "Bx"}], "}"}], ";"}]], "Input",Expression\
UUID->"9d7221f5-b6f6-4547-a9a5-c6db5bf0e49d"],

Cell[CellGroupData[{

Cell[BoxData["contourPoints"], "Input",
 CellChangeTimes->{{3.843682082706646*^9, 3.8436820840967216`*^9}},
 CellLabel->
  "In[187]:=",ExpressionUUID->"665351c3-22a7-4714-af0f-f820bda69412"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.37500000000000006`", ",", "\<\"fail\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.5`", ",", "1.416457062679534`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.625`", ",", "1.8658308071197198`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.7500000000000001`", ",", "2.2494779062836656`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "0.875`", ",", "2.6002029042043957`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.`", ",", "2.92576511043162`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.1250000000000002`", ",", "3.228819295009341`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.25`", ",", "3.511632493966626`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.375`", ",", "3.776509103879963`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.5`", ",", "4.0256145488628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.625`", ",", "4.260879775473539`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.7500000000000002`", ",", "4.483976874123044`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.875`", ",", "4.696336309087756`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "2.`", ",", "4.899179263689489`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "2.125`", ",", "5.093550617413872`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "2.25`", ",", "5.280346639172117`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "2.375`", ",", "5.460343178119705`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "2.5`", ",", "5.634212696923576`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5000000000000002`", ",", "0.37500000000000006`", ",", 
     "1.3263150727306072`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "0.5`", ",", "2.161169169701405`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5000000000000002`", ",", "0.625`", ",", "2.8100187941749866`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5000000000000002`", ",", "0.7500000000000001`", ",", 
     "3.3864748362355708`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "0.875`", ",", "3.907886432975729`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "1.`", ",", "4.380014629219185`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5000000000000002`", ",", "1.1250000000000002`", ",", 
     "4.809154547647817`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "1.25`", ",", "5.201690225848701`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5000000000000002`", ",", "1.375`", ",", "5.5632836975678455`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "1.5`", ",", "5.8986744136154945`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "1.625`", ",", "6.211749997338783`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.5000000000000002`", ",", "1.7500000000000002`", ",", 
     "6.505695906474882`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "1.875`", ",", "6.783128488672114`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "2.`", ",", "7.046219534231993`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "2.125`", ",", "7.296785541392793`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "2.25`", ",", "7.536362365630089`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "2.375`", ",", "7.766265075382127`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.5000000000000002`", ",", "2.5`", ",", "7.987625552614115`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "0.37500000000000006`", ",", "1.8657615101117817`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "0.5`", ",", "2.9408190907201424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "0.625`", ",", "3.8394507483425393`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "0.7500000000000001`", ",", "4.631731604180217`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "0.875`", ",", "5.329737713858399`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "1.`", ",", "5.947105826745695`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "1.1250000000000002`", ",", "6.498170122408146`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "1.25`", ",", "6.995190905567536`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "1.375`", ",", "7.447943636295808`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "1.5`", ",", "7.86409117073424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "1.625`", ",", "8.249657943829325`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "1.7500000000000002`", ",", "8.609436418123853`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "1.875`", ",", "8.947282248399452`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "2.`", ",", "9.266355408884378`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "2.125`", ",", "9.569274868677374`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "2.25`", ",", "9.858248962856388`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "2.375`", ",", "10.135158427530254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.`", ",", "2.5`", ",", "10.401641437470438`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "0.37500000000000006`", ",", "2.415150061822278`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "0.5`", ",", "3.8164881920564`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "0.625`", ",", "5.018746960750207`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "0.7500000000000001`", ",", "6.053458633361276`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "0.875`", ",", "6.941678341733953`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "1.`", ",", "7.712456297785619`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "1.1250000000000002`", ",", "8.390979733564697`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "1.25`", ",", "8.996517150381738`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "1.375`", ",", "9.543465464729927`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "1.5`", ",", "10.042675504832136`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "1.625`", ",", "10.502458969203946`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "1.7500000000000002`", ",", "10.929309203759841`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "1.875`", ",", "11.328400485666043`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "2.`", ",", "11.703943884224888`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "2.125`", ",", "12.059425295895844`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "2.25`", ",", "12.397784942131373`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "2.375`", ",", "12.721557155463337`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5`", ",", "2.5`", ",", "13.032961870766602`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0000000000000004`", ",", "0.37500000000000006`", ",", 
     "3.017414886705476`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "0.5`", ",", "4.8458132349981895`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "0.625`", ",", "6.416408369401087`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0000000000000004`", ",", "0.7500000000000001`", ",", 
     "7.728020707274353`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "0.875`", ",", "8.826176066882343`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "1.`", ",", "9.761743812922226`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0000000000000004`", ",", "1.1250000000000002`", ",", 
     "10.573356863894894`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "1.25`", ",", "11.288652961386354`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "1.375`", ",", "11.92756188486048`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "1.5`", ",", "12.504798461510553`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "1.625`", ",", "13.03150898472456`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0000000000000004`", ",", "1.7500000000000002`", ",", 
     "13.516340422200727`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0000000000000004`", ",", "1.875`", ",", "13.966158531713669`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "2.`", ",", "14.386534857272684`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0000000000000004`", ",", "2.125`", ",", "14.782078994473412`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "2.25`", ",", "15.156693822406359`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.0000000000000004`", ",", "2.375`", ",", "15.513740140695946`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{"3.0000000000000004`", ",", "2.5`", ",", "15.856168217603557`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "0.37500000000000006`", ",", "3.71151833386666`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "0.5`", ",", "6.090578239124989`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "0.625`", ",", "8.091245209257508`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "0.7500000000000001`", ",", "9.695858794174278`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "0.875`", ",", "10.996343777365194`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "1.`", ",", "12.076240314605775`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "1.1250000000000002`", ",", "12.993711586945144`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "1.25`", ",", "13.788482202173808`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "1.375`", ",", "14.488286035286132`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "1.5`", ",", "15.113054437770574`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "1.625`", ",", "15.677530391629709`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "1.7500000000000002`", ",", "16.192905917913844`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "1.875`", ",", "16.66790247976039`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "2.`", ",", "17.10947235297271`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "2.125`", ",", "17.52330013848254`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "2.25`", ",", "17.914136312039126`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "2.375`", ",", "18.286038853447437`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.5`", ",", "2.5`", ",", "18.642535340668225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "0.37500000000000006`", ",", "4.542973747630214`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "0.5`", ",", "7.598281819413997`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "0.625`", ",", "10.035506869743646`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "0.7500000000000001`", ",", "11.883407472241318`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "0.875`", ",", "13.32438695424113`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "1.`", ",", "14.490508845886255`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "1.1250000000000002`", ",", "15.464035657415817`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "1.25`", ",", "16.29717396798417`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "1.375`", ",", "17.024494495488074`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "1.5`", ",", "17.66986896284381`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "1.625`", ",", "18.250416241967482`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "1.7500000000000002`", ",", "18.77884225862386`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "1.875`", ",", "19.264870169419737`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "2.`", ",", "19.716167040332838`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "2.125`", ",", "20.13894487927121`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "2.25`", ",", "20.53837643739115`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "2.375`", ",", "20.918860910852846`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.`", ",", "2.5`", ",", "21.28419525156588`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "4.500000000000001`", ",", "0.37500000000000006`", ",", 
     "5.563107350731593`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "0.5`", ",", "9.363293465693516`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "0.625`", ",", "12.150590679281043`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.500000000000001`", ",", "0.7500000000000001`", ",", 
     "14.145425512877106`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "0.875`", ",", "15.655905474686985`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "1.`", ",", "16.859903493837063`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.500000000000001`", ",", "1.1250000000000002`", ",", 
     "17.85697784183246`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "1.25`", ",", "18.706574434054044`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "1.375`", ",", "19.446584176014404`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "1.5`", ",", "20.102527507277095`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "1.625`", ",", "20.692408003802882`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "4.500000000000001`", ",", "1.7500000000000002`", ",", 
     "21.229440352960932`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "1.875`", ",", "21.723678288118272`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "2.`", ",", "22.18302874902428`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "2.125`", ",", "22.613902315468472`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "2.25`", ",", "23.021638050874973`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "2.375`", ",", "23.410774938039467`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.500000000000001`", ",", "2.5`", ",", "23.78519902661086`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "0.37500000000000006`", ",", "6.814969061379729`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "0.5`", ",", "11.313341931691262`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "0.625`", ",", "14.314182522338841`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "0.7500000000000001`", ",", "16.372578138134763`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "0.875`", ",", "17.908296026322017`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1.`", ",", "19.126579408285338`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1.1250000000000002`", ",", "20.13456486142802`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1.25`", ",", "20.99404442701538`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1.375`", ",", "21.743664320056226`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1.5`", ",", "22.409180470476457`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1.625`", ",", "23.008660811544683`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1.7500000000000002`", ",", "23.555340637454908`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "1.875`", ",", "24.059295353158426`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "2.`", ",", "24.52846694109981`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "2.125`", ",", "24.969323218534168`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "2.25`", ",", "25.3872630942377`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "2.375`", ",", "25.78686359257441`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.`", ",", "2.5`", ",", "26.171995204265258`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "0.37500000000000006`", ",", "8.307746424218553`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "0.5`", ",", "13.347842265459615`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "0.625`", ",", "16.440834900918144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "0.7500000000000001`", ",", "18.51387570735173`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "0.875`", ",", "20.055639900462424`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "1.`", ",", "21.28104629024784`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "1.1250000000000002`", ",", "22.298099215732474`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "1.25`", ",", "23.168129071263902`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "1.375`", ",", "23.9292516706277`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "1.5`", ",", "24.60682054650319`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "1.625`", ",", "25.218635767768397`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "1.7500000000000002`", ",", "25.777767501326053`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "1.875`", ",", "26.294205886351865`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.`", ",", "26.775865480245553`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.125`", ",", "27.229219894263764`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.25`", ",", "27.65967989627822`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.375`", ",", "28.071804669061898`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.5`", ",", "2.5`", ",", "28.46938820260494`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "0.37500000000000006`", ",", "10.002011856588785`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "0.5`", ",", "15.382409934719599`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "0.625`", ",", "18.488413134448223`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "0.7500000000000001`", ",", "20.555036643904906`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "0.875`", ",", "22.098515063300585`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "1.`", ",", "23.332086267984785`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "1.1250000000000002`", ",", "24.361113414036005`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "1.25`", ",", "25.245210290009922`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "1.375`", ",", "26.02146627835415`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "1.5`", ",", "26.714629292113905`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "1.625`", ",", "27.342141272947906`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "1.7500000000000002`", ",", "27.91687558261194`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "1.875`", ",", "28.448722047612332`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.`", ",", "28.945561534111683`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.125`", ",", "29.41386094964744`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.25`", ",", "29.85901932399116`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.375`", ",", "30.285545647156596`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.`", ",", "2.5`", ",", "30.69712286610549`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "0.37500000000000006`", ",", "11.825087530868373`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "0.5`", ",", "17.36484680340065`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "0.625`", ",", "20.44338294551994`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "0.7500000000000001`", ",", "22.499208064137573`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "0.875`", ",", "24.04740191639552`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "1.`", ",", "25.29367274185288`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "1.1250000000000002`", ",", "26.33931230244925`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "1.25`", ",", "27.241835801779217`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "1.375`", ",", "28.037218132247343`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "1.5`", ",", "28.74960144400628`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "1.625`", ",", "29.396101073471677`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "1.7500000000000002`", ",", "29.989419821867084`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "1.875`", ",", "30.539375080425742`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "2.`", ",", "31.053827519484027`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "2.125`", ",", "31.539237998212`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "2.25`", ",", "32.00098645671108`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "2.375`", ",", "32.44351091246061`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6.5`", ",", "2.5`", ",", "32.870375546962144`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "0.25`", ",", "\<\"fail\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
    "7.000000000000001`", ",", "0.37500000000000006`", ",", 
     "13.70172177997058`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "0.5`", ",", "19.270337388785528`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "0.625`", ",", "22.307096640767366`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "7.000000000000001`", ",", "0.7500000000000001`", ",", 
     "24.356293090849753`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "0.875`", ",", "25.91529309581917`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "1.`", ",", "27.179951775339102`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "7.000000000000001`", ",", "1.1250000000000002`", ",", 
     "28.247192349446635`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "1.25`", ",", "29.172484314034538`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "1.375`", ",", "29.990792860286003`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "1.5`", ",", "30.72574713113659`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "1.625`", ",", "31.394207833929535`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "7.000000000000001`", ",", "1.7500000000000002`", ",", 
     "32.0087635396132`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "1.875`", ",", "32.579196166367986`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "2.`", ",", "33.11336661754973`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "2.125`", ",", "33.61774181137576`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "2.25`", ",", "34.09767278403278`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "2.375`", ",", "34.55752564201447`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.000000000000001`", ",", "2.5`", ",", "35.000751718747864`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "0.25`", ",", "1.0096388861369971`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "0.37500000000000006`", ",", "15.574409580793345`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "0.5`", ",", "21.09148896815316`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "0.625`", ",", "24.08738655659981`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "0.7500000000000001`", ",", "26.137895271573054`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "0.875`", ",", "27.714729481914883`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "1.`", ",", "29.003529807900996`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "1.1250000000000002`", ",", "30.09712151087403`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "1.25`", ",", "31.04917549081116`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "1.375`", ",", "31.893825609474685`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "1.5`", ",", "32.65431400621516`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "1.625`", ",", "33.347333845303524`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "1.7500000000000002`", ",", "33.98542110795642`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "1.875`", ",", "34.57836191882071`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "2.`", ",", "35.13404245287171`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "2.125`", ",", "35.658941769471596`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "2.25`", ",", "36.158386503050636`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "2.375`", ",", "36.63667420476509`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7.5`", ",", "2.5`", ",", "37.09716613403783`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "0.25`", ",", "3.974517530630912`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "0.37500000000000006`", ",", "17.40721623971502`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "0.5`", ",", "22.830330483303804`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "0.625`", ",", "25.794177324569556`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "0.7500000000000001`", ",", "27.85516434050043`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "0.875`", ",", "29.456778446012915`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "1.`", ",", "30.775084412555316`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "1.1250000000000002`", ",", "31.899318488619414`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "1.25`", ",", "32.881674617242155`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "1.375`", ",", "33.755654657970545`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "1.5`", ",", "34.54424513660444`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "1.625`", ",", "35.26405961402366`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "1.7500000000000002`", ",", "35.92763971359172`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "1.875`", ",", "36.54481564678688`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "2.`", ",", "37.123519515808674`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "2.125`", ",", "37.670252745240106`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "2.25`", ",", "38.19032353026438`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "2.375`", ",", "38.68797693114981`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.`", ",", "2.5`", ",", "39.166511328399935`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "0.25`", ",", "5.1440113895517845`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "0.37500000000000006`", ",", "19.181103052415693`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "0.5`", ",", "24.49331506561365`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "0.625`", ",", "27.437419109991033`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "0.7500000000000001`", ",", "29.51800323709999`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "0.875`", ",", "31.15082347967563`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "1.`", ",", "32.50344469736919`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "1.1250000000000002`", ",", "33.66210399918339`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "1.25`", ",", "34.67784710074953`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "1.375`", ",", "35.58374010200645`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "1.5`", ",", "36.402639008558324`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "1.625`", ",", "37.15115880519967`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "1.7500000000000002`", ",", "37.84190214307988`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "1.875`", ",", "38.48477565365122`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "2.`", ",", "39.08777869702542`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "2.125`", ",", "39.65744708568569`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "2.25`", ",", "40.19908179207332`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "2.375`", ",", "40.716894190742956`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8.5`", ",", "2.5`", ",", "41.21415369268768`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "0.25`", ",", "6.807933307222885`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "0.37500000000000006`", ",", "20.888018959618268`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "0.5`", ",", "26.088532000611682`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "0.625`", ",", "29.026216554348675`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "0.7500000000000001`", ",", "31.134894456205465`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "0.875`", ",", "32.804676676997865`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "1.`", ",", "34.195845075459225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "1.1250000000000002`", ",", "35.392223388285366`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "1.25`", ",", "36.44401809210299`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "1.375`", ",", "37.38404429186138`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "1.5`", ",", "38.235138935133044`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "1.625`", ",", "39.013993619116576`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "1.7500000000000002`", ",", "39.733318562423285`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "1.875`", ",", "40.403129508630705`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "2.`", ",", "41.03151094812315`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "2.125`", ",", "41.6250447343356`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "2.25`", ",", "42.18904029875202`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "2.375`", ",", "42.72770036682158`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.`", ",", "2.5`", ",", "43.2442959789723`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "0.25`", ",", "8.752666202879018`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "0.37500000000000006`", ",", "22.52640304627927`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "0.5`", ",", "27.624252144157833`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "0.625`", ",", "30.56854539365044`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "0.7500000000000001`", ",", "32.71297096138461`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "0.875`", ",", "34.424786038963084`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "1.`", ",", "35.85818948670948`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "1.1250000000000002`", ",", "37.0951368070366`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "1.25`", ",", "38.18527823654281`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "1.375`", ",", "39.16134247343225`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "1.5`", ",", "40.0462470554919`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "1.625`", ",", "40.85682501383544`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "1.7500000000000002`", ",", "41.60593849439635`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "1.875`", ",", "42.303738859178814`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "2.`", ",", "42.9584134824597`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "2.125`", ",", "43.57660382923453`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "2.25`", ",", "44.1636463408682`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "2.375`", ",", "44.72375990042589`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9.5`", ",", "2.5`", ",", "45.26024783244319`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "0.25`", ",", "10.72140181510358`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "0.37500000000000006`", ",", "24.098371730012452`"}],
     "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "0.5`", ",", "29.10823378217935`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "0.625`", ",", "32.07123253741565`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "0.7500000000000001`", ",", "34.25818370908428`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "0.875`", ",", "36.01645992639127`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "1.`", ",", "37.49529859339757`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "1.1250000000000002`", ",", "38.77527623774458`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "1.25`", ",", "39.90574099684184`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "1.375`", ",", "40.91947468329379`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "1.5`", ",", "41.83956875733056`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "1.625`", ",", "42.68305533463231`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "1.7500000000000002`", ",", "43.46298521385837`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "1.875`", ",", "44.18966959066564`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "2.`", ",", "44.871416017441796`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "2.125`", ",", "45.51494143611685`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "2.25`", ",", "46.125627963623906`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "2.375`", ",", "46.707736906097864`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10.`", ",", "2.5`", ",", "47.26462615837494`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8436820844446507`*^9},
 CellLabel->
  "Out[187]=",ExpressionUUID->"deca2439-6963-41c8-bb5e-6ab1d9b28a86"],

Cell[BoxData[
 TemplateBox[{
  "ListLinePlot", "lpn", 
   "\"\\!\\(\\*RowBox[{\\\"Interpolation\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
\\\"}\\\"}], \\\"]\\\"}]\\) is not a list of numbers or pairs of numbers.\"", 
   2, 100, 19, 18222048221965196570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.844243819703616*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"4344449c-3191-4e1e-a360-3e5e5701bf48"],

Cell[BoxData[
 TemplateBox[{
  "Show", "gcomb", 
   "\"Could not combine the graphics objects in \
\\!\\(\\*RowBox[{\\\"Show\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"ListLinePlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"Interpolation\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
\\\"}\\\"}], \\\"]\\\"}], \\\",\\\", RowBox[{\\\"PlotRange\\\", \\\"\[Rule]\\\
\", \\\"All\\\"}], \\\",\\\", RowBox[{\\\"AxesLabel\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"\[Tau]Heal (s)\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"r\[Mu]T\\\\\\\"\\\"}], \\\"}\\\"}]}]}], \\\"]\\\"}], \\\",\\\", \
GraphicsBox[List[RGBColor[1, 0, 0], PointSize[Large], PointBox[List[100.`, \
Interpolation[List[]][100.`]]]]]}], \\\"]\\\"}]\\).\"", 2, 100, 20, 
   18222048221965196570, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8442438197456703`*^9},
 CellLabel->
  "During evaluation of \
In[100]:=",ExpressionUUID->"b798de79-8fac-4aab-ada5-252353614d76"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 14, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"49968ed1-2196-4286-b937-292cc7564704"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 732, 10, 96, "Title",ExpressionUUID->"ceccdab5-7538-449a-a72d-c0adffb45833"],
Cell[1315, 34, 5656, 98, 944, "Text",ExpressionUUID->"ef3dc2be-b4a2-4249-bd11-ba5aad0ec433"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7008, 137, 211, 4, 96, "Title",ExpressionUUID->"a4f4d801-ae74-4cbd-86cf-d0f277098e43"],
Cell[7222, 143, 253, 4, 34, "Text",ExpressionUUID->"d6ec8ccd-9be9-49e1-91be-39736214dc3f"],
Cell[CellGroupData[{
Cell[7500, 151, 155, 3, 67, "Chapter",ExpressionUUID->"b619df39-1f05-4984-be55-170077d47a3c"],
Cell[7658, 156, 1233, 22, 48, "Input",ExpressionUUID->"4afdc97d-8d40-46be-aff2-cef2c7e17188"],
Cell[8894, 180, 10556, 219, 666, "Input",ExpressionUUID->"614521ff-0585-4e06-97db-bd24d2001fe5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19487, 404, 185, 3, 67, "Chapter",ExpressionUUID->"cec926d5-4b04-461e-87a8-d432671627d5"],
Cell[CellGroupData[{
Cell[19697, 411, 163, 3, 53, "Subsection",ExpressionUUID->"02f25b1f-2727-4c1c-895e-c11ba65b5932"],
Cell[19863, 416, 1737, 40, 152, "Input",ExpressionUUID->"b3c477bd-09da-48d0-8e06-c6adb5ea44f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21637, 461, 219, 4, 53, "Subsection",ExpressionUUID->"b3e9ef74-0df4-4790-ac1b-a27c6f04d0fa"],
Cell[21859, 467, 280, 8, 100, "Text",ExpressionUUID->"f24377fb-83e1-40c2-8239-2c9799c599cd"],
Cell[22142, 477, 3844, 99, 524, "Input",ExpressionUUID->"700b637a-9aa5-4080-930c-ff6038bf2f35"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26023, 581, 217, 4, 53, "Subsection",ExpressionUUID->"899530ac-2504-4a16-a4c3-bf81aad7b1e9"],
Cell[26243, 587, 1872, 53, 305, "Input",ExpressionUUID->"9d285788-22b2-449d-8c07-901181522b5a"],
Cell[28118, 642, 2086, 54, 245, "Input",ExpressionUUID->"9947b9c5-e285-4ccc-8982-e41d59aab8d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30241, 701, 161, 3, 53, "Subsection",ExpressionUUID->"9d215c54-df61-4f61-92ae-50ebfef40602"],
Cell[30405, 706, 2699, 65, 171, "Input",ExpressionUUID->"59740d76-d8b0-42e3-a975-95ef3c00b3eb"],
Cell[33107, 773, 1616, 41, 200, "Input",ExpressionUUID->"f995a5ff-7d75-4422-a398-97e453825557"],
Cell[34726, 816, 414, 9, 28, "Input",ExpressionUUID->"fc4aae85-0201-4037-af22-5fefcf8729e1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35189, 831, 186, 3, 67, "Chapter",ExpressionUUID->"972e10d1-2dc3-44ff-a395-b4977dc12a71"],
Cell[35378, 836, 1786, 54, 131, "Input",ExpressionUUID->"93f86f7f-d777-4bdc-a1c1-a365ba0b891e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37201, 895, 173, 3, 67, "Chapter",ExpressionUUID->"4082ea02-b3c5-4c1c-84ac-b806833f0696"],
Cell[37377, 900, 685, 12, 78, "Text",ExpressionUUID->"32a87f90-3d8e-4fa4-b297-6dc07bc94b36"],
Cell[38065, 914, 1295, 30, 143, "Input",ExpressionUUID->"597b36dd-86ed-432b-b18d-3622b452b0b8"],
Cell[39363, 946, 2254, 50, 48, "Input",ExpressionUUID->"2c80ed5d-8ee1-40f5-99a3-6e914c56a768"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41654, 1001, 163, 3, 67, "Chapter",ExpressionUUID->"35db8b23-79f4-4b66-9357-9661772ad1f1"],
Cell[41820, 1006, 351, 7, 34, "Text",ExpressionUUID->"93df425d-9992-4377-9fa3-e53fff1b17bf"],
Cell[CellGroupData[{
Cell[42196, 1017, 170, 3, 53, "Subsection",ExpressionUUID->"2a354f94-9672-43ff-824c-e8beb7b9a9bc"],
Cell[42369, 1022, 1733, 28, 86, "Input",ExpressionUUID->"3990f7a0-79b2-4fd2-881a-d200d96e9885"],
Cell[44105, 1052, 522, 10, 48, "Input",ExpressionUUID->"e3d6fd4e-fd21-438f-ab2b-d5b3e1ec888e"],
Cell[44630, 1064, 4373, 91, 276, "Input",ExpressionUUID->"ce22614a-e8f1-4335-99a5-765ff166ac29"],
Cell[49006, 1157, 4092, 90, 333, "Input",ExpressionUUID->"e9c97ad8-f772-4c2d-b6da-7f5436860c80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53135, 1252, 181, 3, 53, "Subsection",ExpressionUUID->"3623d3be-a3e7-480c-bda5-261efa9b2cf1"],
Cell[53319, 1257, 224, 5, 34, "Text",ExpressionUUID->"d09cf381-9b92-4b3e-abf1-713d30e52665"],
Cell[53546, 1264, 1276, 32, 48, "Input",ExpressionUUID->"ccff235f-311c-4b5f-bf29-254dab0caf0a"],
Cell[54825, 1298, 997, 25, 48, "Input",ExpressionUUID->"83d256f3-30a8-4086-b8bb-c5ce67f2fb01"],
Cell[55825, 1325, 223, 4, 28, "Input",ExpressionUUID->"3aecf859-e2c9-4a1a-8d93-56d414fdbc4a"],
Cell[56051, 1331, 1835, 44, 48, "Input",ExpressionUUID->"1a97bcdb-f0ad-4a5c-952d-ce98921ab386"],
Cell[57889, 1377, 1413, 35, 48, "Input",ExpressionUUID->"24819d71-aee9-4e32-af89-692a88228cf1"],
Cell[59305, 1414, 2198, 49, 67, "Input",ExpressionUUID->"5898463f-38b6-4ffd-9c8c-cc7f09f1afd4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61540, 1468, 186, 3, 53, "Subsection",ExpressionUUID->"fdd216d4-167c-4333-b96a-a88018d25791"],
Cell[61729, 1473, 2848, 62, 143, "Input",ExpressionUUID->"633cb98c-6814-4803-9f91-14c5cb182cad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64614, 1540, 194, 3, 53, "Subsection",ExpressionUUID->"62772997-7485-48b9-9d49-306925cda576"],
Cell[64811, 1545, 1259, 33, 67, "Input",ExpressionUUID->"3912e041-4589-40b5-bff2-617c63f789b1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66119, 1584, 307, 5, 67, "Chapter",ExpressionUUID->"fe5dba73-ed2d-44d1-a811-f4a1c1711826"],
Cell[CellGroupData[{
Cell[66451, 1593, 159, 3, 53, "Subsection",ExpressionUUID->"1a8cdd0d-693c-4938-b9c2-b61fbb6d90ab"],
Cell[66613, 1598, 9432, 297, 542, "Input",ExpressionUUID->"080433d3-db98-4ff3-8445-c7d5315abfca"],
Cell[76048, 1897, 416, 9, 56, "Text",ExpressionUUID->"e6ccbf83-a0cc-466f-a6e7-0d2d0449d938"],
Cell[76467, 1908, 817, 21, 48, "Input",ExpressionUUID->"50af261d-dd63-42bb-9f59-a0f187a8f16a"],
Cell[77287, 1931, 736, 15, 48, "Input",ExpressionUUID->"9a481a21-be5c-414b-9785-10c5443dd220"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78060, 1951, 160, 3, 53, "Subsection",ExpressionUUID->"b53ab196-19b9-4697-aa2e-3251dd77139e"],
Cell[CellGroupData[{
Cell[78245, 1958, 2662, 57, 152, "Input",ExpressionUUID->"86ec9ec5-505e-48ff-9da7-261790db5470"],
Cell[80910, 2017, 3009, 46, 24, "Message",ExpressionUUID->"face88d5-6399-4f36-abcc-256fbeee4051"],
Cell[83922, 2065, 3015, 46, 23, "Message",ExpressionUUID->"7d0664c1-edcc-4d08-b169-60738fbfa869"],
Cell[86940, 2113, 3015, 46, 23, "Message",ExpressionUUID->"7d609c70-423b-4543-8daf-ed15e62748be"],
Cell[89958, 2161, 2982, 45, 21, "Message",ExpressionUUID->"73a2e90e-1425-4daa-9b7b-1c2b61b675de"]
}, Open  ]],
Cell[92955, 2209, 1506, 36, 48, "Input",ExpressionUUID->"b5616789-7775-467d-8e2c-25beec9b273c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94510, 2251, 164, 3, 67, "Chapter",ExpressionUUID->"73649e17-d029-409d-8113-cc62fcd3f6fa"],
Cell[94677, 2256, 723, 15, 48, "Input",ExpressionUUID->"18b5395f-1013-4e51-b00b-95e1d2dd2779"],
Cell[95403, 2273, 693, 16, 28, "Input",ExpressionUUID->"2d98e54f-ba9c-4a5a-8fc1-5a151927ff2f"],
Cell[96099, 2291, 424, 11, 28, "Input",ExpressionUUID->"8727d3fa-2a13-4f87-961c-7fb070265793"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96560, 2307, 229, 4, 67, "Chapter",ExpressionUUID->"a270c86e-e853-4e71-a044-45c76f2865df"],
Cell[96792, 2313, 1201, 26, 67, "Input",ExpressionUUID->"1b8fc698-32ec-4267-8398-043facbe57a8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[98042, 2345, 173, 3, 96, "Title",ExpressionUUID->"db74bbc7-3f35-4800-b760-7d4d8dc51356"],
Cell[98218, 2350, 584, 12, 100, "Text",ExpressionUUID->"675dd1f6-e685-41a3-9b5e-8c753971ee89"],
Cell[CellGroupData[{
Cell[98827, 2366, 226, 4, 67, "Chapter",ExpressionUUID->"f6fc5fc4-c2b9-4f25-9b60-9f929f8bdf1a"],
Cell[99056, 2372, 242, 5, 28, "Input",ExpressionUUID->"c9efc054-a94b-4886-9c8e-32b0c455e1b4"],
Cell[CellGroupData[{
Cell[99323, 2381, 1180, 24, 28, "Input",ExpressionUUID->"025235cc-b596-4fa2-9ccf-983c275aa58b"],
Cell[100506, 2407, 20915, 385, 70, "Output",ExpressionUUID->"2ebf7475-1e5d-4e70-8a31-6f80b8044652"]
}, Open  ]],
Cell[121436, 2795, 3085, 51, 542, "Input",ExpressionUUID->"86af3290-d57d-468e-b256-f272467e5502"],
Cell[124524, 2848, 543, 12, 28, "Input",ExpressionUUID->"a3df5ebc-81ea-4057-8967-df4aca04f4bd"],
Cell[CellGroupData[{
Cell[125092, 2864, 543, 13, 28, "Input",ExpressionUUID->"2f465c7a-fe7c-4586-992e-4cc34fb9d3d9"],
Cell[125638, 2879, 10744, 191, 70, "Output",ExpressionUUID->"90b82bd6-f896-417e-bbf2-c1054350276f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[136431, 3076, 235, 4, 67, "Chapter",ExpressionUUID->"74ed7a8c-d2a8-437c-833e-d8ce4ec18459"],
Cell[136669, 3082, 644, 17, 46, "Input",ExpressionUUID->"dc07ddbc-9d1a-4056-9e5f-4b07bfd4b758"],
Cell[137316, 3101, 753, 17, 124, "Input",ExpressionUUID->"75f158c5-da26-4109-b6fa-b72eaae62b70"],
Cell[138072, 3120, 3027, 63, 86, "Input",ExpressionUUID->"d49eec73-7800-4799-8cd5-c1d2e2968380"],
Cell[CellGroupData[{
Cell[141124, 3187, 538, 12, 28, "Input",ExpressionUUID->"789526f2-8272-4da0-a9fa-9d47565c9ea0"],
Cell[141665, 3201, 45969, 956, 70, "Output",ExpressionUUID->"ff8e76f5-efa2-4d19-95a8-74408134602b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187671, 4162, 267, 5, 28, "Input",ExpressionUUID->"bb68d865-c391-4bbd-81e6-6967cc953bd1"],
Cell[187941, 4169, 11170, 220, 70, "Output",ExpressionUUID->"2ee4c43e-90a9-44f4-8f8e-0bf94eac370e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199148, 4394, 2217, 50, 86, "Input",ExpressionUUID->"000d161a-2226-4039-97f4-39901d6a8f0f"],
Cell[201368, 4446, 1493, 25, 70, "Message",ExpressionUUID->"8ef94a3e-2fca-4f2f-9b73-6ba09c2d9eca"],
Cell[202864, 4473, 1493, 25, 70, "Message",ExpressionUUID->"e557af94-d21e-4069-a28e-012ff3b5c5ba"],
Cell[204360, 4500, 1492, 25, 70, "Message",ExpressionUUID->"1554fe83-5fdc-4929-803e-712590f9b667"],
Cell[205855, 4527, 1439, 24, 70, "Message",ExpressionUUID->"c5d2600d-7017-4d29-93c6-98402765dabc"],
Cell[207297, 4553, 1385, 24, 70, "Message",ExpressionUUID->"94126c06-d79c-466d-847b-4e73b14a7735"],
Cell[208685, 4579, 14336, 283, 70, "Output",ExpressionUUID->"bc218b41-8f8c-4e38-b47a-9704bc5dab63"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223058, 4867, 274, 5, 28, "Input",ExpressionUUID->"b5ae8530-88e4-4e32-8023-d5cd1fd8601a"],
Cell[223335, 4874, 2819, 64, 70, "Output",ExpressionUUID->"fb97e224-050c-4db3-8083-8b41545ae630"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[226203, 4944, 320, 5, 67, "Chapter",ExpressionUUID->"916b9414-4bbc-43ad-bfdb-9f1c81ce6842"],
Cell[226526, 4951, 9026, 203, 884, "Input",ExpressionUUID->"74b709e4-36b5-495e-afce-43f97d1f583f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235589, 5159, 153, 3, 67, "Chapter",ExpressionUUID->"2768d34a-3861-446d-bd88-31d0312c4fd0"],
Cell[CellGroupData[{
Cell[235767, 5166, 1198, 21, 48, "Input",ExpressionUUID->"77eaf18a-6a63-4ea3-89e0-97d6ae448cb8"],
Cell[236968, 5189, 50691, 1033, 70, "Output",ExpressionUUID->"af734ff3-ed83-4258-b899-04458762b263"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[287720, 6229, 161, 3, 70, "Title",ExpressionUUID->"c0f1d461-8e5b-4acd-9098-26089fc2424d"],
Cell[287884, 6234, 547, 10, 56, "Text",ExpressionUUID->"0185ba58-0642-4d15-93e2-4990ca76a0c2"],
Cell[CellGroupData[{
Cell[288456, 6248, 158, 3, 67, "Chapter",ExpressionUUID->"803d9f78-81cf-4192-a8e7-ba5dcf30463d"],
Cell[288617, 6253, 827, 25, 86, "Input",ExpressionUUID->"328d97c5-0dbc-4540-aad3-2cc876cca331"],
Cell[289447, 6280, 5745, 153, 252, "Input",ExpressionUUID->"3648496b-ee6c-47c8-b657-24fd9d792a2c"],
Cell[295195, 6435, 4641, 130, 213, "Input",ExpressionUUID->"e98a2f3e-46dc-4220-b37d-0f3bee2108dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[299873, 6570, 158, 3, 67, "Chapter",ExpressionUUID->"3bdc1734-917c-47ae-8876-35044b90a72c"],
Cell[300034, 6575, 2477, 39, 48, "Input",ExpressionUUID->"4fb65e06-d901-4fe2-8f12-b03555106ce7"],
Cell[302514, 6616, 6573, 155, 146, "Input",ExpressionUUID->"2cbad710-7cb1-409d-a3f9-b45c95b93e9a"],
Cell[CellGroupData[{
Cell[309112, 6775, 802, 11, 53, "Subsection",ExpressionUUID->"ae966d95-11e5-4a14-9eb6-2e0ca8e54273"],
Cell[309917, 6788, 4306, 88, 295, "Input",ExpressionUUID->"4a1b5379-7e77-4f20-9554-d40823b072ba"],
Cell[314226, 6878, 747, 17, 28, "Input",ExpressionUUID->"69b1280d-3479-427e-a4e4-0f64600ae685"],
Cell[314976, 6897, 2519, 42, 181, "Input",ExpressionUUID->"d5d53fab-c114-4e45-a8c5-1d61f1d52e59"],
Cell[317498, 6941, 3074, 51, 542, "Input",ExpressionUUID->"1a965c29-85bb-44ce-ba8c-371ed69e4fba"],
Cell[320575, 6994, 2276, 33, 28, "Input",ExpressionUUID->"f1ab2f96-e844-49f8-bc42-2c2f116d88f9"],
Cell[322854, 7029, 283, 7, 28, "Input",ExpressionUUID->"8d891801-e5df-49c3-904a-646ccf0b6707"],
Cell[323140, 7038, 4352, 100, 314, "Input",ExpressionUUID->"68d562a4-359c-44cb-8e6e-4316fc013333"],
Cell[CellGroupData[{
Cell[327517, 7142, 218, 4, 28, "Input",ExpressionUUID->"ddf5eca5-f5d8-4b27-83ef-ad9b5e30d3b9"],
Cell[327738, 7148, 3016, 60, 70, "Output",ExpressionUUID->"b3f6ca77-7680-4834-b8ae-a1de835c9566"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330791, 7213, 1352, 37, 28, "Input",ExpressionUUID->"30f78542-699c-4a1f-87aa-03a774e156c5"],
Cell[332146, 7252, 4028, 89, 70, "Output",ExpressionUUID->"4b37fd43-1c20-4f29-a267-c5c9e787cba9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336211, 7346, 295, 9, 28, "Input",ExpressionUUID->"e8abb5d2-c8fd-4596-82a1-996331a2d225"],
Cell[336509, 7357, 2273, 55, 70, "Output",ExpressionUUID->"f8445ff3-51cb-44b3-a0b0-43b6ab24c24e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338819, 7417, 1773, 49, 143, "Input",ExpressionUUID->"8a6b20da-1f93-4df7-a770-e464c37c9853"],
Cell[340595, 7468, 20318, 561, 70, "Output",ExpressionUUID->"b4a454ca-386d-463a-b33d-e168e20060dc"],
Cell[360916, 8031, 16489, 433, 70, "Output",ExpressionUUID->"50092b6e-a0c7-40c6-ae4d-6edea782e96c"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[377466, 8471, 163, 3, 67, "Chapter",ExpressionUUID->"2a0ee346-7068-4d3c-b1f8-be412619c84a"],
Cell[377632, 8476, 20753, 453, 1988, "Input",ExpressionUUID->"b744059c-dd15-4f95-ae30-820064799caf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[398434, 8935, 162, 3, 70, "Title",ExpressionUUID->"657835b3-1a6c-4e20-8f59-689493d7d6c9"],
Cell[398599, 8940, 630, 11, 56, "Text",ExpressionUUID->"acba057a-ff33-401c-8484-a1f9d1f52570"],
Cell[CellGroupData[{
Cell[399254, 8955, 218, 4, 67, "Chapter",ExpressionUUID->"b71711b6-4a47-459e-ae7f-04fc9a2ad05d"],
Cell[399475, 8961, 244, 4, 34, "Text",ExpressionUUID->"9f5c0065-c1d6-4b6c-b4a7-fffb9c8a5411"],
Cell[CellGroupData[{
Cell[399744, 8969, 154, 3, 53, "Subsection",ExpressionUUID->"352f458d-8faf-4b7f-95b7-4cf00ddb0f26"],
Cell[CellGroupData[{
Cell[399923, 8976, 3616, 63, 105, "Input",ExpressionUUID->"4bf1b657-0657-4320-966a-305c4d1070b2"],
Cell[403542, 9041, 18149, 285, 70, "Output",ExpressionUUID->"0d9ce871-7390-44d0-96d3-743ae933b6ab"]
}, Open  ]],
Cell[421706, 9329, 2774, 72, 186, "Input",ExpressionUUID->"d1999ddb-7063-447d-89d9-5072410d98f3"],
Cell[424483, 9403, 454, 12, 28, "Input",ExpressionUUID->"9aac8da6-b8a0-4b00-9423-5632337af5ce"],
Cell[CellGroupData[{
Cell[424962, 9419, 1183, 29, 52, "Input",ExpressionUUID->"04530322-0052-4f42-aa44-1ca6a3a85345"],
Cell[426148, 9450, 3297, 46, 70, "Output",ExpressionUUID->"c685d337-8fb7-4653-aeb8-412fbe5d4ad0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429482, 9501, 759, 19, 32, "Input",ExpressionUUID->"08631b8f-7286-4c4a-91b7-f6dce83be48c"],
Cell[430244, 9522, 3122, 44, 70, "Output",ExpressionUUID->"27a2a0fc-0eee-4423-a7f3-3a9fbb6bc9f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433403, 9571, 682, 18, 28, "Input",ExpressionUUID->"d9dde92a-5c8a-4c8c-a7cb-e60d91624195"],
Cell[434088, 9591, 25077, 390, 70, "Output",ExpressionUUID->"08f5fc17-787a-4e6e-ae57-c3486f0dfa5a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[459214, 9987, 222, 4, 53, "Subsection",ExpressionUUID->"c35fba00-cb62-415c-b1da-5115990b2ebf"],
Cell[459439, 9993, 956, 15, 78, "Text",ExpressionUUID->"648ecd71-ff44-45d8-9c74-6a84cafce313"],
Cell[460398, 10010, 8357, 210, 599, "Input",ExpressionUUID->"8107746b-e1f9-448e-9c03-3e71bfdabe46"],
Cell[468758, 10222, 1452, 37, 48, "Input",ExpressionUUID->"3517f677-efae-4464-a0fa-6afe960fecd1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[470247, 10264, 163, 3, 53, "Subsection",ExpressionUUID->"83d6f490-ae48-45fb-8cb3-7fc1f9028269"],
Cell[470413, 10269, 4623, 119, 361, "Input",ExpressionUUID->"2d398554-37cf-427a-89ce-6c6174c8fb58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475073, 10393, 161, 3, 53, "Subsection",ExpressionUUID->"b0f2f7ad-0943-4c21-811d-ac6c2ed9e53a"],
Cell[475237, 10398, 1665, 41, 71, "Input",ExpressionUUID->"84a3c9f9-da80-4f1f-a605-57d875bc5dd7"],
Cell[476905, 10441, 11608, 270, 449, "Input",ExpressionUUID->"1a2a4539-1278-4ee3-b332-cfbd6fca2722"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[488562, 10717, 156, 3, 67, "Chapter",ExpressionUUID->"80776bcc-5de1-4622-90f0-54db8419e297"],
Cell[488721, 10722, 562, 14, 48, "Input",ExpressionUUID->"f1a6a6cb-d292-404b-8924-a163e2a4d684"],
Cell[489286, 10738, 2830, 44, 48, "Input",ExpressionUUID->"4456ee87-f0c3-494d-bdc4-0a7842049e1a"],
Cell[CellGroupData[{
Cell[492141, 10786, 166, 3, 53, "Subsection",ExpressionUUID->"330090ce-44fd-4a42-96be-06ce7a2479ff"],
Cell[492310, 10791, 5156, 111, 89, "Input",ExpressionUUID->"961a4354-2805-4881-a578-84e80655b90c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497503, 10907, 802, 11, 53, "Subsection",ExpressionUUID->"153b919a-a0a7-4a7f-ae09-ce8d887dbda3"],
Cell[498308, 10920, 4799, 96, 314, "Input",ExpressionUUID->"0718ce25-c1c2-428f-8f25-2b7e647781ab"],
Cell[503110, 11018, 2295, 40, 67, "Input",ExpressionUUID->"34a8f501-6929-4d08-abc4-33dfb2286372"],
Cell[505408, 11060, 2657, 46, 181, "Input",ExpressionUUID->"0d46a110-1977-4362-abda-44980c4b0685"],
Cell[508068, 11108, 2892, 52, 561, "Input",ExpressionUUID->"f634cb40-2554-4a3b-88fd-6af6041f736e"],
Cell[510963, 11162, 1688, 25, 28, "Input",ExpressionUUID->"13c5e42a-6ab8-4331-8a02-8ff4a827c405"],
Cell[512654, 11189, 283, 7, 28, "Input",ExpressionUUID->"16c7b66c-fc8f-4c26-98b4-3f4937643f01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[512974, 11201, 161, 3, 53, "Subsection",ExpressionUUID->"9ef8cc29-ad98-43d7-ad67-420a2cbb51a7"],
Cell[513138, 11206, 418, 8, 28, "Input",ExpressionUUID->"704c5fa3-eb6d-404a-9147-4d8bfe8d0b96"],
Cell[513559, 11216, 7630, 164, 428, "Input",ExpressionUUID->"401759af-8df1-4980-b7da-d8577b5660fa"],
Cell[521192, 11382, 446, 9, 28, "Input",ExpressionUUID->"ab9cee3b-429d-4be8-b518-bdfc3bed3af5"],
Cell[521641, 11393, 942, 20, 67, "Input",ExpressionUUID->"becbd4a9-48b9-4ead-af85-b7fa060d2027"],
Cell[CellGroupData[{
Cell[522608, 11417, 533, 13, 28, "Input",ExpressionUUID->"278229ce-b958-4098-95a7-c226b8fb613a"],
Cell[523144, 11432, 17344, 301, 70, "Output",ExpressionUUID->"6704c506-61f7-4f77-86fb-cdac5b1fa26f"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[540549, 11740, 157, 2, 67, "Chapter",ExpressionUUID->"26862b14-1108-48cc-a382-92a90dcb5a9c"],
Cell[540709, 11744, 5082, 102, 770, "Input",ExpressionUUID->"9b217dd9-27a4-4226-ad8f-0c5f5b44d6fc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[545840, 11852, 167, 3, 70, "Title",ExpressionUUID->"96ac6f6e-5fe9-47cc-8aa4-955cdd7f53d1"],
Cell[546010, 11857, 602, 10, 78, "Text",ExpressionUUID->"6c45ec36-7481-4eda-9874-f6a3f6dd9298"],
Cell[546615, 11869, 690, 16, 28, "Input",ExpressionUUID->"e08f1c47-639d-4a39-82e1-6aed8f771941"],
Cell[547308, 11887, 688, 18, 28, "Input",ExpressionUUID->"908d7a57-90db-47ff-a4b5-f0804aea77c1"],
Cell[547999, 11907, 1402, 32, 48, "Input",ExpressionUUID->"12748962-172a-4ee1-8f65-ef6dcd206913"],
Cell[549404, 11941, 18778, 408, 1466, "Input",ExpressionUUID->"e10aac0b-071a-4e09-b478-7c0d8fb9f91f"]
}, Closed]],
Cell[CellGroupData[{
Cell[568219, 12354, 168, 3, 70, "Title",ExpressionUUID->"098de731-75e2-48d2-a0db-a88bb626c127"],
Cell[568390, 12359, 216, 5, 34, "Text",ExpressionUUID->"3fcd3101-1cb2-4006-a62c-4e6cad53707b"],
Cell[CellGroupData[{
Cell[568631, 12368, 41571, 861, 4180, "Input",ExpressionUUID->"df25f896-d77c-496a-a8bc-14404f4e082d"],
Cell[610205, 13231, 25071, 476, 851, "Output",ExpressionUUID->"ab43f38a-56e7-4573-8b77-6a3cdc069b68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635313, 13712, 202, 3, 53, "Subsection",ExpressionUUID->"d63c7749-42db-4bfd-9c1f-7059a7dd2660"],
Cell[635518, 13717, 160, 3, 34, "Text",ExpressionUUID->"036fabdf-cb7a-4405-b379-3c9b2047af5d"],
Cell[635681, 13722, 2807, 71, 409, "Input",ExpressionUUID->"f6d34665-f671-4e0b-8579-451c46f15174"],
Cell[638491, 13795, 278, 6, 34, "Text",ExpressionUUID->"8c9f12b7-30b0-488f-b0eb-f6f947f7009a"],
Cell[638772, 13803, 250, 5, 28, "Input",ExpressionUUID->"fb43bd4d-cba5-4ea2-a668-febbb8b155df"],
Cell[639025, 13810, 2848, 70, 409, "Input",ExpressionUUID->"febdf8cb-44c5-41d4-9e36-c6250251ac86"],
Cell[CellGroupData[{
Cell[641898, 13884, 1403, 30, 67, "Input",ExpressionUUID->"4dbed1ae-eca8-45b9-898a-614713c49f30"],
Cell[643304, 13916, 1329, 28, 52, "Output",ExpressionUUID->"b1ae4660-ddbc-474b-9c33-e026ad80373e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644670, 13949, 1496, 32, 67, "Input",ExpressionUUID->"5e9fad98-4ac1-44d3-a691-2bbd2916f3da"],
Cell[646169, 13983, 1365, 29, 52, "Output",ExpressionUUID->"a71f1394-230c-4715-b63e-31fafd6cbef3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647571, 14017, 1788, 39, 67, "Input",ExpressionUUID->"c7c0607b-33ed-47e9-a144-4315f7edf967"],
Cell[649362, 14058, 1432, 30, 52, "Output",ExpressionUUID->"a7a69836-4151-4601-ad02-4b658a74a030"]
}, Open  ]],
Cell[CellGroupData[{
Cell[650831, 14093, 2613, 55, 162, "Input",ExpressionUUID->"a042f7a7-06bf-4278-b397-12703ce90194"],
Cell[653447, 14150, 1444, 30, 52, "Output",ExpressionUUID->"ee036b50-5b16-422d-994b-7d90e60df21b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654928, 14185, 1964, 40, 86, "Input",ExpressionUUID->"7571b696-df04-4a07-8e5d-4ef97c5fd800"],
Cell[656895, 14227, 1432, 30, 52, "Output",ExpressionUUID->"d76ade8e-295e-4d2e-b655-5c40f95e6011"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[658388, 14264, 158, 3, 70, "Title",ExpressionUUID->"25f9dda8-332b-4f6c-80ca-74f553948165"],
Cell[658549, 14269, 616, 10, 56, "Text",ExpressionUUID->"2f0e3e73-2bbc-44f5-986d-4ea71bc9b453"],
Cell[659168, 14281, 1801, 35, 67, "Input",ExpressionUUID->"12cdddd6-150c-4664-8f04-3ea0a3b54b68"],
Cell[CellGroupData[{
Cell[660994, 14320, 209, 4, 67, "Chapter",ExpressionUUID->"f341433c-e0cb-4011-9199-957fc500305e"],
Cell[661206, 14326, 7904, 162, 485, "Input",ExpressionUUID->"c561c30a-53de-4422-8bda-28167131a414"],
Cell[669113, 14490, 6285, 125, 257, "Input",ExpressionUUID->"b0159073-58e3-4a89-bfa9-39571f82de8f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[675435, 14620, 151, 3, 67, "Chapter",ExpressionUUID->"954129e0-1d0e-483e-b0c3-14bb3c996171"],
Cell[CellGroupData[{
Cell[675611, 14627, 3989, 66, 124, "Input",ExpressionUUID->"07c194d9-654f-4963-9878-a9e0ca658930"],
Cell[679603, 14695, 731333, 12011, 376, 562639, 9246, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"0621bc3f-ee95-49e6-b285-a6bedf5f8c72"]
}, Open  ]],
Cell[1410951, 26709, 2774, 72, 186, "Input",ExpressionUUID->"4b690879-4f0f-42e3-b3a9-8e9f904de006"],
Cell[1413728, 26783, 454, 12, 28, "Input",ExpressionUUID->"8889080d-4b69-4456-b838-0619045ebdc0"],
Cell[1414185, 26797, 1236, 31, 52, "Input",ExpressionUUID->"dff4fe50-5e5e-42db-bcce-9480400b60b4"],
Cell[1415424, 26830, 833, 21, 32, "Input",ExpressionUUID->"fce0a9ef-d634-4d95-b794-e835d573b576"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1416294, 26856, 219, 4, 67, "Chapter",ExpressionUUID->"c8dabf52-a575-4552-9a7b-63fce2e03e81"],
Cell[1416516, 26862, 956, 15, 78, "Text",ExpressionUUID->"053550de-fb57-4776-a098-678a6c3298a8"],
Cell[1417475, 26879, 2117, 46, 105, "Input",ExpressionUUID->"94fc1b76-9e5e-4e79-afe9-f6b059062e07"],
Cell[CellGroupData[{
Cell[1419617, 26929, 1524, 42, 48, "Input",ExpressionUUID->"ef1171fd-3a95-4d56-a92f-8d353c8bbc0e"],
Cell[1421144, 26973, 17382, 298, 377, "Output",ExpressionUUID->"2f977a3d-d7fa-4273-893f-2814f6617e95"]
}, Open  ]],
Cell[1438541, 27274, 177, 3, 28, "Input",ExpressionUUID->"1b3bb1fc-9487-405f-9872-24701a85f26c"],
Cell[1438721, 27279, 8269, 207, 660, "Input",ExpressionUUID->"3281255b-b719-4996-a16f-e10012a55dc9"],
Cell[1446993, 27488, 1452, 37, 48, "Input",ExpressionUUID->"1397072f-1070-44d5-bd3e-216cda0adb30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1448482, 27530, 158, 3, 67, "Chapter",ExpressionUUID->"067300f4-98a0-4016-a62a-b0f969351fa3"],
Cell[1448643, 27535, 1819, 44, 91, "Input",ExpressionUUID->"417bfe23-9230-42be-8a1c-a39028dce2cd"],
Cell[1450465, 27581, 15494, 362, 677, "Input",ExpressionUUID->"1520779b-786a-4e71-8907-bfee283fd7fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1465996, 27948, 296, 4, 67, "Chapter",ExpressionUUID->"24f2d6c3-a314-4cb0-a2c9-f052e4ed5f0e"],
Cell[CellGroupData[{
Cell[1466317, 27956, 168, 3, 53, "Subsection",ExpressionUUID->"178d3021-6478-4cc9-969d-f7215f08f8a8"],
Cell[1466488, 27961, 566, 10, 56, "Text",ExpressionUUID->"47f28367-c574-42e3-bc55-212d02871c76"],
Cell[1467057, 27973, 1930, 47, 105, "Input",ExpressionUUID->"6523e7f7-ed9b-42b9-9218-301a91a656bf"],
Cell[1468990, 28022, 1424, 33, 48, "Input",ExpressionUUID->"fb6f5fb5-e297-43af-9ea9-94c7d70fdb6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1470451, 28060, 167, 3, 53, "Subsection",ExpressionUUID->"832c5a5a-133e-4398-b255-00baba97022f"],
Cell[1470621, 28065, 1878, 47, 109, "Input",ExpressionUUID->"471b69e5-97fd-40c2-aaee-61c0528a8832"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1472536, 28117, 163, 3, 53, "Subsection",ExpressionUUID->"9534e195-d349-4786-a2ef-c905dfe4f0b4"],
Cell[1472702, 28122, 2562, 40, 28, "Input",ExpressionUUID->"55c84874-6b8f-4043-b351-70acde34c667"],
Cell[1475267, 28164, 2789, 76, 89, "Input",ExpressionUUID->"1b32a21e-5031-43f7-a0c1-590f20a9e128"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1478093, 28245, 802, 11, 53, "Subsection",ExpressionUUID->"0272f906-77d0-4015-ae2a-a68b1f635f9f"],
Cell[1478898, 28258, 4339, 85, 295, "Input",ExpressionUUID->"bf9d8d72-b8e4-46b3-bff5-6eeddd69382f"],
Cell[1483240, 28345, 689, 15, 28, "Input",ExpressionUUID->"31158d47-174e-43bc-a5c9-78c6d56f3e81"],
Cell[1483932, 28362, 1652, 42, 86, "Input",ExpressionUUID->"ee9ac148-de74-4ef6-b747-1eba8294abda"],
Cell[1485587, 28406, 3433, 62, 219, "Input",ExpressionUUID->"4daecc63-bc8e-4685-9f36-71137ab09417"],
Cell[1489023, 28470, 349, 9, 28, "Input",ExpressionUUID->"67c34c4b-a64f-4759-aca4-56bb6351c0f2"],
Cell[1489375, 28481, 1193, 33, 28, "Input",ExpressionUUID->"0a37bbfd-80e6-4641-a320-6242aac744c1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1490617, 28520, 364, 6, 67, "Chapter",ExpressionUUID->"616db7f2-1ed1-4fee-abc8-1112ee545338"],
Cell[1490984, 28528, 169, 3, 34, "Text",ExpressionUUID->"3e7ca121-aca4-432c-90a1-c3507eabf210"],
Cell[CellGroupData[{
Cell[1491178, 28535, 163, 3, 53, "Subsection",ExpressionUUID->"a351db8a-b40b-4eac-b4bd-df550e596a89"],
Cell[1491344, 28540, 3473, 63, 28, "Input",ExpressionUUID->"d211a356-e09f-4c46-ad93-dba5a6d5e8b5"],
Cell[1494820, 28605, 3214, 83, 86, "Input",ExpressionUUID->"995da45f-598e-4622-ad3e-a2bec7401af5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1498071, 28693, 802, 11, 53, "Subsection",ExpressionUUID->"2c0dd4b7-81cd-4fc4-9812-16ac0ebe15f1"],
Cell[1498876, 28706, 5420, 110, 371, "Input",ExpressionUUID->"ebece77b-1369-47ba-b876-2f12e2b7b16c"],
Cell[1504299, 28818, 4185, 91, 124, "Input",ExpressionUUID->"22ae26ac-87e0-4e8a-a57f-3a76e91d5ba1"],
Cell[1508487, 28911, 2417, 41, 181, "Input",ExpressionUUID->"f7f18b1f-0380-4c3e-935d-76670aa73571"],
Cell[1510907, 28954, 1662, 27, 28, "Input",ExpressionUUID->"bb66a1e4-be39-426f-8cea-17db3d08a56c"],
Cell[1512572, 28983, 283, 7, 28, "Input",ExpressionUUID->"1901acc0-e5d6-424c-be3e-974fc73dc7b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1512892, 28995, 161, 3, 53, "Subsection",ExpressionUUID->"1500a668-c033-4a11-933f-4c366b03cb25"],
Cell[1513056, 29000, 418, 8, 28, "Input",ExpressionUUID->"28be7e76-b8a9-4bc2-b00c-9f84f1565ef5"],
Cell[1513477, 29010, 7311, 161, 447, "Input",ExpressionUUID->"a2779cad-e497-4e8a-98c5-569164824c36"],
Cell[1520791, 29173, 446, 9, 28, "Input",ExpressionUUID->"859dd25a-c394-4ce4-a00b-c99f5bd77267"],
Cell[1521240, 29184, 393, 7, 28, "Input",ExpressionUUID->"96455a68-f53c-44ed-8e72-0116caba5b08"],
Cell[1521636, 29193, 5274, 128, 314, "Input",ExpressionUUID->"423fde94-ef94-4c87-9121-daea368e0c7e"],
Cell[1526913, 29323, 5783, 142, 314, "Input",ExpressionUUID->"5006055b-5752-483e-8dac-f40b7f700935"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1532757, 29472, 210, 4, 96, "Title",ExpressionUUID->"48700697-8b8d-4059-8ff3-236359ee1270"],
Cell[1532970, 29478, 250, 6, 34, "Text",ExpressionUUID->"b0a2aca6-edb0-4462-bcb5-091a3f36eae2"],
Cell[1533223, 29486, 616, 10, 78, "Text",ExpressionUUID->"fd74044c-acaf-41b3-b334-57f84d4dd2f8"],
Cell[1533842, 29498, 2148, 41, 105, "Input",ExpressionUUID->"aaf3afa6-2ed4-495e-8aee-a19d19e8a934"],
Cell[CellGroupData[{
Cell[1536015, 29543, 209, 4, 67, "Chapter",ExpressionUUID->"c206c33b-2caf-4ef2-9c37-f91c42336622"],
Cell[1536227, 29549, 6266, 121, 295, "Input",ExpressionUUID->"a734aa5e-5306-47d5-9359-591c843773f0"],
Cell[1542496, 29672, 6232, 118, 257, "Input",ExpressionUUID->"c9f32219-5b5d-41a2-89c3-900e3d479db3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1548765, 29795, 151, 3, 67, "Chapter",ExpressionUUID->"66aba1a9-495c-4247-ae35-3e7e6c8bf226"],
Cell[CellGroupData[{
Cell[1548941, 29802, 3867, 66, 105, "Input",ExpressionUUID->"098b7c69-2236-49ad-b996-945d46bbc028"],
Cell[1552811, 29870, 15510, 250, 377, "Output",ExpressionUUID->"99e25ead-5557-466f-92cc-0a7e5470e894"]
}, Open  ]],
Cell[1568336, 30123, 2838, 74, 186, "Input",ExpressionUUID->"4c831165-1d68-4c43-b9f1-ce3f2f32e2cd"],
Cell[1571177, 30199, 454, 12, 28, "Input",ExpressionUUID->"72c3415a-9454-4eca-b187-45fb56e7c793"],
Cell[1571634, 30213, 1236, 31, 52, "Input",ExpressionUUID->"544cb5f4-723d-4b58-a1a9-2e8959df7cfb"],
Cell[1572873, 30246, 833, 21, 32, "Input",ExpressionUUID->"fd2dda5a-b204-4e89-8a2e-35a0e56b0a02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1573743, 30272, 219, 4, 67, "Chapter",ExpressionUUID->"c1e3ff6e-8a38-4b8a-ac4c-f6231ff3845f"],
Cell[1573965, 30278, 956, 15, 78, "Text",ExpressionUUID->"832c3165-9abd-4382-8374-f623cb7e0d75"],
Cell[1574924, 30295, 2117, 46, 105, "Input",ExpressionUUID->"e455f575-72b0-4699-8e64-2eb39f9a403b"],
Cell[CellGroupData[{
Cell[1577066, 30345, 1524, 42, 48, "Input",ExpressionUUID->"5053fe03-1f3c-4ae4-bf98-cc1b7a19bde2"],
Cell[1578593, 30389, 16963, 289, 377, "Output",ExpressionUUID->"9c26c599-2a9c-4144-9491-bcf1132d1840"]
}, Open  ]],
Cell[1595571, 30681, 154, 3, 28, "Input",ExpressionUUID->"50b99206-7b69-4b77-8d77-4e0d36c661fc"],
Cell[1595728, 30686, 8269, 207, 660, "Input",ExpressionUUID->"6f8ff307-f1f4-4ee3-98ec-5501baed5d6e"],
Cell[1604000, 30895, 1452, 37, 48, "Input",ExpressionUUID->"57626a10-499e-4594-aa03-991a66f04ddb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1605489, 30937, 158, 3, 67, "Chapter",ExpressionUUID->"8f92bf70-aad8-4bd3-9d99-b123a5767763"],
Cell[1605650, 30942, 1821, 44, 91, "Input",ExpressionUUID->"f06fa619-1c07-47d1-9f4c-dd35d2ab8a56"],
Cell[1607474, 30988, 15494, 362, 677, "Input",ExpressionUUID->"2d4e8350-6af5-4dde-916c-af355e1532d2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1623005, 31355, 296, 4, 67, "Chapter",ExpressionUUID->"3fc7b827-5668-49b1-aa2f-e38d338226fd"],
Cell[CellGroupData[{
Cell[1623326, 31363, 167, 3, 53, "Subsection",ExpressionUUID->"86d53952-f142-43c4-bfc0-6e97bd9666ac"],
Cell[1623496, 31368, 2444, 61, 167, "Input",ExpressionUUID->"16691f3d-023b-4ec5-a391-da3498e528e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1625977, 31434, 163, 3, 53, "Subsection",ExpressionUUID->"4d33db51-750b-4fe0-90d1-9a435f73354b"],
Cell[1626143, 31439, 2562, 40, 28, "Input",ExpressionUUID->"71a36746-cdb7-4699-bd35-085ffc2614a6"],
Cell[1628708, 31481, 2789, 76, 89, "Input",ExpressionUUID->"a4c54188-7a58-487b-a2e1-8c872ebc2a43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1631534, 31562, 802, 11, 53, "Subsection",ExpressionUUID->"faa1cb31-646c-4e40-a2d4-f5350f7edef4"],
Cell[1632339, 31575, 4035, 78, 276, "Input",ExpressionUUID->"0f83979b-3ec2-4841-a49f-566a9207a2eb"],
Cell[1636377, 31655, 689, 15, 28, "Input",ExpressionUUID->"0d181d96-6e60-44e5-aae3-01da7eedc43e"],
Cell[1637069, 31672, 1414, 36, 48, "Input",ExpressionUUID->"4c99524d-97dd-4da4-8053-e40d75e5c2d8"],
Cell[1638486, 31710, 2497, 43, 200, "Input",ExpressionUUID->"178e524a-d803-49fd-b22c-146eb267ed0a"],
Cell[1640986, 31755, 349, 9, 28, "Input",ExpressionUUID->"c7650c15-a4d9-4637-813c-47e759538d98"],
Cell[1641338, 31766, 1093, 31, 28, "Input",ExpressionUUID->"a2c0c720-5931-48a2-b428-12d9c6b7d034"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1642480, 31803, 364, 6, 67, "Chapter",ExpressionUUID->"24bc27d0-9780-4456-a388-db846147ab7a"],
Cell[1642847, 31811, 169, 3, 34, "Text",ExpressionUUID->"9fb99737-bd24-4afe-8c1e-d60d09ca908e"],
Cell[CellGroupData[{
Cell[1643041, 31818, 163, 3, 53, "Subsection",ExpressionUUID->"cff28f88-da29-45cf-b788-7ae3b9206917"],
Cell[1643207, 31823, 3473, 63, 28, "Input",ExpressionUUID->"93d44c69-219e-4eb9-9186-356e18a57d16"],
Cell[1646683, 31888, 3214, 83, 86, "Input",ExpressionUUID->"fa7da232-4153-4e5f-a8d2-5cd5ae48ae25"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1649934, 31976, 802, 11, 53, "Subsection",ExpressionUUID->"ed771f5b-e2ce-451e-ab3c-04d76262a748"],
Cell[1650739, 31989, 5200, 106, 352, "Input",ExpressionUUID->"089bc372-56cf-4df3-8ff2-cd04789954d3"],
Cell[1655942, 32097, 3948, 86, 124, "Input",ExpressionUUID->"e47add34-c091-4630-873e-af6e57d855e7"],
Cell[1659893, 32185, 2417, 41, 181, "Input",ExpressionUUID->"b0f9be33-4c44-47da-9036-e08ee5d8f18a"],
Cell[1662313, 32228, 1662, 27, 28, "Input",ExpressionUUID->"772b08b9-39d1-4131-9b17-6006c8f671c8"],
Cell[1663978, 32257, 283, 7, 28, "Input",ExpressionUUID->"011ba853-5f97-4867-9708-207502636ace"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1664298, 32269, 161, 3, 53, "Subsection",ExpressionUUID->"b6e00980-da73-426d-a2b5-fa16ee7891e4"],
Cell[1664462, 32274, 418, 8, 28, "Input",ExpressionUUID->"1708433c-cb82-4a60-aec3-4e5569b567a4"],
Cell[1664883, 32284, 8780, 193, 561, "Input",ExpressionUUID->"805b7ee7-41ff-418c-a7c7-700a0928040e"],
Cell[1673666, 32479, 446, 9, 28, "Input",ExpressionUUID->"22120550-ab8f-46c3-9b8c-1ea732104bbc"],
Cell[1674115, 32490, 393, 7, 28, "Input",ExpressionUUID->"cc49b885-43ba-4212-ba51-52d48e6e6cb4"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1674569, 32504, 154, 3, 70, "Title",ExpressionUUID->"7d8b2a8c-190d-4914-851e-817ddda20b08"],
Cell[CellGroupData[{
Cell[1674748, 32511, 218, 5, 67, "Chapter",ExpressionUUID->"f2c4449b-3b91-4c34-94e9-90d04f1985c7"],
Cell[1674969, 32518, 11156, 242, 1055, "Input",ExpressionUUID->"e2e8b852-878c-48b1-874b-04994890129b"]
}, Closed]],
Cell[CellGroupData[{
Cell[1686162, 32765, 202, 3, 56, "Chapter",ExpressionUUID->"c6f05e82-17c1-40bc-a2fc-5d010b2e1f49"],
Cell[1686367, 32770, 25566, 532, 3007, "Input",ExpressionUUID->"5546e5b9-cf51-404a-81a4-b2e8aaef2fa3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1711970, 33307, 173, 3, 67, "Chapter",ExpressionUUID->"c559d81b-cdfd-4eab-b790-55f633b04edb"],
Cell[1712146, 33312, 8526, 198, 806, "Input",ExpressionUUID->"1121ff06-b848-4cca-a560-d744cebf3719"]
}, Closed]],
Cell[CellGroupData[{
Cell[1720709, 33515, 164, 3, 56, "Chapter",ExpressionUUID->"1f67e4b5-8032-41fc-82ef-97ff50d2fa40"],
Cell[1720876, 33520, 2327, 60, 371, "Input",ExpressionUUID->"4578f355-64bb-42ee-bca7-998d91dc0831"],
Cell[1723206, 33582, 2330, 60, 371, "Input",ExpressionUUID->"f64e9097-8ed6-402e-b069-8e97fcd441ef"],
Cell[1725539, 33644, 185, 4, 28, "Input",ExpressionUUID->"3b01acf6-0905-4a45-b10f-f0a3d2921af0"],
Cell[1725727, 33650, 3093, 80, 447, "Input",ExpressionUUID->"8cc35c84-db34-4fde-9d1b-4331d0706be9"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1728869, 33736, 155, 3, 70, "Title",ExpressionUUID->"51d5d1d9-d0d7-46ba-8eff-1129e587444e"],
Cell[1729027, 33741, 847, 17, 48, "Input",ExpressionUUID->"0abc7e42-7114-41c0-b43f-06b83937e311"],
Cell[1729877, 33760, 256, 6, 28, "Input",ExpressionUUID->"9d7221f5-b6f6-4547-a9a5-c6db5bf0e49d"],
Cell[CellGroupData[{
Cell[1730158, 33770, 190, 3, 28, "Input",ExpressionUUID->"665351c3-22a7-4714-af0f-f820bda69412"],
Cell[1730351, 33775, 36660, 885, 869, "Output",ExpressionUUID->"deca2439-6963-41c8-bb5e-6ab1d9b28a86"],
Cell[1767014, 34662, 447, 10, 23, "Message",ExpressionUUID->"4344449c-3191-4e1e-a360-3e5e5701bf48"],
Cell[1767464, 34674, 949, 18, 100, "Message",ExpressionUUID->"b798de79-8fac-4aab-ada5-252353614d76"]
}, Open  ]]
}, Closed]]
}
]
*)

